numpy/distutils/tests/test_system_info.py:193:        assert_equal(tsi.get_lib_dirs(), [self._dir1, self._dir2])
numpy/distutils/tests/test_system_info.py:194:        assert_equal(tsi.get_libraries(), [self._lib1, self._lib2])
numpy/distutils/tests/test_system_info.py:195:        assert_equal(tsi.get_runtime_lib_dirs(), [self._dir1])
numpy/distutils/tests/test_system_info.py:197:        assert_equal(extra['extra_compile_args'], ['-I/fake/directory', '-I/path with/spaces', '-Os'])
numpy/distutils/tests/test_system_info.py:202:        assert_equal(tsi.get_lib_dirs(), [self._dir1])
numpy/distutils/tests/test_system_info.py:203:        assert_equal(tsi.get_libraries(), [self._lib1])
numpy/distutils/tests/test_system_info.py:204:        assert_equal(tsi.get_runtime_lib_dirs(), [self._dir1])
numpy/distutils/tests/test_system_info.py:209:        assert_equal(tsi.get_lib_dirs(), [self._dir2])
numpy/distutils/tests/test_system_info.py:210:        assert_equal(tsi.get_libraries(), [self._lib2])
numpy/distutils/tests/test_system_info.py:212:        assert_equal(tsi.get_runtime_lib_dirs(key='rpath'), [self._dir2])
numpy/distutils/tests/test_system_info.py:214:        assert_equal(extra['extra_link_args'], ['-Wl,-rpath=' + self._lib2])
numpy/distutils/tests/test_system_info.py:219:        assert_raises(AliasedOptionError, tsi.get_option_single, "mylib_libs", "libraries")
numpy/distutils/tests/test_system_info.py:220:        assert_equal(tsi.get_libs("mylib_libs", [self._lib1]), [self._lib1])
numpy/distutils/tests/test_system_info.py:221:        assert_equal(tsi.get_libs("libraries", [self._lib2]), [self._lib2])
numpy/distutils/tests/test_system_info.py:233:            assert_(os.path.isfile(self._src1.replace('.c', '.o')) or
numpy/distutils/tests/test_system_info.py:253:            assert_(os.path.isfile(self._src2.replace('.c', '.o')))
numpy/distutils/tests/test_system_info.py:271:            assert info.get_lib_dirs() != lib_dirs
numpy/distutils/tests/test_system_info.py:280:            assert info.get_lib_dirs() == lib_dirs
numpy/distutils/tests/test_system_info.py:288:            assert info.get_lib_dirs() == lib_dirs
numpy/distutils/tests/test_system_info.py:301:    assert len(order) == 3
numpy/distutils/tests/test_system_info.py:302:    assert order == list('bef')
numpy/distutils/tests/test_system_info.py:303:    assert len(unknown) == 1
numpy/distutils/tests/test_system_info.py:308:    assert len(order) == 0
numpy/distutils/tests/test_system_info.py:309:    assert len(unknown) == 0
numpy/distutils/tests/test_system_info.py:314:        assert len(order) == 4
numpy/distutils/tests/test_system_info.py:315:        assert order == list('acdf')
numpy/distutils/tests/test_system_info.py:316:        assert len(unknown) == 1
numpy/distutils/tests/test_from_template.py:44:    assert_equal(normalized_pyf, normalized_expected_pyf)
numpy/distutils/tests/test_log.py:32:    assert line == f"{func_name.upper()}: {msg}"
numpy/distutils/tests/test_fcompiler_intel.py:22:            assert_(v == version)
numpy/distutils/tests/test_fcompiler_intel.py:30:            assert_(v == version)
numpy/distutils/tests/test_misc_util.py:15:        assert_equal(appendpath('prefix', 'name'), join('prefix', 'name'))
numpy/distutils/tests/test_misc_util.py:16:        assert_equal(appendpath('/prefix', 'name'), ajoin('prefix', 'name'))
numpy/distutils/tests/test_misc_util.py:17:        assert_equal(appendpath('/prefix', '/name'), ajoin('prefix', 'name'))
numpy/distutils/tests/test_misc_util.py:18:        assert_equal(appendpath('prefix', '/name'), join('prefix', 'name'))
numpy/distutils/tests/test_misc_util.py:21:        assert_equal(appendpath('prefix/sub', 'name'),
numpy/distutils/tests/test_misc_util.py:23:        assert_equal(appendpath('prefix/sub', 'sup/name'),
numpy/distutils/tests/test_misc_util.py:25:        assert_equal(appendpath('/prefix/sub', '/prefix/name'),
numpy/distutils/tests/test_misc_util.py:29:        assert_equal(appendpath('/prefix/sub', '/prefix/sup/name'),
numpy/distutils/tests/test_misc_util.py:31:        assert_equal(appendpath('/prefix/sub/sub2', '/prefix/sup/sup2/name'),
numpy/distutils/tests/test_misc_util.py:33:        assert_equal(appendpath('/prefix/sub/sub2', '/prefix/sub/sup/name'),
numpy/distutils/tests/test_misc_util.py:40:        assert_equal(minrelpath(n('aa/bb')), n('aa/bb'))
numpy/distutils/tests/test_misc_util.py:41:        assert_equal(minrelpath('..'), '..')
numpy/distutils/tests/test_misc_util.py:42:        assert_equal(minrelpath(n('aa/..')), '')
numpy/distutils/tests/test_misc_util.py:43:        assert_equal(minrelpath(n('aa/../bb')), 'bb')
numpy/distutils/tests/test_misc_util.py:44:        assert_equal(minrelpath(n('aa/bb/..')), 'aa')
numpy/distutils/tests/test_misc_util.py:45:        assert_equal(minrelpath(n('aa/bb/../..')), '')
numpy/distutils/tests/test_misc_util.py:46:        assert_equal(minrelpath(n('aa/bb/../cc/../dd')), n('aa/dd'))
numpy/distutils/tests/test_misc_util.py:47:        assert_equal(minrelpath(n('.././..')), n('../..'))
numpy/distutils/tests/test_misc_util.py:48:        assert_equal(minrelpath(n('aa/bb/.././../dd')), n('dd'))
numpy/distutils/tests/test_misc_util.py:55:        assert_(join(local_path, 'command', 'build_src.py') in ls, repr(ls))
numpy/distutils/tests/test_misc_util.py:57:        assert_(join(local_path, 'system_info.py') == f[0], repr(f))
numpy/distutils/tests/test_misc_util.py:65:            assert_equal(ext, '.so')
numpy/distutils/tests/test_misc_util.py:67:            assert_equal(ext, '.so')
numpy/distutils/tests/test_misc_util.py:69:            assert_equal(ext, '.dylib')
numpy/distutils/tests/test_misc_util.py:71:            assert_equal(ext, '.dll')
numpy/distutils/tests/test_misc_util.py:73:        assert_(get_shared_lib_extension(is_python_ext=True))
numpy/distutils/tests/test_misc_util.py:81:    assert isinstance(info, dict)
numpy/distutils/tests/test_fcompiler.py:28:        assert_(new_flags == [new_flag])
numpy/distutils/tests/test_fcompiler.py:40:            assert_(new_flags == [new_flag])
numpy/distutils/tests/test_fcompiler.py:42:            assert_(new_flags == prev_flags + [new_flag])
numpy/distutils/tests/test_build_ext.py:72:    assert so is not None
numpy/distutils/tests/test_shell_utils.py:64:    assert json.loads(json_out) == argv
numpy/distutils/tests/test_shell_utils.py:74:        assert argv == Parser.split(joined)
numpy/distutils/tests/test_exec_command.py:102:        assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:103:        assert_(o != '')
numpy/distutils/tests/test_exec_command.py:107:        assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:108:        assert_(o == 'win32')
numpy/distutils/tests/test_exec_command.py:112:        assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:113:        assert_(o == 'Hello')
numpy/distutils/tests/test_exec_command.py:116:        assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:117:        assert_(o == '')
numpy/distutils/tests/test_exec_command.py:120:        assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:121:        assert_(o == 'Tere')
numpy/distutils/tests/test_exec_command.py:124:        assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:125:        assert_(o == '')
numpy/distutils/tests/test_exec_command.py:130:            assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:131:            assert_(o == 'Hi')
numpy/distutils/tests/test_exec_command.py:134:            assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:135:            assert_(o == 'Hey')
numpy/distutils/tests/test_exec_command.py:138:            assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:139:            assert_(o == 'Hi')
numpy/distutils/tests/test_exec_command.py:144:            assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:145:            assert_(o == '')
numpy/distutils/tests/test_exec_command.py:149:        assert_(s != 0)
numpy/distutils/tests/test_exec_command.py:150:        assert_(o != '')
numpy/distutils/tests/test_exec_command.py:153:        assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:154:        assert_(o != '')
numpy/distutils/tests/test_exec_command.py:159:        assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:160:        assert_(o == 'posix')
numpy/distutils/tests/test_exec_command.py:165:        assert_(s != 0)
numpy/distutils/tests/test_exec_command.py:166:        assert_(o != '')
numpy/distutils/tests/test_exec_command.py:172:        assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:173:        assert_(o == '012')
numpy/distutils/tests/test_exec_command.py:177:        assert_(s == 15)
numpy/distutils/tests/test_exec_command.py:178:        assert_(o == '')
numpy/distutils/tests/test_exec_command.py:182:        assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:183:        assert_(o == 'Heipa')
numpy/distutils/tests/test_exec_command.py:195:            assert_(s != 0)
numpy/distutils/tests/test_exec_command.py:196:            assert_(o != '')
numpy/distutils/tests/test_exec_command.py:200:            assert_(s == 0)
numpy/distutils/tests/test_exec_command.py:201:            assert_(o == 'Hello')
numpy/distutils/tests/test_npy_pkg_config.py:45:        assert_(out.cflags() == simple_d['cflags'])
numpy/distutils/tests/test_npy_pkg_config.py:46:        assert_(out.libs() == simple_d['libflags'])
numpy/distutils/tests/test_npy_pkg_config.py:47:        assert_(out.name == simple_d['name'])
numpy/distutils/tests/test_npy_pkg_config.py:48:        assert_(out.version == simple_d['version'])
numpy/distutils/tests/test_npy_pkg_config.py:57:        assert_(out.cflags() == simple_variable_d['cflags'])
numpy/distutils/tests/test_npy_pkg_config.py:58:        assert_(out.libs() == simple_variable_d['libflags'])
numpy/distutils/tests/test_npy_pkg_config.py:59:        assert_(out.name == simple_variable_d['name'])
numpy/distutils/tests/test_npy_pkg_config.py:60:        assert_(out.version == simple_variable_d['version'])
numpy/distutils/tests/test_npy_pkg_config.py:62:        assert_(out.cflags() == '-I/Users/david/include')
numpy/distutils/tests/test_npy_pkg_config.py:67:        assert_(d['include_dirs'] == ['/usr/include'])
numpy/distutils/tests/test_npy_pkg_config.py:70:        assert_(d['include_dirs'] == ['/usr/include'])
numpy/distutils/tests/test_npy_pkg_config.py:71:        assert_(d['macros'] == ['FOO'])
numpy/distutils/tests/test_npy_pkg_config.py:74:        assert_(d['include_dirs'] == ['/usr/include'])
numpy/distutils/tests/test_npy_pkg_config.py:75:        assert_(d['macros'] == ['FOO'])
numpy/distutils/tests/test_npy_pkg_config.py:79:        assert_(d['library_dirs'] == ['/usr/lib', '/usr/lib'])
numpy/distutils/tests/test_npy_pkg_config.py:80:        assert_(d['libraries'] == ['foo', 'bar'])
numpy/distutils/tests/test_npy_pkg_config.py:83:        assert_(d['library_dirs'] == ['/usr/lib', '/usr/lib'])
numpy/distutils/tests/test_npy_pkg_config.py:84:        assert_(d['libraries'] == ['foo', 'bar'])
numpy/distutils/tests/test_fcompiler_nagfor.py:22:            assert_(v == version)
numpy/distutils/tests/test_ccompiler_opt.py:282:        assert_(getattr(opt, "cc_on_" + self.arch))
numpy/distutils/tests/test_ccompiler_opt.py:283:        assert_(not getattr(opt, "cc_on_" + wrong_arch))
numpy/distutils/tests/test_ccompiler_opt.py:284:        assert_(getattr(opt, "cc_is_" + self.cc))
numpy/distutils/tests/test_ccompiler_opt.py:285:        assert_(not getattr(opt, "cc_is_" + wrong_cc))
numpy/distutils/tests/test_ccompiler_opt.py:298:            assert(len(opt.cpu_baseline_names()) == 0)
numpy/distutils/tests/test_ccompiler_opt.py:299:            assert(len(opt.cpu_dispatch_names()) == 0)
numpy/distutils/tests/test_fcompiler_gnu.py:36:            assert_(v == version, (vs, v))
numpy/distutils/tests/test_fcompiler_gnu.py:42:            assert_(v is None, (vs, v))
numpy/distutils/tests/test_fcompiler_gnu.py:49:            assert_(v == version, (vs, v))
numpy/distutils/tests/test_fcompiler_gnu.py:55:            assert_(v is None, (vs, v))
numpy/compat/tests/test_compat.py:13:            assert_(isfileobj(f))
numpy/compat/tests/test_compat.py:16:            assert_(isfileobj(f))
numpy/compat/tests/test_compat.py:19:            assert_(isfileobj(f))
numpy/core/tests/test_numerictypes.py:107:        assert_(normalize_descr(self._descr) == h.dtype.descr)
numpy/core/tests/test_numerictypes.py:108:        assert_(h.dtype.fields['x'][0].name[:4] == 'void')
numpy/core/tests/test_numerictypes.py:109:        assert_(h.dtype.fields['x'][0].char == 'V')
numpy/core/tests/test_numerictypes.py:110:        assert_(h.dtype.fields['x'][0].type == np.void)
numpy/core/tests/test_numerictypes.py:112:        assert_equal(h['z'], np.zeros((), dtype='u1'))
numpy/core/tests/test_numerictypes.py:117:        assert_(normalize_descr(self._descr) == h.dtype.descr)
numpy/core/tests/test_numerictypes.py:118:        assert_(h.dtype['y'].name[:4] == 'void')
numpy/core/tests/test_numerictypes.py:119:        assert_(h.dtype['y'].char == 'V')
numpy/core/tests/test_numerictypes.py:120:        assert_(h.dtype['y'].type == np.void)
numpy/core/tests/test_numerictypes.py:122:        assert_equal(h['z'], np.zeros((2,), dtype='u1'))
numpy/core/tests/test_numerictypes.py:127:        assert_(normalize_descr(self._descr) == h.dtype.descr)
numpy/core/tests/test_numerictypes.py:128:        assert_(h.dtype['z'].name == 'uint8')
numpy/core/tests/test_numerictypes.py:129:        assert_(h.dtype['z'].char == 'B')
numpy/core/tests/test_numerictypes.py:130:        assert_(h.dtype['z'].type == np.uint8)
numpy/core/tests/test_numerictypes.py:132:        assert_equal(h['z'], np.zeros((2, 3), dtype='u1'))
numpy/core/tests/test_numerictypes.py:150:        assert_(normalize_descr(self._descr) == h.dtype.descr)
numpy/core/tests/test_numerictypes.py:152:            assert_(h.shape == (2,))
numpy/core/tests/test_numerictypes.py:154:            assert_(h.shape == ())
numpy/core/tests/test_numerictypes.py:159:        assert_(normalize_descr(self._descr) == h.dtype.descr)
numpy/core/tests/test_numerictypes.py:161:            assert_(h.shape == (1, 2))
numpy/core/tests/test_numerictypes.py:163:            assert_(h.shape == (1,))
numpy/core/tests/test_numerictypes.py:168:        assert_(normalize_descr(self._descr) == h.dtype.descr)
numpy/core/tests/test_numerictypes.py:170:            assert_(h.shape == (1, 1, 2))
numpy/core/tests/test_numerictypes.py:172:            assert_(h.shape == (1, 1))
numpy/core/tests/test_numerictypes.py:210:            assert_(h.shape == ())
numpy/core/tests/test_numerictypes.py:211:            assert_equal(h['x'], np.array(self._buffer[0], dtype='i4'))
numpy/core/tests/test_numerictypes.py:212:            assert_equal(h['y'], np.array(self._buffer[1], dtype='f8'))
numpy/core/tests/test_numerictypes.py:213:            assert_equal(h['z'], np.array(self._buffer[2], dtype='u1'))
numpy/core/tests/test_numerictypes.py:215:            assert_(len(h) == 2)
numpy/core/tests/test_numerictypes.py:243:            assert_(h.shape == ())
numpy/core/tests/test_numerictypes.py:244:            assert_equal(h['x'], np.array(self._buffer[0], dtype='i4'))
numpy/core/tests/test_numerictypes.py:245:            assert_equal(h['y'], np.array(self._buffer[4], dtype='f8'))
numpy/core/tests/test_numerictypes.py:246:            assert_equal(h['z'], np.array(self._buffer[5], dtype='u1'))
numpy/core/tests/test_numerictypes.py:248:            assert_(len(h) == 2)
numpy/core/tests/test_numerictypes.py:307:        assert_(h.dtype['Info']['value'].name == 'complex128')
numpy/core/tests/test_numerictypes.py:308:        assert_(h.dtype['Info']['y2'].name == 'float64')
numpy/core/tests/test_numerictypes.py:309:        assert_(h.dtype['info']['Name'].name == 'str256')
numpy/core/tests/test_numerictypes.py:310:        assert_(h.dtype['info']['Value'].name == 'complex128')
numpy/core/tests/test_numerictypes.py:315:        assert_(h.dtype['Info']['Info2']['value'].name == 'void256')
numpy/core/tests/test_numerictypes.py:316:        assert_(h.dtype['Info']['Info2']['z3'].name == 'void64')
numpy/core/tests/test_numerictypes.py:335:        assert_(a['int'].shape == (5, 0))
numpy/core/tests/test_numerictypes.py:336:        assert_(a['float'].shape == (5, 2))
numpy/core/tests/test_numerictypes.py:341:        assert_(res == 'f4')
numpy/core/tests/test_numerictypes.py:345:        assert_(res == 'f4')
numpy/core/tests/test_numerictypes.py:349:        assert_(res == 'c8')
numpy/core/tests/test_numerictypes.py:353:        assert_(res == 'f8')
numpy/core/tests/test_numerictypes.py:357:        assert_(res == 'f8')
numpy/core/tests/test_numerictypes.py:367:        assert_raises(IndexError, self._bad_call)
numpy/core/tests/test_numerictypes.py:371:        assert_(res == [(1, 3), (5, 7)])
numpy/core/tests/test_numerictypes.py:379:        assert_(np.issubdtype(np.floating, np.inexact))
numpy/core/tests/test_numerictypes.py:380:        assert_(not np.issubdtype(np.inexact, np.floating))
numpy/core/tests/test_numerictypes.py:385:                assert_(np.issubdtype(w1(cls), w2(cls)))
numpy/core/tests/test_numerictypes.py:391:            assert_(np.issubdtype(w(np.float32), np.floating))
numpy/core/tests/test_numerictypes.py:392:            assert_(np.issubdtype(w(np.float64), np.floating))
numpy/core/tests/test_numerictypes.py:396:            assert_(not np.issubdtype(np.floating, w(np.float32)))
numpy/core/tests/test_numerictypes.py:397:            assert_(not np.issubdtype(np.floating, w(np.float64)))
numpy/core/tests/test_numerictypes.py:401:            assert_(not np.issubdtype(w1(np.float32), w2(np.float64)))
numpy/core/tests/test_numerictypes.py:402:            assert_(not np.issubdtype(w1(np.float64), w2(np.float32)))
numpy/core/tests/test_numerictypes.py:407:        assert not np.issubdtype(np.float32, 'float64')
numpy/core/tests/test_numerictypes.py:408:        assert not np.issubdtype(np.float32, 'f8')
numpy/core/tests/test_numerictypes.py:409:        assert not np.issubdtype(np.int32, str)
numpy/core/tests/test_numerictypes.py:410:        assert not np.issubdtype(np.int32, 'int64')
numpy/core/tests/test_numerictypes.py:411:        assert not np.issubdtype(np.str_, 'void')
numpy/core/tests/test_numerictypes.py:414:        assert not np.issubdtype(np.int8, int)  # np.int8 is never np.int_
numpy/core/tests/test_numerictypes.py:415:        assert not np.issubdtype(np.float32, float)
numpy/core/tests/test_numerictypes.py:416:        assert not np.issubdtype(np.complex64, complex)
numpy/core/tests/test_numerictypes.py:417:        assert not np.issubdtype(np.float32, "float")
numpy/core/tests/test_numerictypes.py:418:        assert not np.issubdtype(np.float64, "f")
numpy/core/tests/test_numerictypes.py:422:        assert np.issubdtype(np.float64, 'float64')
numpy/core/tests/test_numerictypes.py:423:        assert np.issubdtype(np.float64, 'f8')
numpy/core/tests/test_numerictypes.py:424:        assert np.issubdtype(np.str_, str)
numpy/core/tests/test_numerictypes.py:425:        assert np.issubdtype(np.int64, 'int64')
numpy/core/tests/test_numerictypes.py:426:        assert np.issubdtype(np.void, 'void')
numpy/core/tests/test_numerictypes.py:427:        assert np.issubdtype(np.int8, np.integer)
numpy/core/tests/test_numerictypes.py:428:        assert np.issubdtype(np.float32, np.floating)
numpy/core/tests/test_numerictypes.py:429:        assert np.issubdtype(np.complex64, np.complexfloating)
numpy/core/tests/test_numerictypes.py:430:        assert np.issubdtype(np.float64, "float")
numpy/core/tests/test_numerictypes.py:431:        assert np.issubdtype(np.float32, "f")
numpy/core/tests/test_numerictypes.py:436:        assert_(np.sctypeDict['f8'] is not np.longdouble)
numpy/core/tests/test_numerictypes.py:437:        assert_(np.sctypeDict['c16'] is not np.clongdouble)
numpy/core/tests/test_numerictypes.py:443:        assert_(np.sctypeDict['ulong'] is np.uint)
numpy/core/tests/test_numerictypes.py:444:        assert_(not hasattr(np, 'ulong'))
numpy/core/tests/test_numerictypes.py:449:        assert_raises(ValueError, np.core.numerictypes.bitname, np.floating)
numpy/core/tests/test_numerictypes.py:459:        assert_equal(np.maximum_sctype(t), np.sctypes['int'][-1])
numpy/core/tests/test_numerictypes.py:463:        assert_equal(np.maximum_sctype(t), np.sctypes['uint'][-1])
numpy/core/tests/test_numerictypes.py:467:        assert_equal(np.maximum_sctype(t), np.sctypes['float'][-1])
numpy/core/tests/test_numerictypes.py:471:        assert_equal(np.maximum_sctype(t), np.sctypes['complex'][-1])
numpy/core/tests/test_numerictypes.py:475:        assert_equal(np.maximum_sctype(t), t)
numpy/core/tests/test_numerictypes.py:483:        assert_equal(np.sctype2char(np.double), 'd')
numpy/core/tests/test_numerictypes.py:484:        assert_equal(np.sctype2char(np.int_), 'l')
numpy/core/tests/test_numerictypes.py:485:        assert_equal(np.sctype2char(np.unicode_), 'U')
numpy/core/tests/test_numerictypes.py:486:        assert_equal(np.sctype2char(np.bytes_), 'S')
numpy/core/tests/test_numerictypes.py:489:        assert_equal(np.sctype2char(float), 'd')
numpy/core/tests/test_numerictypes.py:490:        assert_equal(np.sctype2char(list), 'O')
numpy/core/tests/test_numerictypes.py:491:        assert_equal(np.sctype2char(np.ndarray), 'O')
numpy/core/tests/test_numerictypes.py:495:        assert_raises(KeyError, np.sctype2char, rational)
numpy/core/tests/test_numerictypes.py:496:        assert_raises(KeyError, np.sctype2char, rational(1))
numpy/core/tests/test_numerictypes.py:499:        assert_equal(np.sctype2char(np.array([1.0, 2.0])), 'd')
numpy/core/tests/test_numerictypes.py:502:        assert_raises(KeyError, np.sctype2char, np.floating)
numpy/core/tests/test_numerictypes.py:505:        assert_raises(ValueError, np.sctype2char, 1)
numpy/core/tests/test_numerictypes.py:520:    assert_equal(actual, expected)
numpy/core/tests/test_numerictypes.py:530:            assert_('int64' in np.int_.__doc__)
numpy/core/tests/test_numerictypes.py:532:            assert_('int64' in np.longlong.__doc__)
numpy/core/tests/test_numerictypes.py:547:        assert len(set(self.numeric_types)) == len(self.numeric_types)
numpy/core/tests/test_numerictypes.py:551:        assert len(set(names)) == len(names)
numpy/core/tests/test_numerictypes.py:556:        assert getattr(np, t.__name__) is t
numpy/core/tests/test_numerictypes.py:561:        assert np.dtype(t.__name__).type is t
numpy/core/tests/test_scalar_methods.py:28:        assert_equal(ftype(f).as_integer_ratio(), ratio)
numpy/core/tests/test_scalar_methods.py:34:        assert_equal(R(0, 1),
numpy/core/tests/test_scalar_methods.py:36:        assert_equal(R(5, 2),
numpy/core/tests/test_scalar_methods.py:38:        assert_equal(R(1, 2),
numpy/core/tests/test_scalar_methods.py:40:        assert_equal(R(-2100, 1),
numpy/core/tests/test_scalar_methods.py:46:        assert_raises(OverflowError, ftype('inf').as_integer_ratio)
numpy/core/tests/test_scalar_methods.py:47:        assert_raises(OverflowError, ftype('-inf').as_integer_ratio)
numpy/core/tests/test_scalar_methods.py:48:        assert_raises(ValueError, ftype('nan').as_integer_ratio)
numpy/core/tests/test_scalar_methods.py:52:        assert_equal(R(1075, 512),
numpy/core/tests/test_scalar_methods.py:54:        assert_equal(R(-1075, 512),
numpy/core/tests/test_scalar_methods.py:56:        assert_equal(R(4404019, 2097152),
numpy/core/tests/test_scalar_methods.py:58:        assert_equal(R(-4404019, 2097152),
numpy/core/tests/test_scalar_methods.py:60:        assert_equal(R(4728779608739021, 2251799813685248),
numpy/core/tests/test_scalar_methods.py:62:        assert_equal(R(-4728779608739021, 2251799813685248),
numpy/core/tests/test_scalar_methods.py:96:            assert f.dtype == ftype
numpy/core/tests/test_scalar_methods.py:107:            assert_equal(nf / df, f, "{}/{}".format(n, d))
numpy/core/tests/test_scalar_methods.py:116:        assert not value.is_integer()
numpy/core/tests/test_scalar_methods.py:124:            assert value.is_integer()
numpy/core/tests/test_scalar_methods.py:133:            assert not value.is_integer()
numpy/core/tests/test_scalar_methods.py:148:        assert isinstance(alias, types.GenericAlias)
numpy/core/tests/test_scalar_methods.py:149:        assert alias.__origin__ is cls
numpy/core/tests/test_scalar_methods.py:153:        assert isinstance(alias, types.GenericAlias)
numpy/core/tests/test_scalar_methods.py:154:        assert alias.__origin__ is np.complexfloating
numpy/core/tests/test_scalar_methods.py:171:            assert np.number[arg_tup]
numpy/core/tests/test_scalar_methods.py:177:        assert np.number[Any]
numpy/core/tests/test_scalar_methods.py:195:            assert itype(a).bit_count() == bin(a).count("1"), msg
numpy/core/tests/test_scalar_methods.py:200:            assert np.uint64(a).bit_count() == 1
numpy/core/tests/test_scalar_methods.py:201:            assert np.uint64(a - 1).bit_count() == exp
numpy/core/tests/test_scalar_methods.py:202:            assert np.uint64(a ^ 63).bit_count() == 7
numpy/core/tests/test_scalar_methods.py:203:            assert np.uint64((a - 1) ^ 510).bit_count() == exp - 8
numpy/core/tests/test_scalarmath.py:34:            assert_(a == 1, "error with %r: got %r" % (atype, a))
numpy/core/tests/test_scalarmath.py:60:            assert_equal(a, b)
numpy/core/tests/test_scalarmath.py:80:                assert_almost_equal(np.add(inp1, inp2), exp1, err_msg=msg)
numpy/core/tests/test_scalarmath.py:81:                assert_almost_equal(np.add(inp1, 2), exp1 + 2, err_msg=msg)
numpy/core/tests/test_scalarmath.py:82:                assert_almost_equal(np.add(1, inp2), exp1, err_msg=msg)
numpy/core/tests/test_scalarmath.py:85:                assert_almost_equal(out, exp1, err_msg=msg)
numpy/core/tests/test_scalarmath.py:88:                assert_almost_equal(np.square(inp2),
numpy/core/tests/test_scalarmath.py:92:                    assert_almost_equal(np.reciprocal(inp2),
numpy/core/tests/test_scalarmath.py:97:                assert_almost_equal(out, exp1 + 2, err_msg=msg)
numpy/core/tests/test_scalarmath.py:100:                assert_almost_equal(out, exp1 + 2, err_msg=msg)
numpy/core/tests/test_scalarmath.py:107:        assert_almost_equal(d + d, d * 2)
numpy/core/tests/test_scalarmath.py:120:            assert_(b == 81, "error with %r: got %r" % (t, b))
numpy/core/tests/test_scalarmath.py:128:                assert_(b == 6765201, msg)
numpy/core/tests/test_scalarmath.py:130:                assert_almost_equal(b, 6765201, err_msg=msg)
numpy/core/tests/test_scalarmath.py:142:                assert_raises(ValueError, operator.pow, i1, i2)
numpy/core/tests/test_scalarmath.py:145:                assert_(res.dtype.type is np.float64)
numpy/core/tests/test_scalarmath.py:146:                assert_almost_equal(res, 1.)
numpy/core/tests/test_scalarmath.py:152:                assert_raises(ValueError, operator.pow, i1, i2)
numpy/core/tests/test_scalarmath.py:155:                assert_(res.dtype.type is np.float64)
numpy/core/tests/test_scalarmath.py:156:                assert_almost_equal(res, -1.)
numpy/core/tests/test_scalarmath.py:162:                assert_raises(ValueError, operator.pow, i1, i2)
numpy/core/tests/test_scalarmath.py:165:                assert_(res.dtype.type is np.float64)
numpy/core/tests/test_scalarmath.py:166:                assert_almost_equal(res, .5)
numpy/core/tests/test_scalarmath.py:180:                    assert_(result == 9, msg)
numpy/core/tests/test_scalarmath.py:182:                    assert_almost_equal(result, 9, err_msg=msg)
numpy/core/tests/test_scalarmath.py:192:            assert_raises(TypeError, operator.pow, t(a), b, c)
numpy/core/tests/test_scalarmath.py:193:            assert_raises(TypeError, operator.pow, np.array(t(a)), b, c)
numpy/core/tests/test_scalarmath.py:219:                    assert_equal(div*b + rem, a, err_msg=msg)
numpy/core/tests/test_scalarmath.py:221:                        assert_(b < rem <= 0, msg)
numpy/core/tests/test_scalarmath.py:223:                        assert_(b > rem >= 0, msg)
numpy/core/tests/test_scalarmath.py:249:                assert_equal(div, tgtdiv, err_msg=msg)
numpy/core/tests/test_scalarmath.py:250:                assert_equal(rem, tgtrem, err_msg=msg)
numpy/core/tests/test_scalarmath.py:263:                    # Equal assertion should hold when fmod is used
numpy/core/tests/test_scalarmath.py:264:                    assert_equal(div*b + rem, a, err_msg=msg)
numpy/core/tests/test_scalarmath.py:266:                        assert_(b < rem <= 0, msg)
numpy/core/tests/test_scalarmath.py:268:                        assert_(b > rem >= 0, msg)
numpy/core/tests/test_scalarmath.py:276:            assert_(rem <= b, 'dt: %s' % dt)
numpy/core/tests/test_scalarmath.py:278:            assert_(rem >= -b, 'dt: %s' % dt)
numpy/core/tests/test_scalarmath.py:293:                assert_(np.isnan(rem), 'dt: %s' % dt)
numpy/core/tests/test_scalarmath.py:296:                #assert_(rem == fone, 'dt: %s' % dt)
numpy/core/tests/test_scalarmath.py:298:                assert_(np.isnan(rem), 'dt: %s' % dt)
numpy/core/tests/test_scalarmath.py:300:                assert_(np.isnan(rem), 'dt: %s' % dt)
numpy/core/tests/test_scalarmath.py:303:                    assert_(np.isinf(div)) and assert_(np.isnan(mod))
numpy/core/tests/test_scalarmath.py:322:                assert_(np.isinf(b/a))
numpy/core/tests/test_scalarmath.py:324:                assert_(np.isinf(b/a))
numpy/core/tests/test_scalarmath.py:326:                assert_(np.isinf(b/a))
numpy/core/tests/test_scalarmath.py:328:                assert_(np.isinf(b/a))
numpy/core/tests/test_scalarmath.py:330:                assert_(np.isnan(b/a))
numpy/core/tests/test_scalarmath.py:332:                assert_(np.isnan(b/a))
numpy/core/tests/test_scalarmath.py:356:                    assert_equal(result.real, ex[0])
numpy/core/tests/test_scalarmath.py:357:                    assert_equal(result.imag, ex[1])
numpy/core/tests/test_scalarmath.py:384:                    assert_equal(result.real, ex[0])
numpy/core/tests/test_scalarmath.py:385:                    assert_equal(result.imag, ex[1])
numpy/core/tests/test_scalarmath.py:394:            assert_equal([int(_m) for _m in a], li)
numpy/core/tests/test_scalarmath.py:397:        assert_equal([int(_m) for _m in a], li[:3])
numpy/core/tests/test_scalarmath.py:403:            assert_(res == tgt)
numpy/core/tests/test_scalarmath.py:408:            assert_(res == tgt)
numpy/core/tests/test_scalarmath.py:413:            assert_(res == tgt)
numpy/core/tests/test_scalarmath.py:420:            assert_raises(OverflowError, overflow_error_func, code)
numpy/core/tests/test_scalarmath.py:425:        assert_raises(OverflowError, int, x)
numpy/core/tests/test_scalarmath.py:429:            assert_raises(OverflowError, int, x)
numpy/core/tests/test_scalarmath.py:430:            assert_equal(len(sup.log), 1)
numpy/core/tests/test_scalarmath.py:435:        assert_raises(OverflowError, x.__int__)
numpy/core/tests/test_scalarmath.py:439:            assert_raises(OverflowError, x.__int__)
numpy/core/tests/test_scalarmath.py:440:            assert_equal(len(sup.log), 1)
numpy/core/tests/test_scalarmath.py:452:        assert_(huge_ld != np.inf)
numpy/core/tests/test_scalarmath.py:453:        assert_equal(int(huge_ld), huge_i)
numpy/core/tests/test_scalarmath.py:457:        assert_equal(int(x), 1)
numpy/core/tests/test_scalarmath.py:459:        assert_equal(int(x), -10)
numpy/core/tests/test_scalarmath.py:464:            assert_(1 > np.array(0, dtype=dt1)[()], "type %s failed" % (dt1,))
numpy/core/tests/test_scalarmath.py:465:            assert_(not 1 < np.array(0, dtype=dt1)[()], "type %s failed" % (dt1,))
numpy/core/tests/test_scalarmath.py:468:                assert_(np.array(1, dtype=dt1)[()] > np.array(0, dtype=dt2)[()],
numpy/core/tests/test_scalarmath.py:470:                assert_(not np.array(1, dtype=dt1)[()] < np.array(0, dtype=dt2)[()],
numpy/core/tests/test_scalarmath.py:475:            assert_(-1 < np.array(1, dtype=dt1)[()], "type %s failed" % (dt1,))
numpy/core/tests/test_scalarmath.py:476:            assert_(not -1 > np.array(1, dtype=dt1)[()], "type %s failed" % (dt1,))
numpy/core/tests/test_scalarmath.py:477:            assert_(-1 != np.array(1, dtype=dt1)[()], "type %s failed" % (dt1,))
numpy/core/tests/test_scalarmath.py:481:                assert_(np.array(1, dtype=dt1)[()] > np.array(-1, dtype=dt2)[()],
numpy/core/tests/test_scalarmath.py:483:                assert_(not np.array(1, dtype=dt1)[()] < np.array(-1, dtype=dt2)[()],
numpy/core/tests/test_scalarmath.py:485:                assert_(np.array(1, dtype=dt1)[()] != np.array(-1, dtype=dt2)[()],
numpy/core/tests/test_scalarmath.py:490:            assert_(1 > np.array(-1, dtype=dt1)[()], "type %s failed" % (dt1,))
numpy/core/tests/test_scalarmath.py:491:            assert_(not 1 < np.array(-1, dtype=dt1)[()], "type %s failed" % (dt1,))
numpy/core/tests/test_scalarmath.py:492:            assert_(-1 == np.array(-1, dtype=dt1)[()], "type %s failed" % (dt1,))
numpy/core/tests/test_scalarmath.py:495:                assert_(np.array(1, dtype=dt1)[()] > np.array(-1, dtype=dt2)[()],
numpy/core/tests/test_scalarmath.py:497:                assert_(not np.array(1, dtype=dt1)[()] < np.array(-1, dtype=dt2)[()],
numpy/core/tests/test_scalarmath.py:499:                assert_(np.array(-1, dtype=dt1)[()] == np.array(-1, dtype=dt2)[()],
numpy/core/tests/test_scalarmath.py:507:            assert_(not np.float32(1) == None)
numpy/core/tests/test_scalarmath.py:508:            assert_(not np.str_('test') == None)
numpy/core/tests/test_scalarmath.py:510:            assert_(not np.datetime64('NaT') == None)
numpy/core/tests/test_scalarmath.py:512:            assert_(np.float32(1) != None)
numpy/core/tests/test_scalarmath.py:513:            assert_(np.str_('test') != None)
numpy/core/tests/test_scalarmath.py:515:            assert_(np.datetime64('NaT') != None)
numpy/core/tests/test_scalarmath.py:516:        assert_(len(w) == 0)
numpy/core/tests/test_scalarmath.py:521:        assert_(np.equal(np.datetime64('NaT'), None))
numpy/core/tests/test_scalarmath.py:530:#            assert_equal( val, val2 )
numpy/core/tests/test_scalarmath.py:557:                assert_equal(val, val2)
numpy/core/tests/test_scalarmath.py:573:                assert_(sys.getsizeof(x) > x.nbytes)
numpy/core/tests/test_scalarmath.py:577:            assert_raises(TypeError, d.__sizeof__, "a")
numpy/core/tests/test_scalarmath.py:596:                assert_equal(seq * i, seq * int(i))
numpy/core/tests/test_scalarmath.py:597:                assert_equal(i * seq, int(i) * seq)
numpy/core/tests/test_scalarmath.py:602:                    assert_warns(DeprecationWarning, operator.mul, seq, i),
numpy/core/tests/test_scalarmath.py:605:                    assert_warns(DeprecationWarning, operator.mul, i, seq),
numpy/core/tests/test_scalarmath.py:610:                assert_raises(TypeError, operator.mul, seq, i)
numpy/core/tests/test_scalarmath.py:611:                assert_raises(TypeError, operator.mul, i, seq)
numpy/core/tests/test_scalarmath.py:625:            assert_array_equal(arr_like * np.float32(3.), np.full(3, 3.))
numpy/core/tests/test_scalarmath.py:626:            assert_array_equal(np.float32(3.) * arr_like, np.full(3, 3.))
numpy/core/tests/test_scalarmath.py:627:            assert_array_equal(arr_like * np.int_(3), np.full(3, 3))
numpy/core/tests/test_scalarmath.py:628:            assert_array_equal(np.int_(3) * arr_like, np.full(3, 3))
numpy/core/tests/test_scalarmath.py:634:        assert_raises(TypeError, operator.neg, a)
numpy/core/tests/test_scalarmath.py:642:                assert_equal(operator.neg(a) + a, 0)
numpy/core/tests/test_scalarmath.py:648:        assert_raises(TypeError, operator.sub, a, a)
numpy/core/tests/test_scalarmath.py:656:                assert_equal(operator.sub(a, a), 0)
numpy/core/tests/test_scalarmath.py:662:        assert_equal(absfunc(x), 1.5)
numpy/core/tests/test_scalarmath.py:666:        assert_equal(res, 0.0)
numpy/core/tests/test_scalarmath.py:669:        assert_equal(res, 0.0)
numpy/core/tests/test_scalarmath.py:672:        assert_equal(absfunc(x), x.real)
numpy/core/tests/test_scalarmath.py:677:            assert_equal(absfunc(x), x.real)
numpy/core/tests/test_scalarmath.py:680:        assert_equal(absfunc(x), -x.real)
numpy/core/tests/test_scalarmath.py:727:                    assert_equal(res_scl, -1)
numpy/core/tests/test_scalarmath.py:729:                    assert_equal(res_scl, 0)
numpy/core/tests/test_scalarmath.py:735:                assert_equal(res_arr, res_scl)
numpy/core/tests/test_scalarmath.py:743:            assert hash(i) == hash(scalar(i))
numpy/core/tests/test_scalarmath.py:755:            assert val == numpy_val
numpy/core/tests/test_scalarmath.py:757:            assert hash(val) == hash(numpy_val)
numpy/core/tests/test_scalarmath.py:761:            assert hash(scalar(np.nan)) != hash(scalar(np.nan))
numpy/core/tests/test_scalarmath.py:769:            assert hash(complex(numpy_val)) == hash(numpy_val)
numpy/core/tests/test_item_selection.py:44:                            assert_array_equal(res, tresult[real_index])
numpy/core/tests/test_item_selection.py:47:                            assert_(res.shape == (2,) + index_array.shape)
numpy/core/tests/test_item_selection.py:57:                assert_(all(sys.getrefcount(o) == 3 for o in objects))
numpy/core/tests/test_item_selection.py:63:                assert_(all(sys.getrefcount(o) == 3 for o in objects))
numpy/core/tests/test_item_selection.py:68:        assert_raises(ValueError, d.take, 5, mode=k)
numpy/core/tests/test_item_selection.py:78:        assert_array_equal(a, a_original)
numpy/core/tests/test_item_selection.py:86:        assert_array_equal(a, b)
numpy/core/tests/test_array_coercion.py:118:    assert isinstance(structured, np.void)
numpy/core/tests/test_array_coercion.py:119:    assert structured.dtype == np.dtype("i,i")
numpy/core/tests/test_array_coercion.py:158:        assert np.array(obj, dtype="S").dtype == expected
numpy/core/tests/test_array_coercion.py:159:        assert np.array([obj], dtype="S").dtype == expected
numpy/core/tests/test_array_coercion.py:163:        assert np.array(arr, dtype="S").dtype == expected
numpy/core/tests/test_array_coercion.py:165:        assert arr.astype("S").dtype == expected
numpy/core/tests/test_array_coercion.py:174:        assert np.array([arr, arr], dtype="S").dtype == expected
numpy/core/tests/test_array_coercion.py:188:        assert arr.shape == (1, 1)
numpy/core/tests/test_array_coercion.py:189:        assert arr.dtype == expected
numpy/core/tests/test_array_coercion.py:196:        assert arr.shape == ()
numpy/core/tests/test_array_coercion.py:198:        assert arr.shape == (1,)
numpy/core/tests/test_array_coercion.py:202:        assert arr.shape == (6,)
numpy/core/tests/test_array_coercion.py:203:        assert arr.dtype.char == "c"
numpy/core/tests/test_array_coercion.py:205:        assert arr.shape == (1, 6)
numpy/core/tests/test_array_coercion.py:206:        assert arr.dtype.char == "c"
numpy/core/tests/test_array_coercion.py:216:        assert arr.shape == (1,) * (np.MAXDIMS - 1) + (6,)
numpy/core/tests/test_array_coercion.py:222:        assert arr.shape == ()
numpy/core/tests/test_array_coercion.py:223:        assert arr.dtype == np.dtype("O")
numpy/core/tests/test_array_coercion.py:228:        assert arr.shape == ()
numpy/core/tests/test_array_coercion.py:229:        assert arr.dtype == scalar.dtype
numpy/core/tests/test_array_coercion.py:232:        assert arr.shape == (1, 2)
numpy/core/tests/test_array_coercion.py:233:        assert arr.dtype == scalar.dtype
numpy/core/tests/test_array_coercion.py:248:            assert arr.shape == (2,)
numpy/core/tests/test_array_coercion.py:252:                assert arr.dtype == expected_dtype
numpy/core/tests/test_array_coercion.py:255:                assert arr.dtype == np.dtype("O")
numpy/core/tests/test_array_coercion.py:281:        assert_array_equal(arr, arr1)
numpy/core/tests/test_array_coercion.py:282:        assert_array_equal(arr, arr2)
numpy/core/tests/test_array_coercion.py:283:        assert_array_equal(arr, arr3)
numpy/core/tests/test_array_coercion.py:284:        assert_array_equal(arr, arr4)
numpy/core/tests/test_array_coercion.py:339:            assert_array_equal(arr, cast)
numpy/core/tests/test_array_coercion.py:343:            assert_array_equal(ass, cast)
numpy/core/tests/test_array_coercion.py:357:        assert_array_equal(res, expected)
numpy/core/tests/test_array_coercion.py:372:        assert discovered_dtype == dtype
numpy/core/tests/test_array_coercion.py:373:        assert discovered_dtype.itemsize == dtype.itemsize
numpy/core/tests/test_array_coercion.py:391:            assert_array_equal(coerced, cast)
numpy/core/tests/test_array_coercion.py:412:        assert_array_equal(arr, cast)
numpy/core/tests/test_array_coercion.py:422:            assert_array_equal(ass, cast)
numpy/core/tests/test_array_coercion.py:436:        assert_array_equal(arr, cast)
numpy/core/tests/test_array_coercion.py:437:        assert_array_equal(cast, cast)
numpy/core/tests/test_array_coercion.py:454:        assert arr[()] == cut_string
numpy/core/tests/test_array_coercion.py:457:        assert ass[()] == cut_string
numpy/core/tests/test_array_coercion.py:477:        assert cast[()] == expected
numpy/core/tests/test_array_coercion.py:478:        assert ass[()] == expected
numpy/core/tests/test_array_coercion.py:488:        assert arr.shape == (1,) * np.MAXDIMS
numpy/core/tests/test_array_coercion.py:495:        assert arr.dtype == np.dtype("O")
numpy/core/tests/test_array_coercion.py:496:        assert arr.shape == (1,) * np.MAXDIMS
numpy/core/tests/test_array_coercion.py:497:        assert arr.item() is initial
numpy/core/tests/test_array_coercion.py:504:        assert arr.shape == (3,) + (1,) * (np.MAXDIMS - 1)
numpy/core/tests/test_array_coercion.py:508:        assert arr.shape == (3, 1)
numpy/core/tests/test_array_coercion.py:533:        assert arr.shape == (1,) * np.MAXDIMS
numpy/core/tests/test_array_coercion.py:534:        assert arr.item() == np.array(initial).item()
numpy/core/tests/test_array_coercion.py:543:        assert out.shape == (2,)
numpy/core/tests/test_array_coercion.py:544:        assert out[0] is arr
numpy/core/tests/test_array_coercion.py:545:        assert type(out[1]) is list
numpy/core/tests/test_array_coercion.py:555:        assert arr.shape == (3,)
numpy/core/tests/test_array_coercion.py:572:        assert shape == (2, 3)
numpy/core/tests/test_array_coercion.py:576:        assert shape == (2,)
numpy/core/tests/test_array_coercion.py:580:        assert res[0] is arr
numpy/core/tests/test_array_coercion.py:581:        assert res[1] is mismatch_first_dim
numpy/core/tests/test_array_coercion.py:645:        assert_array_equal(arr, res)
numpy/core/tests/test_array_coercion.py:649:        assert res[0] is obj
numpy/core/tests/test_array_coercion.py:660:        assert_array_equal(arr, res)
numpy/core/tests/test_array_coercion.py:671:        assert_array_equal(arr, res)
numpy/core/tests/test_array_coercion.py:681:        assert arr[()] is np.int64
numpy/core/tests/test_array_coercion.py:683:        assert arr[0] is np.int64
numpy/core/tests/test_array_coercion.py:699:        assert arr[()] is ArrayLike
numpy/core/tests/test_array_coercion.py:701:        assert arr[0] is ArrayLike
numpy/core/tests/test_unicode.py:36:    assert_(str_arr != uni_arr1)
numpy/core/tests/test_unicode.py:37:    assert_(str_arr != uni_arr2)
numpy/core/tests/test_unicode.py:38:    assert_array_equal(uni_arr1, uni_arr2)
numpy/core/tests/test_unicode.py:51:        assert_(int(ua.dtype.str[2:]) == self.ulen)
numpy/core/tests/test_unicode.py:53:        assert_(buffer_length(ua) == nbytes)
numpy/core/tests/test_unicode.py:55:        assert_(ua_scalar == u'')
numpy/core/tests/test_unicode.py:57:        assert_(ua_scalar.encode('ascii') == b'')
numpy/core/tests/test_unicode.py:59:        assert_(buffer_length(ua_scalar) == 0)
numpy/core/tests/test_unicode.py:100:        assert_(int(ua.dtype.str[2:]) == self.ulen)
numpy/core/tests/test_unicode.py:102:        assert_(buffer_length(ua) == nbytes)
numpy/core/tests/test_unicode.py:104:        assert_(ua_scalar == self.ucs_value*self.ulen)
numpy/core/tests/test_unicode.py:106:        assert_(ua_scalar.encode('utf-8') ==
numpy/core/tests/test_unicode.py:112:            assert_(buffer_length(ua_scalar) == 2*2*self.ulen)
numpy/core/tests/test_unicode.py:116:            assert_(buffer_length(ua_scalar) == 2*self.ulen)
numpy/core/tests/test_unicode.py:182:        assert_(int(ua.dtype.str[2:]) == self.ulen)
numpy/core/tests/test_unicode.py:184:        assert_(buffer_length(ua) == nbytes)
numpy/core/tests/test_unicode.py:186:        assert_(ua_scalar == self.ucs_value*self.ulen)
numpy/core/tests/test_unicode.py:188:        assert_(ua_scalar.encode('utf-8') ==
numpy/core/tests/test_unicode.py:194:            assert_(buffer_length(ua_scalar) == 2*2*self.ulen)
numpy/core/tests/test_unicode.py:198:            assert_(buffer_length(ua_scalar) == 2*self.ulen)
numpy/core/tests/test_unicode.py:273:        assert_(ua[()] != ua2[()])
numpy/core/tests/test_unicode.py:276:        assert_equal(ua, ua3)
numpy/core/tests/test_unicode.py:282:        assert_((ua != ua2).all())
numpy/core/tests/test_unicode.py:283:        assert_(ua[-1] != ua2[-1])
numpy/core/tests/test_unicode.py:286:        assert_equal(ua, ua3)
numpy/core/tests/test_unicode.py:293:        assert_((ua != ua2).all())
numpy/core/tests/test_unicode.py:294:        assert_(ua[-1, -1, -1] != ua2[-1, -1, -1])
numpy/core/tests/test_unicode.py:297:        assert_equal(ua, ua3)
numpy/core/tests/test_unicode.py:306:            assert_((ua == ua2).all())
numpy/core/tests/test_unicode.py:307:            assert_(ua[-1] == ua2[-1])
numpy/core/tests/test_unicode.py:310:            assert_equal(ua, ua3)
numpy/core/tests/test_unicode.py:321:            assert_((ua == ua2).all())
numpy/core/tests/test_unicode.py:322:            assert_(ua[-1] == ua2[-1])
numpy/core/tests/test_unicode.py:326:            assert_equal(ua, ua3)
numpy/core/tests/test_cpu_dispatcher.py:31:    assert_equal(test["func"], "func" + highest_sfx)
numpy/core/tests/test_cpu_dispatcher.py:32:    assert_equal(test["var"], "var"  + highest_sfx)
numpy/core/tests/test_cpu_dispatcher.py:35:        assert_equal(test["func_xb"], "func" + highest_sfx)
numpy/core/tests/test_cpu_dispatcher.py:36:        assert_equal(test["var_xb"], "var"  + highest_sfx)
numpy/core/tests/test_cpu_dispatcher.py:38:        assert_equal(test["func_xb"], "nobase")
numpy/core/tests/test_cpu_dispatcher.py:39:        assert_equal(test["var_xb"], "nobase")
numpy/core/tests/test_cpu_dispatcher.py:42:    assert_equal(test["all"], all_sfx)
numpy/core/tests/test_arrayprint.py:17:        assert_equal(repr(x), 'array([nan, inf])')
numpy/core/tests/test_arrayprint.py:24:        assert_equal(repr(x1d), 'sub([1, 2])')
numpy/core/tests/test_arrayprint.py:28:        assert_equal(repr(x2d),
numpy/core/tests/test_arrayprint.py:34:        assert_equal(repr(xstruct),
numpy/core/tests/test_arrayprint.py:52:        assert_equal(repr(x), 'sub([None, None], dtype=object)')
numpy/core/tests/test_arrayprint.py:53:        assert_equal(str(x), '[None None]')
numpy/core/tests/test_arrayprint.py:56:        assert_equal(repr(x),
numpy/core/tests/test_arrayprint.py:58:        assert_equal(str(x), '[None sub([None, None], dtype=object)]')
numpy/core/tests/test_arrayprint.py:73:        assert_equal(repr(x), 'sub(1)')
numpy/core/tests/test_arrayprint.py:74:        assert_equal(str(x), '1')
numpy/core/tests/test_arrayprint.py:77:        assert_equal(repr(x), 'sub([1, 1])')
numpy/core/tests/test_arrayprint.py:78:        assert_equal(str(x), '[1 1]')
numpy/core/tests/test_arrayprint.py:82:        assert_equal(repr(x), 'sub(None, dtype=object)')
numpy/core/tests/test_arrayprint.py:83:        assert_equal(str(x), 'None')
numpy/core/tests/test_arrayprint.py:89:        assert_equal(repr(x),
numpy/core/tests/test_arrayprint.py:91:        assert_equal(str(x), '...')
numpy/core/tests/test_arrayprint.py:97:        assert_equal(repr(x), 'sub(sub(None, dtype=object), dtype=object)')
numpy/core/tests/test_arrayprint.py:98:        assert_equal(str(x), 'None')
numpy/core/tests/test_arrayprint.py:119:        assert_equal(str(dc), "[zero one two many many]")
numpy/core/tests/test_arrayprint.py:120:        assert_equal(str(dc[0]), "zero")
numpy/core/tests/test_arrayprint.py:125:        assert_equal(repr(arr0d),
numpy/core/tests/test_arrayprint.py:131:        assert_equal(repr(arr1d),
numpy/core/tests/test_arrayprint.py:139:        assert_equal(repr(first),
numpy/core/tests/test_arrayprint.py:148:        assert_equal(repr(arr1d),
numpy/core/tests/test_arrayprint.py:159:        assert_equal(repr(arr_no_fields), 'array([(), (), (), ()], dtype=[])')
numpy/core/tests/test_arrayprint.py:207:            assert_equal(res, val)
numpy/core/tests/test_arrayprint.py:213:        assert_(np.array2string(a) == '[0 1 2]')
numpy/core/tests/test_arrayprint.py:214:        assert_(np.array2string(a, max_line_width=4, legacy='1.13') == '[0 1\n 2]')
numpy/core/tests/test_arrayprint.py:215:        assert_(np.array2string(a, max_line_width=4) == '[0\n 1\n 2]')
numpy/core/tests/test_arrayprint.py:239:        assert_(np.array2string(x, formatter={'all':_format_function}) ==
numpy/core/tests/test_arrayprint.py:241:        assert_(np.array2string(x, formatter={'int_kind':_format_function}) ==
numpy/core/tests/test_arrayprint.py:243:        assert_(np.array2string(x, formatter={'all':lambda x: "%.4f" % x}) ==
numpy/core/tests/test_arrayprint.py:245:        assert_equal(np.array2string(x, formatter={'int':lambda x: hex(x)}),
numpy/core/tests/test_arrayprint.py:247:        assert_equal(np.array2string(x, formatter={'int':lambda x: oct(x)}),
numpy/core/tests/test_arrayprint.py:251:        assert_(np.array2string(x, formatter={'float_kind':lambda x: "%.2f" % x}) ==
numpy/core/tests/test_arrayprint.py:253:        assert_(np.array2string(x, formatter={'float':lambda x: "%.2f" % x}) ==
numpy/core/tests/test_arrayprint.py:257:        assert_(np.array2string(s, formatter={'numpystr':lambda s: s*2}) ==
numpy/core/tests/test_arrayprint.py:264:        assert_equal(np.array2string(x),
numpy/core/tests/test_arrayprint.py:305:        assert_equal(np.array2string(struct_int),
numpy/core/tests/test_arrayprint.py:309:        assert_equal(np.array2string(struct_2dint),
numpy/core/tests/test_arrayprint.py:315:        assert_equal(np.array2string(array_scalar), "(1., 2.12345679, 3.)")
numpy/core/tests/test_arrayprint.py:320:        assert_equal(repr(a[0]), r"void(b'\x1B\x5B\x32\x4B\x07\x41\x0A\x08')")
numpy/core/tests/test_arrayprint.py:321:        assert_equal(str(a[0]), r"b'\x1B\x5B\x32\x4B\x07\x41\x0A\x08'")
numpy/core/tests/test_arrayprint.py:322:        assert_equal(repr(a),
numpy/core/tests/test_arrayprint.py:326:        assert_equal(eval(repr(a), vars(np)), a)
numpy/core/tests/test_arrayprint.py:327:        assert_equal(eval(repr(a[0]), vars(np)), a[0])
numpy/core/tests/test_arrayprint.py:340:        assert_equal(str(A), strA)
numpy/core/tests/test_arrayprint.py:343:        assert_equal(repr(A), reprA)
numpy/core/tests/test_arrayprint.py:349:        assert_equal(str(A), strA)
numpy/core/tests/test_arrayprint.py:353:        assert_equal(repr(A), reprA)
numpy/core/tests/test_arrayprint.py:361:        assert_equal(make_str(a, 8, legacy='1.13'), '[111111]')
numpy/core/tests/test_arrayprint.py:362:        assert_equal(make_str(a, 7, legacy='1.13'), '[111111]')
numpy/core/tests/test_arrayprint.py:363:        assert_equal(make_str(a, 5, legacy='1.13'), '[1111\n'
numpy/core/tests/test_arrayprint.py:366:        assert_equal(make_str(a, 8), '[111111]')
numpy/core/tests/test_arrayprint.py:367:        assert_equal(make_str(a, 7), '[11111\n'
numpy/core/tests/test_arrayprint.py:369:        assert_equal(make_str(a, 5), '[111\n'
numpy/core/tests/test_arrayprint.py:374:        assert_equal(make_str(b, 12, legacy='1.13'), '[[[111111]]]')
numpy/core/tests/test_arrayprint.py:375:        assert_equal(make_str(b,  9, legacy='1.13'), '[[[111111]]]')
numpy/core/tests/test_arrayprint.py:376:        assert_equal(make_str(b,  8, legacy='1.13'), '[[[11111\n'
numpy/core/tests/test_arrayprint.py:379:        assert_equal(make_str(b, 12), '[[[111111]]]')
numpy/core/tests/test_arrayprint.py:380:        assert_equal(make_str(b,  9), '[[[111\n'
numpy/core/tests/test_arrayprint.py:382:        assert_equal(make_str(b,  8), '[[[11\n'
numpy/core/tests/test_arrayprint.py:478:        assert_equal(a[0], text)
numpy/core/tests/test_arrayprint.py:482:        assert_equal(result, expected_repr)
numpy/core/tests/test_arrayprint.py:496:        assert_(r1 == r2)
numpy/core/tests/test_arrayprint.py:509:        assert_equal(repr(x), "array([1.5       , 0.        , 1.23456789])")
numpy/core/tests/test_arrayprint.py:511:        assert_equal(repr(x), "array([1.5   , 0.    , 1.2346])")
numpy/core/tests/test_arrayprint.py:521:            assert_equal(repr(x), "array([%s])" % string)
numpy/core/tests/test_arrayprint.py:526:        assert_equal(repr(x), "array([-1, 0, 1])")
numpy/core/tests/test_arrayprint.py:531:        assert_equal(repr(x), "array([-1, 0, 1])")
numpy/core/tests/test_arrayprint.py:533:        assert_equal(repr(x), "array([0, 1, 2])")
numpy/core/tests/test_arrayprint.py:536:        assert_equal(repr(x), "array([-1, 0, 1])")
numpy/core/tests/test_arrayprint.py:538:        assert_equal(repr(x), "array([0, 1, 2])")
numpy/core/tests/test_arrayprint.py:541:        assert_equal(repr(x), "array([-1, 0, 1])")
numpy/core/tests/test_arrayprint.py:543:        assert_equal(repr(x), "array([0, 1, 2])")
numpy/core/tests/test_arrayprint.py:547:        assert_equal(repr(x), "array([-1.0, 0.0, 1.0])")
numpy/core/tests/test_arrayprint.py:549:        assert_equal(repr(x), "array([0., 1., 2.])")
numpy/core/tests/test_arrayprint.py:552:        assert_equal(str(np.array(u'café', '<U4')), u'café')
numpy/core/tests/test_arrayprint.py:554:        assert_equal(repr(np.array('café', '<U4')),
numpy/core/tests/test_arrayprint.py:556:        assert_equal(str(np.array('test', np.str_)), 'test')
numpy/core/tests/test_arrayprint.py:559:        assert_equal(str(a[0]), '([0, 0, 0],)')
numpy/core/tests/test_arrayprint.py:561:        assert_equal(repr(np.datetime64('2005-02-25')[...]),
numpy/core/tests/test_arrayprint.py:564:        assert_equal(repr(np.timedelta64('10', 'Y')[...]),
numpy/core/tests/test_arrayprint.py:570:        assert_equal(repr(x), "array(test)")
numpy/core/tests/test_arrayprint.py:572:        assert_equal(str(x), "1")
numpy/core/tests/test_arrayprint.py:588:        assert_equal(repr(x), 'array([1., 2., 3.])')
numpy/core/tests/test_arrayprint.py:589:        assert_equal(repr(y), 'array([  1.,   2., -10.])')
numpy/core/tests/test_arrayprint.py:590:        assert_equal(repr(np.array(y[0])), 'array(1.)')
numpy/core/tests/test_arrayprint.py:591:        assert_equal(repr(np.array(y[-1])), 'array(-10.)')
numpy/core/tests/test_arrayprint.py:592:        assert_equal(repr(z), 'array([100.,   2.,  -1.])')
numpy/core/tests/test_arrayprint.py:593:        assert_equal(repr(w), 'array([-100.,    2.,    1.])')
numpy/core/tests/test_arrayprint.py:595:        assert_equal(repr(np.array([np.nan, np.inf])), 'array([nan, inf])')
numpy/core/tests/test_arrayprint.py:596:        assert_equal(repr(np.array([np.nan, -np.inf])), 'array([ nan, -inf])')
numpy/core/tests/test_arrayprint.py:602:        assert_equal(repr(x), 'array([     inf, 1.00e+05, 1.12e+00])')
numpy/core/tests/test_arrayprint.py:603:        assert_equal(repr(y), 'array([      inf,  1.00e+05, -1.12e+00])')
numpy/core/tests/test_arrayprint.py:604:        assert_equal(repr(z), 'array([       inf,  1.12e+000, -1.00e+120])')
numpy/core/tests/test_arrayprint.py:607:        assert_equal(repr(np.array([True,  True])),
numpy/core/tests/test_arrayprint.py:609:        assert_equal(repr(np.array([True, False])),
numpy/core/tests/test_arrayprint.py:611:        assert_equal(repr(np.array([True])),
numpy/core/tests/test_arrayprint.py:613:        assert_equal(repr(np.array(True)),
numpy/core/tests/test_arrayprint.py:615:        assert_equal(repr(np.array(False)),
numpy/core/tests/test_arrayprint.py:623:        assert_equal(repr(a), 'array([0., 1., 2., 3.])')
numpy/core/tests/test_arrayprint.py:624:        assert_equal(repr(np.array(1.)), 'array(1.)')
numpy/core/tests/test_arrayprint.py:625:        assert_equal(repr(b), 'array([1.234e+09])')
numpy/core/tests/test_arrayprint.py:626:        assert_equal(repr(np.array([0.])), 'array([0.])')
numpy/core/tests/test_arrayprint.py:627:        assert_equal(repr(c),
numpy/core/tests/test_arrayprint.py:629:        assert_equal(repr(np.array([0., -0.])), 'array([ 0., -0.])')
numpy/core/tests/test_arrayprint.py:632:        assert_equal(repr(a), 'array([ 0.,  1.,  2.,  3.])')
numpy/core/tests/test_arrayprint.py:633:        assert_equal(repr(np.array(1.)), 'array( 1.)')
numpy/core/tests/test_arrayprint.py:634:        assert_equal(repr(b), 'array([ 1.234e+09])')
numpy/core/tests/test_arrayprint.py:635:        assert_equal(repr(c),
numpy/core/tests/test_arrayprint.py:637:        assert_equal(repr(np.array([0., -0.])), 'array([ 0., -0.])')
numpy/core/tests/test_arrayprint.py:640:        assert_equal(repr(a), 'array([+0., +1., +2., +3.])')
numpy/core/tests/test_arrayprint.py:641:        assert_equal(repr(np.array(1.)), 'array(+1.)')
numpy/core/tests/test_arrayprint.py:642:        assert_equal(repr(b), 'array([+1.234e+09])')
numpy/core/tests/test_arrayprint.py:643:        assert_equal(repr(c),
numpy/core/tests/test_arrayprint.py:647:        assert_equal(repr(a), 'array([ 0.,  1.,  2.,  3.])')
numpy/core/tests/test_arrayprint.py:648:        assert_equal(repr(b),  'array([  1.23400000e+09])')
numpy/core/tests/test_arrayprint.py:649:        assert_equal(repr(-b), 'array([ -1.23400000e+09])')
numpy/core/tests/test_arrayprint.py:650:        assert_equal(repr(np.array(1.)), 'array(1.0)')
numpy/core/tests/test_arrayprint.py:651:        assert_equal(repr(np.array([0.])), 'array([ 0.])')
numpy/core/tests/test_arrayprint.py:652:        assert_equal(repr(c),
numpy/core/tests/test_arrayprint.py:655:        assert_equal(str(np.array([-1., 10])), "[ -1.  10.]")
numpy/core/tests/test_arrayprint.py:657:        assert_raises(TypeError, np.set_printoptions, wrongarg=True)
numpy/core/tests/test_arrayprint.py:666:        assert_equal(repr(a),
numpy/core/tests/test_arrayprint.py:668:        assert_equal(repr(a[0]), "(1., 1.)")
numpy/core/tests/test_arrayprint.py:690:        assert_equal(repr(x),
numpy/core/tests/test_arrayprint.py:693:        assert_equal(repr(y),
numpy/core/tests/test_arrayprint.py:697:        assert_equal(repr(z),
numpy/core/tests/test_arrayprint.py:699:        assert_equal(repr(w),
numpy/core/tests/test_arrayprint.py:704:        assert_equal(repr(wp), "array([1.234e+001, 1.000e+002, 1.000e+123])")
numpy/core/tests/test_arrayprint.py:705:        assert_equal(repr(c),
numpy/core/tests/test_arrayprint.py:710:        assert_equal(repr(x),
numpy/core/tests/test_arrayprint.py:713:        assert_equal(repr(y),
numpy/core/tests/test_arrayprint.py:716:        assert_equal(repr(z),
numpy/core/tests/test_arrayprint.py:718:        assert_equal(repr(w[::5]),
numpy/core/tests/test_arrayprint.py:720:        assert_equal(repr(wp), "array([1.234e+001, 1.000e+002, 1.000e+123])")
numpy/core/tests/test_arrayprint.py:721:        assert_equal(repr(c),
numpy/core/tests/test_arrayprint.py:726:        assert_equal(repr(x),
numpy/core/tests/test_arrayprint.py:729:        assert_equal(repr(y),
numpy/core/tests/test_arrayprint.py:731:        assert_equal(repr(z),
numpy/core/tests/test_arrayprint.py:733:        assert_equal(repr(w[::5]),
numpy/core/tests/test_arrayprint.py:735:        assert_equal(repr(wp), "array([1.2340e+001, 1.0000e+002, 1.0000e+123])")
numpy/core/tests/test_arrayprint.py:736:        assert_equal(repr(np.zeros(3)), "array([0.0000, 0.0000, 0.0000])")
numpy/core/tests/test_arrayprint.py:737:        assert_equal(repr(c),
numpy/core/tests/test_arrayprint.py:741:        assert_equal(repr(z),
numpy/core/tests/test_arrayprint.py:747:        assert_equal(repr(x),
numpy/core/tests/test_arrayprint.py:750:        assert_equal(repr(y),
numpy/core/tests/test_arrayprint.py:753:        assert_equal(repr(z),
numpy/core/tests/test_arrayprint.py:755:        assert_equal(repr(w[::5]),
numpy/core/tests/test_arrayprint.py:757:        assert_equal(repr(wp), "array([1.234e+001, 1.000e+002, 1.000e+123])")
numpy/core/tests/test_arrayprint.py:758:        assert_equal(repr(c),
numpy/core/tests/test_arrayprint.py:763:        assert_equal(np.float64(np.array2string(a, floatmode='unique')), a)
numpy/core/tests/test_arrayprint.py:769:        assert_equal(str(np.float64(1.123456789123456789)), '1.12345678912')
numpy/core/tests/test_arrayprint.py:770:        assert_equal(str(np.complex128(complex(1, np.nan))), '(1+nan*j)')
numpy/core/tests/test_arrayprint.py:773:        assert_equal(str(np.float64(1.123456789123456789)),
numpy/core/tests/test_arrayprint.py:775:        assert_equal(str(np.complex128(complex(1, np.nan))), '(1+nanj)')
numpy/core/tests/test_arrayprint.py:779:        assert_equal(str(np.arange(10000)), '[   0    1    2 ..., 9997 9998 9999]')
numpy/core/tests/test_arrayprint.py:782:        assert_equal(str(np.arange(10000)), '[   0    1    2 ... 9997 9998 9999]')
numpy/core/tests/test_arrayprint.py:786:        assert_equal(repr(np.arange(10,20., dtype='f4')),
numpy/core/tests/test_arrayprint.py:788:        assert_equal(repr(np.arange(10,23., dtype='f4')), textwrap.dedent("""\
numpy/core/tests/test_arrayprint.py:793:        assert_equal(repr(np.ones(3, dtype=styp)),
numpy/core/tests/test_arrayprint.py:795:        assert_equal(repr(np.ones(12, dtype=styp)), textwrap.dedent("""\
numpy/core/tests/test_arrayprint.py:925:        assert_raises(ValueError, np.set_printoptions, threshold=float('nan'))
numpy/core/tests/test_arrayprint.py:926:        assert_raises(TypeError, np.set_printoptions, threshold='1')
numpy/core/tests/test_arrayprint.py:927:        assert_raises(TypeError, np.set_printoptions, threshold=b'1')
numpy/core/tests/test_arrayprint.py:929:        assert_raises(TypeError, np.set_printoptions, precision='1')
numpy/core/tests/test_arrayprint.py:930:        assert_raises(TypeError, np.set_printoptions, precision=1.5)
numpy/core/tests/test_arrayprint.py:935:    assert_equal(repr(x), expected)
numpy/core/tests/test_arrayprint.py:943:        assert_equal(s, '[0.67]')
numpy/core/tests/test_arrayprint.py:951:        assert_equal(np.get_printoptions(), opts)
numpy/core/tests/test_arrayprint.py:961:        assert_equal(np.get_printoptions(), opts)
numpy/core/tests/test_arrayprint.py:967:        assert_equal({k: saved_opts[k] for k in opts}, opts)
numpy/core/tests/test_scalarbuffer.py:43:        assert_equal(mv_x.format, mv_a.format)
numpy/core/tests/test_scalarbuffer.py:49:        assert_equal(mv_x.itemsize, np.dtype(scalar).itemsize)
numpy/core/tests/test_scalarbuffer.py:50:        assert_equal(mv_x.ndim, 0)
numpy/core/tests/test_scalarbuffer.py:51:        assert_equal(mv_x.shape, ())
numpy/core/tests/test_scalarbuffer.py:52:        assert_equal(mv_x.strides, ())
numpy/core/tests/test_scalarbuffer.py:53:        assert_equal(mv_x.suboffsets, ())
numpy/core/tests/test_scalarbuffer.py:63:        assert self._as_dict(mv_x) == expected
numpy/core/tests/test_scalarbuffer.py:74:        assert_(isinstance(x, np.void))
numpy/core/tests/test_scalarbuffer.py:78:        assert_equal(mv_x.itemsize, expected_size)
numpy/core/tests/test_scalarbuffer.py:79:        assert_equal(mv_x.ndim, 0)
numpy/core/tests/test_scalarbuffer.py:80:        assert_equal(mv_x.shape, ())
numpy/core/tests/test_scalarbuffer.py:81:        assert_equal(mv_x.strides, ())
numpy/core/tests/test_scalarbuffer.py:82:        assert_equal(mv_x.suboffsets, ())
numpy/core/tests/test_scalarbuffer.py:86:        assert_(isinstance(a, np.ndarray))
numpy/core/tests/test_scalarbuffer.py:88:        assert_equal(mv_x.itemsize, mv_a.itemsize)
numpy/core/tests/test_scalarbuffer.py:89:        assert_equal(mv_x.format, mv_a.format)
numpy/core/tests/test_scalarbuffer.py:109:        assert self._as_dict(v) == expected
numpy/core/tests/test_scalarbuffer.py:112:        assert self._as_dict(v) == expected
numpy/core/tests/test_scalarbuffer.py:117:        assert_raises((ValueError, BufferError), memoryview, a[0])
numpy/core/tests/test_scalarbuffer.py:136:        assert self._as_dict(v) == expected
numpy/core/tests/test_scalarbuffer.py:141:        assert_equal(code_points, [ord(c) for c in s])
numpy/core/tests/test_indexerrors.py:13:        assert_raises(IndexError, x.take, [0], axis=2)
numpy/core/tests/test_indexerrors.py:14:        assert_raises(IndexError, x.take, [1], axis=2)
numpy/core/tests/test_indexerrors.py:15:        assert_raises(IndexError, x.take, [0], axis=2, mode='wrap')
numpy/core/tests/test_indexerrors.py:16:        assert_raises(IndexError, x.take, [0], axis=2, mode='clip')
numpy/core/tests/test_indexerrors.py:21:        assert_raises(IndexError, d.take, [6])
numpy/core/tests/test_indexerrors.py:25:        assert_raises(IndexError, d.take, [1], axis=1)
numpy/core/tests/test_indexerrors.py:26:        assert_raises(IndexError, d.take, [0], axis=1)
numpy/core/tests/test_indexerrors.py:27:        assert_raises(IndexError, d.take, [0])
numpy/core/tests/test_indexerrors.py:28:        assert_raises(IndexError, d.take, [0], mode='wrap')
numpy/core/tests/test_indexerrors.py:29:        assert_raises(IndexError, d.take, [0], mode='clip')
numpy/core/tests/test_indexerrors.py:33:        assert_raises(IndexError, a.item, 20)
numpy/core/tests/test_indexerrors.py:35:        assert_raises(IndexError, a.item, (0, 0))
numpy/core/tests/test_indexerrors.py:38:        assert_raises(IndexError, a.itemset, 20, 0)
numpy/core/tests/test_indexerrors.py:40:        assert_raises(IndexError, a.itemset, (0, 0), 0)
numpy/core/tests/test_indexerrors.py:44:        assert_raises(IndexError, a.put, 100, 0)
numpy/core/tests/test_indexerrors.py:46:        assert_raises(IndexError, a.put, 100, 0)
numpy/core/tests/test_indexerrors.py:48:        assert_raises(IndexError, a.put, 100, 0)
numpy/core/tests/test_indexerrors.py:50:        assert_raises(IndexError, a.put, 100, 0)
numpy/core/tests/test_indexerrors.py:58:        assert_raises(IndexError, lambda: a[0, 5, None, 2])
numpy/core/tests/test_indexerrors.py:59:        assert_raises(IndexError, lambda: a[0, 5, 0, 2])
numpy/core/tests/test_indexerrors.py:60:        assert_raises(IndexError, lambda: assign(a, (0, 5, None, 2), 1))
numpy/core/tests/test_indexerrors.py:61:        assert_raises(IndexError, lambda: assign(a, (0, 5, 0, 2),  1))
numpy/core/tests/test_indexerrors.py:64:        assert_raises(IndexError, lambda: a[0, 0, None, 2])
numpy/core/tests/test_indexerrors.py:65:        assert_raises(IndexError, lambda: assign(a, (0, 0, None, 2), 1))
numpy/core/tests/test_indexerrors.py:68:        assert_raises(IndexError, lambda: a.flat[10])
numpy/core/tests/test_indexerrors.py:69:        assert_raises(IndexError, lambda: assign(a.flat, 10, 5))
numpy/core/tests/test_indexerrors.py:71:        assert_raises(IndexError, lambda: a.flat[10])
numpy/core/tests/test_indexerrors.py:72:        assert_raises(IndexError, lambda: assign(a.flat, 10, 5))
numpy/core/tests/test_indexerrors.py:75:        assert_raises(IndexError, lambda: a.flat[np.array(10)])
numpy/core/tests/test_indexerrors.py:76:        assert_raises(IndexError, lambda: assign(a.flat, np.array(10), 5))
numpy/core/tests/test_indexerrors.py:78:        assert_raises(IndexError, lambda: a.flat[np.array(10)])
numpy/core/tests/test_indexerrors.py:79:        assert_raises(IndexError, lambda: assign(a.flat, np.array(10), 5))
numpy/core/tests/test_indexerrors.py:82:        assert_raises(IndexError, lambda: a.flat[np.array([10])])
numpy/core/tests/test_indexerrors.py:83:        assert_raises(IndexError, lambda: assign(a.flat, np.array([10]), 5))
numpy/core/tests/test_indexerrors.py:85:        assert_raises(IndexError, lambda: a.flat[np.array([10])])
numpy/core/tests/test_indexerrors.py:86:        assert_raises(IndexError, lambda: assign(a.flat, np.array([10]), 5))
numpy/core/tests/test_indexerrors.py:95:        assert_raises(IndexError, lambda: a[12])
numpy/core/tests/test_indexerrors.py:98:        assert_raises(IndexError, lambda: a[(10, 20)])
numpy/core/tests/test_indexerrors.py:99:        assert_raises(IndexError, lambda: assign(a, (10, 20), 1))
numpy/core/tests/test_indexerrors.py:101:        assert_raises(IndexError, lambda: a[(1, 0)])
numpy/core/tests/test_indexerrors.py:102:        assert_raises(IndexError, lambda: assign(a, (1, 0), 1))
numpy/core/tests/test_indexerrors.py:105:        assert_raises(IndexError, lambda: assign(a, 10, 1))
numpy/core/tests/test_indexerrors.py:107:        assert_raises(IndexError, lambda: assign(a, 10, 1))
numpy/core/tests/test_indexerrors.py:110:        assert_raises(IndexError, lambda: a[(1, [1, 20])])
numpy/core/tests/test_indexerrors.py:111:        assert_raises(IndexError, lambda: assign(a, (1, [1, 20]), 1))
numpy/core/tests/test_indexerrors.py:113:        assert_raises(IndexError, lambda: a[(1, [0, 1])])
numpy/core/tests/test_indexerrors.py:114:        assert_raises(IndexError, lambda: assign(a, (1, [0, 1]), 1))
numpy/core/tests/test_indexerrors.py:119:        assert_raises_regex(
numpy/core/tests/test_indexerrors.py:129:        assert_raises(IndexError, lambda: a.item(100))
numpy/core/tests/test_indexerrors.py:130:        assert_raises(IndexError, lambda: a.itemset(100, 1))
numpy/core/tests/test_indexerrors.py:132:        assert_raises(IndexError, lambda: a.item(100))
numpy/core/tests/test_indexerrors.py:133:        assert_raises(IndexError, lambda: a.itemset(100, 1))
numpy/core/tests/test_print.py:25:        assert_equal(str(tp(x)), str(float(x)),
numpy/core/tests/test_print.py:29:        assert_equal(str(tp(1e16)), str(float('1e16')),
numpy/core/tests/test_print.py:33:        assert_equal(str(tp(1e16)), ref,
numpy/core/tests/test_print.py:47:        assert_equal(str(tp(x)), _REF[x],
numpy/core/tests/test_print.py:61:        assert_equal(str(tp(x)), str(complex(x)),
numpy/core/tests/test_print.py:63:        assert_equal(str(tp(x*1j)), str(complex(x*1j)),
numpy/core/tests/test_print.py:65:        assert_equal(str(tp(x + x*1j)), str(complex(x + x*1j)),
numpy/core/tests/test_print.py:69:        assert_equal(str(tp(1e16)), str(complex(1e16)),
numpy/core/tests/test_print.py:73:        assert_equal(str(tp(1e16)), ref,
numpy/core/tests/test_print.py:99:        assert_equal(str(dtype(c)), s)
numpy/core/tests/test_print.py:118:    assert_equal(file.getvalue(), file_tp.getvalue(),
numpy/core/tests/test_print.py:179:            assert_equal(fmat.format(val), fmat.format(valtype(val)),
numpy/core/tests/test_print.py:194:        assert_equal(str(np.float32(1.2)), str(float(1.2)))
numpy/core/tests/test_print.py:197:        assert_equal(str(np.double(1.2)), str(float(1.2)))
numpy/core/tests/test_print.py:200:        assert_equal(str(np.longdouble('1.2')), str(float(1.2)))
numpy/core/tests/test_half.py:13:        assert_(str(exc).find(strmatch) >= 0,
numpy/core/tests/test_half.py:48:        assert_equal(self.all_f16.view(dtype=uint16),
numpy/core/tests/test_half.py:53:        assert_equal(self.all_f16.view(dtype=uint16),
numpy/core/tests/test_half.py:61:        assert_equal(self.nonan_f16.view(dtype=uint16),
numpy/core/tests/test_half.py:68:        assert_equal(i_int, j)
numpy/core/tests/test_half.py:74:        assert np.promote_types(np.float16, string_dt) == expected_dt
numpy/core/tests/test_half.py:75:        assert np.promote_types(string_dt, np.float16) == expected_dt
numpy/core/tests/test_half.py:78:        assert arr.dtype == expected_dt
numpy/core/tests/test_half.py:83:        assert string.astype(np.float16) == np.array(3.1416, dtype=np.float16)
numpy/core/tests/test_half.py:139:        assert_equal(res_patterns, cmp_patterns)
numpy/core/tests/test_half.py:150:        assert smallest_value == 2**-24
numpy/core/tests/test_half.py:154:        assert rounded_to_zero.astype(np.float16) == 0
numpy/core/tests/test_half.py:162:            assert larger_value.astype(np.float16) == smallest_value
numpy/core/tests/test_half.py:167:            assert_equal(np.isnan(self.all_f16), np.isnan(self.all_f32))
numpy/core/tests/test_half.py:168:            assert_equal(np.isinf(self.all_f16), np.isinf(self.all_f32))
numpy/core/tests/test_half.py:169:            assert_equal(np.isfinite(self.all_f16), np.isfinite(self.all_f32))
numpy/core/tests/test_half.py:170:            assert_equal(np.signbit(self.all_f16), np.signbit(self.all_f32))
numpy/core/tests/test_half.py:171:            assert_equal(np.spacing(float16(65504)), np.inf)
numpy/core/tests/test_half.py:176:            assert_(not (self.all_f16 == nan).any())
numpy/core/tests/test_half.py:177:            assert_(not (nan == self.all_f16).any())
numpy/core/tests/test_half.py:179:            assert_((self.all_f16 != nan).all())
numpy/core/tests/test_half.py:180:            assert_((nan != self.all_f16).all())
numpy/core/tests/test_half.py:182:            assert_(not (self.all_f16 < nan).any())
numpy/core/tests/test_half.py:183:            assert_(not (nan < self.all_f16).any())
numpy/core/tests/test_half.py:185:            assert_(not (self.all_f16 <= nan).any())
numpy/core/tests/test_half.py:186:            assert_(not (nan <= self.all_f16).any())
numpy/core/tests/test_half.py:188:            assert_(not (self.all_f16 > nan).any())
numpy/core/tests/test_half.py:189:            assert_(not (nan > self.all_f16).any())
numpy/core/tests/test_half.py:191:            assert_(not (self.all_f16 >= nan).any())
numpy/core/tests/test_half.py:192:            assert_(not (nan >= self.all_f16).any())
numpy/core/tests/test_half.py:213:        assert_equal(a, b)
numpy/core/tests/test_half.py:237:        assert_equal(b, rounded)
numpy/core/tests/test_half.py:242:        assert_equal(b, rounded)
numpy/core/tests/test_half.py:292:        assert_equal(a, b)
numpy/core/tests/test_half.py:295:        assert_((a[:-1] <= a[1:]).all())
numpy/core/tests/test_half.py:296:        assert_(not (a[:-1] > a[1:]).any())
numpy/core/tests/test_half.py:297:        assert_((a[1:] >= a[:-1]).all())
numpy/core/tests/test_half.py:298:        assert_(not (a[1:] < a[:-1]).any())
numpy/core/tests/test_half.py:300:        assert_equal(np.nonzero(a[:-1] < a[1:])[0].size, a.size-2)
numpy/core/tests/test_half.py:301:        assert_equal(np.nonzero(a[1:] > a[:-1])[0].size, a.size-2)
numpy/core/tests/test_half.py:307:        assert_equal(np.arange(10, dtype=float16),
numpy/core/tests/test_half.py:313:        assert_equal(a, np.ones((5,), dtype=float16))
numpy/core/tests/test_half.py:317:        assert_equal(a.nonzero()[0],
numpy/core/tests/test_half.py:320:        assert_equal(a.nonzero()[0],
numpy/core/tests/test_half.py:326:        assert_equal(np.dot(a, b),
numpy/core/tests/test_half.py:331:        assert_equal(a.argmax(),
numpy/core/tests/test_half.py:334:        assert_equal(a.argmax(),
numpy/core/tests/test_half.py:340:            assert_equal(a.item(i), i)
numpy/core/tests/test_half.py:350:        assert_equal(np.spacing(a_f16[:-1]), a_f16[1:]-a_f16[:-1])
numpy/core/tests/test_half.py:352:        assert_equal(np.nextafter(a_f16[:-1], hinf), a_f16[1:])
numpy/core/tests/test_half.py:353:        assert_equal(np.nextafter(a_f16[0], -hinf), -a_f16[1])
numpy/core/tests/test_half.py:354:        assert_equal(np.nextafter(a_f16[1:], -hinf), a_f16[:-1])
numpy/core/tests/test_half.py:356:        assert_equal(np.nextafter(hinf, a_f16), a_f16[-1])
numpy/core/tests/test_half.py:357:        assert_equal(np.nextafter(-hinf, a_f16), -a_f16[-1])
numpy/core/tests/test_half.py:359:        assert_equal(np.nextafter(hinf, hinf), hinf)
numpy/core/tests/test_half.py:360:        assert_equal(np.nextafter(hinf, -hinf), a_f16[-1])
numpy/core/tests/test_half.py:361:        assert_equal(np.nextafter(-hinf, hinf), -a_f16[-1])
numpy/core/tests/test_half.py:362:        assert_equal(np.nextafter(-hinf, -hinf), -hinf)
numpy/core/tests/test_half.py:364:        assert_equal(np.nextafter(a_f16, hnan), hnan[0])
numpy/core/tests/test_half.py:365:        assert_equal(np.nextafter(hnan, a_f16), hnan[0])
numpy/core/tests/test_half.py:367:        assert_equal(np.nextafter(hnan, hnan), hnan)
numpy/core/tests/test_half.py:368:        assert_equal(np.nextafter(hinf, hnan), hnan)
numpy/core/tests/test_half.py:369:        assert_equal(np.nextafter(hnan, hinf), hnan)
numpy/core/tests/test_half.py:374:        assert_equal(np.spacing(a_f16[0]), np.spacing(a_f16[1]))
numpy/core/tests/test_half.py:375:        assert_equal(np.spacing(a_f16[1:]), a_f16[:-1]-a_f16[1:])
numpy/core/tests/test_half.py:377:        assert_equal(np.nextafter(a_f16[0], hinf), -a_f16[1])
numpy/core/tests/test_half.py:378:        assert_equal(np.nextafter(a_f16[1:], hinf), a_f16[:-1])
numpy/core/tests/test_half.py:379:        assert_equal(np.nextafter(a_f16[:-1], -hinf), a_f16[1:])
numpy/core/tests/test_half.py:381:        assert_equal(np.nextafter(hinf, a_f16), -a_f16[-1])
numpy/core/tests/test_half.py:382:        assert_equal(np.nextafter(-hinf, a_f16), a_f16[-1])
numpy/core/tests/test_half.py:384:        assert_equal(np.nextafter(a_f16, hnan), hnan[0])
numpy/core/tests/test_half.py:385:        assert_equal(np.nextafter(hnan, a_f16), hnan[0])
numpy/core/tests/test_half.py:394:        assert_equal(np.add(a, b), [-2, 6, 3, 8, 5])
numpy/core/tests/test_half.py:395:        assert_equal(np.subtract(a, b), [2, -4, 1, 0, -1])
numpy/core/tests/test_half.py:396:        assert_equal(np.multiply(a, b), [0, 5, 2, 16, 6])
numpy/core/tests/test_half.py:397:        assert_equal(np.divide(a, b), [0, 0.199951171875, 2, 1, 0.66650390625])
numpy/core/tests/test_half.py:399:        assert_equal(np.equal(a, b), [False, False, False, True, False])
numpy/core/tests/test_half.py:400:        assert_equal(np.not_equal(a, b), [True, True, True, False, True])
numpy/core/tests/test_half.py:401:        assert_equal(np.less(a, b), [False, True, False, False, True])
numpy/core/tests/test_half.py:402:        assert_equal(np.less_equal(a, b), [False, True, False, True, True])
numpy/core/tests/test_half.py:403:        assert_equal(np.greater(a, b), [True, False, True, False, False])
numpy/core/tests/test_half.py:404:        assert_equal(np.greater_equal(a, b), [True, False, True, True, False])
numpy/core/tests/test_half.py:405:        assert_equal(np.logical_and(a, b), [False, True, True, True, True])
numpy/core/tests/test_half.py:406:        assert_equal(np.logical_or(a, b), [True, True, True, True, True])
numpy/core/tests/test_half.py:407:        assert_equal(np.logical_xor(a, b), [True, False, False, False, False])
numpy/core/tests/test_half.py:408:        assert_equal(np.logical_not(a), [True, False, False, False, False])
numpy/core/tests/test_half.py:410:        assert_equal(np.isnan(c), [False, False, False, True, False])
numpy/core/tests/test_half.py:411:        assert_equal(np.isinf(c), [False, False, True, False, False])
numpy/core/tests/test_half.py:412:        assert_equal(np.isfinite(c), [True, True, False, False, True])
numpy/core/tests/test_half.py:413:        assert_equal(np.signbit(b), [True, False, False, False, False])
numpy/core/tests/test_half.py:415:        assert_equal(np.copysign(b, a), [2, 5, 1, 4, 3])
numpy/core/tests/test_half.py:417:        assert_equal(np.maximum(a, b), [0, 5, 2, 4, 3])
numpy/core/tests/test_half.py:420:        assert_(np.isnan(x[3]))
numpy/core/tests/test_half.py:422:        assert_equal(x, [0, 5, 1, 0, 6])
numpy/core/tests/test_half.py:424:        assert_equal(np.minimum(a, b), [-2, 1, 1, 4, 2])
numpy/core/tests/test_half.py:427:        assert_(np.isnan(x[3]))
numpy/core/tests/test_half.py:429:        assert_equal(x, [-2, -1, -np.inf, 0, 3])
numpy/core/tests/test_half.py:431:        assert_equal(np.fmax(a, b), [0, 5, 2, 4, 3])
numpy/core/tests/test_half.py:432:        assert_equal(np.fmax(b, c), [0, 5, 1, 4, 6])
numpy/core/tests/test_half.py:433:        assert_equal(np.fmin(a, b), [-2, 1, 1, 4, 2])
numpy/core/tests/test_half.py:434:        assert_equal(np.fmin(b, c), [-2, -1, -np.inf, 4, 3])
numpy/core/tests/test_half.py:436:        assert_equal(np.floor_divide(a, b), [0, 0, 2, 1, 0])
numpy/core/tests/test_half.py:437:        assert_equal(np.remainder(a, b), [0, 1, 0, 0, 2])
numpy/core/tests/test_half.py:438:        assert_equal(np.divmod(a, b), ([0, 0, 2, 1, 0], [0, 1, 0, 0, 2]))
numpy/core/tests/test_half.py:439:        assert_equal(np.square(b), [4, 25, 1, 16, 9])
numpy/core/tests/test_half.py:440:        assert_equal(np.reciprocal(b), [-0.5, 0.199951171875, 1, 0.25, 0.333251953125])
numpy/core/tests/test_half.py:441:        assert_equal(np.ones_like(b), [1, 1, 1, 1, 1])
numpy/core/tests/test_half.py:442:        assert_equal(np.conjugate(b), b)
numpy/core/tests/test_half.py:443:        assert_equal(np.absolute(b), [2, 5, 1, 4, 3])
numpy/core/tests/test_half.py:444:        assert_equal(np.negative(b), [2, -5, -1, -4, -3])
numpy/core/tests/test_half.py:445:        assert_equal(np.positive(b), b)
numpy/core/tests/test_half.py:446:        assert_equal(np.sign(b), [-1, 1, 1, 1, 1])
numpy/core/tests/test_half.py:447:        assert_equal(np.modf(b), ([0, 0, 0, 0, 0], b))
numpy/core/tests/test_half.py:448:        assert_equal(np.frexp(b), ([-0.5, 0.625, 0.5, 0.5, 0.75], [2, 3, 1, 3, 2]))
numpy/core/tests/test_half.py:449:        assert_equal(np.ldexp(b, [0, 1, 2, 4, 2]), [-2, 10, 4, 64, 12])
numpy/core/tests/test_half.py:458:        assert_equal(np.power(a16, 2).dtype, float16)
numpy/core/tests/test_half.py:459:        assert_equal(np.power(a16, 2.0).dtype, float16)
numpy/core/tests/test_half.py:460:        assert_equal(np.power(a16, b16).dtype, float16)
numpy/core/tests/test_half.py:461:        assert_equal(np.power(a16, b32).dtype, float16)
numpy/core/tests/test_half.py:462:        assert_equal(np.power(a16, a16).dtype, float16)
numpy/core/tests/test_half.py:463:        assert_equal(np.power(a16, a32).dtype, float32)
numpy/core/tests/test_half.py:465:        assert_equal(np.power(b16, 2).dtype, float64)
numpy/core/tests/test_half.py:466:        assert_equal(np.power(b16, 2.0).dtype, float64)
numpy/core/tests/test_half.py:467:        assert_equal(np.power(b16, b16).dtype, float16)
numpy/core/tests/test_half.py:468:        assert_equal(np.power(b16, b32).dtype, float32)
numpy/core/tests/test_half.py:469:        assert_equal(np.power(b16, a16).dtype, float16)
numpy/core/tests/test_half.py:470:        assert_equal(np.power(b16, a32).dtype, float32)
numpy/core/tests/test_half.py:472:        assert_equal(np.power(a32, a16).dtype, float32)
numpy/core/tests/test_half.py:473:        assert_equal(np.power(a32, b16).dtype, float32)
numpy/core/tests/test_half.py:474:        assert_equal(np.power(b32, a16).dtype, float16)
numpy/core/tests/test_half.py:475:        assert_equal(np.power(b32, b16).dtype, float32)
numpy/core/tests/test_half.py:487:            assert_raises_fpe('underflow', lambda a, b:a*b, sx16, sx16)
numpy/core/tests/test_half.py:488:            assert_raises_fpe('underflow', lambda a, b:a*b, sx16, sy16)
numpy/core/tests/test_half.py:489:            assert_raises_fpe('underflow', lambda a, b:a*b, sy16, sx16)
numpy/core/tests/test_half.py:490:            assert_raises_fpe('underflow', lambda a, b:a*b, sy16, sy16)
numpy/core/tests/test_half.py:491:            assert_raises_fpe('underflow', lambda a, b:a/b, sx16, bx16)
numpy/core/tests/test_half.py:492:            assert_raises_fpe('underflow', lambda a, b:a/b, sx16, by16)
numpy/core/tests/test_half.py:493:            assert_raises_fpe('underflow', lambda a, b:a/b, sy16, bx16)
numpy/core/tests/test_half.py:494:            assert_raises_fpe('underflow', lambda a, b:a/b, sy16, by16)
numpy/core/tests/test_half.py:495:            assert_raises_fpe('underflow', lambda a, b:a/b,
numpy/core/tests/test_half.py:497:            assert_raises_fpe('underflow', lambda a, b:a/b,
numpy/core/tests/test_half.py:499:            assert_raises_fpe('underflow', lambda a, b:a/b,
numpy/core/tests/test_half.py:501:            assert_raises_fpe('underflow', lambda a, b:a/b,
numpy/core/tests/test_half.py:503:            assert_raises_fpe('underflow', lambda a, b:a/b,
numpy/core/tests/test_half.py:507:            assert_raises_fpe('overflow', lambda a, b:a*b, bx16, bx16)
numpy/core/tests/test_half.py:508:            assert_raises_fpe('overflow', lambda a, b:a*b, bx16, by16)
numpy/core/tests/test_half.py:509:            assert_raises_fpe('overflow', lambda a, b:a*b, by16, bx16)
numpy/core/tests/test_half.py:510:            assert_raises_fpe('overflow', lambda a, b:a*b, by16, by16)
numpy/core/tests/test_half.py:511:            assert_raises_fpe('overflow', lambda a, b:a/b, bx16, sx16)
numpy/core/tests/test_half.py:512:            assert_raises_fpe('overflow', lambda a, b:a/b, bx16, sy16)
numpy/core/tests/test_half.py:513:            assert_raises_fpe('overflow', lambda a, b:a/b, by16, sx16)
numpy/core/tests/test_half.py:514:            assert_raises_fpe('overflow', lambda a, b:a/b, by16, sy16)
numpy/core/tests/test_half.py:515:            assert_raises_fpe('overflow', lambda a, b:a+b,
numpy/core/tests/test_half.py:517:            assert_raises_fpe('overflow', lambda a, b:a-b,
numpy/core/tests/test_half.py:519:            assert_raises_fpe('overflow', np.nextafter, float16(65504), float16(np.inf))
numpy/core/tests/test_half.py:520:            assert_raises_fpe('overflow', np.nextafter, float16(-65504), float16(-np.inf))
numpy/core/tests/test_half.py:521:            assert_raises_fpe('overflow', np.spacing, float16(65504))
numpy/core/tests/test_half.py:524:            assert_raises_fpe('invalid', np.divide, float16(np.inf), float16(np.inf))
numpy/core/tests/test_half.py:525:            assert_raises_fpe('invalid', np.spacing, float16(np.inf))
numpy/core/tests/test_half.py:526:            assert_raises_fpe('invalid', np.spacing, float16(np.nan))
numpy/core/tests/test_half.py:553:        assert_(c.dtype == float16)
numpy/core/tests/test_half.py:554:        assert_equal(a, c)
numpy/core/tests/test_arraymethod.py:73:        assert isinstance(alias, types.GenericAlias)
numpy/core/tests/test_arraymethod.py:74:        assert alias.__origin__ is cls
numpy/core/tests/test_arraymethod.py:80:            assert np.ndarray[arg_tup]
numpy/core/tests/test_mem_overlap.py:65:    assert_(np.all(arr == cpy),
numpy/core/tests/test_mem_overlap.py:118:                assert_(X_simplified is None, (A, U, b, X_simplified))
numpy/core/tests/test_mem_overlap.py:129:                    assert_(not any(sum(w) == b for w in itertools.product(*ranges)))
numpy/core/tests/test_mem_overlap.py:134:                assert_(X_simplified is not None, (A, U, b, X_simplified))
numpy/core/tests/test_mem_overlap.py:137:                assert_(sum(a*x for a, x in zip(A, X)) == b)
numpy/core/tests/test_mem_overlap.py:138:                assert_(all(0 <= x <= ub for x, ub in zip(X, U)))
numpy/core/tests/test_mem_overlap.py:154:        assert_equal(solve_diophantine(A, U, b), (1, 1))
numpy/core/tests/test_mem_overlap.py:160:    assert_equal(np.may_share_memory(a, b),
numpy/core/tests/test_mem_overlap.py:180:    assert_equal(got, exact, err_msg=err_msg)
numpy/core/tests/test_mem_overlap.py:201:        assert_(np.may_share_memory(x[:,0,:], x[:,1,:]))
numpy/core/tests/test_mem_overlap.py:202:        assert_(np.may_share_memory(x[:,0,:], x[:,1,:], max_work=None))
numpy/core/tests/test_mem_overlap.py:341:            # assert_equal is slow...
numpy/core/tests/test_mem_overlap.py:342:            assert_equal(easy_answer, exact_answer)
numpy/core/tests/test_mem_overlap.py:345:            assert_equal(may_share_answer, bounds_overlap)
numpy/core/tests/test_mem_overlap.py:381:    assert_equal(np.shares_memory(x, x), True)
numpy/core/tests/test_mem_overlap.py:382:    assert_equal(np.shares_memory(x, x.copy()), False)
numpy/core/tests/test_mem_overlap.py:386:    assert_equal(np.shares_memory(a, b), True)
numpy/core/tests/test_mem_overlap.py:387:    assert_equal(np.shares_memory(a, b, max_work=None), True)
numpy/core/tests/test_mem_overlap.py:388:    assert_raises(np.TooHardError, np.shares_memory, a, b, max_work=1)
numpy/core/tests/test_mem_overlap.py:393:    assert_raises(OverflowError, np.may_share_memory, x, x, max_work=10**100)
numpy/core/tests/test_mem_overlap.py:394:    assert_raises(OverflowError, np.shares_memory, x, x, max_work=10**100)
numpy/core/tests/test_mem_overlap.py:405:            assert_(sum(a*x for a, x in zip(A, X)) == sum(a*u//2 for a, u in zip(A, U)))
numpy/core/tests/test_mem_overlap.py:406:            assert_(all(0 <= x <= u for x, u in zip(X, U)))
numpy/core/tests/test_mem_overlap.py:407:            assert_(any(x != u//2 for x, u in zip(X, U)))
numpy/core/tests/test_mem_overlap.py:410:            assert_(X is not None, repr(X))
numpy/core/tests/test_mem_overlap.py:412:            assert_(X is None, repr(X))
numpy/core/tests/test_mem_overlap.py:446:        assert_(not internal_overlap(a))
numpy/core/tests/test_mem_overlap.py:468:        assert_equal(got, expected, err_msg=repr((a.strides, a.shape)))
numpy/core/tests/test_mem_overlap.py:470:        assert_equal(expected, manual_expected)
numpy/core/tests/test_mem_overlap.py:560:        assert_(np.may_share_memory(cls(x[::2]), x[1::2]))
numpy/core/tests/test_mem_overlap.py:561:        assert_(not np.shares_memory(cls(x[::2]), x[1::2]))
numpy/core/tests/test_mem_overlap.py:563:        assert_(np.shares_memory(cls(x[1::3]), x[::2]))
numpy/core/tests/test_mem_overlap.py:564:        assert_(np.may_share_memory(cls(x[1::3]), x[::2]))
numpy/core/tests/test_mem_overlap.py:594:        assert_equal(got, expected)
numpy/core/tests/test_mem_overlap.py:623:                    assert_copy_equivalent(operation, [a], out=b)
numpy/core/tests/test_mem_overlap.py:652:                                assert b.shape[axis] >= outsize
numpy/core/tests/test_mem_overlap.py:663:                        assert_copy_equivalent(operation, [a], out=b_out, axis=axis)
numpy/core/tests/test_mem_overlap.py:721:            assert_array_equal(c1, c2)
numpy/core/tests/test_mem_overlap.py:773:                    assert_copy_equivalent(gufunc, [a], out=b)
numpy/core/tests/test_mem_overlap.py:788:            assert_array_equal(c1, c2)
numpy/core/tests/test_mem_overlap.py:809:            assert_array_equal(c1, c2)
numpy/core/tests/test_mem_overlap.py:827:            assert_array_equal(c1, c2)
numpy/core/tests/test_mem_overlap.py:828:            assert_array_equal(c1, c3)
numpy/core/tests/test_mem_overlap.py:874:            assert_array_equal(c1, c2)
numpy/core/tests/test_mem_overlap.py:890:            assert_array_equal(c1, c2)
numpy/core/tests/test_mem_overlap.py:931:        assert_array_equal(x - x.T, 0)
numpy/core/tests/test_shape_base.py:21:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:28:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:35:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:44:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:49:        assert_(atleast_1d(3).shape == (1,))
numpy/core/tests/test_shape_base.py:50:        assert_(atleast_1d(3j).shape == (1,))
numpy/core/tests/test_shape_base.py:51:        assert_(atleast_1d(3.0).shape == (1,))
numpy/core/tests/test_shape_base.py:52:        assert_(atleast_1d([[2, 3], [4, 5]]).shape == (2, 2))
numpy/core/tests/test_shape_base.py:61:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:68:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:75:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:84:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:89:        assert_(atleast_2d(3).shape == (1, 1))
numpy/core/tests/test_shape_base.py:90:        assert_(atleast_2d([3j, 1]).shape == (1, 2))
numpy/core/tests/test_shape_base.py:91:        assert_(atleast_2d([[[3, 1], [4, 5]], [[3, 5], [1, 2]]]).shape == (2, 2, 2))
numpy/core/tests/test_shape_base.py:100:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:107:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:114:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:123:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:128:        assert_raises(TypeError, hstack, 1)
numpy/core/tests/test_shape_base.py:131:        assert_raises(ValueError, hstack, ())
numpy/core/tests/test_shape_base.py:138:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:145:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:152:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:163:        assert_raises(TypeError, vstack, 1)
numpy/core/tests/test_shape_base.py:166:        assert_raises(ValueError, vstack, ())
numpy/core/tests/test_shape_base.py:173:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:180:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:187:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:194:        assert_array_equal(res, desired)
numpy/core/tests/test_shape_base.py:206:        assert b[0, 0] != a[0, 0]
numpy/core/tests/test_shape_base.py:213:            assert_raises(np.AxisError, np.concatenate, (a, a), axis=ndim)
numpy/core/tests/test_shape_base.py:214:            assert_raises(np.AxisError, np.concatenate, (a, a), axis=-(ndim + 1))
numpy/core/tests/test_shape_base.py:217:        assert_raises(ValueError, concatenate, (0,))
numpy/core/tests/test_shape_base.py:218:        assert_raises(ValueError, concatenate, (np.array(0),))
numpy/core/tests/test_shape_base.py:221:        assert_raises_regex(
numpy/core/tests/test_shape_base.py:234:            assert_raises_regex(
numpy/core/tests/test_shape_base.py:241:            assert_raises(ValueError, np.concatenate, (a, b), axis=axis[2])
numpy/core/tests/test_shape_base.py:247:        assert_raises(ValueError, concatenate, ())
numpy/core/tests/test_shape_base.py:254:        assert_equal(r.dtype, a.dtype)
numpy/core/tests/test_shape_base.py:255:        assert_equal(r.ndim, 1)
numpy/core/tests/test_shape_base.py:257:        assert_equal(r.size, a.size + len(b))
numpy/core/tests/test_shape_base.py:258:        assert_equal(r.dtype, a.dtype)
numpy/core/tests/test_shape_base.py:262:        assert_array_equal(r, d)
numpy/core/tests/test_shape_base.py:267:        assert_(out is rout)
numpy/core/tests/test_shape_base.py:268:        assert_equal(r, rout)
numpy/core/tests/test_shape_base.py:275:        assert_array_equal(x, r)
numpy/core/tests/test_shape_base.py:279:        assert_array_equal(x, r)
numpy/core/tests/test_shape_base.py:285:        assert_array_equal(concatenate((r4,)), r4)
numpy/core/tests/test_shape_base.py:287:        assert_array_equal(concatenate((tuple(r4),)), r4)
numpy/core/tests/test_shape_base.py:288:        assert_array_equal(concatenate((array(r4),)), r4)
numpy/core/tests/test_shape_base.py:291:        assert_array_equal(concatenate((r4, r3)), r4 + r3)
numpy/core/tests/test_shape_base.py:293:        assert_array_equal(concatenate((tuple(r4), r3)), r4 + r3)
numpy/core/tests/test_shape_base.py:294:        assert_array_equal(concatenate((array(r4), r3)), r4 + r3)
numpy/core/tests/test_shape_base.py:296:        assert_array_equal(concatenate((r4, r3), 0), r4 + r3)
numpy/core/tests/test_shape_base.py:298:        assert_array_equal(concatenate((r4, r3), -1), r4 + r3)
numpy/core/tests/test_shape_base.py:303:        assert_array_equal(concatenate((a23, a13)), res)
numpy/core/tests/test_shape_base.py:304:        assert_array_equal(concatenate((a23, a13), 0), res)
numpy/core/tests/test_shape_base.py:305:        assert_array_equal(concatenate((a23.T, a13.T), 1), res.T)
numpy/core/tests/test_shape_base.py:306:        assert_array_equal(concatenate((a23.T, a13.T), -1), res.T)
numpy/core/tests/test_shape_base.py:308:        assert_raises(ValueError, concatenate, (a23.T, a13.T), 0)
numpy/core/tests/test_shape_base.py:314:        assert_array_equal(concatenate((a0, a1, a2), 2), res)
numpy/core/tests/test_shape_base.py:315:        assert_array_equal(concatenate((a0, a1, a2), -1), res)
numpy/core/tests/test_shape_base.py:316:        assert_array_equal(concatenate((a0.T, a1.T, a2.T), 0), res.T)
numpy/core/tests/test_shape_base.py:320:        assert_(out is rout)
numpy/core/tests/test_shape_base.py:321:        assert_equal(res, rout)
numpy/core/tests/test_shape_base.py:330:        assert_raises(TypeError, operator.concat, a, b)
numpy/core/tests/test_shape_base.py:331:        assert_raises(TypeError, operator.concat, a, n)
numpy/core/tests/test_shape_base.py:332:        assert_raises(TypeError, operator.concat, n, a)
numpy/core/tests/test_shape_base.py:333:        assert_raises(TypeError, operator.concat, a, 1)
numpy/core/tests/test_shape_base.py:334:        assert_raises(TypeError, operator.concat, 1, a)
numpy/core/tests/test_shape_base.py:340:        assert_raises(ValueError, concatenate, (a, b), out=np.empty(5))
numpy/core/tests/test_shape_base.py:341:        assert_raises(ValueError, concatenate, (a, b), out=np.empty((4,1)))
numpy/core/tests/test_shape_base.py:342:        assert_raises(ValueError, concatenate, (a, b), out=np.empty((1,4)))
numpy/core/tests/test_shape_base.py:365:            assert res_out is out
numpy/core/tests/test_shape_base.py:366:            assert_array_equal(out, res_dtype)
numpy/core/tests/test_shape_base.py:367:            assert res_dtype.dtype == out_dtype
numpy/core/tests/test_shape_base.py:381:        assert res.dtype == np.array(1.).astype(string_dt).dtype
numpy/core/tests/test_shape_base.py:398:    assert_raises(TypeError, stack, 1)
numpy/core/tests/test_shape_base.py:404:        assert_array_equal(stack(input_), [1, 2, 3])
numpy/core/tests/test_shape_base.py:409:    assert_array_equal(np.stack((a, b)), r1)
numpy/core/tests/test_shape_base.py:410:    assert_array_equal(np.stack((a, b), axis=1), r1.T)
numpy/core/tests/test_shape_base.py:412:    assert_array_equal(np.stack(list([a, b])), r1)
numpy/core/tests/test_shape_base.py:413:    assert_array_equal(np.stack(array([a, b])), r1)
numpy/core/tests/test_shape_base.py:419:        assert_equal(np.stack(arrays, axis).shape, expected_shape)
numpy/core/tests/test_shape_base.py:420:    assert_raises_regex(np.AxisError, 'out of bounds', stack, arrays, axis=2)
numpy/core/tests/test_shape_base.py:421:    assert_raises_regex(np.AxisError, 'out of bounds', stack, arrays, axis=-3)
numpy/core/tests/test_shape_base.py:428:        assert_equal(np.stack(arrays, axis).shape, expected_shape)
numpy/core/tests/test_shape_base.py:430:    assert_(stack([[], [], []]).shape == (3, 0))
numpy/core/tests/test_shape_base.py:431:    assert_(stack([[], [], []], axis=1).shape == (0, 3))
numpy/core/tests/test_shape_base.py:435:    assert_array_equal(out, r1)
numpy/core/tests/test_shape_base.py:437:    assert_raises_regex(ValueError, 'need at least one array', stack, [])
numpy/core/tests/test_shape_base.py:438:    assert_raises_regex(ValueError, 'must have the same shape',
numpy/core/tests/test_shape_base.py:440:    assert_raises_regex(ValueError, 'must have the same shape',
numpy/core/tests/test_shape_base.py:442:    assert_raises_regex(ValueError, 'must have the same shape',
numpy/core/tests/test_shape_base.py:444:    assert_raises_regex(ValueError, 'must have the same shape',
numpy/core/tests/test_shape_base.py:446:    assert_raises_regex(ValueError, 'must have the same shape',
numpy/core/tests/test_shape_base.py:451:    assert_array_equal(result, np.array([0, 1, 2]))
numpy/core/tests/test_shape_base.py:485:        assert b[0, 0] != a[0, 0]
numpy/core/tests/test_shape_base.py:489:        assert total_size == 1
numpy/core/tests/test_shape_base.py:492:        assert total_size == 1
numpy/core/tests/test_shape_base.py:495:        assert total_size == 2
numpy/core/tests/test_shape_base.py:498:        assert total_size == 2
numpy/core/tests/test_shape_base.py:501:        assert total_size == 4
numpy/core/tests/test_shape_base.py:509:        assert_equal(desired, result)
numpy/core/tests/test_shape_base.py:519:        assert_equal(expected, result)
numpy/core/tests/test_shape_base.py:527:        assert_equal(expected, result)
numpy/core/tests/test_shape_base.py:535:        assert_equal(expected, result)
numpy/core/tests/test_shape_base.py:544:        assert_equal(expected, result)
numpy/core/tests/test_shape_base.py:553:        assert_equal(expected, result)
numpy/core/tests/test_shape_base.py:577:        assert_equal(result, expected)
numpy/core/tests/test_shape_base.py:607:        assert_equal(result, expected)
numpy/core/tests/test_shape_base.py:662:        assert_array_equal(result, expected)
numpy/core/tests/test_shape_base.py:667:        assert_raises(ValueError, block, [a, b])
numpy/core/tests/test_shape_base.py:668:        assert_raises(ValueError, block, [b, a])
numpy/core/tests/test_shape_base.py:672:        assert_raises(ValueError, block, to_block)
numpy/core/tests/test_shape_base.py:674:        assert_equal(block(1),         np.array(1))
numpy/core/tests/test_shape_base.py:675:        assert_equal(block(np.eye(3)), np.eye(3))
numpy/core/tests/test_shape_base.py:679:        assert_raises_regex(ValueError, msg, block, [1, [2]])
numpy/core/tests/test_shape_base.py:680:        assert_raises_regex(ValueError, msg, block, [1, []])
numpy/core/tests/test_shape_base.py:681:        assert_raises_regex(ValueError, msg, block, [[1], 2])
numpy/core/tests/test_shape_base.py:682:        assert_raises_regex(ValueError, msg, block, [[], 2])
numpy/core/tests/test_shape_base.py:683:        assert_raises_regex(ValueError, msg, block, [
numpy/core/tests/test_shape_base.py:690:        assert_raises_regex(ValueError, 'empty', block, [])
numpy/core/tests/test_shape_base.py:691:        assert_raises_regex(ValueError, 'empty', block, [[]])
numpy/core/tests/test_shape_base.py:692:        assert_raises_regex(ValueError, 'empty', block, [[1], []])
numpy/core/tests/test_shape_base.py:695:        assert_raises_regex(TypeError, 'tuple', block, ([1, 2], [3, 4]))
numpy/core/tests/test_shape_base.py:696:        assert_raises_regex(TypeError, 'tuple', block, [(1, 2), (3, 4)])
numpy/core/tests/test_shape_base.py:706:        assert_equal(result, expected)
numpy/core/tests/test_shape_base.py:718:        assert_equal(result, expected)
numpy/core/tests/test_shape_base.py:735:        assert block(b_c).flags['C_CONTIGUOUS']
numpy/core/tests/test_shape_base.py:736:        assert block(b_f).flags['F_CONTIGUOUS']
numpy/core/tests/test_shape_base.py:747:        assert block(b_c).flags['C_CONTIGUOUS']
numpy/core/tests/test_shape_base.py:748:        assert block(b_f).flags['F_CONTIGUOUS']
numpy/core/tests/test_shape_base.py:757:    assert_equal(list(_block_dispatcher(a)), [a])
numpy/core/tests/test_shape_base.py:758:    assert_equal(list(_block_dispatcher([a])), [a])
numpy/core/tests/test_shape_base.py:759:    assert_equal(list(_block_dispatcher([a, b])), [a, b])
numpy/core/tests/test_shape_base.py:760:    assert_equal(list(_block_dispatcher([[a], [b, [c]]])), [a, b, c])
numpy/core/tests/test_shape_base.py:762:    assert_equal(list(_block_dispatcher((a, b))), [(a, b)])
numpy/core/tests/test_hashtable.py:25:    assert res is expected
numpy/core/tests/test_array_interface.py:182:    assert np.allclose(arr, expected_value)
numpy/core/tests/test_array_interface.py:211:    assert np.allclose(arr, expected_value)
numpy/core/tests/test_deprecations.py:169:        assert_raises(ValueError, lambda x, y: x == y, a, b)
numpy/core/tests/test_deprecations.py:174:        assert_warns(FutureWarning, lambda: a == [])
numpy/core/tests/test_deprecations.py:185:        self.assert_deprecated(lambda: np.arange(2) == NotArray())
numpy/core/tests/test_deprecations.py:186:        self.assert_deprecated(lambda: np.arange(2) != NotArray())
numpy/core/tests/test_deprecations.py:191:        assert_warns(FutureWarning, lambda: struct1 == 1)
numpy/core/tests/test_deprecations.py:192:        assert_warns(FutureWarning, lambda: struct1 == struct2)
numpy/core/tests/test_deprecations.py:193:        assert_warns(FutureWarning, lambda: struct1 != 1)
numpy/core/tests/test_deprecations.py:194:        assert_warns(FutureWarning, lambda: struct1 != struct2)
numpy/core/tests/test_deprecations.py:198:        # the point of assert_deprecated is to check that when warnings are
numpy/core/tests/test_deprecations.py:203:        assert_warns(FutureWarning, lambda: np.arange(2) == "a")
numpy/core/tests/test_deprecations.py:204:        assert_warns(FutureWarning, lambda: np.arange(2) != "a")
numpy/core/tests/test_deprecations.py:208:            assert_(not (np.array(0) == "a"))
numpy/core/tests/test_deprecations.py:209:            assert_(np.array(0) != "a")
numpy/core/tests/test_deprecations.py:210:            assert_(not (np.int16(0) == "a"))
numpy/core/tests/test_deprecations.py:211:            assert_(np.int16(0) != "a")
numpy/core/tests/test_deprecations.py:219:                        assert_raises(TypeError, f, arg1, arg2)
numpy/core/tests/test_deprecations.py:220:                        assert_(not l)
numpy/core/tests/test_deprecations.py:338:        assert_(npy_char_deprecation() == 'S1')
numpy/core/tests/test_deprecations.py:344:        assert_raises(NotImplementedError, npy_pyarrayas1d_deprecation)
numpy/core/tests/test_deprecations.py:350:        assert_raises(NotImplementedError, npy_pyarrayas2d_deprecation)
numpy/core/tests/test_deprecations.py:429:                assert_array_equal(res, x)
numpy/core/tests/test_deprecations.py:449:            assert_array_equal(res[:-1], x)
numpy/core/tests/test_deprecations.py:456:            assert_array_equal(res, x)
numpy/core/tests/test_deprecations.py:468:        assert_raises(ValueError, np.set_numeric_ops, add='abc')
numpy/core/tests/test_deprecations.py:527:        assert s == b
numpy/core/tests/test_deprecations.py:705:        assert_array_equal(res, [[1, 2], [1, 2]])
numpy/core/tests/test_deprecations.py:711:        assert_array_equal(res, [[1, 2], [1, 2]])
numpy/core/tests/test_deprecations.py:716:        assert_array_equal(res, [[[1, 1], [2, 2]], [[1, 2], [1, 2]]])
numpy/core/tests/test_deprecations.py:768:        assert_array_equal(res, expected)
numpy/core/tests/test_deprecations.py:779:        assert_array_equal(res, blueprint)
numpy/core/tests/test_deprecations.py:796:        assert res.shape == (1, 1)
numpy/core/tests/test_deprecations.py:797:        assert res.dtype == "f4"
numpy/core/tests/test_deprecations.py:798:        assert res[0, 0] == 0.5
numpy/core/tests/test_deprecations.py:816:        assert res[0] is myarr
numpy/core/tests/test_deprecations.py:817:        assert res[1] is myarr
numpy/core/tests/test_deprecations.py:818:        assert res[2] is myarr
numpy/core/tests/test_deprecations.py:855:            assert_(slow_func.slow)
numpy/core/tests/test_deprecations.py:872:            assert_(f_default.__test__)
numpy/core/tests/test_deprecations.py:873:            assert_(f_istest.__test__)
numpy/core/tests/test_deprecations.py:874:            assert_(not f_isnottest.__test__)
numpy/core/tests/test_deprecations.py:1016:            assert_raises(AssertionError, non_deprecated_func)
numpy/core/tests/test_deprecations.py:1022:                assert_raises(ValueError, deprecated_func2)
numpy/core/tests/test_deprecations.py:1024:                assert_raises(AssertionError, deprecated_func3)
numpy/core/tests/test_deprecations.py:1037:                assert_(base**power == expected)
numpy/core/tests/test_deprecations.py:1043:            assert_(count == 3)
numpy/core/tests/test_deprecations.py:1106:        # it if the `assert int64 is not int64_2` should start failing.
numpy/core/tests/test_deprecations.py:1109:        assert int64 is not int64_2
numpy/core/tests/test_errstate.py:48:            assert_(np.geterrcall() is foo, 'call is not foo')
numpy/core/tests/test_errstate.py:50:                assert_(np.geterrcall() is None, 'call is not None')
numpy/core/tests/test_errstate.py:51:        assert_(np.geterrcall() is olderrcall, 'call is not olderrcall')
numpy/core/tests/test_records.py:20:        assert_equal(r[0].item(), (456, 'dbe', 1.2))
numpy/core/tests/test_records.py:21:        assert_equal(r['col1'].dtype.kind, 'i')
numpy/core/tests/test_records.py:22:        assert_equal(r['col2'].dtype.kind, 'U')
numpy/core/tests/test_records.py:23:        assert_equal(r['col2'].dtype.itemsize, 12)
numpy/core/tests/test_records.py:24:        assert_equal(r['col3'].dtype.kind, 'f')
numpy/core/tests/test_records.py:30:        assert_equal(r.shape, (0,))
numpy/core/tests/test_records.py:42:        assert_equal(r1['a'], expected_a)
numpy/core/tests/test_records.py:43:        assert_equal(r1['b'], expected_b)
numpy/core/tests/test_records.py:47:        assert_equal(r2['a'], expected_a)
numpy/core/tests/test_records.py:48:        assert_equal(r2['b'], expected_b)
numpy/core/tests/test_records.py:50:        assert_equal(r1, r2)
numpy/core/tests/test_records.py:54:        assert_equal(r[1].item(), (25444, b'efg', 1633837924))
numpy/core/tests/test_records.py:59:        assert_equal(r[1].item(), (2, 22.0, b'b'))
numpy/core/tests/test_records.py:64:        assert_equal(r[1::2][1].item(), (4, 44.0, b'd'))
numpy/core/tests/test_records.py:71:        assert_equal(r[1].item(), (2, 'dd', 2.0))
numpy/core/tests/test_records.py:73:        assert_equal(r.a, np.array([1, 2, 3, 4]))
numpy/core/tests/test_records.py:89:        assert_equal(r1, r2)
numpy/core/tests/test_records.py:90:        assert_equal(r2, r3)
numpy/core/tests/test_records.py:102:            assert_((mine.date[i] == list(range(1, 10))))
numpy/core/tests/test_records.py:103:            assert_((mine.data1[i] == 0.0))
numpy/core/tests/test_records.py:104:            assert_((mine.data2[i] == 0.0))
numpy/core/tests/test_records.py:119:        assert_(repr(np.rec.array(a)).startswith('rec.array'))
numpy/core/tests/test_records.py:123:        assert_equal(repr(a).find('numpy.record'), -1)
numpy/core/tests/test_records.py:125:        assert_(repr(a).find('dtype=int32') != -1)
numpy/core/tests/test_records.py:129:        assert_equal(repr(arr_0d), textwrap.dedent("""\
numpy/core/tests/test_records.py:134:        assert_equal(repr(record), "(1, 2., '2003')")
numpy/core/tests/test_records.py:138:            assert_equal(repr(record), '(1, 2.0, datetime.date(2003, 1, 1))')
numpy/core/tests/test_records.py:153:        assert_equal(type(recordarr_r), np.recarray)
numpy/core/tests/test_records.py:154:        assert_equal(recordarr_r.dtype.type, np.record)
numpy/core/tests/test_records.py:155:        assert_equal(recordarr, recordarr_r)
numpy/core/tests/test_records.py:157:        assert_equal(type(recarr_r), np.recarray)
numpy/core/tests/test_records.py:158:        assert_equal(recarr_r.dtype.type, np.record)
numpy/core/tests/test_records.py:159:        assert_equal(recarr, recarr_r)
numpy/core/tests/test_records.py:161:        assert_equal(type(recordview_r), np.ndarray)
numpy/core/tests/test_records.py:162:        assert_equal(recordview.dtype.type, np.record)
numpy/core/tests/test_records.py:163:        assert_equal(recordview, recordview_r)
numpy/core/tests/test_records.py:171:        assert_equal(np.rec.array(a).dtype.type, np.record)
numpy/core/tests/test_records.py:172:        assert_equal(type(np.rec.array(a)), np.recarray)
numpy/core/tests/test_records.py:173:        assert_equal(np.rec.array(b).dtype.type, np.int64)
numpy/core/tests/test_records.py:174:        assert_equal(type(np.rec.array(b)), np.recarray)
numpy/core/tests/test_records.py:177:        assert_equal(a.view(np.recarray).dtype.type, np.record)
numpy/core/tests/test_records.py:178:        assert_equal(type(a.view(np.recarray)), np.recarray)
numpy/core/tests/test_records.py:179:        assert_equal(b.view(np.recarray).dtype.type, np.int64)
numpy/core/tests/test_records.py:180:        assert_equal(type(b.view(np.recarray)), np.recarray)
numpy/core/tests/test_records.py:185:        assert_equal(type(rv), np.recarray)
numpy/core/tests/test_records.py:186:        assert_equal(rv.dtype.type, np.record)
numpy/core/tests/test_records.py:191:        assert_equal(r['c'].dtype.type, np.record)
numpy/core/tests/test_records.py:192:        assert_equal(type(r['c']), np.recarray)
numpy/core/tests/test_records.py:199:        assert_equal(type(c['c']), C)
numpy/core/tests/test_records.py:207:        assert_equal(r.a.dtype.type, np.record)
numpy/core/tests/test_records.py:208:        assert_equal(r.b.dtype.type, np.void)
numpy/core/tests/test_records.py:209:        assert_equal(r.c.dtype.type, np.float32)
numpy/core/tests/test_records.py:210:        assert_equal(r.d.dtype.type, np.int64)
numpy/core/tests/test_records.py:213:        assert_equal(r.view('f4,f4').dtype.type, np.record)
numpy/core/tests/test_records.py:214:        assert_equal(r.view(('i4',2)).dtype.type, np.int32)
numpy/core/tests/test_records.py:215:        assert_equal(r.view('V8').dtype.type, np.void)
numpy/core/tests/test_records.py:216:        assert_equal(r.view(('i8', 'i4,i4')).dtype.type, np.int64)
numpy/core/tests/test_records.py:224:            assert_equal(arr2.dtype.type, arr.dtype.type)
numpy/core/tests/test_records.py:225:            assert_equal(type(arr2), type(arr))
numpy/core/tests/test_records.py:238:        assert_(ra.dtype == pa.dtype)
numpy/core/tests/test_records.py:239:        assert_(ra.shape == pa.shape)
numpy/core/tests/test_records.py:241:            assert_(ra[k].item() == pa[k].item())
numpy/core/tests/test_records.py:248:        assert_array_almost_equal(ra['mean'], [1.1, 2.2, 3.3])
numpy/core/tests/test_records.py:249:        assert_(type(ra.mean) is type(ra.var))
numpy/core/tests/test_records.py:251:        assert_(ra.shape == (1, 3))
numpy/core/tests/test_records.py:253:        assert_array_equal(ra['shape'], [['A', 'B', 'C']])
numpy/core/tests/test_records.py:255:        assert_array_equal(ra['field'], [[5, 5, 5]])
numpy/core/tests/test_records.py:256:        assert_(isinstance(ra.field, collections.abc.Callable))
numpy/core/tests/test_records.py:261:        assert_equal(a.a, [1, 2])
numpy/core/tests/test_records.py:262:        assert_equal(a[0].a, 1)
numpy/core/tests/test_records.py:263:        assert_equal(a.b, ['a', 'bbb'])
numpy/core/tests/test_records.py:264:        assert_equal(a[-1].b, 'bbb')
numpy/core/tests/test_records.py:268:        assert_equal(a.a, [1, 2])
numpy/core/tests/test_records.py:269:        assert_equal(a[0].a, 1)
numpy/core/tests/test_records.py:270:        assert_equal(a.b, ['a', 'bbb'])
numpy/core/tests/test_records.py:271:        assert_equal(a[-1].b, 'bbb')
numpy/core/tests/test_records.py:278:        assert_equal(a.foo[0] == a.foo[1], False)
numpy/core/tests/test_records.py:287:        assert_equal(type(a.foo), np.ndarray)
numpy/core/tests/test_records.py:288:        assert_equal(type(a['foo']), np.ndarray)
numpy/core/tests/test_records.py:289:        assert_equal(type(a.bar), np.recarray)
numpy/core/tests/test_records.py:290:        assert_equal(type(a['bar']), np.recarray)
numpy/core/tests/test_records.py:291:        assert_equal(a.bar.dtype.type, np.record)
numpy/core/tests/test_records.py:292:        assert_equal(type(a['qux']), np.recarray)
numpy/core/tests/test_records.py:293:        assert_equal(a.qux.dtype.type, np.record)
numpy/core/tests/test_records.py:294:        assert_equal(dict(a.qux.dtype.fields), qux_fields)
numpy/core/tests/test_records.py:295:        assert_equal(type(a.baz), np.ndarray)
numpy/core/tests/test_records.py:296:        assert_equal(type(a['baz']), np.ndarray)
numpy/core/tests/test_records.py:297:        assert_equal(type(a[0].bar), np.record)
numpy/core/tests/test_records.py:298:        assert_equal(type(a[0]['bar']), np.record)
numpy/core/tests/test_records.py:299:        assert_equal(a[0].bar.A, 1)
numpy/core/tests/test_records.py:300:        assert_equal(a[0].bar['A'], 1)
numpy/core/tests/test_records.py:301:        assert_equal(a[0]['bar'].A, 1)
numpy/core/tests/test_records.py:302:        assert_equal(a[0]['bar']['A'], 1)
numpy/core/tests/test_records.py:303:        assert_equal(a[0].qux.D, b'fgehi')
numpy/core/tests/test_records.py:304:        assert_equal(a[0].qux['D'], b'fgehi')
numpy/core/tests/test_records.py:305:        assert_equal(a[0]['qux'].D, b'fgehi')
numpy/core/tests/test_records.py:306:        assert_equal(a[0]['qux']['D'], b'fgehi')
numpy/core/tests/test_records.py:313:        assert_equal(rec['f0'], ['test', 'test', 'test'])
numpy/core/tests/test_records.py:314:        assert_equal(rec['f1'], ['', '', ''])
numpy/core/tests/test_records.py:318:        assert_equal(rec.itemsize, 4)
numpy/core/tests/test_records.py:319:        assert_equal(rec['f0'], [b'test', b'test', b'test'])
numpy/core/tests/test_records.py:320:        assert_equal(rec['f1'], [b'', b'', b''])
numpy/core/tests/test_records.py:336:            assert_array_equal(x, a)
numpy/core/tests/test_records.py:348:        assert_equal(a.col1[0], 1)
numpy/core/tests/test_records.py:350:        assert_equal(a.col1[0], 0)
numpy/core/tests/test_records.py:354:        assert_equal(a.col1[0], 1)
numpy/core/tests/test_records.py:356:        assert_equal(a.col1[0], 0)
numpy/core/tests/test_records.py:364:        assert_raises(AttributeError, assign_invalid_column, a)
numpy/core/tests/test_records.py:378:        assert_equal(x.dtype.names, ('col1', 'col2'))
numpy/core/tests/test_records.py:385:        assert_equal(y.dtype.names, ('col2', 'col1'))
numpy/core/tests/test_records.py:386:        assert_raises(ValueError, lambda: y.dtype.descr)
numpy/core/tests/test_records.py:392:            assert_equal(a, pickle.loads(pickle.dumps(a, protocol=proto)))
numpy/core/tests/test_records.py:399:            assert_equal(a, pickle.loads(pickle.dumps(a, protocol=proto)))
numpy/core/tests/test_records.py:408:            assert_(pa.flags.c_contiguous)
numpy/core/tests/test_records.py:409:            assert_(pa.flags.f_contiguous)
numpy/core/tests/test_records.py:410:            assert_(pa.flags.writeable)
numpy/core/tests/test_records.py:411:            assert_(pa.flags.aligned)
numpy/core/tests/test_records.py:422:        assert ctor is np.core.multiarray.scalar
numpy/core/tests/test_records.py:425:        assert not isinstance(obj, bytes)
numpy/core/tests/test_records.py:427:        assert_raises(RuntimeError, ctor, dtype, 13)
numpy/core/tests/test_records.py:432:        assert a[0] == unpickled
numpy/core/tests/test_records.py:436:            assert ctor(np.dtype("O"), data) is data
numpy/core/tests/test_records.py:452:        assert_equal(rec[0].x, np.ones(5))
numpy/core/tests/test_records.py:457:        assert_raises(KeyError, lambda: arr[['nofield']])
numpy/core/tests/test_records.py:472:        assert data.dtype.type == np.record
numpy/core/tests/test_records.py:473:        assert dt.type != np.record
numpy/core/tests/test_records.py:477:        assert data.dtype.type == np.record
numpy/core/tests/test_records.py:486:        assert isinstance(data, np.recarray)
numpy/core/tests/test_records.py:487:        assert isinstance(data['inner'], np.recarray)
numpy/core/tests/test_records.py:490:        assert isinstance(data0, np.record)
numpy/core/tests/test_records.py:491:        assert isinstance(data0['inner'], np.record)
numpy/core/tests/test_records.py:498:        assert dt_padded_end.itemsize == dt.itemsize
numpy/core/tests/test_records.py:503:        assert_equal(data['inner'].dtype, dt_padded_end)
numpy/core/tests/test_records.py:506:        assert_equal(data0['inner'].dtype, dt_padded_end)
numpy/core/tests/test_records.py:511:    assert_(np.rec.find_duplicate(l1) == [])
numpy/core/tests/test_records.py:514:    assert_(np.rec.find_duplicate(l2) == [1])
numpy/core/tests/test_records.py:517:    assert_(np.rec.find_duplicate(l3) == [1, 2])
numpy/core/tests/test_records.py:520:    assert_(np.rec.find_duplicate(l3) == [2, 1])
numpy/core/tests/test_mem_policy.py:220:    assert get_handler_name(a) is None
numpy/core/tests/test_mem_policy.py:221:    assert get_handler_version(a) is None
numpy/core/tests/test_mem_policy.py:222:    assert get_handler_name(a.base) == orig_policy_name
numpy/core/tests/test_mem_policy.py:223:    assert get_handler_version(a.base) == 1
numpy/core/tests/test_mem_policy.py:228:    assert get_handler_name(b) is None
numpy/core/tests/test_mem_policy.py:229:    assert get_handler_version(b) is None
numpy/core/tests/test_mem_policy.py:230:    assert get_handler_name(b.base) == 'secret_data_allocator'
numpy/core/tests/test_mem_policy.py:231:    assert get_handler_version(b.base) == 1
numpy/core/tests/test_mem_policy.py:235:        assert get_handler_name() == 'default_allocator'
numpy/core/tests/test_mem_policy.py:238:        assert get_handler_name() == orig_policy_name
numpy/core/tests/test_mem_policy.py:247:    assert get_handler_name() == 'default_allocator'
numpy/core/tests/test_mem_policy.py:252:    assert get_handler_name() == 'default_allocator'
numpy/core/tests/test_mem_policy.py:259:    assert def_policy_1 is def_policy_2 is get_module.get_default_policy()
numpy/core/tests/test_mem_policy.py:271:    assert get_handler_name(a) is None
numpy/core/tests/test_mem_policy.py:272:    assert a.flags.owndata is False
numpy/core/tests/test_mem_policy.py:274:    assert get_handler_name(a.base) is None
numpy/core/tests/test_mem_policy.py:275:    assert a.base.flags.owndata is False
numpy/core/tests/test_mem_policy.py:277:    assert get_handler_name(a.base.base) == orig_policy_name
numpy/core/tests/test_mem_policy.py:278:    assert a.base.base.flags.owndata is True
numpy/core/tests/test_mem_policy.py:284:        assert np.core.multiarray.get_handler_name() == 'secret_data_allocator'
numpy/core/tests/test_mem_policy.py:287:        assert np.core.multiarray.get_handler_name() == 'default_allocator'
numpy/core/tests/test_mem_policy.py:294:    assert np.core.multiarray.get_handler_name() == orig_policy_name
numpy/core/tests/test_mem_policy.py:298:        assert np.core.multiarray.get_handler_name() == 'secret_data_allocator'
numpy/core/tests/test_mem_policy.py:301:        assert np.core.multiarray.get_handler_name() == 'default_allocator'
numpy/core/tests/test_mem_policy.py:317:    assert np.core.multiarray.get_handler_name() == orig_policy_name
numpy/core/tests/test_mem_policy.py:329:    assert np.core.multiarray.get_handler_name() == 'secret_data_allocator'
numpy/core/tests/test_mem_policy.py:336:    assert np.core.multiarray.get_handler_name() == 'default_allocator'
numpy/core/tests/test_mem_policy.py:356:    assert np.core.multiarray.get_handler_name() == orig_policy_name
numpy/core/tests/test_mem_policy.py:367:    assert np.core.multiarray.get_handler_name(b) == 'secret_data_allocator'
numpy/core/tests/test_mem_policy.py:378:        assert np.core.test('full', verbose=2, extra_argv=['-vv'])
numpy/core/tests/test_mem_policy.py:380:        assert np.ma.test('full', verbose=2, extra_argv=['-vv'])
numpy/core/tests/test_mem_policy.py:385:    assert np.core.multiarray.get_handler_name(c) == orig_policy_name
numpy/core/tests/test_mem_policy.py:393:    assert np.core.multiarray.get_handler_name(a) is None
numpy/core/tests/test_simd.py:138:        assert vand == data_and
numpy/core/tests/test_simd.py:142:        assert vor == data_or
numpy/core/tests/test_simd.py:146:        assert vxor == data_xor
numpy/core/tests/test_simd.py:149:        assert vnot == data_b
numpy/core/tests/test_simd.py:157:            assert tobits == bin(data_bits)
numpy/core/tests/test_simd.py:176:            assert shl == data_shl_a
numpy/core/tests/test_simd.py:181:            assert shr == data_shr_a
numpy/core/tests/test_simd.py:189:            assert shli == data_shl_a
numpy/core/tests/test_simd.py:194:            assert shri == data_shr_a
numpy/core/tests/test_simd.py:206:        assert adds == data_adds
numpy/core/tests/test_simd.py:210:        assert subs == data_subs
numpy/core/tests/test_simd.py:219:        assert simd_max == data_max
numpy/core/tests/test_simd.py:223:        assert simd_min == data_min
numpy/core/tests/test_simd.py:246:        assert vround == data_round
numpy/core/tests/test_simd.py:263:        assert vround == data_round
numpy/core/tests/test_simd.py:275:        assert fma == data_fma
numpy/core/tests/test_simd.py:279:        assert fms == data_fms
numpy/core/tests/test_simd.py:283:        assert nfma == data_nfma
numpy/core/tests/test_simd.py:287:        assert nfms == data_nfms
numpy/core/tests/test_simd.py:298:            assert vabs == pytest.approx(data_abs, nan_ok=True)
numpy/core/tests/test_simd.py:301:        assert vabs == data
numpy/core/tests/test_simd.py:312:            assert sqrt == pytest.approx(data_sqrt, nan_ok=True)
numpy/core/tests/test_simd.py:316:        assert sqrt == data_sqrt
numpy/core/tests/test_simd.py:327:            assert square == pytest.approx(data_square, nan_ok=True)
numpy/core/tests/test_simd.py:331:        assert square == data_square
numpy/core/tests/test_simd.py:351:            assert _round == pytest.approx(data_round, nan_ok=True)
numpy/core/tests/test_simd.py:358:                assert _round == data_round
numpy/core/tests/test_simd.py:369:            assert _round == data_round
numpy/core/tests/test_simd.py:382:        assert _max == data_max
numpy/core/tests/test_simd.py:384:        assert maxp == data_max
numpy/core/tests/test_simd.py:396:            assert maxp == pytest.approx(data_max, nan_ok=True)
numpy/core/tests/test_simd.py:400:            assert _max == data_max
numpy/core/tests/test_simd.py:413:        assert _min == data_min
numpy/core/tests/test_simd.py:415:        assert minp == data_min
numpy/core/tests/test_simd.py:427:            assert minp == pytest.approx(data_min, nan_ok=True)
numpy/core/tests/test_simd.py:431:            assert _min == data_min
numpy/core/tests/test_simd.py:442:            assert recip == pytest.approx(data_recip, nan_ok=True)
numpy/core/tests/test_simd.py:446:        assert recip == data_recip
numpy/core/tests/test_simd.py:454:        assert nnan == [0]*self.nlanes
numpy/core/tests/test_simd.py:464:        assert load_data == data
numpy/core/tests/test_simd.py:467:        assert loada_data == data
numpy/core/tests/test_simd.py:470:        assert loads_data == data
numpy/core/tests/test_simd.py:475:        assert loadl_half == data_half
numpy/core/tests/test_simd.py:476:        assert loadl != data # detect overflow
numpy/core/tests/test_simd.py:484:        assert store == data
numpy/core/tests/test_simd.py:488:        assert store_a == data
numpy/core/tests/test_simd.py:492:        assert store_s == data
numpy/core/tests/test_simd.py:496:        assert store_l[:self.nlanes//2] == data[:self.nlanes//2]
numpy/core/tests/test_simd.py:497:        assert store_l != vdata # detect overflow
numpy/core/tests/test_simd.py:501:        assert store_h[:self.nlanes//2] == data[self.nlanes//2:]
numpy/core/tests/test_simd.py:502:        assert store_h != vdata  # detect overflow
numpy/core/tests/test_simd.py:514:            assert load_till == data_till
numpy/core/tests/test_simd.py:517:            assert load_tillz == data_tillz
numpy/core/tests/test_simd.py:533:            assert store_till == data_till
numpy/core/tests/test_simd.py:543:            assert loadn == data_stride
numpy/core/tests/test_simd.py:549:            assert loadn == data_stride
numpy/core/tests/test_simd.py:563:                assert loadn_till == data_stride_till
numpy/core/tests/test_simd.py:566:                assert loadn_tillz == data_stride_tillz
numpy/core/tests/test_simd.py:574:                assert loadn_till == data_stride_till
numpy/core/tests/test_simd.py:577:                assert loadn_tillz == data_stride_tillz
numpy/core/tests/test_simd.py:590:            assert storen[:-64] == data
numpy/core/tests/test_simd.py:591:            assert storen[-64:] == [127]*64 # detect overflow
numpy/core/tests/test_simd.py:599:            assert storen[64:] == data
numpy/core/tests/test_simd.py:600:            assert storen[:64] == [127]*64 # detect overflow
numpy/core/tests/test_simd.py:617:                assert storen_till[:-64] == data_till
numpy/core/tests/test_simd.py:618:                assert storen_till[-64:] == [127]*64 # detect overflow
numpy/core/tests/test_simd.py:627:                assert storen_till[64:] == data_till
numpy/core/tests/test_simd.py:628:                assert storen_till[:64] == [127]*64 # detect overflow
numpy/core/tests/test_simd.py:649:            assert lut == broadi
numpy/core/tests/test_simd.py:653:        assert broadcast_zero == [0] * self.nlanes
numpy/core/tests/test_simd.py:656:            assert broadcasti == [i] * self.nlanes
numpy/core/tests/test_simd.py:664:        assert vset == data_a
numpy/core/tests/test_simd.py:668:        assert vsetf == data_a
numpy/core/tests/test_simd.py:678:            assert vec_name == "npyv_" + sfx
numpy/core/tests/test_simd.py:682:        assert select_a == data_a
numpy/core/tests/test_simd.py:684:        assert select_b == data_b
numpy/core/tests/test_simd.py:702:        assert combinel == data_a_lo + data_b_lo
numpy/core/tests/test_simd.py:705:        assert combineh == data_a_hi + data_b_hi
numpy/core/tests/test_simd.py:708:        assert combine == (data_a_lo + data_b_lo, data_a_hi + data_b_hi)
numpy/core/tests/test_simd.py:713:        assert vzip == (data_zipl, data_ziph)
numpy/core/tests/test_simd.py:725:        assert rev64 == data_rev64
numpy/core/tests/test_simd.py:741:        assert cmpeq == data_eq
numpy/core/tests/test_simd.py:745:        assert cmpneq == data_neq
numpy/core/tests/test_simd.py:749:        assert cmpgt == data_gt
numpy/core/tests/test_simd.py:753:        assert cmpge == data_ge
numpy/core/tests/test_simd.py:757:        assert cmplt == data_lt
numpy/core/tests/test_simd.py:761:        assert cmple == data_le
numpy/core/tests/test_simd.py:781:        assert vxor == data_xor
numpy/core/tests/test_simd.py:785:        assert vor == data_or
numpy/core/tests/test_simd.py:789:        assert vand == data_and
numpy/core/tests/test_simd.py:793:        assert vnot == data_not
numpy/core/tests/test_simd.py:802:        assert false_vb != true_vb
numpy/core/tests/test_simd.py:806:        assert false_vsfx != true_vsfx
numpy/core/tests/test_simd.py:826:        assert edata == (data_lo, data_hi)
numpy/core/tests/test_simd.py:839:        assert add == data_add
numpy/core/tests/test_simd.py:842:        assert sub == data_sub
numpy/core/tests/test_simd.py:857:        assert mul == data_mul
numpy/core/tests/test_simd.py:869:        assert div == data_div
numpy/core/tests/test_simd.py:916:            assert divc == data_divc
numpy/core/tests/test_simd.py:931:        assert vsum == data_sum
numpy/core/tests/test_simd.py:946:            assert vsum == data_sum
numpy/core/tests/test_simd.py:961:        assert ifsub == data_sub
numpy/core/tests/test_simd.py:963:        assert ifsub == vdata_b
numpy/core/tests/test_simd.py:967:        assert ifadd == data_add
numpy/core/tests/test_simd.py:969:        assert ifadd == vdata_b
numpy/core/tests/test_scalarinherit.py:36:        assert_(str(x) == '1.0')
numpy/core/tests/test_scalarinherit.py:38:        assert_(str(y) == '2.0')
numpy/core/tests/test_scalarinherit.py:40:        assert_(str(z) == '3.0')
numpy/core/tests/test_scalarinherit.py:44:        assert_(str(x) == '1.0')
numpy/core/tests/test_scalarinherit.py:46:        assert_(str(y) == '2.0')
numpy/core/tests/test_scalarinherit.py:51:        assert_(str(x) == '1.0')
numpy/core/tests/test_scalarinherit.py:65:        assert_(np_s.__radd__(np_s) is NotImplemented)
numpy/core/tests/test_scalarinherit.py:66:        assert_(np_s.__radd__(np_u) is NotImplemented)
numpy/core/tests/test_scalarinherit.py:67:        assert_(np_s.__radd__(s) is NotImplemented)
numpy/core/tests/test_scalarinherit.py:68:        assert_(np_s.__radd__(u) is NotImplemented)
numpy/core/tests/test_scalarinherit.py:69:        assert_(np_u.__radd__(np_s) is NotImplemented)
numpy/core/tests/test_scalarinherit.py:70:        assert_(np_u.__radd__(np_u) is NotImplemented)
numpy/core/tests/test_scalarinherit.py:71:        assert_(np_u.__radd__(s) is NotImplemented)
numpy/core/tests/test_scalarinherit.py:72:        assert_(np_u.__radd__(u) is NotImplemented)
numpy/core/tests/test_scalarinherit.py:73:        assert_(s + np_s == b'defabc')
numpy/core/tests/test_scalarinherit.py:74:        assert_(u + np_u == u'defabc')
numpy/core/tests/test_scalarinherit.py:89:        assert(type(ret) is type(s))
numpy/core/tests/test_scalarinherit.py:90:        assert ret == b"defabc"
numpy/core/tests/test_scalarinherit.py:97:        assert_(np_s * 5 == res_s)
numpy/core/tests/test_scalarinherit.py:98:        assert_(np_u * 5 == res_u)
numpy/core/tests/test_indexing.py:21:        assert_raises(IndexError, lambda: a[0.0])
numpy/core/tests/test_indexing.py:22:        assert_raises(IndexError, lambda: a[0, 0.0])
numpy/core/tests/test_indexing.py:23:        assert_raises(IndexError, lambda: a[0.0, 0])
numpy/core/tests/test_indexing.py:24:        assert_raises(IndexError, lambda: a[0.0,:])
numpy/core/tests/test_indexing.py:25:        assert_raises(IndexError, lambda: a[:, 0.0])
numpy/core/tests/test_indexing.py:26:        assert_raises(IndexError, lambda: a[:, 0.0,:])
numpy/core/tests/test_indexing.py:27:        assert_raises(IndexError, lambda: a[0.0,:,:])
numpy/core/tests/test_indexing.py:28:        assert_raises(IndexError, lambda: a[0, 0, 0.0])
numpy/core/tests/test_indexing.py:29:        assert_raises(IndexError, lambda: a[0.0, 0, 0])
numpy/core/tests/test_indexing.py:30:        assert_raises(IndexError, lambda: a[0, 0.0, 0])
numpy/core/tests/test_indexing.py:31:        assert_raises(IndexError, lambda: a[-1.4])
numpy/core/tests/test_indexing.py:32:        assert_raises(IndexError, lambda: a[0, -1.4])
numpy/core/tests/test_indexing.py:33:        assert_raises(IndexError, lambda: a[-1.4, 0])
numpy/core/tests/test_indexing.py:34:        assert_raises(IndexError, lambda: a[-1.4,:])
numpy/core/tests/test_indexing.py:35:        assert_raises(IndexError, lambda: a[:, -1.4])
numpy/core/tests/test_indexing.py:36:        assert_raises(IndexError, lambda: a[:, -1.4,:])
numpy/core/tests/test_indexing.py:37:        assert_raises(IndexError, lambda: a[-1.4,:,:])
numpy/core/tests/test_indexing.py:38:        assert_raises(IndexError, lambda: a[0, 0, -1.4])
numpy/core/tests/test_indexing.py:39:        assert_raises(IndexError, lambda: a[-1.4, 0, 0])
numpy/core/tests/test_indexing.py:40:        assert_raises(IndexError, lambda: a[0, -1.4, 0])
numpy/core/tests/test_indexing.py:41:        assert_raises(IndexError, lambda: a[0.0:, 0.0])
numpy/core/tests/test_indexing.py:42:        assert_raises(IndexError, lambda: a[0.0:, 0.0,:])
numpy/core/tests/test_indexing.py:48:        assert_raises(TypeError, lambda: a[0.0:])
numpy/core/tests/test_indexing.py:49:        assert_raises(TypeError, lambda: a[0:, 0.0:2])
numpy/core/tests/test_indexing.py:50:        assert_raises(TypeError, lambda: a[0.0::2, :0])
numpy/core/tests/test_indexing.py:51:        assert_raises(TypeError, lambda: a[0.0:1:2,:])
numpy/core/tests/test_indexing.py:52:        assert_raises(TypeError, lambda: a[:, 0.0:])
numpy/core/tests/test_indexing.py:54:        assert_raises(TypeError, lambda: a[:0.0])
numpy/core/tests/test_indexing.py:55:        assert_raises(TypeError, lambda: a[:0, 1:2.0])
numpy/core/tests/test_indexing.py:56:        assert_raises(TypeError, lambda: a[:0.0:2, :0])
numpy/core/tests/test_indexing.py:57:        assert_raises(TypeError, lambda: a[:0.0,:])
numpy/core/tests/test_indexing.py:58:        assert_raises(TypeError, lambda: a[:, 0:4.0:2])
numpy/core/tests/test_indexing.py:60:        assert_raises(TypeError, lambda: a[::1.0])
numpy/core/tests/test_indexing.py:61:        assert_raises(TypeError, lambda: a[0:, :2:2.0])
numpy/core/tests/test_indexing.py:62:        assert_raises(TypeError, lambda: a[1::4.0, :0])
numpy/core/tests/test_indexing.py:63:        assert_raises(TypeError, lambda: a[::5.0,:])
numpy/core/tests/test_indexing.py:64:        assert_raises(TypeError, lambda: a[:, 0:4:2.0])
numpy/core/tests/test_indexing.py:66:        assert_raises(TypeError, lambda: a[1.0:2:2.0])
numpy/core/tests/test_indexing.py:67:        assert_raises(TypeError, lambda: a[1.0::2.0])
numpy/core/tests/test_indexing.py:68:        assert_raises(TypeError, lambda: a[0:, :2.0:2.0])
numpy/core/tests/test_indexing.py:69:        assert_raises(TypeError, lambda: a[1.0:1:4.0, :0])
numpy/core/tests/test_indexing.py:70:        assert_raises(TypeError, lambda: a[1.0:5.0:5.0,:])
numpy/core/tests/test_indexing.py:71:        assert_raises(TypeError, lambda: a[:, 0.4:4.0:2.0])
numpy/core/tests/test_indexing.py:73:        assert_raises(TypeError, lambda: a[::0.0])
numpy/core/tests/test_indexing.py:79:        assert_raises(TypeError, lambda: a[a:a:a])
numpy/core/tests/test_indexing.py:84:        assert_equal(a[None], a[np.newaxis])
numpy/core/tests/test_indexing.py:85:        assert_equal(a[None].ndim, a.ndim + 1)
numpy/core/tests/test_indexing.py:90:        assert_equal(a[()], a)
numpy/core/tests/test_indexing.py:91:        assert_(a[()].base is a)
numpy/core/tests/test_indexing.py:93:        assert_(isinstance(a[()], np.int_))
numpy/core/tests/test_indexing.py:97:        assert_equal(s[()].dtype, s.dtype)
numpy/core/tests/test_indexing.py:98:        assert_equal(s[()], s)
numpy/core/tests/test_indexing.py:99:        assert_equal(type(s[...]), np.ndarray)
numpy/core/tests/test_indexing.py:108:        assert_array_equal(arr[index], arr[u_index])
numpy/core/tests/test_indexing.py:110:        assert_array_equal(arr, np.arange(10))
numpy/core/tests/test_indexing.py:113:        assert_array_equal(arr[index], arr[u_index])
numpy/core/tests/test_indexing.py:116:        assert_array_equal(arr, np.arange(5)[:,None].repeat(2, axis=1))
numpy/core/tests/test_indexing.py:119:        assert_array_equal(arr[u_index, u_index], arr[index, index])
numpy/core/tests/test_indexing.py:125:        assert_equal(a[[]], [])
numpy/core/tests/test_indexing.py:126:        assert_equal(a[[]].dtype, a.dtype)
numpy/core/tests/test_indexing.py:129:        assert_equal(a[[]], [])
numpy/core/tests/test_indexing.py:130:        assert_equal(a[[]].dtype, a.dtype)
numpy/core/tests/test_indexing.py:133:        assert_raises(IndexError, a.__getitem__, b)
numpy/core/tests/test_indexing.py:139:        assert_(a[...] is not a)
numpy/core/tests/test_indexing.py:140:        assert_equal(a[...], a)
numpy/core/tests/test_indexing.py:142:        assert_(a[...].base is a)
numpy/core/tests/test_indexing.py:146:        assert_equal(a[0, ...], a[0])
numpy/core/tests/test_indexing.py:147:        assert_equal(a[0, ...], a[0,:])
numpy/core/tests/test_indexing.py:148:        assert_equal(a[..., 0], a[:, 0])
numpy/core/tests/test_indexing.py:152:        assert_equal(a[0, ..., 1], np.array(2))
numpy/core/tests/test_indexing.py:157:        assert_equal(b, 2)
numpy/core/tests/test_indexing.py:165:        assert_equal(a[0], [1, 2, 3])
numpy/core/tests/test_indexing.py:166:        assert_equal(a[-1], [7, 8, 9])
numpy/core/tests/test_indexing.py:169:        assert_raises(IndexError, a.__getitem__, 1 << 30)
numpy/core/tests/test_indexing.py:171:        assert_raises(IndexError, a.__getitem__, 1 << 64)
numpy/core/tests/test_indexing.py:179:        assert_equal(a[np.array(True)], a[None])
numpy/core/tests/test_indexing.py:180:        assert_equal(a[np.array(False)], a[None][0:0])
numpy/core/tests/test_indexing.py:186:        assert_raises(IndexError, arr.__getitem__, index)
numpy/core/tests/test_indexing.py:189:        assert_raises(IndexError, arr.__getitem__, index)
numpy/core/tests/test_indexing.py:192:        assert_raises(IndexError, arr.__getitem__, index)
numpy/core/tests/test_indexing.py:194:        assert_raises(IndexError, arr.__getitem__, (slice(None), index))
numpy/core/tests/test_indexing.py:201:        assert_equal(a[b], a)
numpy/core/tests/test_indexing.py:204:        assert_equal(a, [[1., 1., 1.]])
numpy/core/tests/test_indexing.py:214:        assert_raises(ValueError, f, a, [])
numpy/core/tests/test_indexing.py:215:        assert_raises(ValueError, f, a, [1, 2, 3])
numpy/core/tests/test_indexing.py:216:        assert_raises(ValueError, f, a[:1], [1, 2, 3])
numpy/core/tests/test_indexing.py:230:        assert_array_equal(arr, expected)
numpy/core/tests/test_indexing.py:241:        assert_equal(a[b], [1, 3, 5, 7, 9])
numpy/core/tests/test_indexing.py:242:        assert_equal(a[b[1]], [[4, 5, 6]])
numpy/core/tests/test_indexing.py:243:        assert_equal(a[b[0]], a[b[2]])
numpy/core/tests/test_indexing.py:257:        assert_equal(a[b], [1, 3])
numpy/core/tests/test_indexing.py:258:        assert_equal(a[None, b], [[1, 3]])
numpy/core/tests/test_indexing.py:269:        assert_equal(a[0], 0)
numpy/core/tests/test_indexing.py:275:        assert_equal(a[0], [0, 1])
numpy/core/tests/test_indexing.py:282:        assert_array_equal(a[i], a[i.copy('C')])
numpy/core/tests/test_indexing.py:295:        assert_equal(a, b)
numpy/core/tests/test_indexing.py:300:        assert_raises(IndexError, a.__getitem__, (np.array([0]),) * 32)
numpy/core/tests/test_indexing.py:305:        assert_equal(a[np.bool_(True)], a[np.array(True)])
numpy/core/tests/test_indexing.py:306:        assert_equal(a[np.bool_(False)], a[np.array(False)])
numpy/core/tests/test_indexing.py:319:        assert_(a is not a[()])
numpy/core/tests/test_indexing.py:320:        assert_(a is not a[...])
numpy/core/tests/test_indexing.py:321:        assert_(a is not a[:])
numpy/core/tests/test_indexing.py:325:        assert_raises(IndexError, a.__getitem__, ([0, 1], [0, 1, 2]))
numpy/core/tests/test_indexing.py:326:        assert_raises(IndexError, a.__setitem__, ([0, 1], [0, 1, 2]), 0)
numpy/core/tests/test_indexing.py:332:        assert_raises(IndexError, a.__getitem__, ind)
numpy/core/tests/test_indexing.py:333:        assert_raises(IndexError, a.__setitem__, ind, 0)
numpy/core/tests/test_indexing.py:336:        assert_raises(IndexError, a.__getitem__, ind)
numpy/core/tests/test_indexing.py:337:        assert_raises(IndexError, a.__setitem__, ind, 0)
numpy/core/tests/test_indexing.py:344:        assert_array_equal(a[idx], idx)
numpy/core/tests/test_indexing.py:352:        assert_array_equal(a, res)
numpy/core/tests/test_indexing.py:365:        assert_((a == 1).all())
numpy/core/tests/test_indexing.py:369:        assert_((a == 1).all())
numpy/core/tests/test_indexing.py:373:        assert_((a == 1).all())
numpy/core/tests/test_indexing.py:381:        assert_array_equal(a, s)
numpy/core/tests/test_indexing.py:384:        assert_array_equal(a, s)
numpy/core/tests/test_indexing.py:387:        assert_array_equal(a, s)
numpy/core/tests/test_indexing.py:393:        assert_(d[ind].flags.writeable)
numpy/core/tests/test_indexing.py:395:        assert_(d[ind].flags.writeable)
numpy/core/tests/test_indexing.py:396:        assert_(d[...].flags.writeable)
numpy/core/tests/test_indexing.py:397:        assert_(d[0].flags.writeable)
numpy/core/tests/test_indexing.py:404:        assert_(a[b].flags.f_contiguous)
numpy/core/tests/test_indexing.py:408:        assert_(a[b, 0].flags.f_contiguous)
numpy/core/tests/test_indexing.py:426:        assert_(isinstance(a[()], np.float_))
numpy/core/tests/test_indexing.py:428:        assert_(isinstance(a[z], np.float_))
numpy/core/tests/test_indexing.py:430:        assert_(isinstance(a[z, np.array(0)], np.float_))
numpy/core/tests/test_indexing.py:431:        assert_(isinstance(a[z, ArrayLike()], np.float_))
numpy/core/tests/test_indexing.py:437:        assert_(isinstance(a[()], np.ndarray))
numpy/core/tests/test_indexing.py:439:        assert_(isinstance(a[z], np.ndarray))
numpy/core/tests/test_indexing.py:441:        assert_(isinstance(a[z, np.array(0)], np.ndarray))
numpy/core/tests/test_indexing.py:442:        assert_(isinstance(a[z, ArrayLike()], np.ndarray))
numpy/core/tests/test_indexing.py:458:            assert_equal(sys.getrefcount(np.dtype(np.intp)), refcount)
numpy/core/tests/test_indexing.py:469:        assert_equal(d[b], d)
numpy/core/tests/test_indexing.py:476:        assert_equal(d[b.astype(np.int16)], d)
numpy/core/tests/test_indexing.py:490:        assert_(arr[index].shape == (1,))
numpy/core/tests/test_indexing.py:492:        assert_(arr[index,].shape != (1,))
numpy/core/tests/test_indexing.py:511:        assert_array_equal(arr[SequenceLike()], arr[SequenceLike(),])
numpy/core/tests/test_indexing.py:516:        assert_array_equal(arr[SequenceLike()], arr[SequenceLike(),])
numpy/core/tests/test_indexing.py:528:        assert_array_equal(x[ind], x[ind.copy()])
numpy/core/tests/test_indexing.py:531:        assert_array_equal(x2[ind, zind], x2[ind.copy(), zind])
numpy/core/tests/test_indexing.py:541:        assert_array_equal(arr, 10.)
numpy/core/tests/test_indexing.py:549:        assert_array_equal(arr[0], np.array("asdfg", dtype="c"))
numpy/core/tests/test_indexing.py:550:        assert arr[0, 1] == b"s"  # make sure not all were set to "a" for both
numpy/core/tests/test_indexing.py:588:        assert arr.dtype is dt
numpy/core/tests/test_indexing.py:592:        assert_equal(a[[0, 1]], np.array([a[0], a[1]]))
numpy/core/tests/test_indexing.py:593:        assert_equal(a[[0, 1], [0, 1]], np.array([0, 6]))
numpy/core/tests/test_indexing.py:594:        assert_raises(IndexError, a.__getitem__, [slice(None)])
numpy/core/tests/test_indexing.py:602:        assert_(isinstance(a['a'], np.ndarray))
numpy/core/tests/test_indexing.py:603:        assert_(isinstance(a[['a']], np.ndarray))
numpy/core/tests/test_indexing.py:627:        assert_raises(ValueError, assign, a, s_[...],  np.ones((2, 1)))
numpy/core/tests/test_indexing.py:628:        assert_raises(ValueError, assign, a, s_[[1, 2, 3],], np.ones((2, 1)))
numpy/core/tests/test_indexing.py:629:        assert_raises(ValueError, assign, a, s_[[[1], [2]],], np.ones((2,2,1)))
numpy/core/tests/test_indexing.py:636:        assert_raises(ValueError, assign, a, s_[...], np.zeros((5, 2)))
numpy/core/tests/test_indexing.py:637:        assert_raises(ValueError, assign, a, s_[...], np.zeros((5, 0)))
numpy/core/tests/test_indexing.py:638:        assert_raises(ValueError, assign, a, s_[:, [0]], np.zeros((5, 2)))
numpy/core/tests/test_indexing.py:639:        assert_raises(ValueError, assign, a, s_[:, [0]], np.zeros((5, 0)))
numpy/core/tests/test_indexing.py:640:        assert_raises(ValueError, assign, a, s_[[0], :], np.zeros((2, 1)))
numpy/core/tests/test_indexing.py:656:        assert str(e.value).endswith(shape_str)
numpy/core/tests/test_indexing.py:663:        assert_((a[:3, :3] == [2, 3, 4]).all())
numpy/core/tests/test_indexing.py:670:        assert_((a[::-1] == v).all())
numpy/core/tests/test_indexing.py:685:        assert_(type(s_slice) is SubClass)
numpy/core/tests/test_indexing.py:686:        assert_(s_slice.base is s)
numpy/core/tests/test_indexing.py:687:        assert_array_equal(s_slice, a[:3])
numpy/core/tests/test_indexing.py:690:        assert_(type(s_fancy) is SubClass)
numpy/core/tests/test_indexing.py:691:        assert_(s_fancy.base is not s)
numpy/core/tests/test_indexing.py:692:        assert_(type(s_fancy.base) is np.ndarray)
numpy/core/tests/test_indexing.py:693:        assert_array_equal(s_fancy, a[[0, 1, 2]])
numpy/core/tests/test_indexing.py:694:        assert_array_equal(s_fancy.base, a[[0, 1, 2]])
numpy/core/tests/test_indexing.py:697:        assert_(type(s_bool) is SubClass)
numpy/core/tests/test_indexing.py:698:        assert_(s_bool.base is not s)
numpy/core/tests/test_indexing.py:699:        assert_(type(s_bool.base) is np.ndarray)
numpy/core/tests/test_indexing.py:700:        assert_array_equal(s_bool, a[a > 0])
numpy/core/tests/test_indexing.py:701:        assert_array_equal(s_bool.base, a[a > 0])
numpy/core/tests/test_indexing.py:713:        assert_(s_fancy.flags.writeable)
numpy/core/tests/test_indexing.py:725:        assert_array_equal(new_s.finalize_status, new_s)
numpy/core/tests/test_indexing.py:726:        assert_array_equal(new_s.old, s)
numpy/core/tests/test_indexing.py:729:        assert_array_equal(new_s.finalize_status, new_s)
numpy/core/tests/test_indexing.py:730:        assert_array_equal(new_s.old, s)
numpy/core/tests/test_indexing.py:733:        assert_array_equal(new_s.finalize_status, new_s)
numpy/core/tests/test_indexing.py:734:        assert_array_equal(new_s.old, s)
numpy/core/tests/test_indexing.py:747:        assert_equal(zero_array[0, 1], 1)
numpy/core/tests/test_indexing.py:752:        assert_equal(zero_array[0, 1], 2)  # No complex part
numpy/core/tests/test_indexing.py:757:        assert_equal(zero_array[0, 1], 0)
numpy/core/tests/test_indexing.py:767:        assert_array_equal(a, b)
numpy/core/tests/test_indexing.py:772:        assert_array_equal(a, b[0])
numpy/core/tests/test_indexing.py:779:        assert_array_equal(a, b[:, 0])
numpy/core/tests/test_indexing.py:787:        assert_array_equal(arr, cmp_arr)
numpy/core/tests/test_indexing.py:790:        assert_array_equal(arr, cmp_arr)
numpy/core/tests/test_indexing.py:799:        assert_array_equal(a, b)
numpy/core/tests/test_indexing.py:804:        assert_array_equal(a, b[0])
numpy/core/tests/test_indexing.py:1113:            assert_raises(type(e), arr.__getitem__, index)
numpy/core/tests/test_indexing.py:1114:            assert_raises(type(e), arr.__setitem__, index, 0)
numpy/core/tests/test_indexing.py:1116:                assert_equal(prev_refcount, sys.getrefcount(arr))
numpy/core/tests/test_indexing.py:1137:            assert_raises(type(e), arr.__getitem__, index)
numpy/core/tests/test_indexing.py:1138:            assert_raises(type(e), arr.__setitem__, index, 0)
numpy/core/tests/test_indexing.py:1140:                assert_equal(prev_refcount, sys.getrefcount(arr))
numpy/core/tests/test_indexing.py:1150:        assert_array_equal(indexed_arr, mimic_get)
numpy/core/tests/test_indexing.py:1154:            assert_(np.may_share_memory(indexed_arr, arr) == no_copy)
numpy/core/tests/test_indexing.py:1159:                    assert_equal(sys.getrefcount(arr), 3)
numpy/core/tests/test_indexing.py:1161:                    assert_equal(sys.getrefcount(arr), 2)
numpy/core/tests/test_indexing.py:1171:            assert_array_equal(arr, b)
numpy/core/tests/test_indexing.py:1175:        assert_array_equal(arr, b)
numpy/core/tests/test_indexing.py:1179:        assert_equal(a[np.array(True)], 5)
numpy/core/tests/test_indexing.py:1181:        assert_equal(a, 1)
numpy/core/tests/test_indexing.py:1219:        assert_raises(IndexError, self.a.__getitem__, (0, 0, 0, 0, 0))
numpy/core/tests/test_indexing.py:1220:        assert_raises(IndexError, self.a.__setitem__, (0, 0, 0, 0, 0), 0)
numpy/core/tests/test_indexing.py:1221:        assert_raises(IndexError, self.a.__getitem__, (0, 0, [1], 0, 0))
numpy/core/tests/test_indexing.py:1222:        assert_raises(IndexError, self.a.__setitem__, (0, 0, [1], 0, 0), 0)
numpy/core/tests/test_indexing.py:1262:        assert_raises(TypeError, np.reshape, a, (1., 1., -1))
numpy/core/tests/test_indexing.py:1263:        assert_raises(TypeError, np.reshape, a, (np.array(1.), -1))
numpy/core/tests/test_indexing.py:1264:        assert_raises(TypeError, np.take, a, [0], 1.)
numpy/core/tests/test_indexing.py:1265:        assert_raises(TypeError, np.take, a, [0], np.float64(1.))
numpy/core/tests/test_indexing.py:1272:        assert_raises(TypeError, mult, [1], np.float_(3))
numpy/core/tests/test_indexing.py:1278:        assert_raises(TypeError, np.min, d, 0.5)
numpy/core/tests/test_indexing.py:1279:        assert_raises(TypeError, np.min, d, (0.5, 1))
numpy/core/tests/test_indexing.py:1280:        assert_raises(TypeError, np.min, d, (1, 2.2))
numpy/core/tests/test_indexing.py:1281:        assert_raises(TypeError, np.min, d, (.2, 1.2))
numpy/core/tests/test_indexing.py:1289:        assert_raises(TypeError, np.reshape, a, (True, -1))
numpy/core/tests/test_indexing.py:1290:        assert_raises(TypeError, np.reshape, a, (np.bool_(True), -1))
numpy/core/tests/test_indexing.py:1293:        assert_raises(TypeError, operator.index, np.array(True))
numpy/core/tests/test_indexing.py:1294:        assert_warns(DeprecationWarning, operator.index, np.True_)
numpy/core/tests/test_indexing.py:1295:        assert_raises(TypeError, np.take, args=(a, [0], False))
numpy/core/tests/test_indexing.py:1302:        assert_raises(IndexError, lambda: a[False, [0, 1], ...])
numpy/core/tests/test_indexing.py:1312:        assert_raises_regex(IndexError,
numpy/core/tests/test_indexing.py:1319:        assert_raises_regex(IndexError,
numpy/core/tests/test_indexing.py:1326:        assert_raises_regex(IndexError,
numpy/core/tests/test_indexing.py:1334:        assert_raises_regex(IndexError,
numpy/core/tests/test_indexing.py:1348:        assert_raises(TypeError, operator.index, np.array([1]))
numpy/core/tests/test_indexing.py:1349:        assert_raises(TypeError, np.reshape, a, (a, -1))
numpy/core/tests/test_indexing.py:1350:        assert_raises(TypeError, np.take, a, [0], a)
numpy/core/tests/test_indexing.py:1363:        assert_raises(IndexError, a.__getitem__, [0.5, 1.5])
numpy/core/tests/test_indexing.py:1364:        assert_raises(IndexError, a.__getitem__, (['1', '2'],))
numpy/core/tests/test_indexing.py:1376:        assert_raises(IndexError, lambda: a[..., ...])
numpy/core/tests/test_indexing.py:1377:        assert_raises(IndexError, a.__getitem__, ((Ellipsis,) * 2,))
numpy/core/tests/test_indexing.py:1378:        assert_raises(IndexError, a.__getitem__, ((Ellipsis,) * 3,))
numpy/core/tests/test_indexing.py:1386:        assert_raises(IndexError, subscript, np.ones(()), 0)
numpy/core/tests/test_indexing.py:1388:        assert_raises(IndexError, subscript, np.ones(10), 11)
numpy/core/tests/test_indexing.py:1389:        assert_raises(IndexError, subscript, np.ones(10), -11)
numpy/core/tests/test_indexing.py:1390:        assert_raises(IndexError, subscript, np.ones((10, 10)), 11)
numpy/core/tests/test_indexing.py:1391:        assert_raises(IndexError, subscript, np.ones((10, 10)), -11)
numpy/core/tests/test_indexing.py:1394:        assert_array_equal(a[4], subscript(a, 4))
numpy/core/tests/test_indexing.py:1396:        assert_array_equal(a[-4], subscript(a, -4))
numpy/core/tests/test_indexing.py:1402:        assert_raises(ValueError, assign, np.ones(10), 0)
numpy/core/tests/test_indexing.py:1404:        assert_raises(IndexError, assign, np.ones(()), 0, 0)
numpy/core/tests/test_indexing.py:1406:        assert_raises(IndexError, assign, np.ones(10), 11, 0)
numpy/core/tests/test_indexing.py:1407:        assert_raises(IndexError, assign, np.ones(10), -11, 0)
numpy/core/tests/test_indexing.py:1408:        assert_raises(IndexError, assign, np.ones((10, 10)), 11, 0)
numpy/core/tests/test_indexing.py:1409:        assert_raises(IndexError, assign, np.ones((10, 10)), -11, 0)
numpy/core/tests/test_indexing.py:1413:        assert_(a[4] == 10)
numpy/core/tests/test_indexing.py:1417:        assert_array_equal(a[-1], [10, 10])
numpy/core/tests/test_umath.py:52:        assert_allclose(ncu.pi, 3.141592653589793, 1e-15)
numpy/core/tests/test_umath.py:55:        assert_allclose(ncu.e, 2.718281828459045, 1e-15)
numpy/core/tests/test_umath.py:58:        assert_allclose(ncu.euler_gamma, 0.5772156649015329, 1e-15)
numpy/core/tests/test_umath.py:68:            assert_(r is o)
numpy/core/tests/test_umath.py:70:            assert_(r is o)
numpy/core/tests/test_umath.py:72:            assert_(r is o)
numpy/core/tests/test_umath.py:79:            assert_(r1 is o1)
numpy/core/tests/test_umath.py:81:            assert_(r2 is o2)
numpy/core/tests/test_umath.py:83:            assert_(r1 is o1)
numpy/core/tests/test_umath.py:84:            assert_(r2 is o2)
numpy/core/tests/test_umath.py:87:            assert_(r1 is o1)
numpy/core/tests/test_umath.py:89:            assert_(r2 is o2)
numpy/core/tests/test_umath.py:91:            assert_(r1 is o1)
numpy/core/tests/test_umath.py:92:            assert_(r2 is o2)
numpy/core/tests/test_umath.py:98:            assert_raises(TypeError, np.add, a, 2, o, o, subok=subok)
numpy/core/tests/test_umath.py:99:            assert_raises(TypeError, np.add, a, 2, o, out=o, subok=subok)
numpy/core/tests/test_umath.py:100:            assert_raises(TypeError, np.add, a, 2, None, out=o, subok=subok)
numpy/core/tests/test_umath.py:101:            assert_raises(ValueError, np.add, a, 2, out=(o, o), subok=subok)
numpy/core/tests/test_umath.py:102:            assert_raises(ValueError, np.add, a, 2, out=(), subok=subok)
numpy/core/tests/test_umath.py:103:            assert_raises(TypeError, np.add, a, 2, [], subok=subok)
numpy/core/tests/test_umath.py:104:            assert_raises(TypeError, np.add, a, 2, out=[], subok=subok)
numpy/core/tests/test_umath.py:105:            assert_raises(TypeError, np.add, a, 2, out=([],), subok=subok)
numpy/core/tests/test_umath.py:107:            assert_raises(ValueError, np.add, a, 2, o, subok=subok)
numpy/core/tests/test_umath.py:108:            assert_raises(ValueError, np.add, a, 2, out=o, subok=subok)
numpy/core/tests/test_umath.py:109:            assert_raises(ValueError, np.add, a, 2, out=(o,), subok=subok)
numpy/core/tests/test_umath.py:126:                assert_(isinstance(r, ArrayWrap))
numpy/core/tests/test_umath.py:128:                assert_(type(r) == np.ndarray)
numpy/core/tests/test_umath.py:132:                assert_(isinstance(r, ArrayWrap))
numpy/core/tests/test_umath.py:134:                assert_(type(r) == np.ndarray)
numpy/core/tests/test_umath.py:138:                assert_(isinstance(r, ArrayWrap))
numpy/core/tests/test_umath.py:140:                assert_(type(r) == np.ndarray)
numpy/core/tests/test_umath.py:144:                assert_(isinstance(r, ArrayWrap))
numpy/core/tests/test_umath.py:146:                assert_(type(r) == np.ndarray)
numpy/core/tests/test_umath.py:154:                assert_(isinstance(r2, ArrayWrap))
numpy/core/tests/test_umath.py:156:                assert_(type(r2) == np.ndarray)
numpy/core/tests/test_umath.py:160:                assert_(isinstance(r2, ArrayWrap))
numpy/core/tests/test_umath.py:162:                assert_(type(r2) == np.ndarray)
numpy/core/tests/test_umath.py:166:                assert_(isinstance(r1, ArrayWrap))
numpy/core/tests/test_umath.py:168:                assert_(type(r1) == np.ndarray)
numpy/core/tests/test_umath.py:172:                assert_(isinstance(r2, ArrayWrap))
numpy/core/tests/test_umath.py:174:                assert_(type(r2) == np.ndarray)
numpy/core/tests/test_umath.py:178:                assert_(isinstance(r1, ArrayWrap))
numpy/core/tests/test_umath.py:180:                assert_(type(r1) == np.ndarray)
numpy/core/tests/test_umath.py:192:        assert_raises(ValueError, np.equal, a, a)
numpy/core/tests/test_umath.py:200:        assert_raises(TypeError, np.equal, a, a)
numpy/core/tests/test_umath.py:204:        assert_equal(np.equal(a, a), [False])
numpy/core/tests/test_umath.py:210:        assert_raises(ValueError, np.not_equal, a, a)
numpy/core/tests/test_umath.py:218:        assert_raises(TypeError, np.not_equal, a, a)
numpy/core/tests/test_umath.py:222:        assert_equal(np.not_equal(a, a), [True])
numpy/core/tests/test_umath.py:233:        assert_equal(a['b'].sum(), 0)
numpy/core/tests/test_umath.py:244:            assert_equal(x / 100, [0, 0, 0, 1, -1, -1, -1, -1, -2])
numpy/core/tests/test_umath.py:245:        assert_equal(x // 100, [0, 0, 0, 1, -1, -1, -1, -1, -2])
numpy/core/tests/test_umath.py:246:        assert_equal(x % 100, [5, 10, 90, 0, 95, 90, 10, 0, 80])
numpy/core/tests/test_umath.py:293:        assert all(div_ab == div_lst), msg
numpy/core/tests/test_umath.py:295:        assert all(ac == div_lst), msg_eq
numpy/core/tests/test_umath.py:304:            assert all(div_a == div_lst), msg
numpy/core/tests/test_umath.py:305:            assert all(ac == div_lst), msg_eq
numpy/core/tests/test_umath.py:347:        assert div_a == div_lst, msg
numpy/core/tests/test_umath.py:378:            assert dividend // divisor == quotient, msg
numpy/core/tests/test_umath.py:384:            assert all(dividend_array // divisor == quotient_array), msg
numpy/core/tests/test_umath.py:394:        assert_almost_equal(x**2/x, x, err_msg=msg)
numpy/core/tests/test_umath.py:399:        assert_almost_equal(y/x, [1, 1], err_msg=msg)
numpy/core/tests/test_umath.py:405:            assert_(np.isinf(y)[0])
numpy/core/tests/test_umath.py:407:            assert_(np.isinf(y)[0])
numpy/core/tests/test_umath.py:409:            assert_(np.isinf(y)[0])
numpy/core/tests/test_umath.py:411:            assert_(np.isinf(y)[0])
numpy/core/tests/test_umath.py:413:            assert_(np.isnan(y)[0])
numpy/core/tests/test_umath.py:429:        assert_equal(np.signbit(x//1), 0)
numpy/core/tests/test_umath.py:430:        assert_equal(np.signbit((-x)//1), 1)
numpy/core/tests/test_umath.py:440:            assert_raises(FloatingPointError, np.floor_divide, fone, fzer)
numpy/core/tests/test_umath.py:471:            assert_(np.isinf(z).all())
numpy/core/tests/test_umath.py:496:                    assert_equal(div*b + rem, a, err_msg=msg)
numpy/core/tests/test_umath.py:498:                        assert_(b < rem <= 0, msg)
numpy/core/tests/test_umath.py:500:                        assert_(b > rem >= 0, msg)
numpy/core/tests/test_umath.py:525:                assert_equal(div, tgtdiv, err_msg=msg)
numpy/core/tests/test_umath.py:526:                assert_equal(rem, tgtrem, err_msg=msg)
numpy/core/tests/test_umath.py:539:                    # Equal assertion should hold when fmod is used
numpy/core/tests/test_umath.py:540:                    assert_equal(div*b + rem, a, err_msg=msg)
numpy/core/tests/test_umath.py:542:                        assert_(b < rem <= 0, msg)
numpy/core/tests/test_umath.py:544:                        assert_(b > rem >= 0, msg)
numpy/core/tests/test_umath.py:559:            assert_raises(FloatingPointError, np.divmod, fone, fzero)
numpy/core/tests/test_umath.py:561:            assert_raises(FloatingPointError, np.divmod, fone, fzero)
numpy/core/tests/test_umath.py:563:            assert_raises(FloatingPointError, np.divmod, fzero, fzero)
numpy/core/tests/test_umath.py:565:            assert_raises(FloatingPointError, np.divmod, finf, finf)
numpy/core/tests/test_umath.py:567:            assert_raises(FloatingPointError, np.divmod, finf, fzero)
numpy/core/tests/test_umath.py:598:            assert_(mod == 0)
numpy/core/tests/test_umath.py:600:            assert_raises(FloatingPointError, np.divmod, 4, a)
numpy/core/tests/test_umath.py:602:            assert_raises(FloatingPointError, np.divmod, 4, a)
numpy/core/tests/test_umath.py:619:                assert_(np.isnan(div)), 'dt: %s, rem: %s' % (dt, rem)
numpy/core/tests/test_umath.py:645:            assert_(rem <= b, 'dt: %s' % dt)
numpy/core/tests/test_umath.py:647:            assert_(rem >= -b, 'dt: %s' % dt)
numpy/core/tests/test_umath.py:659:                assert_(np.isnan(rem), 'dt: %s, rem: %s' % (dt, rem))
numpy/core/tests/test_umath.py:662:                #assert_(rem == fone, 'dt: %s, rem: %s' % (dt, rem))
numpy/core/tests/test_umath.py:665:                assert_(np.isnan(fmod), 'dt: %s, fmod: %s' % (dt, fmod))
numpy/core/tests/test_umath.py:666:                assert_(np.isnan(rem), 'dt: %s, rem: %s' % (dt, rem))
numpy/core/tests/test_umath.py:669:                assert_(np.isnan(rem), 'dt: %s, rem: %s' % (dt, rem))
numpy/core/tests/test_umath.py:670:                assert_(np.isnan(fmod), 'dt: %s, fmod: %s' % (dt, fmod))
numpy/core/tests/test_umath.py:673:                assert_(np.isnan(rem), 'dt: %s, rem: %s' % (dt, rem))
numpy/core/tests/test_umath.py:674:                assert_(np.isnan(fmod), 'dt: %s, fmod: %s' % (dt, fmod))
numpy/core/tests/test_umath.py:677:                assert_(np.isnan(rem), 'dt: %s, rem: %s' % (dt, rem))
numpy/core/tests/test_umath.py:678:                assert_(np.isnan(fmod), 'dt: %s, fmod: %s' % (dt, fmod))
numpy/core/tests/test_umath.py:681:                assert_(np.isnan(rem), 'dt: %s, rem: %s' % (dt, rem))
numpy/core/tests/test_umath.py:682:                assert_(np.isnan(fmod), 'dt: %s, fmod: %s' % (dt, rem))
numpy/core/tests/test_umath.py:685:                assert_(np.isnan(rem), 'dt: %s, rem: %s' % (dt, rem))
numpy/core/tests/test_umath.py:686:                assert_(np.isnan(fmod), 'dt: %s, fmod: %s' % (dt, rem))
numpy/core/tests/test_umath.py:691:        assert_almost_equal((np.cbrt(np.float32(-2.5)**3)), -2.5)
numpy/core/tests/test_umath.py:695:        assert_almost_equal(np.cbrt(x**3), x)
numpy/core/tests/test_umath.py:697:        assert_(np.isnan(np.cbrt(np.nan)))
numpy/core/tests/test_umath.py:698:        assert_equal(np.cbrt(np.inf), np.inf)
numpy/core/tests/test_umath.py:699:        assert_equal(np.cbrt(-np.inf), -np.inf)
numpy/core/tests/test_umath.py:705:        assert_equal(x**0, [1., 1., 1.])
numpy/core/tests/test_umath.py:706:        assert_equal(x**1, x)
numpy/core/tests/test_umath.py:707:        assert_equal(x**2, [1., 4., 9.])
numpy/core/tests/test_umath.py:710:        assert_equal(y, [1., 4., 9.])
numpy/core/tests/test_umath.py:711:        assert_almost_equal(x**(-1), [1., 0.5, 1./3])
numpy/core/tests/test_umath.py:712:        assert_almost_equal(x**(0.5), [1., ncu.sqrt(2), ncu.sqrt(3)])
numpy/core/tests/test_umath.py:718:            assert_almost_equal(inp**(0.5), exp, err_msg=msg)
numpy/core/tests/test_umath.py:720:            assert_equal(out, exp, err_msg=msg)
numpy/core/tests/test_umath.py:726:            assert_almost_equal(inp**(0.5), exp, err_msg=msg)
numpy/core/tests/test_umath.py:728:            assert_equal(out, exp, err_msg=msg)
numpy/core/tests/test_umath.py:732:        assert_equal(x**0, [1., 1., 1.])
numpy/core/tests/test_umath.py:733:        assert_equal(x**1, x)
numpy/core/tests/test_umath.py:734:        assert_almost_equal(x**2, [-3+4j, -5+12j, -7+24j])
numpy/core/tests/test_umath.py:735:        assert_almost_equal(x**3, [(1+2j)**3, (2+3j)**3, (3+4j)**3])
numpy/core/tests/test_umath.py:736:        assert_almost_equal(x**4, [(1+2j)**4, (2+3j)**4, (3+4j)**4])
numpy/core/tests/test_umath.py:737:        assert_almost_equal(x**(-1), [1/(1+2j), 1/(2+3j), 1/(3+4j)])
numpy/core/tests/test_umath.py:738:        assert_almost_equal(x**(-2), [1/(1+2j)**2, 1/(2+3j)**2, 1/(3+4j)**2])
numpy/core/tests/test_umath.py:739:        assert_almost_equal(x**(-3), [(-11+2j)/125, (-46-9j)/2197,
numpy/core/tests/test_umath.py:741:        assert_almost_equal(x**(0.5), [ncu.sqrt(1+2j), ncu.sqrt(2+3j),
numpy/core/tests/test_umath.py:744:        assert_almost_equal(x**14 * norm,
numpy/core/tests/test_umath.py:750:            assert_array_equal(x.real, y.real)
numpy/core/tests/test_umath.py:751:            assert_array_equal(x.imag, y.imag)
numpy/core/tests/test_umath.py:756:                assert_complex_equal(z**1, z)
numpy/core/tests/test_umath.py:757:                assert_complex_equal(z**2, z*z)
numpy/core/tests/test_umath.py:758:                assert_complex_equal(z**3, z*z*z)
numpy/core/tests/test_umath.py:770:            assert_array_equal(x.real, y.real)
numpy/core/tests/test_umath.py:771:            assert_array_equal(x.imag, y.imag)
numpy/core/tests/test_umath.py:775:            assert_complex_equal(np.power(zero, p), zero)
numpy/core/tests/test_umath.py:778:        assert_complex_equal(np.power(zero, 0), one)
numpy/core/tests/test_umath.py:780:            assert_complex_equal(np.power(zero, 0+1j), cnan)
numpy/core/tests/test_umath.py:784:                assert_complex_equal(np.power(zero, -p), cnan)
numpy/core/tests/test_umath.py:785:            assert_complex_equal(np.power(zero, -1+0.2j), cnan)
numpy/core/tests/test_umath.py:790:        assert_((x**2.00001).dtype is res.dtype)
numpy/core/tests/test_umath.py:791:        assert_array_equal(res, [1, 4, 9])
numpy/core/tests/test_umath.py:793:        assert_(not np.may_share_memory(res, x))
numpy/core/tests/test_umath.py:794:        assert_array_equal(x, [1, 2, 3])
numpy/core/tests/test_umath.py:798:        assert_equal(res.shape, (1, 1, 3))
numpy/core/tests/test_umath.py:803:        assert_equal(b, [437893890380859375, 437893890380859375])
numpy/core/tests/test_umath.py:809:            assert_equal(np.power(arr, 0), np.ones_like(arr))
numpy/core/tests/test_umath.py:814:            assert_equal(np.power(arr, 0), np.ones_like(arr))
numpy/core/tests/test_umath.py:820:            assert_equal(np.power(1, arr), np.ones_like(arr))
numpy/core/tests/test_umath.py:826:            assert_equal(np.power(0, arr), np.zeros_like(arr))
numpy/core/tests/test_umath.py:835:            assert_raises(ValueError, np.power, a, b)
numpy/core/tests/test_umath.py:836:            assert_raises(ValueError, np.power, a, minusone)
numpy/core/tests/test_umath.py:837:            assert_raises(ValueError, np.power, one, b)
numpy/core/tests/test_umath.py:838:            assert_raises(ValueError, np.power, one, minusone)
numpy/core/tests/test_umath.py:849:            assert_(res.dtype.name == np.dtype(dtout).name, msg)
numpy/core/tests/test_umath.py:859:        assert_almost_equal(np.log2(xf), yf)
numpy/core/tests/test_umath.py:866:        assert_equal(v, float(i), err_msg='at exponent %d' % i)
numpy/core/tests/test_umath.py:869:        assert_equal(np.log2(1.), 0.)
numpy/core/tests/test_umath.py:870:        assert_equal(np.log2(np.inf), np.inf)
numpy/core/tests/test_umath.py:871:        assert_(np.isnan(np.log2(np.nan)))
numpy/core/tests/test_umath.py:875:            assert_(np.isnan(np.log2(-1.)))
numpy/core/tests/test_umath.py:876:            assert_(np.isnan(np.log2(-np.inf)))
numpy/core/tests/test_umath.py:877:            assert_equal(np.log2(0.), -np.inf)
numpy/core/tests/test_umath.py:878:            assert_(w[0].category is RuntimeWarning)
numpy/core/tests/test_umath.py:879:            assert_(w[1].category is RuntimeWarning)
numpy/core/tests/test_umath.py:880:            assert_(w[2].category is RuntimeWarning)
numpy/core/tests/test_umath.py:890:            assert_almost_equal(np.exp2(yf), xf)
numpy/core/tests/test_umath.py:903:            assert_almost_equal(np.logaddexp2(xf, yf), zf, decimal=dec_)
numpy/core/tests/test_umath.py:913:            assert_almost_equal(np.logaddexp2(logxf, logyf), logzf)
numpy/core/tests/test_umath.py:925:                assert_equal(np.logaddexp2(logxf, logyf), logzf)
numpy/core/tests/test_umath.py:928:        assert_(np.isnan(np.logaddexp2(np.nan, np.inf)))
numpy/core/tests/test_umath.py:929:        assert_(np.isnan(np.logaddexp2(np.inf, np.nan)))
numpy/core/tests/test_umath.py:930:        assert_(np.isnan(np.logaddexp2(np.nan, 0)))
numpy/core/tests/test_umath.py:931:        assert_(np.isnan(np.logaddexp2(0, np.nan)))
numpy/core/tests/test_umath.py:932:        assert_(np.isnan(np.logaddexp2(np.nan, np.nan)))
numpy/core/tests/test_umath.py:935:        assert_equal(np.logaddexp2.identity, -np.inf)
numpy/core/tests/test_umath.py:936:        assert_equal(np.logaddexp2.reduce([]), -np.inf)
numpy/core/tests/test_umath.py:937:        assert_equal(np.logaddexp2.reduce([-np.inf]), -np.inf)
numpy/core/tests/test_umath.py:938:        assert_equal(np.logaddexp2.reduce([-np.inf, 0]), 0)
numpy/core/tests/test_umath.py:949:            assert_almost_equal(np.log(xf), yf)
numpy/core/tests/test_umath.py:954:        assert_almost_equal(np.log(x, out=x), xf)
numpy/core/tests/test_umath.py:973:                assert_array_almost_equal_nulp(np.log(x_f64[::jj]), y_true[::jj], nulp=2)
numpy/core/tests/test_umath.py:974:                assert_array_almost_equal_nulp(np.log(x_special[::jj]), y_special[::jj], nulp=2)
numpy/core/tests/test_umath.py:984:            assert_almost_equal(np.exp(yf), xf)
numpy/core/tests/test_umath.py:994:                assert_array_almost_equal_nulp(np.exp(x_f64[::jj]), y_true[::jj], nulp=2)
numpy/core/tests/test_umath.py:1004:                assert_equal(np.exp(yf), xf)
numpy/core/tests/test_umath.py:1013:            assert_raises(FloatingPointError, np.exp, np.float32(100.))
numpy/core/tests/test_umath.py:1014:            assert_raises(FloatingPointError, np.exp, np.float32(1E19))
numpy/core/tests/test_umath.py:1015:            assert_raises(FloatingPointError, np.exp, np.float64(800.))
numpy/core/tests/test_umath.py:1016:            assert_raises(FloatingPointError, np.exp, np.float64(1E19))
numpy/core/tests/test_umath.py:1019:            assert_raises(FloatingPointError, np.exp, np.float32(-1000.))
numpy/core/tests/test_umath.py:1020:            assert_raises(FloatingPointError, np.exp, np.float32(-1E19))
numpy/core/tests/test_umath.py:1021:            assert_raises(FloatingPointError, np.exp, np.float64(-1000.))
numpy/core/tests/test_umath.py:1022:            assert_raises(FloatingPointError, np.exp, np.float64(-1E19))
numpy/core/tests/test_umath.py:1033:                assert_equal(np.log(yf), xf)
numpy/core/tests/test_umath.py:1034:                assert_equal(np.log2(yf), xf)
numpy/core/tests/test_umath.py:1035:                assert_equal(np.log10(yf), xf)
numpy/core/tests/test_umath.py:1036:                assert_equal(np.log1p(yf1p), xf)
numpy/core/tests/test_umath.py:1080:                assert_equal(np.sin(yf), xf)
numpy/core/tests/test_umath.py:1081:                assert_equal(np.cos(yf), xf)
numpy/core/tests/test_umath.py:1084:            assert_raises(FloatingPointError, np.sin, np.float32(-np.inf))
numpy/core/tests/test_umath.py:1085:            assert_raises(FloatingPointError, np.sin, np.float32(np.inf))
numpy/core/tests/test_umath.py:1086:            assert_raises(FloatingPointError, np.cos, np.float32(-np.inf))
numpy/core/tests/test_umath.py:1087:            assert_raises(FloatingPointError, np.cos, np.float32(np.inf))
numpy/core/tests/test_umath.py:1096:            assert_equal(np.sqrt(yf), xf)
numpy/core/tests/test_umath.py:1109:            assert_equal(np.abs(yf), xf)
numpy/core/tests/test_umath.py:1118:                assert_equal(np.square(yf), xf)
numpy/core/tests/test_umath.py:1133:                assert_equal(np.reciprocal(yf), xf)
numpy/core/tests/test_umath.py:1147:                assert_equal(np.tan(in_arr), out_arr)
numpy/core/tests/test_umath.py:1163:                assert_equal(np.arcsin(in_arr), out_arr)
numpy/core/tests/test_umath.py:1164:                assert_equal(np.arccos(in_arr), out_arr)
numpy/core/tests/test_umath.py:1180:                assert_equal(np.arctan(in_arr), out_arr)
numpy/core/tests/test_umath.py:1188:            assert_equal(np.sinh(in_arr), out_arr)
numpy/core/tests/test_umath.py:1202:            assert_equal(np.cosh(in_arr), out_arr)
numpy/core/tests/test_umath.py:1216:            assert_equal(np.tanh(in_arr), out_arr)
numpy/core/tests/test_umath.py:1224:            assert_equal(np.arcsinh(in_arr), out_arr)
numpy/core/tests/test_umath.py:1233:                assert_equal(np.arccosh(in_arr), out_arr)
numpy/core/tests/test_umath.py:1248:                assert_equal(np.arctanh(in_arr), out_arr)
numpy/core/tests/test_umath.py:1268:                assert_equal(np.exp2(in_arr), out_arr)
numpy/core/tests/test_umath.py:1283:                assert_equal(np.expm1(in_arr), out_arr)
numpy/core/tests/test_umath.py:1299:        assert_equal(np.isnan(arr_f32[::stride]), nan[::stride])
numpy/core/tests/test_umath.py:1300:        assert_equal(np.isnan(arr_f64[::stride]), nan[::stride])
numpy/core/tests/test_umath.py:1301:        assert_equal(np.isinf(arr_f32[::stride]), inf[::stride])
numpy/core/tests/test_umath.py:1302:        assert_equal(np.isinf(arr_f64[::stride]), inf[::stride])
numpy/core/tests/test_umath.py:1303:        assert_equal(np.signbit(arr_f32[::stride]), sign[::stride])
numpy/core/tests/test_umath.py:1304:        assert_equal(np.signbit(arr_f64[::stride]), sign[::stride])
numpy/core/tests/test_umath.py:1305:        assert_equal(np.isfinite(arr_f32[::stride]), finite[::stride])
numpy/core/tests/test_umath.py:1306:        assert_equal(np.isfinite(arr_f64[::stride]), finite[::stride])
numpy/core/tests/test_umath.py:1315:        assert_equal(np.ldexp(mant[::stride], exp[::stride], out=out[::stride]), np.ones(8, dtype=dtype)[::stride])
numpy/core/tests/test_umath.py:1316:        assert_equal(out[::stride], np.ones(8, dtype=dtype)[::stride])
numpy/core/tests/test_umath.py:1330:        assert_equal(mant_true[::stride], mant)
numpy/core/tests/test_umath.py:1331:        assert_equal(exp_true[::stride], exp)
numpy/core/tests/test_umath.py:1332:        assert_equal(out_mant[::stride], mant_true[::stride])
numpy/core/tests/test_umath.py:1333:        assert_equal(out_exp[::stride], exp_true[::stride])
numpy/core/tests/test_umath.py:1362:                    assert_equal(myfunc(x_f32), np.float32(y_true128))
numpy/core/tests/test_umath.py:1363:                    assert_equal(myfunc(x_f64), np.float64(y_true128))
numpy/core/tests/test_umath.py:1365:                    assert_array_max_ulp(myfunc(x_f32), np.float32(y_true128),
numpy/core/tests/test_umath.py:1367:                    assert_array_max_ulp(myfunc(x_f64), np.float64(y_true128),
numpy/core/tests/test_umath.py:1374:                        assert_equal(myfunc(x_f64[::jj]), y_true64[::jj])
numpy/core/tests/test_umath.py:1375:                        assert_equal(myfunc(x_f32[::jj]), y_true32[::jj])
numpy/core/tests/test_umath.py:1382:        assert_array_max_ulp(np.exp(x_f32), np.float32(np.exp(x_f64)), maxulp=3)
numpy/core/tests/test_umath.py:1388:        assert_array_max_ulp(np.log(x_f32), np.float32(np.log(x_f64)), maxulp=4)
numpy/core/tests/test_umath.py:1401:        assert_array_max_ulp(np.sin(x_f32), np.float32(np.sin(x_f64)), maxulp=2)
numpy/core/tests/test_umath.py:1402:        assert_array_max_ulp(np.cos(x_f32), np.float32(np.cos(x_f64)), maxulp=2)
numpy/core/tests/test_umath.py:1405:        assert_array_max_ulp(np.sin(x_f32, out=x_f32), np.float32(np.sin(x_f64)), maxulp=2)
numpy/core/tests/test_umath.py:1406:        assert_array_max_ulp(np.cos(tx_f32, out=tx_f32), np.float32(np.cos(x_f64)), maxulp=2)
numpy/core/tests/test_umath.py:1421:                assert_array_almost_equal_nulp(np.exp(x_f32[::jj]), exp_true[::jj], nulp=2)
numpy/core/tests/test_umath.py:1422:                assert_array_almost_equal_nulp(np.log(x_f32[::jj]), log_true[::jj], nulp=2)
numpy/core/tests/test_umath.py:1423:                assert_array_almost_equal_nulp(np.sin(x_f32_large[::jj]), sin_true[::jj], nulp=2)
numpy/core/tests/test_umath.py:1424:                assert_array_almost_equal_nulp(np.cos(x_f32_large[::jj]), cos_true[::jj], nulp=2)
numpy/core/tests/test_umath.py:1435:            assert_almost_equal(np.logaddexp(xf, yf), zf, decimal=dec_)
numpy/core/tests/test_umath.py:1445:            assert_almost_equal(np.logaddexp(logxf, logyf), logzf)
numpy/core/tests/test_umath.py:1457:                assert_equal(np.logaddexp(logxf, logyf), logzf)
numpy/core/tests/test_umath.py:1460:        assert_(np.isnan(np.logaddexp(np.nan, np.inf)))
numpy/core/tests/test_umath.py:1461:        assert_(np.isnan(np.logaddexp(np.inf, np.nan)))
numpy/core/tests/test_umath.py:1462:        assert_(np.isnan(np.logaddexp(np.nan, 0)))
numpy/core/tests/test_umath.py:1463:        assert_(np.isnan(np.logaddexp(0, np.nan)))
numpy/core/tests/test_umath.py:1464:        assert_(np.isnan(np.logaddexp(np.nan, np.nan)))
numpy/core/tests/test_umath.py:1467:        assert_equal(np.logaddexp.identity, -np.inf)
numpy/core/tests/test_umath.py:1468:        assert_equal(np.logaddexp.reduce([]), -np.inf)
numpy/core/tests/test_umath.py:1473:        assert_almost_equal(ncu.log1p(0.2), ncu.log(1.2))
numpy/core/tests/test_umath.py:1474:        assert_almost_equal(ncu.log1p(1e-6), ncu.log(1+1e-6))
numpy/core/tests/test_umath.py:1478:            assert_equal(ncu.log1p(np.nan), np.nan)
numpy/core/tests/test_umath.py:1479:            assert_equal(ncu.log1p(np.inf), np.inf)
numpy/core/tests/test_umath.py:1480:            assert_equal(ncu.log1p(-1.), -np.inf)
numpy/core/tests/test_umath.py:1481:            assert_equal(ncu.log1p(-2.), np.nan)
numpy/core/tests/test_umath.py:1482:            assert_equal(ncu.log1p(-np.inf), np.nan)
numpy/core/tests/test_umath.py:1487:        assert_almost_equal(ncu.expm1(0.2), ncu.exp(0.2)-1)
numpy/core/tests/test_umath.py:1488:        assert_almost_equal(ncu.expm1(1e-6), ncu.exp(1e-6)-1)
numpy/core/tests/test_umath.py:1491:        assert_equal(ncu.expm1(np.inf), np.inf)
numpy/core/tests/test_umath.py:1492:        assert_equal(ncu.expm1(0.), 0.)
numpy/core/tests/test_umath.py:1493:        assert_equal(ncu.expm1(-0.), -0.)
numpy/core/tests/test_umath.py:1494:        assert_equal(ncu.expm1(np.inf), np.inf)
numpy/core/tests/test_umath.py:1495:        assert_equal(ncu.expm1(-np.inf), -1.)
numpy/core/tests/test_umath.py:1499:        assert_allclose(x, ncu.expm1(x))
numpy/core/tests/test_umath.py:1501:        assert_allclose(x, ncu.expm1(x))
numpy/core/tests/test_umath.py:1506:        assert_almost_equal(ncu.hypot(1, 1), ncu.sqrt(2))
numpy/core/tests/test_umath.py:1507:        assert_almost_equal(ncu.hypot(0, 0), 0)
numpy/core/tests/test_umath.py:1510:        assert_almost_equal(ncu.hypot.reduce([3.0, 4.0]), 5.0)
numpy/core/tests/test_umath.py:1511:        assert_almost_equal(ncu.hypot.reduce([3.0, 4.0, 0]), 5.0)
numpy/core/tests/test_umath.py:1512:        assert_almost_equal(ncu.hypot.reduce([9.0, 12.0, 20.0]), 25.0)
numpy/core/tests/test_umath.py:1513:        assert_equal(ncu.hypot.reduce([]), 0.0)
numpy/core/tests/test_umath.py:1518:        assert_(np.isnan(ncu.hypot(x, y)),
numpy/core/tests/test_umath.py:1524:        assert_(np.isinf(ncu.hypot(x, y)),
numpy/core/tests/test_umath.py:1530:        assert_hypot_isnan(np.nan, np.nan)
numpy/core/tests/test_umath.py:1531:        assert_hypot_isnan(np.nan, 1)
numpy/core/tests/test_umath.py:1534:        assert_hypot_isinf(np.nan, np.inf)
numpy/core/tests/test_umath.py:1535:        assert_hypot_isinf(np.inf, np.nan)
numpy/core/tests/test_umath.py:1536:        assert_hypot_isinf(np.inf, 0)
numpy/core/tests/test_umath.py:1537:        assert_hypot_isinf(0, np.inf)
numpy/core/tests/test_umath.py:1538:        assert_hypot_isinf(np.inf, np.inf)
numpy/core/tests/test_umath.py:1539:        assert_hypot_isinf(np.inf, 23.0)
numpy/core/tests/test_umath.py:1542:        assert_no_warnings(ncu.hypot, np.inf, 0)
numpy/core/tests/test_umath.py:1546:    assert_(np.isnan(ncu.arctan2(x, y)), "arctan(%s, %s) is %s, not nan" % (x, y, ncu.arctan2(x, y)))
numpy/core/tests/test_umath.py:1550:    assert_((np.isinf(ncu.arctan2(x, y)) and ncu.arctan2(x, y) > 0), "arctan(%s, %s) is %s, not +inf" % (x, y, ncu.arctan2(x, y)))
numpy/core/tests/test_umath.py:1554:    assert_((np.isinf(ncu.arctan2(x, y)) and ncu.arctan2(x, y) < 0), "arctan(%s, %s) is %s, not -inf" % (x, y, ncu.arctan2(x, y)))
numpy/core/tests/test_umath.py:1558:    assert_((ncu.arctan2(x, y) == 0 and not np.signbit(ncu.arctan2(x, y))), "arctan(%s, %s) is %s, not +0" % (x, y, ncu.arctan2(x, y)))
numpy/core/tests/test_umath.py:1562:    assert_((ncu.arctan2(x, y) == 0 and np.signbit(ncu.arctan2(x, y))), "arctan(%s, %s) is %s, not -0" % (x, y, ncu.arctan2(x, y)))
numpy/core/tests/test_umath.py:1568:        assert_almost_equal(ncu.arctan2(1, 1), 0.25 * np.pi)
numpy/core/tests/test_umath.py:1569:        assert_almost_equal(ncu.arctan2(-1, 1), -0.25 * np.pi)
numpy/core/tests/test_umath.py:1570:        assert_almost_equal(ncu.arctan2(1, -1), 0.75 * np.pi)
numpy/core/tests/test_umath.py:1574:        assert_almost_equal(ncu.arctan2(np.PZERO, np.NZERO), np.pi)
numpy/core/tests/test_umath.py:1575:        assert_almost_equal(ncu.arctan2(np.NZERO, np.NZERO), -np.pi)
numpy/core/tests/test_umath.py:1579:        assert_arctan2_ispzero(np.PZERO, np.PZERO)
numpy/core/tests/test_umath.py:1580:        assert_arctan2_isnzero(np.NZERO, np.PZERO)
numpy/core/tests/test_umath.py:1584:        assert_almost_equal(ncu.arctan2(np.PZERO, -1), np.pi)
numpy/core/tests/test_umath.py:1585:        assert_almost_equal(ncu.arctan2(np.NZERO, -1), -np.pi)
numpy/core/tests/test_umath.py:1589:        assert_arctan2_ispzero(np.PZERO, 1)
numpy/core/tests/test_umath.py:1590:        assert_arctan2_isnzero(np.NZERO, 1)
numpy/core/tests/test_umath.py:1594:        assert_almost_equal(ncu.arctan2(1, np.PZERO), 0.5 * np.pi)
numpy/core/tests/test_umath.py:1595:        assert_almost_equal(ncu.arctan2(1, np.NZERO), 0.5 * np.pi)
numpy/core/tests/test_umath.py:1599:        assert_almost_equal(ncu.arctan2(-1, np.PZERO), -0.5 * np.pi)
numpy/core/tests/test_umath.py:1600:        assert_almost_equal(ncu.arctan2(-1, np.NZERO), -0.5 * np.pi)
numpy/core/tests/test_umath.py:1604:        assert_almost_equal(ncu.arctan2(1, np.NINF),  np.pi)
numpy/core/tests/test_umath.py:1605:        assert_almost_equal(ncu.arctan2(-1, np.NINF), -np.pi)
numpy/core/tests/test_umath.py:1609:        assert_arctan2_ispzero(1, np.inf)
numpy/core/tests/test_umath.py:1610:        assert_arctan2_isnzero(-1, np.inf)
numpy/core/tests/test_umath.py:1614:        assert_almost_equal(ncu.arctan2( np.inf, 1),  0.5 * np.pi)
numpy/core/tests/test_umath.py:1615:        assert_almost_equal(ncu.arctan2(-np.inf, 1), -0.5 * np.pi)
numpy/core/tests/test_umath.py:1619:        assert_almost_equal(ncu.arctan2( np.inf, -np.inf),  0.75 * np.pi)
numpy/core/tests/test_umath.py:1620:        assert_almost_equal(ncu.arctan2(-np.inf, -np.inf), -0.75 * np.pi)
numpy/core/tests/test_umath.py:1624:        assert_almost_equal(ncu.arctan2( np.inf, np.inf),  0.25 * np.pi)
numpy/core/tests/test_umath.py:1625:        assert_almost_equal(ncu.arctan2(-np.inf, np.inf), -0.25 * np.pi)
numpy/core/tests/test_umath.py:1629:        assert_arctan2_isnan(np.nan, np.inf)
numpy/core/tests/test_umath.py:1630:        assert_arctan2_isnan(np.inf, np.nan)
numpy/core/tests/test_umath.py:1631:        assert_arctan2_isnan(np.nan, np.nan)
numpy/core/tests/test_umath.py:1636:        assert_almost_equal(ncu.ldexp(np.array(2., np.float32),
numpy/core/tests/test_umath.py:1638:        assert_almost_equal(ncu.ldexp(np.array(2., np.float64),
numpy/core/tests/test_umath.py:1640:        assert_almost_equal(ncu.ldexp(np.array(2., np.longdouble),
numpy/core/tests/test_umath.py:1645:        assert_almost_equal(ncu.ldexp(2., 3),  16.)
numpy/core/tests/test_umath.py:1658:            assert_equal(ncu.ldexp(2., imax), np.inf)
numpy/core/tests/test_umath.py:1659:            assert_equal(ncu.ldexp(2., imin), 0)
numpy/core/tests/test_umath.py:1672:            assert_equal(func(tmp1), 10)
numpy/core/tests/test_umath.py:1673:            assert_equal(func(tmp2), 10)
numpy/core/tests/test_umath.py:1677:            assert_equal(func(tmp1), 10)
numpy/core/tests/test_umath.py:1678:            assert_equal(func(tmp2), 10)
numpy/core/tests/test_umath.py:1681:            assert_equal(func(tmp1), np.nan)
numpy/core/tests/test_umath.py:1682:            assert_equal(func(tmp2), np.nan)
numpy/core/tests/test_umath.py:1685:        assert_equal(np.maximum.reduce([1, 2j]), 1)
numpy/core/tests/test_umath.py:1686:        assert_equal(np.maximum.reduce([1+3j, 2j]), 1+3j)
numpy/core/tests/test_umath.py:1693:        assert_equal(np.maximum(arg1, arg2), out)
numpy/core/tests/test_umath.py:1703:            assert_(np.maximum(x, y) == 1.0)
numpy/core/tests/test_umath.py:1704:            assert_(np.maximum(z, y) == 1.0)
numpy/core/tests/test_umath.py:1712:            assert_equal(np.maximum(arg1, arg2), out)
numpy/core/tests/test_umath.py:1717:        assert_equal(np.maximum(arg1, arg2), arg2)
numpy/core/tests/test_umath.py:1725:        assert_equal(np.maximum(arr1,arr2), maxtrue)
numpy/core/tests/test_umath.py:1726:        assert_equal(np.maximum(arr1[::2],arr2[::2]), maxtrue[::2])
numpy/core/tests/test_umath.py:1727:        assert_equal(np.maximum(arr1[:4:], arr2[::2]), np.array([-2.0, np.nan, 10.0, 1.0]))
numpy/core/tests/test_umath.py:1728:        assert_equal(np.maximum(arr1[::3], arr2[:3:]), np.array([-2.0, 0.0, np.nan]))
numpy/core/tests/test_umath.py:1729:        assert_equal(np.maximum(arr1[:6:2], arr2[::3], out=out[::3]), np.array([-2.0, 10., np.nan]))
numpy/core/tests/test_umath.py:1730:        assert_equal(out, out_maxtrue)
numpy/core/tests/test_umath.py:1750:                assert_equal(np.maximum([v1], [v2]), [expected])
numpy/core/tests/test_umath.py:1751:                assert_equal(np.maximum.reduce([v1, v2]), expected)
numpy/core/tests/test_umath.py:1764:            assert_equal(func(tmp1), 0)
numpy/core/tests/test_umath.py:1765:            assert_equal(func(tmp2), 0)
numpy/core/tests/test_umath.py:1769:            assert_equal(func(tmp1), 0)
numpy/core/tests/test_umath.py:1770:            assert_equal(func(tmp2), 0)
numpy/core/tests/test_umath.py:1773:            assert_equal(func(tmp1), np.nan)
numpy/core/tests/test_umath.py:1774:            assert_equal(func(tmp2), np.nan)
numpy/core/tests/test_umath.py:1777:        assert_equal(np.minimum.reduce([1, 2j]), 2j)
numpy/core/tests/test_umath.py:1778:        assert_equal(np.minimum.reduce([1+3j, 2j]), 2j)
numpy/core/tests/test_umath.py:1785:        assert_equal(np.minimum(arg1, arg2), out)
numpy/core/tests/test_umath.py:1795:            assert_(np.minimum(x, y) == 1.0)
numpy/core/tests/test_umath.py:1796:            assert_(np.minimum(z, y) == 1.0)
numpy/core/tests/test_umath.py:1804:            assert_equal(np.minimum(arg1, arg2), out)
numpy/core/tests/test_umath.py:1809:        assert_equal(np.minimum(arg1, arg2), arg1)
numpy/core/tests/test_umath.py:1817:        assert_equal(np.minimum(arr1,arr2), mintrue)
numpy/core/tests/test_umath.py:1818:        assert_equal(np.minimum(arr1[::2],arr2[::2]), mintrue[::2])
numpy/core/tests/test_umath.py:1819:        assert_equal(np.minimum(arr1[:4:], arr2[::2]), np.array([-4.0, np.nan, 0.0, 0.0]))
numpy/core/tests/test_umath.py:1820:        assert_equal(np.minimum(arr1[::3], arr2[:3:]), np.array([-4.0, -1.0, np.nan]))
numpy/core/tests/test_umath.py:1821:        assert_equal(np.minimum(arr1[:6:2], arr2[::3], out=out[::3]), np.array([-4.0, 1.0, np.nan]))
numpy/core/tests/test_umath.py:1822:        assert_equal(out, out_mintrue)
numpy/core/tests/test_umath.py:1842:                assert_equal(np.minimum([v1], [v2]), [expected])
numpy/core/tests/test_umath.py:1843:                assert_equal(np.minimum.reduce([v1, v2]), expected)
numpy/core/tests/test_umath.py:1856:            assert_equal(func(tmp1), 10)
numpy/core/tests/test_umath.py:1857:            assert_equal(func(tmp2), 10)
numpy/core/tests/test_umath.py:1861:            assert_equal(func(tmp1), 10)
numpy/core/tests/test_umath.py:1862:            assert_equal(func(tmp2), 10)
numpy/core/tests/test_umath.py:1865:            assert_equal(func(tmp1), 9)
numpy/core/tests/test_umath.py:1866:            assert_equal(func(tmp2), 9)
numpy/core/tests/test_umath.py:1869:        assert_equal(np.fmax.reduce([1, 2j]), 1)
numpy/core/tests/test_umath.py:1870:        assert_equal(np.fmax.reduce([1+3j, 2j]), 1+3j)
numpy/core/tests/test_umath.py:1877:        assert_equal(np.fmax(arg1, arg2), out)
numpy/core/tests/test_umath.py:1885:            assert_equal(np.fmax(arg1, arg2), out)
numpy/core/tests/test_umath.py:1905:                assert_equal(np.fmax([v1], [v2]), [expected])
numpy/core/tests/test_umath.py:1906:                assert_equal(np.fmax.reduce([v1, v2]), expected)
numpy/core/tests/test_umath.py:1919:            assert_equal(func(tmp1), 0)
numpy/core/tests/test_umath.py:1920:            assert_equal(func(tmp2), 0)
numpy/core/tests/test_umath.py:1924:            assert_equal(func(tmp1), 0)
numpy/core/tests/test_umath.py:1925:            assert_equal(func(tmp2), 0)
numpy/core/tests/test_umath.py:1928:            assert_equal(func(tmp1), 1)
numpy/core/tests/test_umath.py:1929:            assert_equal(func(tmp2), 1)
numpy/core/tests/test_umath.py:1932:        assert_equal(np.fmin.reduce([1, 2j]), 2j)
numpy/core/tests/test_umath.py:1933:        assert_equal(np.fmin.reduce([1+3j, 2j]), 2j)
numpy/core/tests/test_umath.py:1940:        assert_equal(np.fmin(arg1, arg2), out)
numpy/core/tests/test_umath.py:1948:            assert_equal(np.fmin(arg1, arg2), out)
numpy/core/tests/test_umath.py:1968:                assert_equal(np.fmin([v1], [v2]), [expected])
numpy/core/tests/test_umath.py:1969:                assert_equal(np.fmin.reduce([v1, v2]), expected)
numpy/core/tests/test_umath.py:1975:        assert_raises(TypeError, np.negative, a)
numpy/core/tests/test_umath.py:1976:        assert_raises(TypeError, np.positive, a)
numpy/core/tests/test_umath.py:1977:        assert_raises(TypeError, np.subtract, a, a)
numpy/core/tests/test_umath.py:1994:                assert_equal(func(arg1, arg2).astype(bool), out)
numpy/core/tests/test_umath.py:1998:                assert_equal(func(arg1, arg2).astype(bool), out)
numpy/core/tests/test_umath.py:2002:                assert_equal(func(arg1, arg2).astype(bool), out)
numpy/core/tests/test_umath.py:2009:        assert_equal(np.bitwise_or(arg1, arg2), out)
numpy/core/tests/test_umath.py:2012:        assert_equal(np.bitwise_and(arg1, arg2), out)
numpy/core/tests/test_umath.py:2015:        assert_equal(np.bitwise_xor(arg1, arg2), out)
numpy/core/tests/test_umath.py:2026:            assert_equal(np.logical_and.reduce(arr), all(arr))
numpy/core/tests/test_umath.py:2029:            assert_equal(np.logical_or.reduce(arr), any(arr))
numpy/core/tests/test_umath.py:2032:            assert_equal(np.logical_xor.reduce(arr), arr.sum() % 2 == 1)
numpy/core/tests/test_umath.py:2045:            assert_equal(np.bitwise_not(zeros), ones, err_msg=msg)
numpy/core/tests/test_umath.py:2046:            assert_equal(np.bitwise_not(ones), zeros, err_msg=msg)
numpy/core/tests/test_umath.py:2048:            assert_equal(np.bitwise_or(zeros, zeros), zeros, err_msg=msg)
numpy/core/tests/test_umath.py:2049:            assert_equal(np.bitwise_or(zeros, ones), ones, err_msg=msg)
numpy/core/tests/test_umath.py:2050:            assert_equal(np.bitwise_or(ones, zeros), ones, err_msg=msg)
numpy/core/tests/test_umath.py:2051:            assert_equal(np.bitwise_or(ones, ones), ones, err_msg=msg)
numpy/core/tests/test_umath.py:2053:            assert_equal(np.bitwise_xor(zeros, zeros), zeros, err_msg=msg)
numpy/core/tests/test_umath.py:2054:            assert_equal(np.bitwise_xor(zeros, ones), ones, err_msg=msg)
numpy/core/tests/test_umath.py:2055:            assert_equal(np.bitwise_xor(ones, zeros), ones, err_msg=msg)
numpy/core/tests/test_umath.py:2056:            assert_equal(np.bitwise_xor(ones, ones), zeros, err_msg=msg)
numpy/core/tests/test_umath.py:2058:            assert_equal(np.bitwise_and(zeros, zeros), zeros, err_msg=msg)
numpy/core/tests/test_umath.py:2059:            assert_equal(np.bitwise_and(zeros, ones), zeros, err_msg=msg)
numpy/core/tests/test_umath.py:2060:            assert_equal(np.bitwise_and(ones, zeros), zeros, err_msg=msg)
numpy/core/tests/test_umath.py:2061:            assert_equal(np.bitwise_and(ones, ones), ones, err_msg=msg)
numpy/core/tests/test_umath.py:2069:            assert_(np.bitwise_not(zeros).dtype == dt, msg)
numpy/core/tests/test_umath.py:2070:            assert_(np.bitwise_or(zeros, zeros).dtype == dt, msg)
numpy/core/tests/test_umath.py:2071:            assert_(np.bitwise_xor(zeros, zeros).dtype == dt, msg)
numpy/core/tests/test_umath.py:2072:            assert_(np.bitwise_and(zeros, zeros).dtype == dt, msg)
numpy/core/tests/test_umath.py:2075:        assert_(np.bitwise_or.identity == 0, 'bitwise_or')
numpy/core/tests/test_umath.py:2076:        assert_(np.bitwise_xor.identity == 0, 'bitwise_xor')
numpy/core/tests/test_umath.py:2077:        assert_(np.bitwise_and.identity == -1, 'bitwise_and')
numpy/core/tests/test_umath.py:2087:                assert_equal(f.reduce(zeros), zeros, err_msg=msg)
numpy/core/tests/test_umath.py:2088:                assert_equal(f.reduce(ones), ones, err_msg=msg)
numpy/core/tests/test_umath.py:2098:                assert_equal(res, tgt, err_msg=msg)
numpy/core/tests/test_umath.py:2099:                assert_(res.dtype == tgt.dtype, msg)
numpy/core/tests/test_umath.py:2110:            assert_equal(res, tgt, err_msg=msg)
numpy/core/tests/test_umath.py:2116:            assert_(type(f.reduce(btype)) is bool, msg)
numpy/core/tests/test_umath.py:2126:        assert_array_equal(np.logical_not(x, out=os), False)
numpy/core/tests/test_umath.py:2127:        assert_array_equal(o, tgt)
numpy/core/tests/test_umath.py:2132:        assert_equal(ncu.FLOATING_POINT_SUPPORT, 1)
numpy/core/tests/test_umath.py:2137:        assert_almost_equal(ncu.degrees(np.pi), 180.0)
numpy/core/tests/test_umath.py:2138:        assert_almost_equal(ncu.degrees(-0.5*np.pi), -90.0)
numpy/core/tests/test_umath.py:2143:        assert_almost_equal(ncu.radians(180.0), np.pi)
numpy/core/tests/test_umath.py:2144:        assert_almost_equal(ncu.radians(-90.0), -0.5*np.pi)
numpy/core/tests/test_umath.py:2155:        assert_equal(h, expectedhalf)
numpy/core/tests/test_umath.py:2158:        assert_equal(h, expected1)
numpy/core/tests/test_umath.py:2163:        assert_equal(h, expectedhalf.astype(np.float32))
numpy/core/tests/test_umath.py:2166:        assert_equal(h, expected1.astype(np.float32))
numpy/core/tests/test_umath.py:2177:            assert_equal(res, tgt)
numpy/core/tests/test_umath.py:2179:            assert_equal(res, tgt)
numpy/core/tests/test_umath.py:2180:            assert_equal(out, tgt)
numpy/core/tests/test_umath.py:2189:        assert_array_equal(a, b)
numpy/core/tests/test_umath.py:2198:        assert_raises(TypeError, test_nan)
numpy/core/tests/test_umath.py:2214:                        assert_(np.isnan(inp.max()), msg=emsg)
numpy/core/tests/test_umath.py:2215:                        assert_(np.isnan(inp.min()), msg=emsg)
numpy/core/tests/test_umath.py:2218:                    assert_equal(inp.max(), 1e10, err_msg=msg)
numpy/core/tests/test_umath.py:2220:                    assert_equal(inp.min(), -1e10, err_msg=msg)
numpy/core/tests/test_umath.py:2226:        assert_equal(d.max(), d[0])
numpy/core/tests/test_umath.py:2227:        assert_equal(d.min(), d[0])
numpy/core/tests/test_umath.py:2236:                    assert_equal(np.min(r), np.nan)
numpy/core/tests/test_umath.py:2240:        assert_equal(a, np.nan)
numpy/core/tests/test_umath.py:2251:                assert_equal(out, tgt, err_msg=msg)
numpy/core/tests/test_umath.py:2252:                assert_((out >= 0).all())
numpy/core/tests/test_umath.py:2256:                assert_equal(out, tgt, err_msg=msg)
numpy/core/tests/test_umath.py:2264:                        assert_array_equal(np.abs(inp), d, err_msg=msg)
numpy/core/tests/test_umath.py:2266:                        assert_array_equal(out, d, err_msg=msg)
numpy/core/tests/test_umath.py:2268:                        assert_array_equal(-inp, -1*inp, err_msg=msg)
numpy/core/tests/test_umath.py:2271:                        assert_array_equal(out, d, err_msg=msg)
numpy/core/tests/test_umath.py:2277:        assert_equal(np.abs(d), d)
numpy/core/tests/test_umath.py:2278:        assert_equal(np.negative(d), -d)
numpy/core/tests/test_umath.py:2291:            assert_equal(x, result, err_msg=str(dtype))
numpy/core/tests/test_umath.py:2319:        assert_equal(x.arr, np.zeros(1))
numpy/core/tests/test_umath.py:2321:        assert_(func is ncu.minimum)
numpy/core/tests/test_umath.py:2322:        assert_equal(len(args), 2)
numpy/core/tests/test_umath.py:2323:        assert_equal(args[0], a)
numpy/core/tests/test_umath.py:2324:        assert_equal(args[1], a)
numpy/core/tests/test_umath.py:2325:        assert_equal(i, 0)
numpy/core/tests/test_umath.py:2356:                assert_equal(p, expected)
numpy/core/tests/test_umath.py:2357:                assert_equal(w, expected)
numpy/core/tests/test_umath.py:2396:        assert_(isinstance(x, with_wrap))
numpy/core/tests/test_umath.py:2397:        assert_array_equal(x, np.array((1, 2, 3)))
numpy/core/tests/test_umath.py:2410:        assert_(isinstance(x, A))
numpy/core/tests/test_umath.py:2411:        assert_array_equal(x, np.array(1))
numpy/core/tests/test_umath.py:2426:        assert_equal(x.arr, np.zeros(1))
numpy/core/tests/test_umath.py:2451:        assert_(type(f(x, x)) is np.ndarray)
numpy/core/tests/test_umath.py:2452:        assert_(type(f(x, a)) is A)
numpy/core/tests/test_umath.py:2453:        assert_(type(f(x, b)) is B)
numpy/core/tests/test_umath.py:2454:        assert_(type(f(x, c)) is C)
numpy/core/tests/test_umath.py:2455:        assert_(type(f(a, x)) is A)
numpy/core/tests/test_umath.py:2456:        assert_(type(f(b, x)) is B)
numpy/core/tests/test_umath.py:2457:        assert_(type(f(c, x)) is C)
numpy/core/tests/test_umath.py:2459:        assert_(type(f(a, a)) is A)
numpy/core/tests/test_umath.py:2460:        assert_(type(f(a, b)) is B)
numpy/core/tests/test_umath.py:2461:        assert_(type(f(b, a)) is B)
numpy/core/tests/test_umath.py:2462:        assert_(type(f(b, b)) is B)
numpy/core/tests/test_umath.py:2463:        assert_(type(f(b, c)) is C)
numpy/core/tests/test_umath.py:2464:        assert_(type(f(c, b)) is C)
numpy/core/tests/test_umath.py:2465:        assert_(type(f(c, c)) is C)
numpy/core/tests/test_umath.py:2467:        assert_(type(ncu.exp(a) is A))
numpy/core/tests/test_umath.py:2468:        assert_(type(ncu.exp(b) is B))
numpy/core/tests/test_umath.py:2469:        assert_(type(ncu.exp(c) is C))
numpy/core/tests/test_umath.py:2481:        assert_raises(RuntimeError, ncu.maximum, a, a)
numpy/core/tests/test_umath.py:2482:        assert_raises(RuntimeError, ncu.maximum.reduce, a)
numpy/core/tests/test_umath.py:2500:            assert_raises(RuntimeError, ncu.frexp, 1, ok, bad)
numpy/core/tests/test_umath.py:2513:        assert_equal(ncu.maximum(a, a), None)
numpy/core/tests/test_umath.py:2528:        assert_equal(x, np.zeros(1))
numpy/core/tests/test_umath.py:2529:        assert_equal(type(x), np.ndarray)
numpy/core/tests/test_umath.py:2546:        assert_equal(x, np.array(2))
numpy/core/tests/test_umath.py:2547:        assert_equal(type(x), with_prepare)
numpy/core/tests/test_umath.py:2565:        assert_(not np.shares_memory(x, a))
numpy/core/tests/test_umath.py:2566:        assert_equal(x, np.array([2]))
numpy/core/tests/test_umath.py:2567:        assert_equal(type(x), with_prepare)
numpy/core/tests/test_umath.py:2579:        assert_raises(RuntimeError, ncu.maximum, a, a)
numpy/core/tests/test_umath.py:2580:        assert_raises(RuntimeError, ncu.maximum, a, a, where=False)
numpy/core/tests/test_umath.py:2589:        assert_raises_regex(TypeError, '2 required positional', np.sum, a)
numpy/core/tests/test_umath.py:2606:        assert_equal(res0[0], a)
numpy/core/tests/test_umath.py:2607:        assert_equal(res1[0], a)
numpy/core/tests/test_umath.py:2608:        assert_equal(res0[1], np.multiply)
numpy/core/tests/test_umath.py:2609:        assert_equal(res1[1], np.multiply)
numpy/core/tests/test_umath.py:2610:        assert_equal(res0[2], '__call__')
numpy/core/tests/test_umath.py:2611:        assert_equal(res1[2], '__call__')
numpy/core/tests/test_umath.py:2612:        assert_equal(res0[3], (a, b))
numpy/core/tests/test_umath.py:2613:        assert_equal(res1[3], (b, b))
numpy/core/tests/test_umath.py:2614:        assert_equal(res0[4], {})
numpy/core/tests/test_umath.py:2615:        assert_equal(res1[4], {'out': (a,)})
numpy/core/tests/test_umath.py:2662:        assert_equal(res, "ASub")
numpy/core/tests/test_umath.py:2664:        assert_equal(res, "ASub")
numpy/core/tests/test_umath.py:2668:        assert_equal(res, "A")
numpy/core/tests/test_umath.py:2669:        assert_equal(c.count, 1)
numpy/core/tests/test_umath.py:2672:        assert_equal(c.count, 2)
numpy/core/tests/test_umath.py:2677:        assert_raises(TypeError, np.multiply, c, c_sub)
numpy/core/tests/test_umath.py:2678:        assert_equal(c.count, 1)
numpy/core/tests/test_umath.py:2679:        assert_equal(c_sub.count, 1)
numpy/core/tests/test_umath.py:2681:        assert_raises(TypeError, np.multiply, c_sub, c)
numpy/core/tests/test_umath.py:2682:        assert_equal(c.count, 1)
numpy/core/tests/test_umath.py:2683:        assert_equal(c_sub.count, 1)
numpy/core/tests/test_umath.py:2685:        assert_raises(TypeError, np.multiply, c, c)
numpy/core/tests/test_umath.py:2686:        assert_equal(c.count, 1)
numpy/core/tests/test_umath.py:2688:        assert_raises(TypeError, np.multiply, 2, c)
numpy/core/tests/test_umath.py:2689:        assert_equal(c.count, 1)
numpy/core/tests/test_umath.py:2692:        assert_equal(three_mul_ufunc(a, 1, 2), "A")
numpy/core/tests/test_umath.py:2693:        assert_equal(three_mul_ufunc(1, a, 2), "A")
numpy/core/tests/test_umath.py:2694:        assert_equal(three_mul_ufunc(1, 2, a), "A")
numpy/core/tests/test_umath.py:2696:        assert_equal(three_mul_ufunc(a, a, 6), "A")
numpy/core/tests/test_umath.py:2697:        assert_equal(three_mul_ufunc(a, 2, a), "A")
numpy/core/tests/test_umath.py:2698:        assert_equal(three_mul_ufunc(a, 2, b), "A")
numpy/core/tests/test_umath.py:2699:        assert_equal(three_mul_ufunc(a, 2, a_sub), "ASub")
numpy/core/tests/test_umath.py:2700:        assert_equal(three_mul_ufunc(a, a_sub, 3), "ASub")
numpy/core/tests/test_umath.py:2702:        assert_equal(three_mul_ufunc(c, a_sub, 3), "ASub")
numpy/core/tests/test_umath.py:2703:        assert_equal(c.count, 1)
numpy/core/tests/test_umath.py:2705:        assert_equal(three_mul_ufunc(1, a_sub, c), "ASub")
numpy/core/tests/test_umath.py:2706:        assert_equal(c.count, 0)
numpy/core/tests/test_umath.py:2709:        assert_equal(three_mul_ufunc(a, b, c), "A")
numpy/core/tests/test_umath.py:2710:        assert_equal(c.count, 0)
numpy/core/tests/test_umath.py:2712:        assert_equal(three_mul_ufunc(a, b, c_sub), "A")
numpy/core/tests/test_umath.py:2713:        assert_equal(c_sub.count, 0)
numpy/core/tests/test_umath.py:2714:        assert_equal(three_mul_ufunc(1, 2, b), "B")
numpy/core/tests/test_umath.py:2716:        assert_raises(TypeError, three_mul_ufunc, 1, 2, c)
numpy/core/tests/test_umath.py:2717:        assert_raises(TypeError, three_mul_ufunc, c_sub, 2, c)
numpy/core/tests/test_umath.py:2718:        assert_raises(TypeError, three_mul_ufunc, c_sub, 2, 3)
numpy/core/tests/test_umath.py:2721:        assert_equal(four_mul_ufunc(a, 1, 2, 3), "A")
numpy/core/tests/test_umath.py:2722:        assert_equal(four_mul_ufunc(1, a, 2, 3), "A")
numpy/core/tests/test_umath.py:2723:        assert_equal(four_mul_ufunc(1, 1, a, 3), "A")
numpy/core/tests/test_umath.py:2724:        assert_equal(four_mul_ufunc(1, 1, 2, a), "A")
numpy/core/tests/test_umath.py:2726:        assert_equal(four_mul_ufunc(a, b, 2, 3), "A")
numpy/core/tests/test_umath.py:2727:        assert_equal(four_mul_ufunc(1, a, 2, b), "A")
numpy/core/tests/test_umath.py:2728:        assert_equal(four_mul_ufunc(b, 1, a, 3), "B")
numpy/core/tests/test_umath.py:2729:        assert_equal(four_mul_ufunc(a_sub, 1, 2, a), "ASub")
numpy/core/tests/test_umath.py:2730:        assert_equal(four_mul_ufunc(a, 1, 2, a_sub), "ASub")
numpy/core/tests/test_umath.py:2734:        assert_raises(TypeError, four_mul_ufunc, 1, 2, 3, c)
numpy/core/tests/test_umath.py:2735:        assert_equal(c.count, 1)
numpy/core/tests/test_umath.py:2737:        assert_raises(TypeError, four_mul_ufunc, 1, 2, c_sub, c)
numpy/core/tests/test_umath.py:2738:        assert_equal(c_sub.count, 1)
numpy/core/tests/test_umath.py:2739:        assert_equal(c.count, 1)
numpy/core/tests/test_umath.py:2742:        assert_raises(TypeError, four_mul_ufunc, 1, c, c_sub, c2)
numpy/core/tests/test_umath.py:2743:        assert_equal(c_sub.count, 1)
numpy/core/tests/test_umath.py:2744:        assert_equal(c.count, 1)
numpy/core/tests/test_umath.py:2745:        assert_equal(c2.count, 0)
numpy/core/tests/test_umath.py:2747:        assert_raises(TypeError, four_mul_ufunc, c2, c, c_sub, c)
numpy/core/tests/test_umath.py:2748:        assert_equal(c_sub.count, 1)
numpy/core/tests/test_umath.py:2749:        assert_equal(c.count, 0)
numpy/core/tests/test_umath.py:2750:        assert_equal(c2.count, 1)
numpy/core/tests/test_umath.py:2763:        assert_equal(res[0], a)
numpy/core/tests/test_umath.py:2764:        assert_equal(res[1], np.multiply)
numpy/core/tests/test_umath.py:2765:        assert_equal(res[2], '__call__')
numpy/core/tests/test_umath.py:2766:        assert_equal(res[3], (1, a))
numpy/core/tests/test_umath.py:2767:        assert_equal(res[4], {'subok': 'bar', 'where': 42})
numpy/core/tests/test_umath.py:2770:        assert_raises(TypeError, np.multiply, a)
numpy/core/tests/test_umath.py:2771:        assert_raises(TypeError, np.multiply, a, a, a, a)
numpy/core/tests/test_umath.py:2772:        assert_raises(TypeError, np.multiply, a, a, sig='a', signature='a')
numpy/core/tests/test_umath.py:2773:        assert_raises(TypeError, ncu_tests.inner1d, a, a, axis=0, axes=[0, 0])
numpy/core/tests/test_umath.py:2777:        assert_equal(res[0], a)
numpy/core/tests/test_umath.py:2778:        assert_equal(res[1], np.multiply)
numpy/core/tests/test_umath.py:2779:        assert_equal(res[2], 'reduce')
numpy/core/tests/test_umath.py:2780:        assert_equal(res[3], (a,))
numpy/core/tests/test_umath.py:2790:        assert_equal(res[0], a)
numpy/core/tests/test_umath.py:2791:        assert_equal(res[1], np.multiply)
numpy/core/tests/test_umath.py:2792:        assert_equal(res[2], 'reduce')
numpy/core/tests/test_umath.py:2793:        assert_equal(res[3], (a,))
numpy/core/tests/test_umath.py:2804:        assert_equal(res[4], {'axis': 0, 'dtype': None, 'keepdims': False})
numpy/core/tests/test_umath.py:2806:        assert_equal(res[4], {'axis': 0, 'keepdims': True})
numpy/core/tests/test_umath.py:2808:        assert_equal(res[4], {'axis': None, 'dtype': None})
numpy/core/tests/test_umath.py:2823:        assert_raises(ValueError, np.multiply.reduce, a, out=())
numpy/core/tests/test_umath.py:2824:        assert_raises(ValueError, np.multiply.reduce, a, out=('out0', 'out1'))
numpy/core/tests/test_umath.py:2825:        assert_raises(TypeError, np.multiply.reduce, a, 'axis0', axis='axis0')
numpy/core/tests/test_umath.py:2829:        assert_equal(res[0], a)
numpy/core/tests/test_umath.py:2830:        assert_equal(res[1], np.multiply)
numpy/core/tests/test_umath.py:2831:        assert_equal(res[2], 'accumulate')
numpy/core/tests/test_umath.py:2832:        assert_equal(res[3], (a,))
numpy/core/tests/test_umath.py:2840:        assert_equal(res[0], a)
numpy/core/tests/test_umath.py:2841:        assert_equal(res[1], np.multiply)
numpy/core/tests/test_umath.py:2842:        assert_equal(res[2], 'accumulate')
numpy/core/tests/test_umath.py:2843:        assert_equal(res[3], (a,))
numpy/core/tests/test_umath.py:2850:        assert_equal(res[4], {'axis': 0, 'dtype': None})
numpy/core/tests/test_umath.py:2852:        assert_equal(res[4], {'axis': 0, 'dtype': 'dtype1'})
numpy/core/tests/test_umath.py:2854:        assert_equal(res[4], {'axis': None, 'dtype': None})
numpy/core/tests/test_umath.py:2857:        assert_raises(ValueError, np.multiply.accumulate, a, out=())
numpy/core/tests/test_umath.py:2865:        assert_equal(res[0], a)
numpy/core/tests/test_umath.py:2866:        assert_equal(res[1], np.multiply)
numpy/core/tests/test_umath.py:2867:        assert_equal(res[2], 'reduceat')
numpy/core/tests/test_umath.py:2868:        assert_equal(res[3], (a, [4, 2]))
numpy/core/tests/test_umath.py:2876:        assert_equal(res[0], a)
numpy/core/tests/test_umath.py:2877:        assert_equal(res[1], np.multiply)
numpy/core/tests/test_umath.py:2878:        assert_equal(res[2], 'reduceat')
numpy/core/tests/test_umath.py:2879:        assert_equal(res[3], (a, [4, 2]))
numpy/core/tests/test_umath.py:2886:        assert_equal(res[4], {'axis': 0, 'dtype': None})
numpy/core/tests/test_umath.py:2888:        assert_equal(res[4], {'axis': None, 'dtype': 'dt'})
numpy/core/tests/test_umath.py:2890:        assert_equal(res[4], {'axis': None, 'dtype': None})
numpy/core/tests/test_umath.py:2893:        assert_raises(ValueError, np.multiply.reduce, a, [4, 2], out=())
numpy/core/tests/test_umath.py:2901:        assert_equal(res[0], a)
numpy/core/tests/test_umath.py:2902:        assert_equal(res[1], np.multiply)
numpy/core/tests/test_umath.py:2903:        assert_equal(res[2], 'outer')
numpy/core/tests/test_umath.py:2904:        assert_equal(res[3], (a, 42))
numpy/core/tests/test_umath.py:2905:        assert_equal(res[4], {})
numpy/core/tests/test_umath.py:2908:        assert_raises(TypeError, np.multiply.outer, a)
numpy/core/tests/test_umath.py:2909:        assert_raises(TypeError, np.multiply.outer, a, a, a, a)
numpy/core/tests/test_umath.py:2910:        assert_raises(TypeError, np.multiply.outer, a, a, sig='a', signature='a')
numpy/core/tests/test_umath.py:2914:        assert_equal(res[0], a)
numpy/core/tests/test_umath.py:2915:        assert_equal(res[1], np.multiply)
numpy/core/tests/test_umath.py:2916:        assert_equal(res[2], 'at')
numpy/core/tests/test_umath.py:2917:        assert_equal(res[3], (a, [4, 2], 'b0'))
numpy/core/tests/test_umath.py:2920:        assert_raises(TypeError, np.multiply.at, a)
numpy/core/tests/test_umath.py:2921:        assert_raises(TypeError, np.multiply.at, a, a, a, a)
numpy/core/tests/test_umath.py:2942:        assert_equal(res0['out'][0], 'out_arg')
numpy/core/tests/test_umath.py:2943:        assert_equal(res1['out'][0], 'out_arg')
numpy/core/tests/test_umath.py:2944:        assert_equal(res2['out'][0], 'out_arg')
numpy/core/tests/test_umath.py:2945:        assert_equal(res3['out'][0], 'out_arg')
numpy/core/tests/test_umath.py:2946:        assert_equal(res4['out'][0], 'out_arg')
numpy/core/tests/test_umath.py:2947:        assert_equal(res5['out'][0], 'out_arg')
numpy/core/tests/test_umath.py:2952:        assert_equal(res6['out'][0], 'out0')
numpy/core/tests/test_umath.py:2953:        assert_equal(res6['out'][1], 'out1')
numpy/core/tests/test_umath.py:2954:        assert_equal(res7['out'][0], 'out0')
numpy/core/tests/test_umath.py:2955:        assert_equal(res7['out'][1], 'out1')
numpy/core/tests/test_umath.py:2958:        assert_(np.sin(a, None) == {})
numpy/core/tests/test_umath.py:2959:        assert_(np.sin(a, out=None) == {})
numpy/core/tests/test_umath.py:2960:        assert_(np.sin(a, out=(None,)) == {})
numpy/core/tests/test_umath.py:2961:        assert_(np.modf(a, None) == {})
numpy/core/tests/test_umath.py:2962:        assert_(np.modf(a, None, None) == {})
numpy/core/tests/test_umath.py:2963:        assert_(np.modf(a, out=(None, None)) == {})
numpy/core/tests/test_umath.py:2970:        assert_raises(TypeError, np.multiply, a, b, 'one', out='two')
numpy/core/tests/test_umath.py:2971:        assert_raises(TypeError, np.multiply, a, b, 'one', 'two')
numpy/core/tests/test_umath.py:2972:        assert_raises(ValueError, np.multiply, a, b, out=('one', 'two'))
numpy/core/tests/test_umath.py:2973:        assert_raises(TypeError, np.multiply, a, out=())
numpy/core/tests/test_umath.py:2974:        assert_raises(TypeError, np.modf, a, 'one', out=('two', 'three'))
numpy/core/tests/test_umath.py:2975:        assert_raises(TypeError, np.modf, a, 'one', 'two', 'three')
numpy/core/tests/test_umath.py:2976:        assert_raises(ValueError, np.modf, a, out=('one', 'two', 'three'))
numpy/core/tests/test_umath.py:2977:        assert_raises(ValueError, np.modf, a, out=('one',))
numpy/core/tests/test_umath.py:2986:        assert_raises(ValueError, np.negative, 1, out=a)
numpy/core/tests/test_umath.py:2987:        assert_raises(ValueError, np.negative, a)
numpy/core/tests/test_umath.py:2988:        assert_raises(ValueError, np.divide, 1., a)
numpy/core/tests/test_umath.py:3031:        assert_(np.negative(greedy) is greedy)
numpy/core/tests/test_umath.py:3047:        assert_equal(res[0], a)
numpy/core/tests/test_umath.py:3048:        assert_equal(res[1], inner1d)
numpy/core/tests/test_umath.py:3049:        assert_equal(res[2], '__call__')
numpy/core/tests/test_umath.py:3050:        assert_equal(res[3], (a, a))
numpy/core/tests/test_umath.py:3051:        assert_equal(res[4], {})
numpy/core/tests/test_umath.py:3054:        assert_equal(res[0], a)
numpy/core/tests/test_umath.py:3055:        assert_equal(res[1], inner1d)
numpy/core/tests/test_umath.py:3056:        assert_equal(res[2], '__call__')
numpy/core/tests/test_umath.py:3057:        assert_equal(res[3], (1, 1))
numpy/core/tests/test_umath.py:3058:        assert_equal(res[4], {'out': (a,)})
numpy/core/tests/test_umath.py:3061:        assert_raises(TypeError, inner1d, a, out='two')
numpy/core/tests/test_umath.py:3062:        assert_raises(TypeError, inner1d, a, a, 'one', out='two')
numpy/core/tests/test_umath.py:3063:        assert_raises(TypeError, inner1d, a, a, 'one', 'two')
numpy/core/tests/test_umath.py:3064:        assert_raises(ValueError, inner1d, a, a, out=('one', 'two'))
numpy/core/tests/test_umath.py:3065:        assert_raises(ValueError, inner1d, a, a, out=())
numpy/core/tests/test_umath.py:3134:        assert_(np.all(check == b))
numpy/core/tests/test_umath.py:3135:        assert_equal(b.info, {'inputs': [0]})
numpy/core/tests/test_umath.py:3137:        assert_(np.all(check == b))
numpy/core/tests/test_umath.py:3138:        assert_equal(b.info, {'outputs': [0]})
numpy/core/tests/test_umath.py:3139:        assert_(b is a)
numpy/core/tests/test_umath.py:3142:        assert_(np.all(check == b))
numpy/core/tests/test_umath.py:3143:        assert_equal(b.info, {'inputs': [0], 'outputs': [0]})
numpy/core/tests/test_umath.py:3148:        assert_equal(b1.info, {'inputs': [0]})
numpy/core/tests/test_umath.py:3150:        assert_(b2 is a)
numpy/core/tests/test_umath.py:3151:        assert_equal(b1.info, {'outputs': [1]})
numpy/core/tests/test_umath.py:3155:        assert_(c1 is a)
numpy/core/tests/test_umath.py:3156:        assert_(c2 is b)
numpy/core/tests/test_umath.py:3157:        assert_equal(c1.info, {'inputs': [0], 'outputs': [0, 1]})
numpy/core/tests/test_umath.py:3163:        assert_(c is a)
numpy/core/tests/test_umath.py:3164:        assert_equal(c.info, {'inputs': [0, 1], 'outputs': [0]})
numpy/core/tests/test_umath.py:3168:        assert_(a.__array_ufunc__(np.add, '__call__', a, b) is NotImplemented)
numpy/core/tests/test_umath.py:3169:        assert_(b.__array_ufunc__(np.add, '__call__', a, b) is NotImplemented)
numpy/core/tests/test_umath.py:3170:        assert_raises(TypeError, np.add, a, b)
numpy/core/tests/test_umath.py:3172:        assert_(a.__array_ufunc__(np.add, '__call__', a, b) is NotImplemented)
numpy/core/tests/test_umath.py:3173:        assert_(b.__array_ufunc__(np.add, '__call__', a, b) == "A!")
numpy/core/tests/test_umath.py:3174:        assert_(np.add(a, b) == "A!")
numpy/core/tests/test_umath.py:3180:        assert_equal(c, check)
numpy/core/tests/test_umath.py:3181:        assert_(c.info, {'inputs': [0]})
numpy/core/tests/test_umath.py:3184:        assert_equal(c, check)
numpy/core/tests/test_umath.py:3185:        assert_(c.info, {'inputs': [0]})
numpy/core/tests/test_umath.py:3188:        assert_equal(c, check)
numpy/core/tests/test_umath.py:3189:        assert_(c is b)
numpy/core/tests/test_umath.py:3190:        assert_(c.info, {'inputs': [0], 'outputs': [0]})
numpy/core/tests/test_umath.py:3194:        assert_equal(c, check)
numpy/core/tests/test_umath.py:3195:        assert_(c is b)
numpy/core/tests/test_umath.py:3196:        assert_(c.info, {'inputs': [0], 'outputs': [0]})
numpy/core/tests/test_umath.py:3200:        assert_equal(c, check)
numpy/core/tests/test_umath.py:3201:        assert_(c.info, {'inputs': [0]})
numpy/core/tests/test_umath.py:3204:        assert_equal(c, check)
numpy/core/tests/test_umath.py:3205:        assert_(c is b)
numpy/core/tests/test_umath.py:3206:        assert_(c.info, {'inputs': [0], 'outputs': [0]})
numpy/core/tests/test_umath.py:3209:        assert_equal(c, check)
numpy/core/tests/test_umath.py:3210:        assert_(c.info, {'inputs': [0]})
numpy/core/tests/test_umath.py:3213:        assert_equal(c, check)
numpy/core/tests/test_umath.py:3214:        assert_(c is b)
numpy/core/tests/test_umath.py:3215:        assert_(c.info, {'inputs': [0], 'outputs': [0]})
numpy/core/tests/test_umath.py:3219:        assert_equal(c, check)
numpy/core/tests/test_umath.py:3220:        assert_(c.info, {'inputs': [0]})
numpy/core/tests/test_umath.py:3223:        assert_equal(c, check)
numpy/core/tests/test_umath.py:3224:        assert_(c is b)
numpy/core/tests/test_umath.py:3225:        assert_(c.info, {'inputs': [0], 'outputs': [0]})
numpy/core/tests/test_umath.py:3232:        assert_equal(a, check)
numpy/core/tests/test_umath.py:3233:        assert_(a.info, {'inputs': [0]})
numpy/core/tests/test_umath.py:3237:        assert_equal(a, check)
numpy/core/tests/test_umath.py:3238:        assert_(a.info, {'inputs': [0, 2]})
numpy/core/tests/test_umath.py:3245:        assert_equal(np.choose(c, (a, 1)), np.array([1, 1]))
numpy/core/tests/test_umath.py:3267:        assert_equal(np.lcm(a, b), [60, 600])
numpy/core/tests/test_umath.py:3273:            assert_equal(np.lcm(a, b), [60]*4)
numpy/core/tests/test_umath.py:3277:        assert_equal(np.lcm.reduce([3, 12, 20]), 60)
numpy/core/tests/test_umath.py:3282:        assert_equal(np.lcm(a, b), [0, 20, 20, 60, 20, 20])
numpy/core/tests/test_umath.py:3288:        assert_equal(np.gcd(a, b), [4, 40])
numpy/core/tests/test_umath.py:3294:            assert_equal(np.gcd(a, b), [4]*4)
numpy/core/tests/test_umath.py:3298:        assert_equal(np.gcd.reduce(a), 5)
numpy/core/tests/test_umath.py:3303:        assert_equal(np.gcd(a, b), [20,  1,  2,  1,  4,  5])
numpy/core/tests/test_umath.py:3310:        assert_equal(np.lcm(a, b), 10*big)
numpy/core/tests/test_umath.py:3318:            assert_equal(np.gcd(a,  q*3), q)
numpy/core/tests/test_umath.py:3319:            assert_equal(np.gcd(a, -q*3), q)
numpy/core/tests/test_umath.py:3326:        assert_equal(np.gcd(a, b), 4*[Decimal('0.04')])
numpy/core/tests/test_umath.py:3327:        assert_equal(np.lcm(a, b), 4*[Decimal('0.60')])
numpy/core/tests/test_umath.py:3331:        assert_raises(TypeError, np.gcd, 0.3, 0.4)
numpy/core/tests/test_umath.py:3332:        assert_raises(TypeError, np.lcm, 0.3, 0.4)
numpy/core/tests/test_umath.py:3336:        assert_equal(np.array(2**200).item(), 2**200)
numpy/core/tests/test_umath.py:3341:        assert_equal(np.gcd(a, b), [2**100,               2**50 * 3**5])
numpy/core/tests/test_umath.py:3342:        assert_equal(np.lcm(a, b), [2**100 * 3**5 * 5**7, 2**100 * 3**10])
numpy/core/tests/test_umath.py:3344:        assert_equal(np.gcd(2**100, 3**100), 1)
numpy/core/tests/test_umath.py:3360:        assert_equal(np.floor(arr), [1, 1])
numpy/core/tests/test_umath.py:3361:        assert_equal(np.ceil(arr),  [2, 2])
numpy/core/tests/test_umath.py:3362:        assert_equal(np.trunc(arr), [3, 3])
numpy/core/tests/test_umath.py:3371:        assert_equal(np.floor(arr), [-3, -3])
numpy/core/tests/test_umath.py:3372:        assert_equal(np.ceil(arr),  [-2, -2])
numpy/core/tests/test_umath.py:3378:        assert_equal(np.floor(f), -2)
numpy/core/tests/test_umath.py:3379:        assert_equal(np.ceil(f), -1)
numpy/core/tests/test_umath.py:3380:        assert_equal(np.trunc(f), -1)
numpy/core/tests/test_umath.py:3397:            assert_almost_equal(fz.real, fr, err_msg='real part %s' % f)
numpy/core/tests/test_umath.py:3398:            assert_almost_equal(fz.imag, 0., err_msg='imag part %s' % f)
numpy/core/tests/test_umath.py:3406:            assert_almost_equal(fcf, fcd, decimal=6, err_msg='fch-fcd %s' % f)
numpy/core/tests/test_umath.py:3407:            assert_almost_equal(fcl, fcd, decimal=15, err_msg='fch-fcl %s' % f)
numpy/core/tests/test_umath.py:3476:                assert_(abs(a - b) < atol, "%s %s: %s; cmath: %s" % (fname, p, a, b))
numpy/core/tests/test_umath.py:3493:            assert_(np.all(d < rtol), (np.argmax(d), x[np.argmax(d)], d.max(),
numpy/core/tests/test_umath.py:3498:            assert_(np.all(d < rtol), (np.argmax(d), x[np.argmax(d)], d.max(),
numpy/core/tests/test_umath.py:3503:            assert_(np.all(d < rtol), (np.argmax(d), x[np.argmax(d)], d.max(),
numpy/core/tests/test_umath.py:3508:            assert_(np.all(d < rtol), (np.argmax(d), x[np.argmax(d)], d.max(),
numpy/core/tests/test_umath.py:3535:        assert_(np.all(d < 1e-15))
numpy/core/tests/test_umath.py:3539:        assert_(np.all(d < 1e-15))
numpy/core/tests/test_umath.py:3543:        assert_(np.all(d < 1e-15))
numpy/core/tests/test_umath.py:3547:        assert_(np.all(d < 1e-15))
numpy/core/tests/test_umath.py:3555:            assert_(np.all(zp != zm), (zp, zm))
numpy/core/tests/test_umath.py:3559:            assert_(np.all(good), (func, z0[~good]))
numpy/core/tests/test_umath.py:3572:        assert_equal(add.__name__, 'add')
numpy/core/tests/test_umath.py:3573:        assert_(add.ntypes >= 18)  # don't fail if types added
numpy/core/tests/test_umath.py:3574:        assert_('ii->i' in add.types)
numpy/core/tests/test_umath.py:3575:        assert_equal(add.nin, 2)
numpy/core/tests/test_umath.py:3576:        assert_equal(add.nout, 1)
numpy/core/tests/test_umath.py:3577:        assert_equal(add.identity, 0)
numpy/core/tests/test_umath.py:3599:        assert_equal(a+a, a)
numpy/core/tests/test_umath.py:3610:        assert_equal(mul_ufunc.reduce([2, 3, 4]), 24)
numpy/core/tests/test_umath.py:3611:        assert_equal(mul_ufunc.reduce(np.ones((2, 2)), axis=(0, 1)), 1)
numpy/core/tests/test_umath.py:3612:        assert_equal(mul_ufunc.reduce([]), 1)
numpy/core/tests/test_umath.py:3616:        assert_equal(mul_ufunc.reduce([2, 3, 4]), 24)
numpy/core/tests/test_umath.py:3617:        assert_equal(mul_ufunc.reduce(np.ones((2, 2)), axis=(0, 1)), 1)
numpy/core/tests/test_umath.py:3618:        assert_raises(ValueError, lambda: mul_ufunc.reduce([]))
numpy/core/tests/test_umath.py:3622:        assert_equal(mul_ufunc.reduce([2, 3, 4]), 24)
numpy/core/tests/test_umath.py:3623:        assert_raises(ValueError, lambda: mul_ufunc.reduce(np.ones((2, 2)), axis=(0, 1)))
numpy/core/tests/test_umath.py:3624:        assert_raises(ValueError, lambda: mul_ufunc.reduce([]))
numpy/core/tests/test_umath.py:3665:    assert_(np.all(np.absolute(y0.real - yp.real) < atol), (y0, yp))
numpy/core/tests/test_umath.py:3666:    assert_(np.all(np.absolute(y0.imag - yp.imag) < atol), (y0, yp))
numpy/core/tests/test_umath.py:3667:    assert_(np.all(np.absolute(y0.real - ym.real*re_sign) < atol), (y0, ym))
numpy/core/tests/test_umath.py:3668:    assert_(np.all(np.absolute(y0.imag - ym.imag*im_sign) < atol), (y0, ym))
numpy/core/tests/test_umath.py:3678:            assert_(np.all(np.absolute(y0[jr].real - ym.real*re_sign) < atol), (y0[jr], ym))
numpy/core/tests/test_umath.py:3679:            assert_(np.all(np.absolute(y0[jr].imag - ym.imag*im_sign) < atol), (y0[jr], ym))
numpy/core/tests/test_umath.py:3685:            assert_(np.all(np.absolute(y0[ji].real - ym.real*re_sign) < atol), (y0[ji], ym))
numpy/core/tests/test_umath.py:3686:            assert_(np.all(np.absolute(y0[ji].imag - ym.imag*im_sign) < atol), (y0[ji], ym))
numpy/core/tests/test_umath.py:3689:    assert_(np.copysign(1, -1) == -1)
numpy/core/tests/test_umath.py:3691:        assert_(1 / np.copysign(0, -1) < 0)
numpy/core/tests/test_umath.py:3692:        assert_(1 / np.copysign(0, 1) > 0)
numpy/core/tests/test_umath.py:3693:    assert_(np.signbit(np.copysign(np.nan, -1)))
numpy/core/tests/test_umath.py:3694:    assert_(not np.signbit(np.copysign(np.nan, 1)))
numpy/core/tests/test_umath.py:3701:    assert_(np.nextafter(one, two) - one == eps)
numpy/core/tests/test_umath.py:3702:    assert_(np.nextafter(one, zero) - one < 0)
numpy/core/tests/test_umath.py:3703:    assert_(np.isnan(np.nextafter(np.nan, one)))
numpy/core/tests/test_umath.py:3704:    assert_(np.isnan(np.nextafter(one, np.nan)))
numpy/core/tests/test_umath.py:3705:    assert_(np.nextafter(one, one) == one)
numpy/core/tests/test_umath.py:3733:        assert_equal(np.nextafter(t(0), t(direction)) / t(2.1), direction * 0.0)
numpy/core/tests/test_umath.py:3741:        assert_(np.spacing(one) == eps)
numpy/core/tests/test_umath.py:3742:        assert_(np.isnan(np.spacing(nan)))
numpy/core/tests/test_umath.py:3743:        assert_(np.isnan(np.spacing(inf)))
numpy/core/tests/test_umath.py:3744:        assert_(np.isnan(np.spacing(-inf)))
numpy/core/tests/test_umath.py:3745:        assert_(np.spacing(t(1e30)) != 0)
numpy/core/tests/test_umath.py:3789:        assert_array_almost_equal(np.spacing(x), ref[dt], decimal=dec_)
numpy/core/tests/test_umath.py:3797:            assert_(np.nextafter(f, f1) - f == np.spacing(f))
numpy/core/tests/test_umath.py:3801:    assert_(np.signbit(np.nan) == 0)
numpy/core/tests/test_umath.py:3822:    assert_array_almost_equal(h1, h2)
numpy/core/tests/test_umath.py:3829:    assert_array_almost_equal(h1, h2)
numpy/core/tests/test_umath.py:3836:    assert_equal(result.dtype, x.dtype)
numpy/core/tests/test_umath.py:3837:    assert_equal(result.shape, (0,))
numpy/core/tests/test_umath.py:3841:    assert_equal(result.dtype, x.dtype)
numpy/core/tests/test_umath.py:3842:    assert_equal(result.shape, (0, 2))
numpy/core/tests/test_umath.py:3844:    assert_equal(result.dtype, x.dtype)
numpy/core/tests/test_umath.py:3845:    assert_equal(result.shape, (5, 0))
numpy/core/tests/test_umath.py:3861:                assert_equal(x < y, False, err_msg="%r < %r" % (x, y))
numpy/core/tests/test_umath.py:3862:                assert_equal(x > y, False, err_msg="%r > %r" % (x, y))
numpy/core/tests/test_umath.py:3863:                assert_equal(x <= y, False, err_msg="%r <= %r" % (x, y))
numpy/core/tests/test_umath.py:3864:                assert_equal(x >= y, False, err_msg="%r >= %r" % (x, y))
numpy/core/tests/test_umath.py:3865:                assert_equal(x == y, False, err_msg="%r == %r" % (x, y))
numpy/core/tests/test_umath.py:3873:    assert_equal(val, int(float(val)))
numpy/core/tests/test_umath.py:3875:    assert_equal(val, np.rint(val))
numpy/core/tests/test_umath.py:3883:    assert_equal(np.maximum.accumulate(arr), out_max)
numpy/core/tests/test_umath.py:3884:    assert_equal(np.minimum.accumulate(arr), out_min)
numpy/core/tests/test_umath.py:3900:    assert actual.__class__.__name__ == 'foo'
numpy/core/tests/test_umath.py:3930:        assert type(np.add.outer([1, 2], arr)) is cls
numpy/core/tests/test_numeric.py:27:        assert_equal(np.resize(A, (2, 4)), Ar1)
numpy/core/tests/test_numeric.py:30:        assert_equal(np.resize(A, (4, 2)), Ar2)
numpy/core/tests/test_numeric.py:33:        assert_equal(np.resize(A, (4, 3)), Ar3)
numpy/core/tests/test_numeric.py:38:        assert_equal(np.resize(A, (2, 4)), Ar1)
numpy/core/tests/test_numeric.py:41:        assert_equal(np.resize(A, (4, 2)), Ar2)
numpy/core/tests/test_numeric.py:44:        assert_equal(np.resize(A, (4, 3)), Ar3)
numpy/core/tests/test_numeric.py:49:        assert_array_equal(Ar, np.array([]))
numpy/core/tests/test_numeric.py:50:        assert_equal(A.dtype, Ar.dtype)
numpy/core/tests/test_numeric.py:53:        assert_equal(Ar.shape, (0, 2))
numpy/core/tests/test_numeric.py:56:        assert_equal(Ar.shape, (2, 0))
numpy/core/tests/test_numeric.py:62:        assert_array_equal(Ar, np.zeros((2, 1), Ar.dtype))
numpy/core/tests/test_numeric.py:63:        assert_equal(A.dtype, Ar.dtype)
numpy/core/tests/test_numeric.py:76:        assert type(np.resize(my_arr, 5)) is MyArray
numpy/core/tests/test_numeric.py:77:        assert type(np.resize(my_arr, 0)) is MyArray
numpy/core/tests/test_numeric.py:80:        assert type(np.resize(my_arr, 5)) is MyArray
numpy/core/tests/test_numeric.py:93:        assert_equal(out, tgt)
numpy/core/tests/test_numeric.py:99:        assert_equal(out, tgt)
numpy/core/tests/test_numeric.py:106:        assert_equal(out, tgt)
numpy/core/tests/test_numeric.py:113:        assert_equal(out, tgt)
numpy/core/tests/test_numeric.py:117:        assert_(np.all(np.cumproduct(A) == np.array([1, 2, 6, 24, 120, 720])))
numpy/core/tests/test_numeric.py:126:        assert_equal(out, tgt)
numpy/core/tests/test_numeric.py:130:        assert_(np.mean(A) == 3.5)
numpy/core/tests/test_numeric.py:131:        assert_(np.all(np.mean(A, 0) == np.array([2.5, 3.5, 4.5])))
numpy/core/tests/test_numeric.py:132:        assert_(np.all(np.mean(A, 1) == np.array([2., 5.])))
numpy/core/tests/test_numeric.py:136:            assert_(np.isnan(np.mean([])))
numpy/core/tests/test_numeric.py:137:            assert_(w[0].category is RuntimeWarning)
numpy/core/tests/test_numeric.py:141:        assert_equal(np.ptp(a, axis=0), 15.0)
numpy/core/tests/test_numeric.py:149:        assert_equal(np.prod(arr, axis=-1), tgt)
numpy/core/tests/test_numeric.py:154:        assert_equal(np.ravel(a), tgt)
numpy/core/tests/test_numeric.py:161:        assert_equal(out, tgt)
numpy/core/tests/test_numeric.py:166:        assert_equal(np.reshape(arr, (2, 6)), tgt)
numpy/core/tests/test_numeric.py:171:        assert_equal(np.around(arr, decimals=1), tgt)
numpy/core/tests/test_numeric.py:173:        assert_(isinstance(s.round(), np.float64))
numpy/core/tests/test_numeric.py:174:        assert_equal(s.round(), 1.)
numpy/core/tests/test_numeric.py:183:        assert_(isinstance(round(s), int))
numpy/core/tests/test_numeric.py:184:        assert_(isinstance(round(s, None), int))
numpy/core/tests/test_numeric.py:185:        assert_(isinstance(round(s, ndigits=None), int))
numpy/core/tests/test_numeric.py:186:        assert_equal(round(s), 1)
numpy/core/tests/test_numeric.py:187:        assert_equal(round(s, None), 1)
numpy/core/tests/test_numeric.py:188:        assert_equal(round(s, ndigits=None), 1)
numpy/core/tests/test_numeric.py:198:        assert_equal(round(val, ndigits), round(np.int32(val), ndigits))
numpy/core/tests/test_numeric.py:202:        assert_(isinstance(round(f, -73), np.float64))
numpy/core/tests/test_numeric.py:203:        assert_array_max_ulp(round(f, -73), 5.0 * 10**73)
numpy/core/tests/test_numeric.py:204:        assert_(isinstance(round(f, ndigits=-73), np.float64))
numpy/core/tests/test_numeric.py:205:        assert_array_max_ulp(round(f, ndigits=-73), 5.0 * 10**73)
numpy/core/tests/test_numeric.py:208:        assert_(isinstance(round(i, -2), np.int64))
numpy/core/tests/test_numeric.py:209:        assert_array_max_ulp(round(i, -2), 500)
numpy/core/tests/test_numeric.py:210:        assert_(isinstance(round(i, ndigits=-2), np.int64))
numpy/core/tests/test_numeric.py:211:        assert_array_max_ulp(round(i, ndigits=-2), 500)
numpy/core/tests/test_numeric.py:216:        assert_equal(round(np.float64(f), -73), round(f, -73))
numpy/core/tests/test_numeric.py:221:        assert_equal(out, 3)
numpy/core/tests/test_numeric.py:225:        assert_(np.size(A) == 6)
numpy/core/tests/test_numeric.py:226:        assert_(np.size(A, 0) == 2)
numpy/core/tests/test_numeric.py:227:        assert_(np.size(A, 1) == 3)
numpy/core/tests/test_numeric.py:231:        assert_equal(np.squeeze(A).shape, (3, 3))
numpy/core/tests/test_numeric.py:232:        assert_equal(np.squeeze(np.zeros((1, 3, 1))).shape, (3,))
numpy/core/tests/test_numeric.py:233:        assert_equal(np.squeeze(np.zeros((1, 3, 1)), axis=0).shape, (3, 1))
numpy/core/tests/test_numeric.py:234:        assert_equal(np.squeeze(np.zeros((1, 3, 1)), axis=-1).shape, (1, 3))
numpy/core/tests/test_numeric.py:235:        assert_equal(np.squeeze(np.zeros((1, 3, 1)), axis=2).shape, (1, 3))
numpy/core/tests/test_numeric.py:236:        assert_equal(np.squeeze([np.zeros((3, 1))]).shape, (3,))
numpy/core/tests/test_numeric.py:237:        assert_equal(np.squeeze([np.zeros((3, 1))], axis=0).shape, (3, 1))
numpy/core/tests/test_numeric.py:238:        assert_equal(np.squeeze([np.zeros((3, 1))], axis=2).shape, (1, 3))
numpy/core/tests/test_numeric.py:239:        assert_equal(np.squeeze([np.zeros((3, 1))], axis=-1).shape, (1, 3))
numpy/core/tests/test_numeric.py:243:        assert_almost_equal(np.std(A), 1.707825127659933)
numpy/core/tests/test_numeric.py:244:        assert_almost_equal(np.std(A, 0), np.array([1.5, 1.5, 1.5]))
numpy/core/tests/test_numeric.py:245:        assert_almost_equal(np.std(A, 1), np.array([0.81649658, 0.81649658]))
numpy/core/tests/test_numeric.py:249:            assert_(np.isnan(np.std([])))
numpy/core/tests/test_numeric.py:250:            assert_(w[0].category is RuntimeWarning)
numpy/core/tests/test_numeric.py:256:        assert_equal(out, tgt)
numpy/core/tests/test_numeric.py:265:        assert_equal(tgt, out)
numpy/core/tests/test_numeric.py:273:        assert_equal(out, tgt)
numpy/core/tests/test_numeric.py:277:        assert_equal(np.trace(c), 5)
numpy/core/tests/test_numeric.py:282:        assert_equal(np.transpose(arr, (1, 0)), tgt)
numpy/core/tests/test_numeric.py:286:        assert_almost_equal(np.var(A), 2.9166666666666665)
numpy/core/tests/test_numeric.py:287:        assert_almost_equal(np.var(A, 0), np.array([2.25, 2.25, 2.25]))
numpy/core/tests/test_numeric.py:288:        assert_almost_equal(np.var(A, 1), np.array([0.66666667, 0.66666667]))
numpy/core/tests/test_numeric.py:292:            assert_(np.isnan(np.var([])))
numpy/core/tests/test_numeric.py:293:            assert_(w[0].category is RuntimeWarning)
numpy/core/tests/test_numeric.py:297:        assert_almost_equal(np.var(B), 0.25)
numpy/core/tests/test_numeric.py:302:        assert_(np.isscalar(3.1))
numpy/core/tests/test_numeric.py:303:        assert_(np.isscalar(np.int16(12345)))
numpy/core/tests/test_numeric.py:304:        assert_(np.isscalar(False))
numpy/core/tests/test_numeric.py:305:        assert_(np.isscalar('numpy'))
numpy/core/tests/test_numeric.py:306:        assert_(not np.isscalar([3.1]))
numpy/core/tests/test_numeric.py:307:        assert_(not np.isscalar(None))
numpy/core/tests/test_numeric.py:311:        assert_(np.isscalar(Fraction(5, 17)))
numpy/core/tests/test_numeric.py:313:        assert_(np.isscalar(Number()))
numpy/core/tests/test_numeric.py:321:        assert_((t and s) is s)
numpy/core/tests/test_numeric.py:322:        assert_((f and s) is f)
numpy/core/tests/test_numeric.py:327:        assert_((t | t) is t)
numpy/core/tests/test_numeric.py:328:        assert_((f | t) is t)
numpy/core/tests/test_numeric.py:329:        assert_((t | f) is t)
numpy/core/tests/test_numeric.py:330:        assert_((f | f) is f)
numpy/core/tests/test_numeric.py:335:        assert_((t & t) is t)
numpy/core/tests/test_numeric.py:336:        assert_((f & t) is f)
numpy/core/tests/test_numeric.py:337:        assert_((t & f) is f)
numpy/core/tests/test_numeric.py:338:        assert_((f & f) is f)
numpy/core/tests/test_numeric.py:343:        assert_((t ^ t) is f)
numpy/core/tests/test_numeric.py:344:        assert_((f ^ t) is t)
numpy/core/tests/test_numeric.py:345:        assert_((t ^ f) is t)
numpy/core/tests/test_numeric.py:346:        assert_((f ^ f) is f)
numpy/core/tests/test_numeric.py:363:        assert_(self.t.all())
numpy/core/tests/test_numeric.py:364:        assert_(self.t.any())
numpy/core/tests/test_numeric.py:365:        assert_(not self.f.all())
numpy/core/tests/test_numeric.py:366:        assert_(not self.f.any())
numpy/core/tests/test_numeric.py:367:        assert_(self.nm.any())
numpy/core/tests/test_numeric.py:368:        assert_(self.im.any())
numpy/core/tests/test_numeric.py:369:        assert_(not self.nm.all())
numpy/core/tests/test_numeric.py:370:        assert_(not self.im.all())
numpy/core/tests/test_numeric.py:375:            assert_(np.any(d))
numpy/core/tests/test_numeric.py:378:            assert_(not np.all(e))
numpy/core/tests/test_numeric.py:379:            assert_array_equal(e, ~d)
numpy/core/tests/test_numeric.py:384:            assert_(np.any(d), msg="%r" % i)
numpy/core/tests/test_numeric.py:387:            assert_(not np.all(e), msg="%r" % i)
numpy/core/tests/test_numeric.py:390:        assert_array_equal(~self.t, self.f)
numpy/core/tests/test_numeric.py:391:        assert_array_equal(np.abs(~self.t), self.f)
numpy/core/tests/test_numeric.py:392:        assert_array_equal(np.abs(~self.f), self.t)
numpy/core/tests/test_numeric.py:393:        assert_array_equal(np.abs(self.f), self.f)
numpy/core/tests/test_numeric.py:394:        assert_array_equal(~np.abs(self.f), self.t)
numpy/core/tests/test_numeric.py:395:        assert_array_equal(~np.abs(self.t), self.f)
numpy/core/tests/test_numeric.py:396:        assert_array_equal(np.abs(~self.nm), self.im)
numpy/core/tests/test_numeric.py:398:        assert_array_equal(self.o, self.f)
numpy/core/tests/test_numeric.py:400:        assert_array_equal(self.o, self.t)
numpy/core/tests/test_numeric.py:403:        assert_array_equal(self.t | self.t, self.t)
numpy/core/tests/test_numeric.py:404:        assert_array_equal(self.f | self.f, self.f)
numpy/core/tests/test_numeric.py:405:        assert_array_equal(self.t | self.f, self.t)
numpy/core/tests/test_numeric.py:406:        assert_array_equal(self.f | self.t, self.t)
numpy/core/tests/test_numeric.py:408:        assert_array_equal(self.o, self.t)
numpy/core/tests/test_numeric.py:409:        assert_array_equal(self.t & self.t, self.t)
numpy/core/tests/test_numeric.py:410:        assert_array_equal(self.f & self.f, self.f)
numpy/core/tests/test_numeric.py:411:        assert_array_equal(self.t & self.f, self.f)
numpy/core/tests/test_numeric.py:412:        assert_array_equal(self.f & self.t, self.f)
numpy/core/tests/test_numeric.py:414:        assert_array_equal(self.o, self.t)
numpy/core/tests/test_numeric.py:415:        assert_array_equal(self.t ^ self.t, self.f)
numpy/core/tests/test_numeric.py:416:        assert_array_equal(self.f ^ self.f, self.f)
numpy/core/tests/test_numeric.py:417:        assert_array_equal(self.t ^ self.f, self.t)
numpy/core/tests/test_numeric.py:418:        assert_array_equal(self.f ^ self.t, self.t)
numpy/core/tests/test_numeric.py:420:        assert_array_equal(self.o, self.f)
numpy/core/tests/test_numeric.py:422:        assert_array_equal(self.nm & self.t, self.nm)
numpy/core/tests/test_numeric.py:423:        assert_array_equal(self.im & self.f, False)
numpy/core/tests/test_numeric.py:424:        assert_array_equal(self.nm & True, self.nm)
numpy/core/tests/test_numeric.py:425:        assert_array_equal(self.im & False, self.f)
numpy/core/tests/test_numeric.py:426:        assert_array_equal(self.nm | self.t, self.t)
numpy/core/tests/test_numeric.py:427:        assert_array_equal(self.im | self.f, self.im)
numpy/core/tests/test_numeric.py:428:        assert_array_equal(self.nm | True, self.t)
numpy/core/tests/test_numeric.py:429:        assert_array_equal(self.im | False, self.im)
numpy/core/tests/test_numeric.py:430:        assert_array_equal(self.nm ^ self.t, self.im)
numpy/core/tests/test_numeric.py:431:        assert_array_equal(self.im ^ self.f, self.im)
numpy/core/tests/test_numeric.py:432:        assert_array_equal(self.nm ^ True, self.im)
numpy/core/tests/test_numeric.py:433:        assert_array_equal(self.im ^ False, self.im)
numpy/core/tests/test_numeric.py:486:            assert_array_equal(self.f[i:] > 0, self.ef[i:])
numpy/core/tests/test_numeric.py:487:            assert_array_equal(self.f[i:] - 1 >= 0, self.ef[i:])
numpy/core/tests/test_numeric.py:488:            assert_array_equal(self.f[i:] == 0, ~self.ef[i:])
numpy/core/tests/test_numeric.py:489:            assert_array_equal(-self.f[i:] < 0, self.ef[i:])
numpy/core/tests/test_numeric.py:490:            assert_array_equal(-self.f[i:] + 1 <= 0, self.ef[i:])
numpy/core/tests/test_numeric.py:492:            assert_array_equal(r, self.ef[i:])
numpy/core/tests/test_numeric.py:495:            assert_array_equal(r, r2)
numpy/core/tests/test_numeric.py:496:            assert_array_equal(r, r3)
numpy/core/tests/test_numeric.py:498:            assert_array_equal(r.view(np.int8), r.astype(np.int8))
numpy/core/tests/test_numeric.py:499:            assert_array_equal(r2.view(np.int8), r2.astype(np.int8))
numpy/core/tests/test_numeric.py:500:            assert_array_equal(r3.view(np.int8), r3.astype(np.int8))
numpy/core/tests/test_numeric.py:503:            assert_array_equal(np.isnan(self.nf[i:]), self.ef[i:])
numpy/core/tests/test_numeric.py:504:            assert_array_equal(np.isfinite(self.nf[i:]), ~self.ef[i:])
numpy/core/tests/test_numeric.py:505:            assert_array_equal(np.isfinite(self.inff[i:]), ~self.ef[i:])
numpy/core/tests/test_numeric.py:506:            assert_array_equal(np.isinf(self.inff[i:]), self.efnonan[i:])
numpy/core/tests/test_numeric.py:507:            assert_array_equal(np.signbit(self.signf[i:]), self.ef[i:])
numpy/core/tests/test_numeric.py:512:            assert_array_equal(self.d[i:] > 0, self.ed[i:])
numpy/core/tests/test_numeric.py:513:            assert_array_equal(self.d[i:] - 1 >= 0, self.ed[i:])
numpy/core/tests/test_numeric.py:514:            assert_array_equal(self.d[i:] == 0, ~self.ed[i:])
numpy/core/tests/test_numeric.py:515:            assert_array_equal(-self.d[i:] < 0, self.ed[i:])
numpy/core/tests/test_numeric.py:516:            assert_array_equal(-self.d[i:] + 1 <= 0, self.ed[i:])
numpy/core/tests/test_numeric.py:518:            assert_array_equal(r, self.ed[i:])
numpy/core/tests/test_numeric.py:521:            assert_array_equal(r, r2)
numpy/core/tests/test_numeric.py:522:            assert_array_equal(r, r3)
numpy/core/tests/test_numeric.py:524:            assert_array_equal(r.view(np.int8), r.astype(np.int8))
numpy/core/tests/test_numeric.py:525:            assert_array_equal(r2.view(np.int8), r2.astype(np.int8))
numpy/core/tests/test_numeric.py:526:            assert_array_equal(r3.view(np.int8), r3.astype(np.int8))
numpy/core/tests/test_numeric.py:529:            assert_array_equal(np.isnan(self.nd[i:]), self.ed[i:])
numpy/core/tests/test_numeric.py:530:            assert_array_equal(np.isfinite(self.nd[i:]), ~self.ed[i:])
numpy/core/tests/test_numeric.py:531:            assert_array_equal(np.isfinite(self.infd[i:]), ~self.ed[i:])
numpy/core/tests/test_numeric.py:532:            assert_array_equal(np.isinf(self.infd[i:]), self.ednonan[i:])
numpy/core/tests/test_numeric.py:533:            assert_array_equal(np.signbit(self.signd[i:]), self.ed[i:])
numpy/core/tests/test_numeric.py:550:            assert_(err == old)
numpy/core/tests/test_numeric.py:552:            assert_(new['divide'] == 'print')
numpy/core/tests/test_numeric.py:554:            assert_(np.geterr()['over'] == 'raise')
numpy/core/tests/test_numeric.py:555:            assert_(new['divide'] == 'print')
numpy/core/tests/test_numeric.py:557:            assert_(np.geterr() == old)
numpy/core/tests/test_numeric.py:577:                    assert_equal(len(w), 1)
numpy/core/tests/test_numeric.py:582:                assert_(len(extobj_err) == 2)
numpy/core/tests/test_numeric.py:583:                assert_("divide" in extobj_err[0])
numpy/core/tests/test_numeric.py:588:            assert_equal(self.called, 1)
numpy/core/tests/test_numeric.py:593:            assert_equal(self.called, 2)
numpy/core/tests/test_numeric.py:625:            assert_(str(exc).find(fpeerr) >= 0,
numpy/core/tests/test_numeric.py:706:                assert_equal(len(w), 1)
numpy/core/tests/test_numeric.py:707:                assert_("divide by zero" in str(w[0].message))
numpy/core/tests/test_numeric.py:709:                assert_equal(len(w), 2)
numpy/core/tests/test_numeric.py:710:                assert_("overflow" in str(w[-1].message))
numpy/core/tests/test_numeric.py:712:                assert_equal(len(w), 3)
numpy/core/tests/test_numeric.py:713:                assert_("invalid value" in str(w[-1].message))
numpy/core/tests/test_numeric.py:715:                assert_equal(len(w), 4)
numpy/core/tests/test_numeric.py:716:                assert_("underflow" in str(w[-1].message))
numpy/core/tests/test_numeric.py:729:        assert_equal(promote_func(i8, i16), np.dtype(np.int16))
numpy/core/tests/test_numeric.py:730:        assert_equal(promote_func(i32, i8), np.dtype(np.int32))
numpy/core/tests/test_numeric.py:731:        assert_equal(promote_func(i16, i64), np.dtype(np.int64))
numpy/core/tests/test_numeric.py:732:        assert_equal(promote_func(u8, u32), np.dtype(np.uint32))
numpy/core/tests/test_numeric.py:733:        assert_equal(promote_func(f32, f64), np.dtype(np.float64))
numpy/core/tests/test_numeric.py:734:        assert_equal(promote_func(fld, f32), np.dtype(np.longdouble))
numpy/core/tests/test_numeric.py:735:        assert_equal(promote_func(f64, fld), np.dtype(np.longdouble))
numpy/core/tests/test_numeric.py:736:        assert_equal(promote_func(c128, c64), np.dtype(np.complex128))
numpy/core/tests/test_numeric.py:737:        assert_equal(promote_func(cld, c128), np.dtype(np.clongdouble))
numpy/core/tests/test_numeric.py:738:        assert_equal(promote_func(c64, fld), np.dtype(np.clongdouble))
numpy/core/tests/test_numeric.py:741:        assert_equal(promote_func(b, i32), np.dtype(np.int32))
numpy/core/tests/test_numeric.py:742:        assert_equal(promote_func(b, u8), np.dtype(np.uint8))
numpy/core/tests/test_numeric.py:743:        assert_equal(promote_func(i8, u8), np.dtype(np.int16))
numpy/core/tests/test_numeric.py:744:        assert_equal(promote_func(u8, i32), np.dtype(np.int32))
numpy/core/tests/test_numeric.py:745:        assert_equal(promote_func(i64, u32), np.dtype(np.int64))
numpy/core/tests/test_numeric.py:746:        assert_equal(promote_func(u64, i32), np.dtype(np.float64))
numpy/core/tests/test_numeric.py:747:        assert_equal(promote_func(i32, f32), np.dtype(np.float64))
numpy/core/tests/test_numeric.py:748:        assert_equal(promote_func(i64, f32), np.dtype(np.float64))
numpy/core/tests/test_numeric.py:749:        assert_equal(promote_func(f32, i16), np.dtype(np.float32))
numpy/core/tests/test_numeric.py:750:        assert_equal(promote_func(f32, u32), np.dtype(np.float64))
numpy/core/tests/test_numeric.py:751:        assert_equal(promote_func(f32, c64), np.dtype(np.complex64))
numpy/core/tests/test_numeric.py:752:        assert_equal(promote_func(c128, f32), np.dtype(np.complex128))
numpy/core/tests/test_numeric.py:753:        assert_equal(promote_func(cld, f64), np.dtype(np.clongdouble))
numpy/core/tests/test_numeric.py:756:        assert_equal(promote_func(np.array([b]), i8), np.dtype(np.int8))
numpy/core/tests/test_numeric.py:757:        assert_equal(promote_func(np.array([b]), u8), np.dtype(np.uint8))
numpy/core/tests/test_numeric.py:758:        assert_equal(promote_func(np.array([b]), i32), np.dtype(np.int32))
numpy/core/tests/test_numeric.py:759:        assert_equal(promote_func(np.array([b]), u32), np.dtype(np.uint32))
numpy/core/tests/test_numeric.py:760:        assert_equal(promote_func(np.array([i8]), i64), np.dtype(np.int8))
numpy/core/tests/test_numeric.py:761:        assert_equal(promote_func(u64, np.array([i32])), np.dtype(np.int32))
numpy/core/tests/test_numeric.py:762:        assert_equal(promote_func(i64, np.array([u32])), np.dtype(np.uint32))
numpy/core/tests/test_numeric.py:763:        assert_equal(promote_func(np.int32(-1), np.array([u64])),
numpy/core/tests/test_numeric.py:765:        assert_equal(promote_func(f64, np.array([f32])), np.dtype(np.float32))
numpy/core/tests/test_numeric.py:766:        assert_equal(promote_func(fld, np.array([f32])), np.dtype(np.float32))
numpy/core/tests/test_numeric.py:767:        assert_equal(promote_func(np.array([f64]), fld), np.dtype(np.float64))
numpy/core/tests/test_numeric.py:768:        assert_equal(promote_func(fld, np.array([c64])),
numpy/core/tests/test_numeric.py:770:        assert_equal(promote_func(c64, np.array([f64])),
numpy/core/tests/test_numeric.py:772:        assert_equal(promote_func(np.complex64(3j), np.array([f64])),
numpy/core/tests/test_numeric.py:777:        assert_equal(promote_func(np.array([b]), f64), np.dtype(np.float64))
numpy/core/tests/test_numeric.py:778:        assert_equal(promote_func(np.array([b]), i64), np.dtype(np.int64))
numpy/core/tests/test_numeric.py:779:        assert_equal(promote_func(np.array([b]), u64), np.dtype(np.uint64))
numpy/core/tests/test_numeric.py:780:        assert_equal(promote_func(np.array([i8]), f64), np.dtype(np.float64))
numpy/core/tests/test_numeric.py:781:        assert_equal(promote_func(np.array([u16]), f64), np.dtype(np.float64))
numpy/core/tests/test_numeric.py:785:        assert_equal(promote_func(np.array([u16]), i32), np.dtype(np.uint16))
numpy/core/tests/test_numeric.py:791:        assert_equal(promote_func(np.array([f32]), c128),
numpy/core/tests/test_numeric.py:804:            assert_equal(b.dtype, np.dtype('f8'), "array type %s" % a.dtype)
numpy/core/tests/test_numeric.py:806:            assert_equal(b.dtype, np.dtype(np.longdouble),
numpy/core/tests/test_numeric.py:809:            assert_equal(b.dtype, np.dtype('f8'), "array type %s" % a.dtype)
numpy/core/tests/test_numeric.py:811:            assert_equal(b.dtype, np.dtype('f4'), "array type %s" % a.dtype)
numpy/core/tests/test_numeric.py:813:            assert_equal(b.dtype, np.dtype('f2'), "array type %s" % a.dtype)
numpy/core/tests/test_numeric.py:816:            assert_equal(b.dtype, np.dtype('c16'), "array type %s" % a.dtype)
numpy/core/tests/test_numeric.py:818:            assert_equal(b.dtype, np.dtype(np.clongdouble),
numpy/core/tests/test_numeric.py:821:            assert_equal(b.dtype, np.dtype('c16'), "array type %s" % a.dtype)
numpy/core/tests/test_numeric.py:823:            assert_equal(b.dtype, np.dtype('c8'), "array type %s" % a.dtype)
numpy/core/tests/test_numeric.py:850:        assert_(np.result_type(None) == np.dtype(None))
numpy/core/tests/test_numeric.py:854:        assert_equal(np.promote_types('<i8', '<i8'), np.dtype('i8'))
numpy/core/tests/test_numeric.py:855:        assert_equal(np.promote_types('>i8', '>i8'), np.dtype('i8'))
numpy/core/tests/test_numeric.py:857:        assert_equal(np.promote_types('>i8', '>U16'), np.dtype('U21'))
numpy/core/tests/test_numeric.py:858:        assert_equal(np.promote_types('<i8', '<U16'), np.dtype('U21'))
numpy/core/tests/test_numeric.py:859:        assert_equal(np.promote_types('>U16', '>i8'), np.dtype('U21'))
numpy/core/tests/test_numeric.py:860:        assert_equal(np.promote_types('<U16', '<i8'), np.dtype('U21'))
numpy/core/tests/test_numeric.py:862:        assert_equal(np.promote_types('<S5', '<U8'), np.dtype('U8'))
numpy/core/tests/test_numeric.py:863:        assert_equal(np.promote_types('>S5', '>U8'), np.dtype('U8'))
numpy/core/tests/test_numeric.py:864:        assert_equal(np.promote_types('<U8', '<S5'), np.dtype('U8'))
numpy/core/tests/test_numeric.py:865:        assert_equal(np.promote_types('>U8', '>S5'), np.dtype('U8'))
numpy/core/tests/test_numeric.py:866:        assert_equal(np.promote_types('<U5', '<U8'), np.dtype('U8'))
numpy/core/tests/test_numeric.py:867:        assert_equal(np.promote_types('>U8', '>U5'), np.dtype('U8'))
numpy/core/tests/test_numeric.py:869:        assert_equal(np.promote_types('<M8', '<M8'), np.dtype('M8'))
numpy/core/tests/test_numeric.py:870:        assert_equal(np.promote_types('>M8', '>M8'), np.dtype('M8'))
numpy/core/tests/test_numeric.py:871:        assert_equal(np.promote_types('<m8', '<m8'), np.dtype('m8'))
numpy/core/tests/test_numeric.py:872:        assert_equal(np.promote_types('>m8', '>m8'), np.dtype('m8'))
numpy/core/tests/test_numeric.py:885:            assert np.can_cast(numpy_dtype, rational_dt)
numpy/core/tests/test_numeric.py:886:            assert np.promote_types(numpy_dtype, rational_dt) is rational_dt
numpy/core/tests/test_numeric.py:890:            assert not np.can_cast(numpy_dtype, rational_dt)
numpy/core/tests/test_numeric.py:895:        assert np.can_cast(rational_dt, double_dt)
numpy/core/tests/test_numeric.py:896:        assert np.promote_types(double_dt, rational_dt) is double_dt
numpy/core/tests/test_numeric.py:909:        assert_equal(promote_types('bool', S), np.dtype(S+'5'))
numpy/core/tests/test_numeric.py:910:        assert_equal(promote_types('b', S), np.dtype(S+'4'))
numpy/core/tests/test_numeric.py:911:        assert_equal(promote_types('u1', S), np.dtype(S+'3'))
numpy/core/tests/test_numeric.py:912:        assert_equal(promote_types('u2', S), np.dtype(S+'5'))
numpy/core/tests/test_numeric.py:913:        assert_equal(promote_types('u4', S), np.dtype(S+'10'))
numpy/core/tests/test_numeric.py:914:        assert_equal(promote_types('u8', S), np.dtype(S+'20'))
numpy/core/tests/test_numeric.py:915:        assert_equal(promote_types('i1', S), np.dtype(S+'4'))
numpy/core/tests/test_numeric.py:916:        assert_equal(promote_types('i2', S), np.dtype(S+'6'))
numpy/core/tests/test_numeric.py:917:        assert_equal(promote_types('i4', S), np.dtype(S+'11'))
numpy/core/tests/test_numeric.py:918:        assert_equal(promote_types('i8', S), np.dtype(S+'21'))
numpy/core/tests/test_numeric.py:920:        assert_equal(promote_types('bool', S+'1'), np.dtype(S+'5'))
numpy/core/tests/test_numeric.py:921:        assert_equal(promote_types('bool', S+'30'), np.dtype(S+'30'))
numpy/core/tests/test_numeric.py:922:        assert_equal(promote_types('b', S+'1'), np.dtype(S+'4'))
numpy/core/tests/test_numeric.py:923:        assert_equal(promote_types('b', S+'30'), np.dtype(S+'30'))
numpy/core/tests/test_numeric.py:924:        assert_equal(promote_types('u1', S+'1'), np.dtype(S+'3'))
numpy/core/tests/test_numeric.py:925:        assert_equal(promote_types('u1', S+'30'), np.dtype(S+'30'))
numpy/core/tests/test_numeric.py:926:        assert_equal(promote_types('u2', S+'1'), np.dtype(S+'5'))
numpy/core/tests/test_numeric.py:927:        assert_equal(promote_types('u2', S+'30'), np.dtype(S+'30'))
numpy/core/tests/test_numeric.py:928:        assert_equal(promote_types('u4', S+'1'), np.dtype(S+'10'))
numpy/core/tests/test_numeric.py:929:        assert_equal(promote_types('u4', S+'30'), np.dtype(S+'30'))
numpy/core/tests/test_numeric.py:930:        assert_equal(promote_types('u8', S+'1'), np.dtype(S+'20'))
numpy/core/tests/test_numeric.py:931:        assert_equal(promote_types('u8', S+'30'), np.dtype(S+'30'))
numpy/core/tests/test_numeric.py:933:        assert_equal(promote_types('O', S+'30'), np.dtype('O'))
numpy/core/tests/test_numeric.py:945:        assert res.metadata == dtype.metadata
numpy/core/tests/test_numeric.py:956:            assert res.metadata is None
numpy/core/tests/test_numeric.py:958:            assert res.metadata == metadata
numpy/core/tests/test_numeric.py:961:            assert res.isnative
numpy/core/tests/test_numeric.py:992:            assert res.metadata is None
numpy/core/tests/test_numeric.py:995:            assert res is dtype1
numpy/core/tests/test_numeric.py:1005:            assert res.metadata is None
numpy/core/tests/test_numeric.py:1009:        assert dtype1.metadata == metadata1
numpy/core/tests/test_numeric.py:1013:            assert res_bs.newbyteorder() == res
numpy/core/tests/test_numeric.py:1015:            assert res_bs == res
numpy/core/tests/test_numeric.py:1016:        assert res_bs.metadata == res.metadata
numpy/core/tests/test_numeric.py:1035:        assert np.promote_types(dtype1, dtype2) is dtype1
numpy/core/tests/test_numeric.py:1038:        assert_(np.can_cast(np.int32, np.int64))
numpy/core/tests/test_numeric.py:1039:        assert_(np.can_cast(np.float64, complex))
numpy/core/tests/test_numeric.py:1040:        assert_(not np.can_cast(complex, float))
numpy/core/tests/test_numeric.py:1042:        assert_(np.can_cast('i8', 'f8'))
numpy/core/tests/test_numeric.py:1043:        assert_(not np.can_cast('i8', 'f4'))
numpy/core/tests/test_numeric.py:1044:        assert_(np.can_cast('i4', 'S11'))
numpy/core/tests/test_numeric.py:1046:        assert_(np.can_cast('i8', 'i8', 'no'))
numpy/core/tests/test_numeric.py:1047:        assert_(not np.can_cast('<i8', '>i8', 'no'))
numpy/core/tests/test_numeric.py:1049:        assert_(np.can_cast('<i8', '>i8', 'equiv'))
numpy/core/tests/test_numeric.py:1050:        assert_(not np.can_cast('<i4', '>i8', 'equiv'))
numpy/core/tests/test_numeric.py:1052:        assert_(np.can_cast('<i4', '>i8', 'safe'))
numpy/core/tests/test_numeric.py:1053:        assert_(not np.can_cast('<i8', '>i4', 'safe'))
numpy/core/tests/test_numeric.py:1055:        assert_(np.can_cast('<i8', '>i4', 'same_kind'))
numpy/core/tests/test_numeric.py:1056:        assert_(not np.can_cast('<i8', '>u4', 'same_kind'))
numpy/core/tests/test_numeric.py:1058:        assert_(np.can_cast('<i8', '>u4', 'unsafe'))
numpy/core/tests/test_numeric.py:1060:        assert_(np.can_cast('bool', 'S5'))
numpy/core/tests/test_numeric.py:1061:        assert_(not np.can_cast('bool', 'S4'))
numpy/core/tests/test_numeric.py:1063:        assert_(np.can_cast('b', 'S4'))
numpy/core/tests/test_numeric.py:1064:        assert_(not np.can_cast('b', 'S3'))
numpy/core/tests/test_numeric.py:1066:        assert_(np.can_cast('u1', 'S3'))
numpy/core/tests/test_numeric.py:1067:        assert_(not np.can_cast('u1', 'S2'))
numpy/core/tests/test_numeric.py:1068:        assert_(np.can_cast('u2', 'S5'))
numpy/core/tests/test_numeric.py:1069:        assert_(not np.can_cast('u2', 'S4'))
numpy/core/tests/test_numeric.py:1070:        assert_(np.can_cast('u4', 'S10'))
numpy/core/tests/test_numeric.py:1071:        assert_(not np.can_cast('u4', 'S9'))
numpy/core/tests/test_numeric.py:1072:        assert_(np.can_cast('u8', 'S20'))
numpy/core/tests/test_numeric.py:1073:        assert_(not np.can_cast('u8', 'S19'))
numpy/core/tests/test_numeric.py:1075:        assert_(np.can_cast('i1', 'S4'))
numpy/core/tests/test_numeric.py:1076:        assert_(not np.can_cast('i1', 'S3'))
numpy/core/tests/test_numeric.py:1077:        assert_(np.can_cast('i2', 'S6'))
numpy/core/tests/test_numeric.py:1078:        assert_(not np.can_cast('i2', 'S5'))
numpy/core/tests/test_numeric.py:1079:        assert_(np.can_cast('i4', 'S11'))
numpy/core/tests/test_numeric.py:1080:        assert_(not np.can_cast('i4', 'S10'))
numpy/core/tests/test_numeric.py:1081:        assert_(np.can_cast('i8', 'S21'))
numpy/core/tests/test_numeric.py:1082:        assert_(not np.can_cast('i8', 'S20'))
numpy/core/tests/test_numeric.py:1084:        assert_(np.can_cast('bool', 'S5'))
numpy/core/tests/test_numeric.py:1085:        assert_(not np.can_cast('bool', 'S4'))
numpy/core/tests/test_numeric.py:1087:        assert_(np.can_cast('b', 'U4'))
numpy/core/tests/test_numeric.py:1088:        assert_(not np.can_cast('b', 'U3'))
numpy/core/tests/test_numeric.py:1090:        assert_(np.can_cast('u1', 'U3'))
numpy/core/tests/test_numeric.py:1091:        assert_(not np.can_cast('u1', 'U2'))
numpy/core/tests/test_numeric.py:1092:        assert_(np.can_cast('u2', 'U5'))
numpy/core/tests/test_numeric.py:1093:        assert_(not np.can_cast('u2', 'U4'))
numpy/core/tests/test_numeric.py:1094:        assert_(np.can_cast('u4', 'U10'))
numpy/core/tests/test_numeric.py:1095:        assert_(not np.can_cast('u4', 'U9'))
numpy/core/tests/test_numeric.py:1096:        assert_(np.can_cast('u8', 'U20'))
numpy/core/tests/test_numeric.py:1097:        assert_(not np.can_cast('u8', 'U19'))
numpy/core/tests/test_numeric.py:1099:        assert_(np.can_cast('i1', 'U4'))
numpy/core/tests/test_numeric.py:1100:        assert_(not np.can_cast('i1', 'U3'))
numpy/core/tests/test_numeric.py:1101:        assert_(np.can_cast('i2', 'U6'))
numpy/core/tests/test_numeric.py:1102:        assert_(not np.can_cast('i2', 'U5'))
numpy/core/tests/test_numeric.py:1103:        assert_(np.can_cast('i4', 'U11'))
numpy/core/tests/test_numeric.py:1104:        assert_(not np.can_cast('i4', 'U10'))
numpy/core/tests/test_numeric.py:1105:        assert_(np.can_cast('i8', 'U21'))
numpy/core/tests/test_numeric.py:1106:        assert_(not np.can_cast('i8', 'U20'))
numpy/core/tests/test_numeric.py:1108:        assert_raises(TypeError, np.can_cast, 'i4', None)
numpy/core/tests/test_numeric.py:1109:        assert_raises(TypeError, np.can_cast, None, 'i4')
numpy/core/tests/test_numeric.py:1112:        assert_(np.can_cast(from_=np.int32, to=np.int64))
numpy/core/tests/test_numeric.py:1116:        assert_(not np.can_cast('i4', 'i4,i4'))
numpy/core/tests/test_numeric.py:1117:        assert_(not np.can_cast('i4', 'i4,i2'))
numpy/core/tests/test_numeric.py:1118:        assert_(np.can_cast('i4', 'i4,i4', casting='unsafe'))
numpy/core/tests/test_numeric.py:1119:        assert_(np.can_cast('i4', 'i4,i2', casting='unsafe'))
numpy/core/tests/test_numeric.py:1121:        assert_(not np.can_cast('i2', [('f1', 'i4')]))
numpy/core/tests/test_numeric.py:1122:        assert_(not np.can_cast('i2', [('f1', 'i4')], casting='same_kind'))
numpy/core/tests/test_numeric.py:1123:        assert_(np.can_cast('i2', [('f1', 'i4')], casting='unsafe'))
numpy/core/tests/test_numeric.py:1125:        assert_(not np.can_cast('i2', [('f1', 'i4,i4')]))
numpy/core/tests/test_numeric.py:1126:        assert_(np.can_cast('i2', [('f1', 'i4,i4')], casting='unsafe'))
numpy/core/tests/test_numeric.py:1127:        assert_(not np.can_cast('i2', [('f1', '(2,3)i4')]))
numpy/core/tests/test_numeric.py:1128:        assert_(np.can_cast('i2', [('f1', '(2,3)i4')], casting='unsafe'))
numpy/core/tests/test_numeric.py:1132:        assert_(not np.can_cast([('f1', 'i4')], 'i4'))
numpy/core/tests/test_numeric.py:1133:        assert_(np.can_cast([('f1', 'i4')], 'i4', casting='unsafe'))
numpy/core/tests/test_numeric.py:1134:        assert_(np.can_cast([('f1', 'i4')], 'i2', casting='unsafe'))
numpy/core/tests/test_numeric.py:1137:        assert_(not np.can_cast('i4,i4', 'i4', casting='unsafe'))
numpy/core/tests/test_numeric.py:1139:        assert_(not np.can_cast([('f1', [('x', 'i4')])], 'i4'))
numpy/core/tests/test_numeric.py:1140:        assert_(np.can_cast([('f1', [('x', 'i4')])], 'i4', casting='unsafe'))
numpy/core/tests/test_numeric.py:1143:        assert_(not np.can_cast([('f0', '(3,)i4')], 'i4'))
numpy/core/tests/test_numeric.py:1144:        assert_(np.can_cast([('f0', '(3,)i4')], 'i4', casting='unsafe'))
numpy/core/tests/test_numeric.py:1146:        assert_(not np.can_cast([('f0', ('i4,i4'), (2,))], 'i4',
numpy/core/tests/test_numeric.py:1153:            assert_(np.can_cast(ii.min, dt))
numpy/core/tests/test_numeric.py:1154:            assert_(np.can_cast(ii.max, dt))
numpy/core/tests/test_numeric.py:1155:            assert_(not np.can_cast(ii.min - 1, dt))
numpy/core/tests/test_numeric.py:1156:            assert_(not np.can_cast(ii.max + 1, dt))
numpy/core/tests/test_numeric.py:1160:            assert_(np.can_cast(fi.min, dt))
numpy/core/tests/test_numeric.py:1161:            assert_(np.can_cast(fi.max, dt))
numpy/core/tests/test_numeric.py:1177:        assert_(ai32.dtype == np.dtype(np.int32))
numpy/core/tests/test_numeric.py:1178:        assert_(ai64.dtype == np.dtype(np.int64))
numpy/core/tests/test_numeric.py:1179:        assert_(af.dtype == np.dtype(float))
numpy/core/tests/test_numeric.py:1185:        assert_(len(a) == len(expected))
numpy/core/tests/test_numeric.py:1186:        assert_(len(a20) == 20)
numpy/core/tests/test_numeric.py:1194:        assert_(np.alltrue(a == expected, axis=0))
numpy/core/tests/test_numeric.py:1195:        assert_(np.alltrue(a20 == expected[:20], axis=0))
numpy/core/tests/test_numeric.py:1221:        assert_equal(np.count_nonzero(np.array([])), 0)
numpy/core/tests/test_numeric.py:1222:        assert_equal(np.count_nonzero(np.array([], dtype='?')), 0)
numpy/core/tests/test_numeric.py:1223:        assert_equal(np.nonzero(np.array([])), ([],))
numpy/core/tests/test_numeric.py:1225:        assert_equal(np.count_nonzero(np.array([0])), 0)
numpy/core/tests/test_numeric.py:1226:        assert_equal(np.count_nonzero(np.array([0], dtype='?')), 0)
numpy/core/tests/test_numeric.py:1227:        assert_equal(np.nonzero(np.array([0])), ([],))
numpy/core/tests/test_numeric.py:1229:        assert_equal(np.count_nonzero(np.array([1])), 1)
numpy/core/tests/test_numeric.py:1230:        assert_equal(np.count_nonzero(np.array([1], dtype='?')), 1)
numpy/core/tests/test_numeric.py:1231:        assert_equal(np.nonzero(np.array([1])), ([0],))
numpy/core/tests/test_numeric.py:1234:        assert_equal(np.count_nonzero(np.array(0)), 0)
numpy/core/tests/test_numeric.py:1235:        assert_equal(np.count_nonzero(np.array(0, dtype='?')), 0)
numpy/core/tests/test_numeric.py:1237:            assert_equal(np.nonzero(np.array(0)), ([],))
numpy/core/tests/test_numeric.py:1239:        assert_equal(np.count_nonzero(np.array(1)), 1)
numpy/core/tests/test_numeric.py:1240:        assert_equal(np.count_nonzero(np.array(1, dtype='?')), 1)
numpy/core/tests/test_numeric.py:1242:            assert_equal(np.nonzero(np.array(1)), ([0],))
numpy/core/tests/test_numeric.py:1246:        assert_equal(np.count_nonzero(x), 4)
numpy/core/tests/test_numeric.py:1247:        assert_equal(np.count_nonzero(x), 4)
numpy/core/tests/test_numeric.py:1248:        assert_equal(np.nonzero(x), ([0, 2, 3, 6],))
numpy/core/tests/test_numeric.py:1254:        assert_equal(np.count_nonzero(x['a']), 3)
numpy/core/tests/test_numeric.py:1255:        assert_equal(np.count_nonzero(x['b']), 4)
numpy/core/tests/test_numeric.py:1256:        assert_equal(np.count_nonzero(x['c']), 3)
numpy/core/tests/test_numeric.py:1257:        assert_equal(np.count_nonzero(x['d']), 4)
numpy/core/tests/test_numeric.py:1258:        assert_equal(np.nonzero(x['a']), ([0, 2, 3],))
numpy/core/tests/test_numeric.py:1259:        assert_equal(np.nonzero(x['b']), ([0, 2, 3, 4],))
numpy/core/tests/test_numeric.py:1263:        assert_equal(np.count_nonzero(x.astype('i1')), 3)
numpy/core/tests/test_numeric.py:1264:        assert_equal(np.count_nonzero(x.astype('i2')), 3)
numpy/core/tests/test_numeric.py:1265:        assert_equal(np.count_nonzero(x.astype('i4')), 3)
numpy/core/tests/test_numeric.py:1266:        assert_equal(np.count_nonzero(x.astype('i8')), 3)
numpy/core/tests/test_numeric.py:1267:        assert_equal(np.nonzero(x), ([0, 1, 1], [1, 0, 2]))
numpy/core/tests/test_numeric.py:1270:        assert_equal(np.count_nonzero(x.astype('i1')), 3)
numpy/core/tests/test_numeric.py:1271:        assert_equal(np.count_nonzero(x.astype('i2')), 3)
numpy/core/tests/test_numeric.py:1272:        assert_equal(np.count_nonzero(x.astype('i4')), 3)
numpy/core/tests/test_numeric.py:1273:        assert_equal(np.count_nonzero(x.astype('i8')), 3)
numpy/core/tests/test_numeric.py:1274:        assert_equal(np.nonzero(x), ([0, 1, 2], [0, 1, 2]))
numpy/core/tests/test_numeric.py:1279:        assert_equal(np.count_nonzero(x['a']), 4)
numpy/core/tests/test_numeric.py:1280:        assert_equal(np.count_nonzero(x['b']), 5)
numpy/core/tests/test_numeric.py:1281:        assert_equal(np.nonzero(x['a']), ([0, 1, 1, 2], [2, 0, 1, 1]))
numpy/core/tests/test_numeric.py:1282:        assert_equal(np.nonzero(x['b']), ([0, 0, 1, 2, 2], [0, 2, 0, 1, 2]))
numpy/core/tests/test_numeric.py:1284:        assert_(not x['a'].T.flags.aligned)
numpy/core/tests/test_numeric.py:1285:        assert_equal(np.count_nonzero(x['a'].T), 4)
numpy/core/tests/test_numeric.py:1286:        assert_equal(np.count_nonzero(x['b'].T), 5)
numpy/core/tests/test_numeric.py:1287:        assert_equal(np.nonzero(x['a'].T), ([0, 1, 1, 2], [1, 1, 2, 0]))
numpy/core/tests/test_numeric.py:1288:        assert_equal(np.nonzero(x['b'].T), ([0, 0, 1, 2, 2], [0, 1, 2, 0, 2]))
numpy/core/tests/test_numeric.py:1295:            assert_equal(np.nonzero(c)[0], np.arange(i, 200 + i, 20))
numpy/core/tests/test_numeric.py:1300:            assert_equal(np.nonzero(c)[0],
numpy/core/tests/test_numeric.py:1313:                        assert_(type(nzx_i) is np.ndarray)
numpy/core/tests/test_numeric.py:1314:                        assert_(nzx_i.flags.writeable)
numpy/core/tests/test_numeric.py:1321:        assert_equal(np.count_nonzero(m, axis=0), expected)
numpy/core/tests/test_numeric.py:1324:        assert_equal(np.count_nonzero(m, axis=1), expected)
numpy/core/tests/test_numeric.py:1326:        assert_raises(ValueError, np.count_nonzero, m, axis=(1, 1))
numpy/core/tests/test_numeric.py:1327:        assert_raises(TypeError, np.count_nonzero, m, axis='foo')
numpy/core/tests/test_numeric.py:1328:        assert_raises(np.AxisError, np.count_nonzero, m, axis=3)
numpy/core/tests/test_numeric.py:1339:            assert_equal(a.dtype, b.dtype, err_msg=err_msg)
numpy/core/tests/test_numeric.py:1340:            assert_equal(a, b, err_msg=err_msg)
numpy/core/tests/test_numeric.py:1362:                assert_equal_w_dt(np.count_nonzero(m, axis=0),
numpy/core/tests/test_numeric.py:1366:                assert_equal_w_dt(np.count_nonzero(m, axis=1),
numpy/core/tests/test_numeric.py:1370:                assert_equal(np.count_nonzero(m, axis=(0, 1)),
numpy/core/tests/test_numeric.py:1372:                assert_equal(np.count_nonzero(m, axis=None),
numpy/core/tests/test_numeric.py:1374:                assert_equal(np.count_nonzero(m),
numpy/core/tests/test_numeric.py:1383:                assert_equal_w_dt(np.count_nonzero(m, axis=0),
numpy/core/tests/test_numeric.py:1387:                assert_equal_w_dt(np.count_nonzero(m, axis=1),
numpy/core/tests/test_numeric.py:1391:                assert_equal(np.count_nonzero(m, axis=(0, 1)),
numpy/core/tests/test_numeric.py:1393:                assert_equal(np.count_nonzero(m, axis=None),
numpy/core/tests/test_numeric.py:1395:                assert_equal(np.count_nonzero(m),
numpy/core/tests/test_numeric.py:1423:        assert_equal(np.count_nonzero(a, axis=()), a.astype(bool))
numpy/core/tests/test_numeric.py:1429:        assert_equal(np.count_nonzero(a, axis=0, keepdims=True),
numpy/core/tests/test_numeric.py:1431:        assert_equal(np.count_nonzero(a, axis=1, keepdims=True),
numpy/core/tests/test_numeric.py:1433:        assert_equal(np.count_nonzero(a, keepdims=True),
numpy/core/tests/test_numeric.py:1442:        assert_equal(m.nonzero(), tgt)
numpy/core/tests/test_numeric.py:1447:        assert_raises(ValueError, np.nonzero, a)
numpy/core/tests/test_numeric.py:1453:        assert_raises(ValueError, np.nonzero, np.array([BoolErrors()]))
numpy/core/tests/test_numeric.py:1475:        assert_raises(RuntimeError, np.nonzero, a)
numpy/core/tests/test_numeric.py:1478:        assert_raises(RuntimeError, np.nonzero, a)
numpy/core/tests/test_numeric.py:1482:        assert_raises(RuntimeError, np.nonzero, a)
numpy/core/tests/test_numeric.py:1485:        assert_raises(RuntimeError, np.nonzero, a)
numpy/core/tests/test_numeric.py:1491:        assert arr.flags.aligned  # structs are considered "aligned"
numpy/core/tests/test_numeric.py:1495:        assert arr.flags.aligned
numpy/core/tests/test_numeric.py:1497:        assert arr.flags.aligned
numpy/core/tests/test_numeric.py:1520:        # assert that an exception in first pass is handled correctly
numpy/core/tests/test_numeric.py:1522:        assert_raises(ValueError, np.nonzero, a)
numpy/core/tests/test_numeric.py:1526:        assert_raises(ValueError, np.nonzero, a)
numpy/core/tests/test_numeric.py:1530:        assert_raises(ValueError, np.nonzero, a)
numpy/core/tests/test_numeric.py:1551:        assert arr.dtype is dt
numpy/core/tests/test_numeric.py:1561:        assert_((np.array([a[0][V > 0], a[1][V > 0], a[2][V > 0]]) == a[:, V > 0]).all())
numpy/core/tests/test_numeric.py:1567:        assert_equal(c, [])
numpy/core/tests/test_numeric.py:1568:        assert_equal(c.dtype, np.dtype('int32'))
numpy/core/tests/test_numeric.py:1573:        assert_equal(np.binary_repr(0), '0')
numpy/core/tests/test_numeric.py:1576:        assert_equal(np.binary_repr(10), '1010')
numpy/core/tests/test_numeric.py:1577:        assert_equal(np.binary_repr(12522),
numpy/core/tests/test_numeric.py:1579:        assert_equal(np.binary_repr(10736848),
numpy/core/tests/test_numeric.py:1583:        assert_equal(np.binary_repr(-1), '-1')
numpy/core/tests/test_numeric.py:1584:        assert_equal(np.binary_repr(-10), '-1010')
numpy/core/tests/test_numeric.py:1585:        assert_equal(np.binary_repr(-12522),
numpy/core/tests/test_numeric.py:1587:        assert_equal(np.binary_repr(-10736848),
numpy/core/tests/test_numeric.py:1591:        assert_equal(np.binary_repr(0, width=5), '00000')
numpy/core/tests/test_numeric.py:1592:        assert_equal(np.binary_repr(10, width=7), '0001010')
numpy/core/tests/test_numeric.py:1593:        assert_equal(np.binary_repr(-5, width=7), '1111011')
numpy/core/tests/test_numeric.py:1600:        assert_equal(np.binary_repr(-128, width=8), '10000000')
numpy/core/tests/test_numeric.py:1605:            assert_equal(np.binary_repr(num, width=width), exp)
numpy/core/tests/test_numeric.py:1609:        assert_equal(np.binary_repr(np.int64(-2**62), width=64),
numpy/core/tests/test_numeric.py:1615:        assert_equal(np.base_repr(3**5, 3), '100000')
numpy/core/tests/test_numeric.py:1618:        assert_equal(np.base_repr(12, 10), '12')
numpy/core/tests/test_numeric.py:1619:        assert_equal(np.base_repr(12, 10, 4), '000012')
numpy/core/tests/test_numeric.py:1620:        assert_equal(np.base_repr(12, 4), '30')
numpy/core/tests/test_numeric.py:1621:        assert_equal(np.base_repr(3731624803700888, 36), '10QR0ROFCEW')
numpy/core/tests/test_numeric.py:1624:        assert_equal(np.base_repr(-12, 10), '-12')
numpy/core/tests/test_numeric.py:1625:        assert_equal(np.base_repr(-12, 10, 4), '-000012')
numpy/core/tests/test_numeric.py:1626:        assert_equal(np.base_repr(-12, 4), '-30')
numpy/core/tests/test_numeric.py:1638:        assert_(res)
numpy/core/tests/test_numeric.py:1639:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1641:        assert_(not res)
numpy/core/tests/test_numeric.py:1642:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1644:        assert_(not res)
numpy/core/tests/test_numeric.py:1645:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1647:        assert_(not res)
numpy/core/tests/test_numeric.py:1648:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1650:        assert_(res)
numpy/core/tests/test_numeric.py:1651:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1654:        assert_(res)
numpy/core/tests/test_numeric.py:1655:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1664:        assert_(not np.array_equal(a1, a1))
numpy/core/tests/test_numeric.py:1665:        assert_(np.array_equal(a1, a1, equal_nan=True))
numpy/core/tests/test_numeric.py:1666:        assert_(not np.array_equal(a1, a2, equal_nan=True))
numpy/core/tests/test_numeric.py:1668:        assert_(not np.array_equal(a1, a3, equal_nan=True))
numpy/core/tests/test_numeric.py:1671:        assert_(not np.array_equal(a, a))
numpy/core/tests/test_numeric.py:1672:        assert_(np.array_equal(a, a, equal_nan=True))
numpy/core/tests/test_numeric.py:1675:        assert_(np.array_equal(a, a))
numpy/core/tests/test_numeric.py:1676:        assert_(np.array_equal(a, a, equal_nan=True))
numpy/core/tests/test_numeric.py:1679:        assert_(not np.array_equal(a, a))
numpy/core/tests/test_numeric.py:1680:        assert_(np.array_equal(a, a, equal_nan=True))
numpy/core/tests/test_numeric.py:1684:        assert_(not np.array_equal(a, b, equal_nan=False))
numpy/core/tests/test_numeric.py:1685:        assert_(np.array_equal(a, b, equal_nan=True))
numpy/core/tests/test_numeric.py:1689:        assert_equal(a == None, [True, False, True])
numpy/core/tests/test_numeric.py:1690:        assert_equal(a != None, [False, True, False])
numpy/core/tests/test_numeric.py:1693:        assert_equal(a == None, [False, False, False])
numpy/core/tests/test_numeric.py:1694:        assert_equal(a != None, [True, True, True])
numpy/core/tests/test_numeric.py:1698:        assert_(res)
numpy/core/tests/test_numeric.py:1699:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1701:        assert_(not res)
numpy/core/tests/test_numeric.py:1702:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1704:        assert_(not res)
numpy/core/tests/test_numeric.py:1705:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1707:        assert_(not res)
numpy/core/tests/test_numeric.py:1708:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1711:        assert_(res)
numpy/core/tests/test_numeric.py:1712:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1714:        assert_(res)
numpy/core/tests/test_numeric.py:1715:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1717:        assert_(not res)
numpy/core/tests/test_numeric.py:1718:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1720:        assert_(not res)
numpy/core/tests/test_numeric.py:1721:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1723:        assert_(not res)
numpy/core/tests/test_numeric.py:1724:        assert_(type(res) is bool)
numpy/core/tests/test_numeric.py:1730:        assert_array_equal(zeros, zeros)
numpy/core/tests/test_numeric.py:1731:        assert not (zeros != zeros).any()
numpy/core/tests/test_numeric.py:1739:        assert not (zeros == nonzeros).any()
numpy/core/tests/test_numeric.py:1740:        assert (zeros != nonzeros).all()
numpy/core/tests/test_numeric.py:1744:    assert_array_equal(x, y)
numpy/core/tests/test_numeric.py:1749:        assert_(x.flags == y.flags)
numpy/core/tests/test_numeric.py:1751:        assert_(x.flags.owndata == y.flags.owndata)
numpy/core/tests/test_numeric.py:1752:        assert_(x.flags.writeable == y.flags.writeable)
numpy/core/tests/test_numeric.py:1753:        assert_(x.flags.c_contiguous == y.flags.c_contiguous)
numpy/core/tests/test_numeric.py:1754:        assert_(x.flags.f_contiguous == y.flags.f_contiguous)
numpy/core/tests/test_numeric.py:1755:        assert_(x.flags.writebackifcopy == y.flags.writebackifcopy)
numpy/core/tests/test_numeric.py:1757:    assert_(x.dtype.isnative == y.dtype.isnative)
numpy/core/tests/test_numeric.py:1803:        assert_(not data.dtype.isnative)
numpy/core/tests/test_numeric.py:1823:            assert actual.tolist() == expected.tolist()
numpy/core/tests/test_numeric.py:1825:            assert_equal(actual, expected)
numpy/core/tests/test_numeric.py:1834:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:1844:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:1853:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:1863:        assert_array_equal(ac, act)
numpy/core/tests/test_numeric.py:1869:        assert_(not M.dtype.isnative)
numpy/core/tests/test_numeric.py:1872:        assert_array_equal(ac, act)
numpy/core/tests/test_numeric.py:1882:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:1890:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:1901:        assert_array_strict_equal(am, a)
numpy/core/tests/test_numeric.py:1902:        assert_array_strict_equal(aM, a)
numpy/core/tests/test_numeric.py:1908:        assert_(not a.flags['F_CONTIGUOUS'])
numpy/core/tests/test_numeric.py:1909:        assert_(not a.flags['C_CONTIGUOUS'])
numpy/core/tests/test_numeric.py:1912:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:1923:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:1941:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:1952:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:1965:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:1978:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:1988:        assert_array_strict_equal(a, ac)
numpy/core/tests/test_numeric.py:1998:        assert_array_strict_equal(a, ac)
numpy/core/tests/test_numeric.py:2004:        assert_(not a.flags['F_CONTIGUOUS'])
numpy/core/tests/test_numeric.py:2005:        assert_(not a.flags['C_CONTIGUOUS'])
numpy/core/tests/test_numeric.py:2011:        assert_array_equal(a, ac)
numpy/core/tests/test_numeric.py:2020:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2030:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2039:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2048:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2057:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2067:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2075:        assert_(not a_s.dtype.isnative)
numpy/core/tests/test_numeric.py:2078:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2086:        assert_(not a_s.dtype.isnative)
numpy/core/tests/test_numeric.py:2089:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2097:        assert_(not m_s.dtype.isnative)
numpy/core/tests/test_numeric.py:2100:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2110:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2122:        assert_array_strict_equal(b, bt)
numpy/core/tests/test_numeric.py:2132:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2143:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2156:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2167:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2180:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2193:        assert_array_strict_equal(ac, act)
numpy/core/tests/test_numeric.py:2201:        assert_array_equal(out, expected)
numpy/core/tests/test_numeric.py:2209:        assert_array_equal(a[1:], expected)
numpy/core/tests/test_numeric.py:2219:        assert_array_strict_equal(a, ac)
numpy/core/tests/test_numeric.py:2229:        assert_array_strict_equal(a, ac)
numpy/core/tests/test_numeric.py:2239:        assert_array_strict_equal(a2, ac)
numpy/core/tests/test_numeric.py:2240:        assert_(a2 is a)
numpy/core/tests/test_numeric.py:2245:            assert_equal(d.clip(min=np.nan), d)
numpy/core/tests/test_numeric.py:2247:            assert_equal(d.clip(max=np.nan), d)
numpy/core/tests/test_numeric.py:2249:            assert_equal(d.clip(min=np.nan, max=np.nan), d)
numpy/core/tests/test_numeric.py:2251:            assert_equal(d.clip(min=-2, max=np.nan), d)
numpy/core/tests/test_numeric.py:2253:            assert_equal(d.clip(min=np.nan, max=10), d)
numpy/core/tests/test_numeric.py:2259:        assert actual.tolist() == expected.tolist()
numpy/core/tests/test_numeric.py:2285:        assert_equal(actual, expected)
numpy/core/tests/test_numeric.py:2303:        assert_equal(actual, exp)
numpy/core/tests/test_numeric.py:2320:        assert_equal(actual, expected)
numpy/core/tests/test_numeric.py:2334:        assert_equal(actual, expected)
numpy/core/tests/test_numeric.py:2382:        assert result.dtype == t
numpy/core/tests/test_numeric.py:2383:        assert_array_equal(result, expected)
numpy/core/tests/test_numeric.py:2397:        assert_(np.allclose(x, y), "%s and %s not close" % (x, y))
numpy/core/tests/test_numeric.py:2400:        assert_(not np.allclose(x, y), "%s and %s shouldn't be close" % (x, y))
numpy/core/tests/test_numeric.py:2447:        assert_array_equal(x, np.array([np.inf, 1]))
numpy/core/tests/test_numeric.py:2448:        assert_array_equal(y, np.array([0, np.inf]))
numpy/core/tests/test_numeric.py:2454:        assert_(np.allclose(a, a))
numpy/core/tests/test_numeric.py:2458:        assert_(np.allclose(x, x, equal_nan=True))
numpy/core/tests/test_numeric.py:2468:        assert_(type(np.allclose(a, a)) is bool)
numpy/core/tests/test_numeric.py:2525:            assert_array_equal(np.isclose(x, y), result)
numpy/core/tests/test_numeric.py:2528:        assert_(np.all(np.isclose(x, y)), "%s and %s not close" % (x, y))
numpy/core/tests/test_numeric.py:2532:        assert_(not np.any(np.isclose(x, y)), msg % (x, y))
numpy/core/tests/test_numeric.py:2538:            assert_(np.isclose(x, y) == np.allclose(x, y), msg=msg2 % (x, y))
numpy/core/tests/test_numeric.py:2540:            assert_array_equal(np.isclose(x, y).all(), np.allclose(x, y), msg % (x, y))
numpy/core/tests/test_numeric.py:2560:        assert_array_equal(np.isclose(np.nan, np.nan, equal_nan=True), [True])
numpy/core/tests/test_numeric.py:2562:        assert_array_equal(np.isclose(arr, arr, equal_nan=True), [True, True])
numpy/core/tests/test_numeric.py:2568:        assert_(type(x) is type(np.isclose(2, x)))
numpy/core/tests/test_numeric.py:2569:        assert_(type(x) is type(np.isclose(x, 2)))
numpy/core/tests/test_numeric.py:2572:        assert_(type(x) is type(np.isclose(np.inf, x)))
numpy/core/tests/test_numeric.py:2573:        assert_(type(x) is type(np.isclose(x, np.inf)))
numpy/core/tests/test_numeric.py:2577:        assert_(type(x) is type(y))
numpy/core/tests/test_numeric.py:2579:        assert_array_equal([True, True, False], y.mask)
numpy/core/tests/test_numeric.py:2581:        assert_(type(x) is type(y))
numpy/core/tests/test_numeric.py:2583:        assert_array_equal([True, True, False], y.mask)
numpy/core/tests/test_numeric.py:2587:        assert_(type(x) is type(y))
numpy/core/tests/test_numeric.py:2589:        assert_array_equal([True, True, False], y.mask)
numpy/core/tests/test_numeric.py:2592:        assert_(np.isscalar(np.isclose(1, 1)))
numpy/core/tests/test_numeric.py:2598:        assert_array_equal(x, np.array([np.inf, 1]))
numpy/core/tests/test_numeric.py:2599:        assert_array_equal(y, np.array([0, np.inf]))
numpy/core/tests/test_numeric.py:2604:        assert_(np.isclose(np.inf, -np.inf) is np.False_)
numpy/core/tests/test_numeric.py:2605:        assert_(np.isclose(0, np.inf) is np.False_)
numpy/core/tests/test_numeric.py:2606:        assert_(type(np.isclose(0, np.inf)) is np.bool_)
numpy/core/tests/test_numeric.py:2612:        assert np.isclose(a, a, atol=0, equal_nan=True).all()
numpy/core/tests/test_numeric.py:2613:        assert np.isclose(a, a, atol=np.timedelta64(1, "ns"), equal_nan=True).all()
numpy/core/tests/test_numeric.py:2614:        assert np.allclose(a, a, atol=0, equal_nan=True)
numpy/core/tests/test_numeric.py:2615:        assert np.allclose(a, a, atol=np.timedelta64(1, "ns"), equal_nan=True)
numpy/core/tests/test_numeric.py:2624:        assert_almost_equal(np.var(self.A), self.real_var)
numpy/core/tests/test_numeric.py:2625:        assert_almost_equal(np.std(self.A)**2, self.real_var)
numpy/core/tests/test_numeric.py:2628:        assert_equal(np.var(1), 0)
numpy/core/tests/test_numeric.py:2629:        assert_equal(np.std(1), 0)
numpy/core/tests/test_numeric.py:2632:        assert_almost_equal(np.var(self.A, ddof=1),
numpy/core/tests/test_numeric.py:2634:        assert_almost_equal(np.std(self.A, ddof=1)**2,
numpy/core/tests/test_numeric.py:2638:        assert_almost_equal(np.var(self.A, ddof=2),
numpy/core/tests/test_numeric.py:2640:        assert_almost_equal(np.std(self.A, ddof=2)**2,
numpy/core/tests/test_numeric.py:2647:        assert_(r is out)
numpy/core/tests/test_numeric.py:2648:        assert_array_equal(r, out)
numpy/core/tests/test_numeric.py:2650:        assert_(r is out)
numpy/core/tests/test_numeric.py:2651:        assert_array_equal(r, out)
numpy/core/tests/test_numeric.py:2653:        assert_(r is out)
numpy/core/tests/test_numeric.py:2654:        assert_array_equal(r, out)
numpy/core/tests/test_numeric.py:2661:        assert_almost_equal(np.var(A), real_var)
numpy/core/tests/test_numeric.py:2662:        assert_almost_equal(np.std(A)**2, real_var)
numpy/core/tests/test_numeric.py:2665:        assert_equal(np.var(1j), 0)
numpy/core/tests/test_numeric.py:2666:        assert_equal(np.std(1j), 0)
numpy/core/tests/test_numeric.py:2702:            assert_equal(arr.dtype, dtype)
numpy/core/tests/test_numeric.py:2703:            assert_(getattr(arr.flags, self.orders[order]))
numpy/core/tests/test_numeric.py:2710:                assert_equal(arr, dtype.type(val))
numpy/core/tests/test_numeric.py:2731:        assert_(sys.getrefcount(dim) == beg)
numpy/core/tests/test_numeric.py:2733:        assert_(sys.getrefcount(dim) == beg)
numpy/core/tests/test_numeric.py:2735:        assert_(sys.getrefcount(dim) == beg)
numpy/core/tests/test_numeric.py:2737:        assert_(sys.getrefcount(dim) == beg)
numpy/core/tests/test_numeric.py:2777:                    assert_(np.all(dz == z))
numpy/core/tests/test_numeric.py:2779:                assert_(np.all(dz == value))
numpy/core/tests/test_numeric.py:2789:            assert_equal(dz.shape, d.shape)
numpy/core/tests/test_numeric.py:2790:            assert_equal(np.array(dz.strides)*d.dtype.itemsize,
numpy/core/tests/test_numeric.py:2792:            assert_equal(d.flags.c_contiguous, dz.flags.c_contiguous)
numpy/core/tests/test_numeric.py:2793:            assert_equal(d.flags.f_contiguous, dz.flags.f_contiguous)
numpy/core/tests/test_numeric.py:2795:                assert_equal(dz.dtype, d.dtype)
numpy/core/tests/test_numeric.py:2797:                assert_equal(dz.dtype, np.dtype(dtype))
numpy/core/tests/test_numeric.py:2802:            assert_equal(dz.shape, d.shape)
numpy/core/tests/test_numeric.py:2803:            assert_(dz.flags.c_contiguous)
numpy/core/tests/test_numeric.py:2805:                assert_equal(dz.dtype, d.dtype)
numpy/core/tests/test_numeric.py:2807:                assert_equal(dz.dtype, np.dtype(dtype))
numpy/core/tests/test_numeric.py:2812:            assert_equal(dz.shape, d.shape)
numpy/core/tests/test_numeric.py:2813:            assert_(dz.flags.f_contiguous)
numpy/core/tests/test_numeric.py:2815:                assert_equal(dz.dtype, d.dtype)
numpy/core/tests/test_numeric.py:2817:                assert_equal(dz.dtype, np.dtype(dtype))
numpy/core/tests/test_numeric.py:2822:            assert_equal(dz.shape, d.shape)
numpy/core/tests/test_numeric.py:2824:                assert_(dz.flags.f_contiguous)
numpy/core/tests/test_numeric.py:2826:                assert_(dz.flags.c_contiguous)
numpy/core/tests/test_numeric.py:2828:                assert_equal(dz.dtype, d.dtype)
numpy/core/tests/test_numeric.py:2830:                assert_equal(dz.dtype, np.dtype(dtype))
numpy/core/tests/test_numeric.py:2838:                    assert_equal(sz.shape, s)
numpy/core/tests/test_numeric.py:2840:                        assert_equal(sz.dtype, d.dtype)
numpy/core/tests/test_numeric.py:2842:                        assert_equal(sz.dtype, np.dtype(dtype))
numpy/core/tests/test_numeric.py:2844:                        assert_(sz.flags.c_contiguous)
numpy/core/tests/test_numeric.py:2846:                        assert_(sz.flags.f_contiguous)
numpy/core/tests/test_numeric.py:2868:        assert_(type(b) is MyNDArray)
numpy/core/tests/test_numeric.py:2871:        assert_(type(b) is not MyNDArray)
numpy/core/tests/test_numeric.py:2899:            assert result.strides == (16, 4)
numpy/core/tests/test_numeric.py:2902:            assert result.strides == (4, 1)
numpy/core/tests/test_numeric.py:2921:        assert_array_almost_equal(z, self.z1)
numpy/core/tests/test_numeric.py:2923:        assert_array_almost_equal(z, self.z1_4)
numpy/core/tests/test_numeric.py:2925:        assert_array_almost_equal(z, self.z2)
numpy/core/tests/test_numeric.py:2927:        assert_array_almost_equal(z, self.z1r)
numpy/core/tests/test_numeric.py:2929:        assert_array_almost_equal(z, self.z2r)
numpy/core/tests/test_numeric.py:2931:        assert_array_almost_equal(z, self.zs)
numpy/core/tests/test_numeric.py:2936:        assert_array_almost_equal(z, self.z1)
numpy/core/tests/test_numeric.py:2938:        assert_array_almost_equal(z, self.z2)
numpy/core/tests/test_numeric.py:2944:        assert_array_equal(d, np.ones(100))
numpy/core/tests/test_numeric.py:2945:        assert_array_equal(k, np.ones(3))
numpy/core/tests/test_numeric.py:2953:        assert_array_almost_equal(z, r_z)
numpy/core/tests/test_numeric.py:2967:        assert_array_equal(valid_mode, default_mode)
numpy/core/tests/test_numeric.py:2971:        assert_array_equal(np.correlate(d, k, mode=0), valid_mode)
numpy/core/tests/test_numeric.py:2981:        assert_array_almost_equal(np.convolve(d, k)[2:-2], np.full(98, 3))
numpy/core/tests/test_numeric.py:2987:        assert_array_equal(d, np.ones(100))
numpy/core/tests/test_numeric.py:2988:        assert_array_equal(k, np.ones(3))
numpy/core/tests/test_numeric.py:2996:        assert_array_equal(full_mode, default_mode)
numpy/core/tests/test_numeric.py:3000:        assert_array_equal(np.convolve(d, k, mode=2), full_mode)
numpy/core/tests/test_numeric.py:3015:        assert_equal(np.argwhere(x).shape, (0, nd))
numpy/core/tests/test_numeric.py:3020:        assert_equal(np.argwhere(x).shape, (1, nd))
numpy/core/tests/test_numeric.py:3025:        assert_equal(np.argwhere(x).shape, (x.size - 1, nd))
numpy/core/tests/test_numeric.py:3029:        assert_equal(np.argwhere(x).shape, (x.size, nd))
numpy/core/tests/test_numeric.py:3033:        assert_array_equal(np.argwhere(x > 1),
numpy/core/tests/test_numeric.py:3040:        assert_equal(np.argwhere([4, 0, 2, 1, 3]), [[0], [2], [3], [4]])
numpy/core/tests/test_numeric.py:3048:        assert_equal(repr(a), "FOO")
numpy/core/tests/test_numeric.py:3050:        assert_equal(repr(a), "array([1])")
numpy/core/tests/test_numeric.py:3053:        assert_equal(str(a), "FOO")
numpy/core/tests/test_numeric.py:3055:        assert_equal(str(a), "[1]")
numpy/core/tests/test_numeric.py:3062:        assert_equal(xr, np.array([8, 9, 0, 1, 2, 3, 4, 5, 6, 7]))
numpy/core/tests/test_numeric.py:3067:        assert_equal(x2r, np.array([[9, 0, 1, 2, 3], [4, 5, 6, 7, 8]]))
numpy/core/tests/test_numeric.py:3070:        assert_equal(x2r, np.array([[5, 6, 7, 8, 9], [0, 1, 2, 3, 4]]))
numpy/core/tests/test_numeric.py:3073:        assert_equal(x2r, np.array([[4, 0, 1, 2, 3], [9, 5, 6, 7, 8]]))
numpy/core/tests/test_numeric.py:3077:        assert_equal(x2r, np.array([[9, 5, 6, 7, 8], [4, 0, 1, 2, 3]]))
numpy/core/tests/test_numeric.py:3080:        assert_equal(x2r, np.array([[5, 6, 7, 8, 9], [0, 1, 2, 3, 4]]))
numpy/core/tests/test_numeric.py:3083:        assert_equal(x2r, np.array([[5, 6, 7, 8, 9], [0, 1, 2, 3, 4]]))
numpy/core/tests/test_numeric.py:3086:        assert_equal(x2r, np.array([[4, 0, 1, 2, 3], [9, 5, 6, 7, 8]]))
numpy/core/tests/test_numeric.py:3089:        assert_equal(x2r, np.array([[1, 2, 3, 4, 0], [6, 7, 8, 9, 5]]))
numpy/core/tests/test_numeric.py:3092:        assert_equal(x2r, np.array([[9, 5, 6, 7, 8], [4, 0, 1, 2, 3]]))
numpy/core/tests/test_numeric.py:3095:        assert_equal(x2r, np.array([[6, 7, 8, 9, 5], [1, 2, 3, 4, 0]]))
numpy/core/tests/test_numeric.py:3099:        assert_equal(x2r, np.array([[0, 1, 2, 3, 4], [5, 6, 7, 8, 9]]))
numpy/core/tests/test_numeric.py:3102:        assert_equal(x2r, np.array([[3, 4, 0, 1, 2], [8, 9, 5, 6, 7]]))
numpy/core/tests/test_numeric.py:3106:        assert_equal(x2r, np.array([[4, 0, 1, 2, 3], [9, 5, 6, 7, 8]]))
numpy/core/tests/test_numeric.py:3109:        assert_equal(x2r, np.array([[4, 0, 1, 2, 3], [9, 5, 6, 7, 8]]))
numpy/core/tests/test_numeric.py:3113:        assert_equal(np.roll(x, 1), np.array([]))
numpy/core/tests/test_numeric.py:3135:        assert_raises(np.AxisError, np.rollaxis, a, -5, 0)
numpy/core/tests/test_numeric.py:3136:        assert_raises(np.AxisError, np.rollaxis, a, 0, -5)
numpy/core/tests/test_numeric.py:3137:        assert_raises(np.AxisError, np.rollaxis, a, 4, 0)
numpy/core/tests/test_numeric.py:3138:        assert_raises(np.AxisError, np.rollaxis, a, 0, 5)
numpy/core/tests/test_numeric.py:3143:        assert_(a.flags['OWNDATA'])
numpy/core/tests/test_numeric.py:3148:            assert_(np.all(res[i0, i1, i2, i3] == a))
numpy/core/tests/test_numeric.py:3149:            assert_(res.shape == self.tgtshape[(i, j)], str((i,j)))
numpy/core/tests/test_numeric.py:3150:            assert_(not res.flags['OWNDATA'])
numpy/core/tests/test_numeric.py:3156:            assert_(np.all(res[i0, i1, i2, i3] == a))
numpy/core/tests/test_numeric.py:3157:            assert_(res.shape == self.tgtshape[(4 - ip, j)])
numpy/core/tests/test_numeric.py:3158:            assert_(not res.flags['OWNDATA'])
numpy/core/tests/test_numeric.py:3164:            assert_(np.all(res[i0, i1, i2, i3] == a))
numpy/core/tests/test_numeric.py:3165:            assert_(res.shape == self.tgtshape[(i, 4 - jp)])
numpy/core/tests/test_numeric.py:3166:            assert_(not res.flags['OWNDATA'])
numpy/core/tests/test_numeric.py:3173:            assert_(np.all(res[i0, i1, i2, i3] == a))
numpy/core/tests/test_numeric.py:3174:            assert_(res.shape == self.tgtshape[(4 - ip, 4 - jp)])
numpy/core/tests/test_numeric.py:3175:            assert_(not res.flags['OWNDATA'])
numpy/core/tests/test_numeric.py:3186:            assert_(actual, expected)
numpy/core/tests/test_numeric.py:3196:            assert_(actual, expected)
numpy/core/tests/test_numeric.py:3209:            assert_(actual, (1, 2, 3, 4))
numpy/core/tests/test_numeric.py:3221:            assert_(actual, expected)
numpy/core/tests/test_numeric.py:3225:        assert_raises_regex(np.AxisError, 'source.*out of bounds',
numpy/core/tests/test_numeric.py:3227:        assert_raises_regex(np.AxisError, 'source.*out of bounds',
numpy/core/tests/test_numeric.py:3229:        assert_raises_regex(np.AxisError, 'destination.*out of bounds',
numpy/core/tests/test_numeric.py:3231:        assert_raises_regex(ValueError, 'repeated axis in `source`',
numpy/core/tests/test_numeric.py:3233:        assert_raises_regex(ValueError, 'repeated axis in `destination`',
numpy/core/tests/test_numeric.py:3235:        assert_raises_regex(ValueError, 'must have the same number',
numpy/core/tests/test_numeric.py:3237:        assert_raises_regex(ValueError, 'must have the same number',
numpy/core/tests/test_numeric.py:3243:        assert_(x.shape, result.shape)
numpy/core/tests/test_numeric.py:3244:        assert_(isinstance(result, np.ma.MaskedArray))
numpy/core/tests/test_numeric.py:3248:        assert_(x, list(result))
numpy/core/tests/test_numeric.py:3249:        assert_(isinstance(result, np.ndarray))
numpy/core/tests/test_numeric.py:3258:        assert_equal(cp, z)
numpy/core/tests/test_numeric.py:3260:        assert_equal(cp, -z)
numpy/core/tests/test_numeric.py:3267:        assert_equal(cp, z)
numpy/core/tests/test_numeric.py:3269:        assert_equal(cp, -z)
numpy/core/tests/test_numeric.py:3276:        assert_equal(cp, z)
numpy/core/tests/test_numeric.py:3278:        assert_equal(cp, -z)
numpy/core/tests/test_numeric.py:3285:        assert_equal(np.cross(u, v), z)
numpy/core/tests/test_numeric.py:3286:        assert_equal(np.cross(v, u), -z)
numpy/core/tests/test_numeric.py:3287:        assert_equal(np.cross(u, u), 0)
numpy/core/tests/test_numeric.py:3292:        assert_equal(np.cross(u, v, axisa=0), z)
numpy/core/tests/test_numeric.py:3293:        assert_equal(np.cross(v, u.T), -z)
numpy/core/tests/test_numeric.py:3294:        assert_equal(np.cross(v, v), 0)
numpy/core/tests/test_numeric.py:3299:        assert_equal(np.cross(u, v, axisa=0, axisb=0), z)
numpy/core/tests/test_numeric.py:3300:        assert_equal(np.cross(v.T, u.T), -z)
numpy/core/tests/test_numeric.py:3301:        assert_equal(np.cross(u.T, u.T), 0)
numpy/core/tests/test_numeric.py:3306:        assert_equal(np.cross(u, v, axisb=0), z)
numpy/core/tests/test_numeric.py:3307:        assert_equal(np.cross(v.T, u), -z)
numpy/core/tests/test_numeric.py:3308:        assert_equal(np.cross(u, u), 0)
numpy/core/tests/test_numeric.py:3313:        assert_equal(np.cross(u, v).shape, (2, 5, 3))
numpy/core/tests/test_numeric.py:3316:        assert_equal(np.cross(u, v, axisa=1, axisb=0).shape, (10, 5, 3))
numpy/core/tests/test_numeric.py:3317:        assert_raises(np.AxisError, np.cross, u, v, axisa=1, axisb=2)
numpy/core/tests/test_numeric.py:3318:        assert_raises(np.AxisError, np.cross, u, v, axisa=3, axisb=0)
numpy/core/tests/test_numeric.py:3321:        assert_equal(np.cross(u, v, axisa=1, axisc=2).shape, (10, 5, 3, 7))
numpy/core/tests/test_numeric.py:3322:        assert_raises(np.AxisError, np.cross, u, v, axisa=-5, axisb=2)
numpy/core/tests/test_numeric.py:3323:        assert_raises(np.AxisError, np.cross, u, v, axisa=1, axisb=-4)
numpy/core/tests/test_numeric.py:3327:            assert_equal(np.cross(u, u, axisc=axisc).shape, (3, 4))
numpy/core/tests/test_numeric.py:3337:    assert_equal(res1, out1)
numpy/core/tests/test_numeric.py:3338:    assert_equal(np.outer(arr2, arr3, out2), out2)
numpy/core/tests/test_numeric.py:3345:        assert_array_equal(x, np.array([[0, 0, 0],
numpy/core/tests/test_numeric.py:3349:        assert_array_equal(y, np.array([[0, 1, 2],
numpy/core/tests/test_numeric.py:3356:        assert_array_equal(x, np.array([0, 1, 2, 3]))
numpy/core/tests/test_numeric.py:3359:        assert_array_equal(x, np.array([0, 1, 2, 3]))
numpy/core/tests/test_numeric.py:3362:        assert_array_equal([], np.indices(()))
numpy/core/tests/test_numeric.py:3363:        assert_array_equal([], np.indices((), sparse=True))
numpy/core/tests/test_numeric.py:3364:        assert_array_equal([[]], np.indices((0,)))
numpy/core/tests/test_numeric.py:3365:        assert_array_equal([[]], np.indices((0,), sparse=True))
numpy/core/tests/test_numeric.py:3369:        assert_array_equal(x, np.array([[0], [1], [2], [3]]))
numpy/core/tests/test_numeric.py:3370:        assert_array_equal(y, np.array([[0, 1, 2]]))
numpy/core/tests/test_numeric.py:3376:        assert_(inds.dtype == dtype)
numpy/core/tests/test_numeric.py:3379:            assert_(arr.dtype == dtype)
numpy/core/tests/test_numeric.py:3393:        assert_(not a.flags['C'])
numpy/core/tests/test_numeric.py:3394:        assert_(not a.flags['F'])
numpy/core/tests/test_numeric.py:3395:        assert_(not a.flags['O'])
numpy/core/tests/test_numeric.py:3396:        assert_(not a.flags['W'])
numpy/core/tests/test_numeric.py:3397:        assert_(not a.flags['A'])
numpy/core/tests/test_numeric.py:3404:        assert_(b.flags[flag])
numpy/core/tests/test_numeric.py:3405:        assert_(b.dtype == dtype)
numpy/core/tests/test_numeric.py:3411:            assert_(c is b)
numpy/core/tests/test_numeric.py:3413:            assert_(c.flags[flag])
numpy/core/tests/test_numeric.py:3425:        assert_raises(KeyError, np.require, a, None, 'Q')
numpy/core/tests/test_numeric.py:3429:        assert_(a.flags['O'])
numpy/core/tests/test_numeric.py:3430:        assert_(a.flags['C'])
numpy/core/tests/test_numeric.py:3431:        assert_(a.flags['A'])
numpy/core/tests/test_numeric.py:3432:        assert_(a.dtype == 'i4')
numpy/core/tests/test_numeric.py:3433:        assert_equal(a, [1, 2, 3, 4])
numpy/core/tests/test_numeric.py:3437:        assert_raises(ValueError, np.require, a, None, ['C', 'F'])
numpy/core/tests/test_numeric.py:3445:        assert_(type(b) is np.ndarray)
numpy/core/tests/test_numeric.py:3467:            assert_equal(mit.shape, (5, 6, 7))
numpy/core/tests/test_numeric.py:3468:            assert_equal(mit.ndim, 3)
numpy/core/tests/test_numeric.py:3469:            assert_equal(mit.nd, 3)
numpy/core/tests/test_numeric.py:3470:            assert_equal(mit.numiter, 4)
numpy/core/tests/test_numeric.py:3472:                assert_(a is ia.base)
numpy/core/tests/test_numeric.py:3478:        assert_equal(mit.shape, (5, 6, 7))
numpy/core/tests/test_numeric.py:3479:        assert_equal(mit.ndim, 3)
numpy/core/tests/test_numeric.py:3480:        assert_equal(mit.nd, 3)
numpy/core/tests/test_numeric.py:3481:        assert_equal(mit.numiter, 1)
numpy/core/tests/test_numeric.py:3482:        assert_(arrs[0] is mit.iters[0].base)
numpy/core/tests/test_numeric.py:3489:                assert_raises(ValueError, np.broadcast, *arrs)
numpy/core/tests/test_numeric.py:3492:                assert_equal(mit.numiter, j)
numpy/core/tests/test_numeric.py:3499:        assert_equal(mit.shape, mit2.shape)
numpy/core/tests/test_numeric.py:3500:        assert_equal(mit.ndim, mit2.ndim)
numpy/core/tests/test_numeric.py:3501:        assert_equal(mit.nd, mit2.nd)
numpy/core/tests/test_numeric.py:3502:        assert_equal(mit.numiter, mit2.numiter)
numpy/core/tests/test_numeric.py:3503:        assert_(mit.iters[0].base is mit2.iters[0].base)
numpy/core/tests/test_numeric.py:3505:        assert_raises(ValueError, np.broadcast, 1, **{'x': 1})
numpy/core/tests/test_numeric.py:3522:        assert_raises(TypeError, np.sum, x, keepdims=True)
numpy/core/tests/test_numeric.py:3532:        assert_array_equal(td, np.dot(a, b))
numpy/core/tests/test_numeric.py:3533:        assert_array_equal(td, np.einsum('ij,jk', a, b))
numpy/core/tests/test_numeric.py:3539:        assert_array_equal(ret, arr_0d)
numpy/core/tests/test_function_base.py:15:        assert_(isinstance(x, PhysicalQuantity))
numpy/core/tests/test_function_base.py:20:        assert_(isinstance(x, PhysicalQuantity))
numpy/core/tests/test_function_base.py:24:        assert_(isinstance(x, PhysicalQuantity))
numpy/core/tests/test_function_base.py:46:        assert_(len(y) == 50)
numpy/core/tests/test_function_base.py:48:        assert_(y[-1] == 10 ** 6)
numpy/core/tests/test_function_base.py:50:        assert_(y[-1] < 10 ** 6)
numpy/core/tests/test_function_base.py:52:        assert_array_equal(y, [1, 10, 100, 1e3, 1e4, 1e5, 1e6])
numpy/core/tests/test_function_base.py:60:        assert_equal(t1, t2)
numpy/core/tests/test_function_base.py:64:        assert_equal(t3, t4)
numpy/core/tests/test_function_base.py:66:        assert_equal(t5, t2.T)
numpy/core/tests/test_function_base.py:70:        assert_equal(y.dtype, dtype('float32'))
numpy/core/tests/test_function_base.py:72:        assert_equal(y.dtype, dtype('float64'))
numpy/core/tests/test_function_base.py:74:        assert_equal(y.dtype, dtype('int32'))
numpy/core/tests/test_function_base.py:79:        assert_equal(logspace(a, b), logspace(1.0, 5.0))
numpy/core/tests/test_function_base.py:85:        assert type(ls) is PhysicalQuantity2
numpy/core/tests/test_function_base.py:86:        assert_equal(ls, logspace(1.0, 7.0))
numpy/core/tests/test_function_base.py:88:        assert type(ls) is PhysicalQuantity2
numpy/core/tests/test_function_base.py:89:        assert_equal(ls, logspace(1.0, 7.0, 1))
numpy/core/tests/test_function_base.py:96:        assert_(len(y) == 50)
numpy/core/tests/test_function_base.py:98:        assert_(y[-1] == 10 ** 6)
numpy/core/tests/test_function_base.py:100:        assert_(y[-1] < 10 ** 6)
numpy/core/tests/test_function_base.py:102:        assert_array_equal(y, [1, 10, 100, 1e3, 1e4, 1e5, 1e6])
numpy/core/tests/test_function_base.py:105:        assert_allclose(y, [8, 4, 2])
numpy/core/tests/test_function_base.py:106:        assert_array_equal(y.imag, 0)
numpy/core/tests/test_function_base.py:109:        assert_array_equal(y, [-1, -10, -100])
numpy/core/tests/test_function_base.py:110:        assert_array_equal(y.imag, 0)
numpy/core/tests/test_function_base.py:113:        assert_array_equal(y, [-100, -10, -1])
numpy/core/tests/test_function_base.py:114:        assert_array_equal(y.imag, 0)
numpy/core/tests/test_function_base.py:124:        assert_equal(y[0], start)
numpy/core/tests/test_function_base.py:127:        assert_equal(y[0], start)
numpy/core/tests/test_function_base.py:130:        assert_equal(y[0], start)
numpy/core/tests/test_function_base.py:131:        assert_equal(y[-1], stop)
numpy/core/tests/test_function_base.py:134:        assert_equal(y[0], start)
numpy/core/tests/test_function_base.py:140:        assert_equal(y[0], -3.0)
numpy/core/tests/test_function_base.py:141:        assert_(isnan(y[1:-1]).all())
numpy/core/tests/test_function_base.py:142:        assert_equal(y[3], 3.0)
numpy/core/tests/test_function_base.py:147:        assert_equal(y[0], -3.0)
numpy/core/tests/test_function_base.py:148:        assert_(isnan(y[1:]).all())
numpy/core/tests/test_function_base.py:153:        assert_allclose(y, [1j, 2j, 4j, 8j, 16j])
numpy/core/tests/test_function_base.py:154:        assert_array_equal(y.real, 0)
numpy/core/tests/test_function_base.py:157:        assert_allclose(y, [-4j, -12j, -36j, -108j, -324j])
numpy/core/tests/test_function_base.py:158:        assert_array_equal(y.real, 0)
numpy/core/tests/test_function_base.py:161:        assert_allclose(y, [1+1j, 10+10j, 100+100j, 1000+1000j])
numpy/core/tests/test_function_base.py:164:        assert_allclose(y, [-1+1j, -10+10j, -100+100j, -1000+1000j])
numpy/core/tests/test_function_base.py:168:        assert_allclose(y, [-1, 1j, +1])
numpy/core/tests/test_function_base.py:171:        assert_allclose(y, [0+3j, -3/sqrt(2)+3j/sqrt(2), -3+0j])
numpy/core/tests/test_function_base.py:173:        assert_allclose(y, [0+3j, 3/sqrt(2)+3j/sqrt(2), 3+0j])
numpy/core/tests/test_function_base.py:175:        assert_allclose(y, [-3+0j, -3/sqrt(2)-3j/sqrt(2), 0-3j])
numpy/core/tests/test_function_base.py:177:        assert_allclose(y, [0+3j, -3/sqrt(2)+3j/sqrt(2), -3+0j])
numpy/core/tests/test_function_base.py:186:        assert_allclose(y, [3j, -5])
numpy/core/tests/test_function_base.py:188:        assert_allclose(y, [-5, 3j])
numpy/core/tests/test_function_base.py:192:        assert_equal(y.dtype, dtype('float32'))
numpy/core/tests/test_function_base.py:194:        assert_equal(y.dtype, dtype('float64'))
numpy/core/tests/test_function_base.py:196:        assert_equal(y.dtype, dtype('int32'))
numpy/core/tests/test_function_base.py:200:        assert_equal(y.dtype, dtype('float_'))
numpy/core/tests/test_function_base.py:202:        assert_equal(y.dtype, dtype('complex'))
numpy/core/tests/test_function_base.py:216:        assert_allclose(t1, t4, rtol=1e-2)
numpy/core/tests/test_function_base.py:217:        assert_allclose(t2, t5, rtol=1e-2)
numpy/core/tests/test_function_base.py:218:        assert_allclose(t3, t6, rtol=1e-5)
numpy/core/tests/test_function_base.py:227:        assert_equal(t1, t2)
numpy/core/tests/test_function_base.py:231:        assert_equal(t3, t4)
numpy/core/tests/test_function_base.py:233:        assert_equal(t5, t2.T)
numpy/core/tests/test_function_base.py:238:        assert_equal(geomspace(a, b), geomspace(1.0, 5.0))
numpy/core/tests/test_function_base.py:244:        assert type(gs) is PhysicalQuantity2
numpy/core/tests/test_function_base.py:245:        assert_equal(gs, geomspace(1.0, 7.0))
numpy/core/tests/test_function_base.py:247:        assert type(gs) is PhysicalQuantity2
numpy/core/tests/test_function_base.py:248:        assert_equal(gs, geomspace(1.0, 7.0, 1))
numpy/core/tests/test_function_base.py:251:        assert_raises(ValueError, geomspace, 0, 10)
numpy/core/tests/test_function_base.py:252:        assert_raises(ValueError, geomspace, 10, 0)
numpy/core/tests/test_function_base.py:253:        assert_raises(ValueError, geomspace, 0, 0)
numpy/core/tests/test_function_base.py:260:        assert_(len(y) == 50)
numpy/core/tests/test_function_base.py:262:        assert_(y[-1] == 10)
numpy/core/tests/test_function_base.py:264:        assert_(y[-1] < 10)
numpy/core/tests/test_function_base.py:265:        assert_raises(ValueError, linspace, 0, 10, num=-1)
numpy/core/tests/test_function_base.py:269:        assert_(y == [0.0], y)
numpy/core/tests/test_function_base.py:270:        assert_raises(TypeError, linspace, 0, 1, num=2.5)
numpy/core/tests/test_function_base.py:276:        assert_equal(t1, t2)
numpy/core/tests/test_function_base.py:277:        assert_equal(t2, t3)
numpy/core/tests/test_function_base.py:281:        assert_equal(y.dtype, dtype('float32'))
numpy/core/tests/test_function_base.py:283:        assert_equal(y.dtype, dtype('float64'))
numpy/core/tests/test_function_base.py:285:        assert_equal(y.dtype, dtype('int32'))
numpy/core/tests/test_function_base.py:297:        assert_equal(t1, t4)
numpy/core/tests/test_function_base.py:298:        assert_equal(t2, t5)
numpy/core/tests/test_function_base.py:299:        assert_equal(t3, t6)
numpy/core/tests/test_function_base.py:307:        assert_equal(t1, t2)
numpy/core/tests/test_function_base.py:311:        assert_equal(t3, t4)
numpy/core/tests/test_function_base.py:313:        assert_equal(t5, t2.T)
numpy/core/tests/test_function_base.py:320:        assert_equal(lim1, t1)
numpy/core/tests/test_function_base.py:321:        assert_equal(lim2, t2)
numpy/core/tests/test_function_base.py:326:        assert_equal(linspace(a, b), linspace(0.0, 1.0))
numpy/core/tests/test_function_base.py:332:        assert type(ls) is PhysicalQuantity2
numpy/core/tests/test_function_base.py:333:        assert_equal(ls, linspace(0.0, 1.0))
numpy/core/tests/test_function_base.py:335:        assert type(ls) is PhysicalQuantity2
numpy/core/tests/test_function_base.py:336:        assert_equal(ls, linspace(0.0, 1.0, 1))
numpy/core/tests/test_function_base.py:370:        assert_equal(linspace(one, five), linspace(1, 5))
numpy/core/tests/test_function_base.py:377:            assert_(any(linspace(0, stop, 10, endpoint=False, dtype=ftype)))
numpy/core/tests/test_function_base.py:381:            assert_equal(linspace(0, j, j+1, dtype=int),
numpy/core/tests/test_function_base.py:388:                assert isinstance(y, tuple) and len(y) == 2
numpy/core/tests/test_function_base.py:391:                    assert_array_equal(y[0], y0_expect)
numpy/core/tests/test_function_base.py:392:                    assert_equal(y[1], y0_expect[1])
numpy/core/tests/test_function_base.py:394:                    assert_array_equal(y[0], [0.0])
numpy/core/tests/test_function_base.py:395:                    assert_equal(y[1], 1.0)
numpy/core/tests/test_function_base.py:397:                    assert_array_equal(y[0], [0.0][:num])
numpy/core/tests/test_function_base.py:398:                    assert isnan(y[1])
numpy/core/tests/test_function_base.py:404:        assert_array_equal(y, array([1., 1.5, 2.]))
numpy/core/tests/test_function_base.py:409:        assert_array_equal(y, t)
numpy/core/tests/test_datetime.py:32:            assert_(dt1 == np.dtype('datetime64[750%s]' % unit))
numpy/core/tests/test_datetime.py:34:            assert_(dt2 == np.dtype('timedelta64[%s]' % unit))
numpy/core/tests/test_datetime.py:37:        assert_equal(str(np.dtype("M8")), "datetime64")
numpy/core/tests/test_datetime.py:40:        assert_equal(np.dtype("=M8"), np.dtype("M8"))
numpy/core/tests/test_datetime.py:41:        assert_equal(np.dtype("=M8[s]"), np.dtype("M8[s]"))
numpy/core/tests/test_datetime.py:42:        assert_(np.dtype(">M8") == np.dtype("M8") or
numpy/core/tests/test_datetime.py:44:        assert_(np.dtype(">M8[D]") == np.dtype("M8[D]") or
numpy/core/tests/test_datetime.py:46:        assert_(np.dtype(">M8") != np.dtype("<M8"))
numpy/core/tests/test_datetime.py:48:        assert_equal(np.dtype("=m8"), np.dtype("m8"))
numpy/core/tests/test_datetime.py:49:        assert_equal(np.dtype("=m8[s]"), np.dtype("m8[s]"))
numpy/core/tests/test_datetime.py:50:        assert_(np.dtype(">m8") == np.dtype("m8") or
numpy/core/tests/test_datetime.py:52:        assert_(np.dtype(">m8[D]") == np.dtype("m8[D]") or
numpy/core/tests/test_datetime.py:54:        assert_(np.dtype(">m8") != np.dtype("<m8"))
numpy/core/tests/test_datetime.py:57:        assert_raises(TypeError, np.dtype, 'M8[badunit]')
numpy/core/tests/test_datetime.py:58:        assert_raises(TypeError, np.dtype, 'm8[badunit]')
numpy/core/tests/test_datetime.py:59:        assert_raises(TypeError, np.dtype, 'M8[YY]')
numpy/core/tests/test_datetime.py:60:        assert_raises(TypeError, np.dtype, 'm8[YY]')
numpy/core/tests/test_datetime.py:61:        assert_raises(TypeError, np.dtype, 'm4')
numpy/core/tests/test_datetime.py:62:        assert_raises(TypeError, np.dtype, 'M7')
numpy/core/tests/test_datetime.py:63:        assert_raises(TypeError, np.dtype, 'm7')
numpy/core/tests/test_datetime.py:64:        assert_raises(TypeError, np.dtype, 'M16')
numpy/core/tests/test_datetime.py:65:        assert_raises(TypeError, np.dtype, 'm16')
numpy/core/tests/test_datetime.py:66:        assert_raises(TypeError, np.dtype, 'M8[3000000000ps]')
numpy/core/tests/test_datetime.py:70:        assert_(not np.can_cast('m8', 'M8', casting='same_kind'))
numpy/core/tests/test_datetime.py:71:        assert_(not np.can_cast('M8', 'm8', casting='same_kind'))
numpy/core/tests/test_datetime.py:72:        assert_(not np.can_cast('m8', 'M8', casting='safe'))
numpy/core/tests/test_datetime.py:73:        assert_(not np.can_cast('M8', 'm8', casting='safe'))
numpy/core/tests/test_datetime.py:76:        assert_(np.can_cast('i8', 'm8', casting='same_kind'))
numpy/core/tests/test_datetime.py:77:        assert_(np.can_cast('i8', 'm8', casting='safe'))
numpy/core/tests/test_datetime.py:78:        assert_(np.can_cast('i4', 'm8', casting='same_kind'))
numpy/core/tests/test_datetime.py:79:        assert_(np.can_cast('i4', 'm8', casting='safe'))
numpy/core/tests/test_datetime.py:80:        assert_(np.can_cast('u4', 'm8', casting='same_kind'))
numpy/core/tests/test_datetime.py:81:        assert_(np.can_cast('u4', 'm8', casting='safe'))
numpy/core/tests/test_datetime.py:85:        assert_(np.can_cast('u8', 'm8', casting='same_kind'))
numpy/core/tests/test_datetime.py:86:        assert_(not np.can_cast('u8', 'm8', casting='safe'))
numpy/core/tests/test_datetime.py:89:        assert_(not np.can_cast('f4', 'm8', casting='same_kind'))
numpy/core/tests/test_datetime.py:90:        assert_(not np.can_cast('f4', 'm8', casting='safe'))
numpy/core/tests/test_datetime.py:93:        assert_(not np.can_cast('i8', 'M8', casting='same_kind'))
numpy/core/tests/test_datetime.py:94:        assert_(not np.can_cast('i8', 'M8', casting='safe'))
numpy/core/tests/test_datetime.py:97:        assert_(not np.can_cast('b1', 'M8', casting='same_kind'))
numpy/core/tests/test_datetime.py:98:        assert_(not np.can_cast('b1', 'M8', casting='safe'))
numpy/core/tests/test_datetime.py:100:        assert_(np.can_cast('b1', 'm8', casting='same_kind'))
numpy/core/tests/test_datetime.py:101:        assert_(np.can_cast('b1', 'm8', casting='safe'))
numpy/core/tests/test_datetime.py:104:        assert_(np.can_cast('M8[M]', 'M8[D]', casting='safe'))
numpy/core/tests/test_datetime.py:105:        assert_(np.can_cast('M8[Y]', 'M8[D]', casting='safe'))
numpy/core/tests/test_datetime.py:107:        assert_(not np.can_cast('m8[M]', 'm8[D]', casting='safe'))
numpy/core/tests/test_datetime.py:108:        assert_(not np.can_cast('m8[Y]', 'm8[D]', casting='safe'))
numpy/core/tests/test_datetime.py:110:        assert_(np.can_cast('M8[M]', 'M8[D]', casting='same_kind'))
numpy/core/tests/test_datetime.py:111:        assert_(np.can_cast('M8[Y]', 'M8[D]', casting='same_kind'))
numpy/core/tests/test_datetime.py:113:        assert_(not np.can_cast('m8[M]', 'm8[D]', casting='same_kind'))
numpy/core/tests/test_datetime.py:114:        assert_(not np.can_cast('m8[Y]', 'm8[D]', casting='same_kind'))
numpy/core/tests/test_datetime.py:116:        assert_(np.can_cast('M8[D]', 'M8[h]', casting='same_kind'))
numpy/core/tests/test_datetime.py:118:        assert_(np.can_cast('m8[D]', 'm8[h]', casting='same_kind'))
numpy/core/tests/test_datetime.py:119:        assert_(np.can_cast('m8[h]', 'm8[D]', casting='same_kind'))
numpy/core/tests/test_datetime.py:122:        assert_(not np.can_cast('M8[7h]', 'M8[3h]', casting='safe'))
numpy/core/tests/test_datetime.py:123:        assert_(not np.can_cast('M8[3h]', 'M8[6h]', casting='safe'))
numpy/core/tests/test_datetime.py:125:        assert_(np.can_cast('M8[7h]', 'M8[3h]', casting='same_kind'))
numpy/core/tests/test_datetime.py:127:        assert_(np.can_cast('M8[6h]', 'M8[3h]', casting='safe'))
numpy/core/tests/test_datetime.py:131:        assert_(np.can_cast('m8', 'm8[h]', casting='same_kind'))
numpy/core/tests/test_datetime.py:132:        assert_(np.can_cast('m8', 'm8[h]', casting='safe'))
numpy/core/tests/test_datetime.py:133:        assert_(np.can_cast('M8', 'M8[h]', casting='same_kind'))
numpy/core/tests/test_datetime.py:134:        assert_(np.can_cast('M8', 'M8[h]', casting='safe'))
numpy/core/tests/test_datetime.py:136:        assert_(not np.can_cast('m8[h]', 'm8', casting='same_kind'))
numpy/core/tests/test_datetime.py:137:        assert_(not np.can_cast('m8[h]', 'm8', casting='safe'))
numpy/core/tests/test_datetime.py:138:        assert_(not np.can_cast('M8[h]', 'M8', casting='same_kind'))
numpy/core/tests/test_datetime.py:139:        assert_(not np.can_cast('M8[h]', 'M8', casting='safe'))
numpy/core/tests/test_datetime.py:168:            assert np.can_cast(larger_unit, smaller_unit, casting='safe')
numpy/core/tests/test_datetime.py:169:            assert np.can_cast(smaller_unit, larger_unit, casting='safe')
numpy/core/tests/test_datetime.py:179:        assert_(np.datetime64('NaT') !=
numpy/core/tests/test_datetime.py:181:        assert_(np.datetime64('NaT') != np.datetime64('NaT', 'us'))
numpy/core/tests/test_datetime.py:182:        assert_(np.datetime64('NaT', 'us') != np.datetime64('NaT'))
numpy/core/tests/test_datetime.py:191:        assert_equal(np.argsort(arr, kind='mergesort'), expected)
numpy/core/tests/test_datetime.py:200:        assert_equal(np.argsort(arr, kind='mergesort'), expected)
numpy/core/tests/test_datetime.py:226:        assert_equal(arr, expected)
numpy/core/tests/test_datetime.py:230:        assert_equal(np.datetime64('1950-03-12', 'D'),
numpy/core/tests/test_datetime.py:232:        assert_equal(np.datetime64('1950-03-12T13', 's'),
numpy/core/tests/test_datetime.py:236:        assert_equal(np.datetime64(), np.datetime64('NaT'))
numpy/core/tests/test_datetime.py:239:        assert_equal(str(np.datetime64('NaT')), 'NaT')
numpy/core/tests/test_datetime.py:240:        assert_equal(repr(np.datetime64('NaT')),
numpy/core/tests/test_datetime.py:242:        assert_equal(str(np.datetime64('2011-02')), '2011-02')
numpy/core/tests/test_datetime.py:243:        assert_equal(repr(np.datetime64('2011-02')),
numpy/core/tests/test_datetime.py:247:        assert_equal(np.datetime64(None), np.datetime64('NaT'))
numpy/core/tests/test_datetime.py:250:        assert_equal(np.datetime64().dtype, np.dtype('M8'))
numpy/core/tests/test_datetime.py:251:        assert_equal(np.datetime64('NaT').dtype, np.dtype('M8'))
numpy/core/tests/test_datetime.py:254:        assert_raises(ValueError, np.datetime64, 17)
numpy/core/tests/test_datetime.py:261:        assert_equal(a.dtype, np.dtype('M8[h]'))
numpy/core/tests/test_datetime.py:262:        assert_equal(b.dtype, np.dtype('M8[h]'))
numpy/core/tests/test_datetime.py:264:        assert_equal(np.datetime64(a), a)
numpy/core/tests/test_datetime.py:265:        assert_equal(np.datetime64(a).dtype, np.dtype('M8[h]'))
numpy/core/tests/test_datetime.py:267:        assert_equal(np.datetime64(b), a)
numpy/core/tests/test_datetime.py:268:        assert_equal(np.datetime64(b).dtype, np.dtype('M8[h]'))
numpy/core/tests/test_datetime.py:270:        assert_equal(np.datetime64(a, 's'), a)
numpy/core/tests/test_datetime.py:271:        assert_equal(np.datetime64(a, 's').dtype, np.dtype('M8[s]'))
numpy/core/tests/test_datetime.py:273:        assert_equal(np.datetime64(b, 's'), a)
numpy/core/tests/test_datetime.py:274:        assert_equal(np.datetime64(b, 's').dtype, np.dtype('M8[s]'))
numpy/core/tests/test_datetime.py:277:        assert_equal(np.datetime64('1945-03-25'),
numpy/core/tests/test_datetime.py:279:        assert_equal(np.datetime64('2045-03-25', 'D'),
numpy/core/tests/test_datetime.py:282:        assert_equal(np.datetime64('1980-01-25T14:36:22.5'),
numpy/core/tests/test_datetime.py:287:        assert_equal(np.datetime64('1920-03-13', 'h'),
numpy/core/tests/test_datetime.py:289:        assert_equal(np.datetime64('1920-03', 'm'),
numpy/core/tests/test_datetime.py:291:        assert_equal(np.datetime64('1920', 's'),
numpy/core/tests/test_datetime.py:293:        assert_equal(np.datetime64(datetime.date(2045, 3, 25), 'ms'),
numpy/core/tests/test_datetime.py:297:        assert_equal(np.datetime64('1920-03-13T18', 'D'),
numpy/core/tests/test_datetime.py:299:        assert_equal(np.datetime64('1920-03-13T18:33:12', 'M'),
numpy/core/tests/test_datetime.py:301:        assert_equal(np.datetime64('1920-03-13T18:33:12.5', 'Y'),
numpy/core/tests/test_datetime.py:307:            assert_equal(np.datetime64('2000-01-01T00Z'),
numpy/core/tests/test_datetime.py:310:            assert_equal(np.datetime64('2000-01-01T00-08'),
numpy/core/tests/test_datetime.py:316:        assert_equal(arr.dtype, np.dtype('M8[M]'))
numpy/core/tests/test_datetime.py:322:        assert_equal(arr.dtype, np.dtype('O'))
numpy/core/tests/test_datetime.py:326:        assert_equal(arr.dtype, np.dtype('O'))
numpy/core/tests/test_datetime.py:336:        assert_equal(arr.dtype, np.dtype('O'))
numpy/core/tests/test_datetime.py:339:        assert_equal(arr.dtype, np.dtype('O'))
numpy/core/tests/test_datetime.py:342:        assert_equal(arr.dtype, np.dtype('O'))
numpy/core/tests/test_datetime.py:345:        assert_equal(arr.dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:348:        assert_equal(arr.dtype, np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:359:            assert_equal(np.timedelta64(np.int64(123), unit),
numpy/core/tests/test_datetime.py:362:            assert_equal(np.timedelta64(np.int64(123)),
numpy/core/tests/test_datetime.py:367:        assert_equal(np.timedelta64(7, 'D'),
numpy/core/tests/test_datetime.py:369:        assert_equal(np.timedelta64(120, 's'),
numpy/core/tests/test_datetime.py:373:        assert_equal(np.timedelta64(), np.timedelta64(0))
numpy/core/tests/test_datetime.py:376:        assert_equal(np.timedelta64(None), np.timedelta64('NaT'))
numpy/core/tests/test_datetime.py:379:        assert_equal(str(np.timedelta64('NaT')), 'NaT')
numpy/core/tests/test_datetime.py:380:        assert_equal(repr(np.timedelta64('NaT')),
numpy/core/tests/test_datetime.py:382:        assert_equal(str(np.timedelta64(3, 's')), '3 seconds')
numpy/core/tests/test_datetime.py:383:        assert_equal(repr(np.timedelta64(-3, 's')),
numpy/core/tests/test_datetime.py:385:        assert_equal(repr(np.timedelta64(12)),
numpy/core/tests/test_datetime.py:389:        assert_equal(np.timedelta64(12).dtype, np.dtype('m8'))
numpy/core/tests/test_datetime.py:396:        assert_equal(a.dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:397:        assert_equal(b.dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:399:        assert_equal(np.timedelta64(a), a)
numpy/core/tests/test_datetime.py:400:        assert_equal(np.timedelta64(a).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:402:        assert_equal(np.timedelta64(b), a)
numpy/core/tests/test_datetime.py:403:        assert_equal(np.timedelta64(b).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:405:        assert_equal(np.timedelta64(a, 's'), a)
numpy/core/tests/test_datetime.py:406:        assert_equal(np.timedelta64(a, 's').dtype, np.dtype('m8[s]'))
numpy/core/tests/test_datetime.py:408:        assert_equal(np.timedelta64(b, 's'), a)
numpy/core/tests/test_datetime.py:409:        assert_equal(np.timedelta64(b, 's').dtype, np.dtype('m8[s]'))
numpy/core/tests/test_datetime.py:412:        assert_equal(np.timedelta64(5, 'D'),
numpy/core/tests/test_datetime.py:414:        assert_equal(np.timedelta64(102347621, 's'),
numpy/core/tests/test_datetime.py:416:        assert_equal(np.timedelta64(-10234760000, 'us'),
numpy/core/tests/test_datetime.py:419:        assert_equal(np.timedelta64(10234760000, 'us'),
numpy/core/tests/test_datetime.py:422:        assert_equal(np.timedelta64(1023476, 'ms'),
numpy/core/tests/test_datetime.py:424:        assert_equal(np.timedelta64(10, 'm'),
numpy/core/tests/test_datetime.py:426:        assert_equal(np.timedelta64(281, 'h'),
numpy/core/tests/test_datetime.py:428:        assert_equal(np.timedelta64(28, 'W'),
numpy/core/tests/test_datetime.py:433:        assert_raises(TypeError, np.timedelta64, a, 'M')
numpy/core/tests/test_datetime.py:434:        assert_raises(TypeError, np.timedelta64, a, 'Y')
numpy/core/tests/test_datetime.py:436:        assert_raises(TypeError, np.timedelta64, a, 'D')
numpy/core/tests/test_datetime.py:437:        assert_raises(TypeError, np.timedelta64, a, 'h')
numpy/core/tests/test_datetime.py:439:        assert_raises(TypeError, np.timedelta64, a, 'D')
numpy/core/tests/test_datetime.py:440:        assert_raises(TypeError, np.timedelta64, a, 'm')
numpy/core/tests/test_datetime.py:442:        assert_raises(TypeError, np.timedelta64, a, 'M')
numpy/core/tests/test_datetime.py:443:        assert_raises(TypeError, np.timedelta64, a, 'Y')
numpy/core/tests/test_datetime.py:445:        assert_raises(TypeError, np.timedelta64, a, 'M')
numpy/core/tests/test_datetime.py:446:        assert_raises(TypeError, np.timedelta64, a, 'Y')
numpy/core/tests/test_datetime.py:448:        assert_raises(TypeError, np.timedelta64, a, 'M')
numpy/core/tests/test_datetime.py:449:        assert_raises(TypeError, np.timedelta64, a, 'Y')
numpy/core/tests/test_datetime.py:458:        assert_equal(expected, actual)
numpy/core/tests/test_datetime.py:468:        assert_equal(actual, expected)
numpy/core/tests/test_datetime.py:472:        assert_equal('NaT', '{0}'.format(np.timedelta64('nat')))
numpy/core/tests/test_datetime.py:476:        assert_equal(np.datetime64('2010').dtype,
numpy/core/tests/test_datetime.py:478:        assert_equal(np.datetime64('2010-03').dtype,
numpy/core/tests/test_datetime.py:480:        assert_equal(np.datetime64('2010-03-12').dtype,
numpy/core/tests/test_datetime.py:482:        assert_equal(np.datetime64('2010-03-12T17').dtype,
numpy/core/tests/test_datetime.py:484:        assert_equal(np.datetime64('2010-03-12T17:15').dtype,
numpy/core/tests/test_datetime.py:486:        assert_equal(np.datetime64('2010-03-12T17:15:08').dtype,
numpy/core/tests/test_datetime.py:489:        assert_equal(np.datetime64('2010-03-12T17:15:08.1').dtype,
numpy/core/tests/test_datetime.py:491:        assert_equal(np.datetime64('2010-03-12T17:15:08.12').dtype,
numpy/core/tests/test_datetime.py:493:        assert_equal(np.datetime64('2010-03-12T17:15:08.123').dtype,
numpy/core/tests/test_datetime.py:496:        assert_equal(np.datetime64('2010-03-12T17:15:08.1234').dtype,
numpy/core/tests/test_datetime.py:498:        assert_equal(np.datetime64('2010-03-12T17:15:08.12345').dtype,
numpy/core/tests/test_datetime.py:500:        assert_equal(np.datetime64('2010-03-12T17:15:08.123456').dtype,
numpy/core/tests/test_datetime.py:503:        assert_equal(np.datetime64('1970-01-01T00:00:02.1234567').dtype,
numpy/core/tests/test_datetime.py:505:        assert_equal(np.datetime64('1970-01-01T00:00:02.12345678').dtype,
numpy/core/tests/test_datetime.py:507:        assert_equal(np.datetime64('1970-01-01T00:00:02.123456789').dtype,
numpy/core/tests/test_datetime.py:510:        assert_equal(np.datetime64('1970-01-01T00:00:02.1234567890').dtype,
numpy/core/tests/test_datetime.py:512:        assert_equal(np.datetime64('1970-01-01T00:00:02.12345678901').dtype,
numpy/core/tests/test_datetime.py:514:        assert_equal(np.datetime64('1970-01-01T00:00:02.123456789012').dtype,
numpy/core/tests/test_datetime.py:538:        assert_equal(np.datetime64(datetime.date(2010, 4, 16)).dtype,
numpy/core/tests/test_datetime.py:547:        assert_equal(np.datetime64('today').dtype,
numpy/core/tests/test_datetime.py:551:        assert_equal(np.datetime64('now').dtype,
numpy/core/tests/test_datetime.py:559:        assert_equal(a.astype('M8[s]'), np.array('NaT', dtype='M8[s]'))
numpy/core/tests/test_datetime.py:560:        assert_equal(a.astype('M8[ms]'), np.array('NaT', dtype='M8[ms]'))
numpy/core/tests/test_datetime.py:561:        assert_equal(a.astype('M8[M]'), np.array('NaT', dtype='M8[M]'))
numpy/core/tests/test_datetime.py:562:        assert_equal(a.astype('M8[Y]'), np.array('NaT', dtype='M8[Y]'))
numpy/core/tests/test_datetime.py:563:        assert_equal(a.astype('M8[W]'), np.array('NaT', dtype='M8[W]'))
numpy/core/tests/test_datetime.py:566:        assert_equal(np.datetime64(b, '[s]'), np.datetime64('NaT', '[s]'))
numpy/core/tests/test_datetime.py:567:        assert_equal(np.datetime64(b, '[ms]'), np.datetime64('NaT', '[ms]'))
numpy/core/tests/test_datetime.py:568:        assert_equal(np.datetime64(b, '[M]'), np.datetime64('NaT', '[M]'))
numpy/core/tests/test_datetime.py:569:        assert_equal(np.datetime64(b, '[Y]'), np.datetime64('NaT', '[Y]'))
numpy/core/tests/test_datetime.py:570:        assert_equal(np.datetime64(b, '[W]'), np.datetime64('NaT', '[W]'))
numpy/core/tests/test_datetime.py:573:        assert_equal(np.datetime64(a, '[s]'), np.datetime64('NaT', '[s]'))
numpy/core/tests/test_datetime.py:574:        assert_equal(np.datetime64(a, '[ms]'), np.datetime64('NaT', '[ms]'))
numpy/core/tests/test_datetime.py:575:        assert_equal(np.datetime64(a, '[M]'), np.datetime64('NaT', '[M]'))
numpy/core/tests/test_datetime.py:576:        assert_equal(np.datetime64(a, '[Y]'), np.datetime64('NaT', '[Y]'))
numpy/core/tests/test_datetime.py:577:        assert_equal(np.datetime64(a, '[W]'), np.datetime64('NaT', '[W]'))
numpy/core/tests/test_datetime.py:588:        assert_equal(nan.astype('M8[ns]'), nat)
numpy/core/tests/test_datetime.py:589:        assert_equal(fnan.astype('M8[ns]'), nat)
numpy/core/tests/test_datetime.py:590:        assert_equal(lnan.astype('M8[ns]'), nat)
numpy/core/tests/test_datetime.py:591:        assert_equal(cnan.astype('M8[ns]'), nat)
numpy/core/tests/test_datetime.py:592:        assert_equal(cfnan.astype('M8[ns]'), nat)
numpy/core/tests/test_datetime.py:593:        assert_equal(clnan.astype('M8[ns]'), nat)
numpy/core/tests/test_datetime.py:596:        assert_equal(nan.astype('timedelta64[ns]'), nat)
numpy/core/tests/test_datetime.py:597:        assert_equal(fnan.astype('timedelta64[ns]'), nat)
numpy/core/tests/test_datetime.py:598:        assert_equal(lnan.astype('timedelta64[ns]'), nat)
numpy/core/tests/test_datetime.py:599:        assert_equal(cnan.astype('timedelta64[ns]'), nat)
numpy/core/tests/test_datetime.py:600:        assert_equal(cfnan.astype('timedelta64[ns]'), nat)
numpy/core/tests/test_datetime.py:601:        assert_equal(clnan.astype('timedelta64[ns]'), nat)
numpy/core/tests/test_datetime.py:604:        assert_equal(np.array('1599', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:606:        assert_equal(np.array('1600', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:608:        assert_equal(np.array('1601', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:610:        assert_equal(np.array('1900', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:612:        assert_equal(np.array('1901', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:614:        assert_equal(np.array('1967', dtype='M8[D]').astype('i8'), -3*365 - 1)
numpy/core/tests/test_datetime.py:615:        assert_equal(np.array('1968', dtype='M8[D]').astype('i8'), -2*365 - 1)
numpy/core/tests/test_datetime.py:616:        assert_equal(np.array('1969', dtype='M8[D]').astype('i8'), -1*365)
numpy/core/tests/test_datetime.py:617:        assert_equal(np.array('1970', dtype='M8[D]').astype('i8'), 0*365)
numpy/core/tests/test_datetime.py:618:        assert_equal(np.array('1971', dtype='M8[D]').astype('i8'), 1*365)
numpy/core/tests/test_datetime.py:619:        assert_equal(np.array('1972', dtype='M8[D]').astype('i8'), 2*365)
numpy/core/tests/test_datetime.py:620:        assert_equal(np.array('1973', dtype='M8[D]').astype('i8'), 3*365 + 1)
numpy/core/tests/test_datetime.py:621:        assert_equal(np.array('1974', dtype='M8[D]').astype('i8'), 4*365 + 1)
numpy/core/tests/test_datetime.py:622:        assert_equal(np.array('2000', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:624:        assert_equal(np.array('2001', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:626:        assert_equal(np.array('2400', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:628:        assert_equal(np.array('2401', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:631:        assert_equal(np.array('1600-02-29', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:633:        assert_equal(np.array('1600-03-01', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:635:        assert_equal(np.array('2000-02-29', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:637:        assert_equal(np.array('2000-03-01', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:639:        assert_equal(np.array('2001-03-22', dtype='M8[D]').astype('i8'),
numpy/core/tests/test_datetime.py:643:        assert_equal(np.array('1599', dtype='M8[D]').astype('O'),
numpy/core/tests/test_datetime.py:645:        assert_equal(np.array('1600', dtype='M8[D]').astype('O'),
numpy/core/tests/test_datetime.py:647:        assert_equal(np.array('1601', dtype='M8[D]').astype('O'),
numpy/core/tests/test_datetime.py:649:        assert_equal(np.array('1900', dtype='M8[D]').astype('O'),
numpy/core/tests/test_datetime.py:651:        assert_equal(np.array('1901', dtype='M8[D]').astype('O'),
numpy/core/tests/test_datetime.py:653:        assert_equal(np.array('2000', dtype='M8[D]').astype('O'),
numpy/core/tests/test_datetime.py:655:        assert_equal(np.array('2001', dtype='M8[D]').astype('O'),
numpy/core/tests/test_datetime.py:657:        assert_equal(np.array('1600-02-29', dtype='M8[D]').astype('O'),
numpy/core/tests/test_datetime.py:659:        assert_equal(np.array('1600-03-01', dtype='M8[D]').astype('O'),
numpy/core/tests/test_datetime.py:661:        assert_equal(np.array('2001-03-22', dtype='M8[D]').astype('O'),
numpy/core/tests/test_datetime.py:665:        assert_(not (np.dtype('M8[us]') == np.dtype('M8[ms]')))
numpy/core/tests/test_datetime.py:666:        assert_(np.dtype('M8[us]') != np.dtype('M8[ms]'))
numpy/core/tests/test_datetime.py:667:        assert_(np.dtype('M8[2D]') != np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:668:        assert_(np.dtype('M8[D]') != np.dtype('M8[2D]'))
numpy/core/tests/test_datetime.py:672:        assert_equal(a[0], a[1])
numpy/core/tests/test_datetime.py:674:        assert_equal(a[0], a[1])
numpy/core/tests/test_datetime.py:676:        assert_equal(a[0], a[1])
numpy/core/tests/test_datetime.py:679:        assert_equal(a[0], a[1])
numpy/core/tests/test_datetime.py:685:        assert_equal(np.array(datetime.date(1960, 3, 12), dtype='M8[s]'),
numpy/core/tests/test_datetime.py:695:        assert_equal(dt_a, str_a.astype('M'))
numpy/core/tests/test_datetime.py:696:        assert_equal(dt_a.dtype, str_a.astype('M').dtype)
numpy/core/tests/test_datetime.py:699:        assert_equal(dt_a, dt_b)
numpy/core/tests/test_datetime.py:702:        assert_equal(str_a, dt_a.astype('S0'))
numpy/core/tests/test_datetime.py:705:        assert_equal(str_a, str_b)
numpy/core/tests/test_datetime.py:708:        assert_equal(dt_a, uni_a.astype('M'))
numpy/core/tests/test_datetime.py:709:        assert_equal(dt_a.dtype, uni_a.astype('M').dtype)
numpy/core/tests/test_datetime.py:712:        assert_equal(dt_a, dt_b)
numpy/core/tests/test_datetime.py:715:        assert_equal(uni_a, dt_a.astype('U'))
numpy/core/tests/test_datetime.py:718:        assert_equal(uni_a, uni_b)
numpy/core/tests/test_datetime.py:721:        assert_equal(str_a, dt_a.astype((np.string_, 128)))
numpy/core/tests/test_datetime.py:724:        assert_equal(str_a, str_b)
numpy/core/tests/test_datetime.py:730:        assert_array_equal(times, times_swapped)
numpy/core/tests/test_datetime.py:733:        assert_array_equal(unswapped, times.view(np.int64))
numpy/core/tests/test_datetime.py:746:        assert_array_equal(res, expected)
numpy/core/tests/test_datetime.py:748:        assert_array_equal(res, expected)
numpy/core/tests/test_datetime.py:750:        assert_array_equal(res, expected)
numpy/core/tests/test_datetime.py:763:        assert_array_equal(res, to_strings)
numpy/core/tests/test_datetime.py:766:        assert_array_equal(res, to_strings)
numpy/core/tests/test_datetime.py:769:        assert_array_equal(res, to_strings)
numpy/core/tests/test_datetime.py:775:        assert_array_equal(res, times)
numpy/core/tests/test_datetime.py:778:        assert_array_equal(res, times)
numpy/core/tests/test_datetime.py:781:        assert_array_equal(res, times)
numpy/core/tests/test_datetime.py:785:        assert_equal(str(a), "['2011-03-16' '1920-01-01' '2013-05-19']")
numpy/core/tests/test_datetime.py:795:        assert_equal(str(a), "['2010'  'NaT' '2030']")
numpy/core/tests/test_datetime.py:799:        assert_equal(str(a), "[ -1   0 100]")
numpy/core/tests/test_datetime.py:801:        assert_equal(str(a), "['NaT' 'NaT']")
numpy/core/tests/test_datetime.py:804:        assert_equal(str(a), "[   -1 'NaT'     0]")
numpy/core/tests/test_datetime.py:806:        assert_equal(str(a), "[     -1   'NaT' 1234567]")
numpy/core/tests/test_datetime.py:810:        assert_equal(str(a), "[     -1   'NaT' 1234567]")
numpy/core/tests/test_datetime.py:812:        assert_equal(str(a), "[     -1   'NaT' 1234567]")
numpy/core/tests/test_datetime.py:818:            assert_equal(pickle.loads(pickle.dumps(dt, protocol=proto)), dt)
numpy/core/tests/test_datetime.py:820:            assert_equal(pickle.loads(pickle.dumps(dt, protocol=proto)), dt)
numpy/core/tests/test_datetime.py:822:            assert_equal(pickle.loads(pickle.dumps(scalar, protocol=proto)),
numpy/core/tests/test_datetime.py:825:            assert_equal(pickle.loads(pickle.dumps(delta, protocol=proto)),
numpy/core/tests/test_datetime.py:832:        assert_equal(pickle.loads(pkl), np.dtype('<M8[7D]'))
numpy/core/tests/test_datetime.py:836:        assert_equal(pickle.loads(pkl), np.dtype('<M8[W]'))
numpy/core/tests/test_datetime.py:840:        assert_equal(pickle.loads(pkl), np.dtype('>M8[us]'))
numpy/core/tests/test_datetime.py:845:        assert_raises(ValueError, dt.__setstate__, (4, '>', None, None, None, -1, -1, 0, 1))
numpy/core/tests/test_datetime.py:846:        assert_(dt.__reduce__()[2] == np.dtype('>M8[us]').__reduce__()[2])
numpy/core/tests/test_datetime.py:847:        assert_raises(TypeError, dt.__setstate__, (4, '>', None, None, None, -1, -1, 0, ({}, 'xxx')))
numpy/core/tests/test_datetime.py:848:        assert_(dt.__reduce__()[2] == np.dtype('>M8[us]').__reduce__()[2])
numpy/core/tests/test_datetime.py:878:        assert_raises(TypeError, np.promote_types, "float32", "m8")
numpy/core/tests/test_datetime.py:879:        assert_raises(TypeError, np.promote_types, "m8", "float32")
numpy/core/tests/test_datetime.py:880:        assert_raises(TypeError, np.promote_types, "uint64", "m8")
numpy/core/tests/test_datetime.py:881:        assert_raises(TypeError, np.promote_types, "m8", "uint64")
numpy/core/tests/test_datetime.py:893:        assert_raises(OverflowError, cast)
numpy/core/tests/test_datetime.py:897:        assert_raises(OverflowError, cast2)
numpy/core/tests/test_datetime.py:917:            assert_equal(b.astype(object).astype(unit), b,
numpy/core/tests/test_datetime.py:933:            assert_equal(b.astype(object).astype(unit), b,
numpy/core/tests/test_datetime.py:938:        assert_equal(np.array('1945-03-01', dtype='M8[M]'),
numpy/core/tests/test_datetime.py:940:        assert_equal(np.array('1969-11-01', dtype='M8[M]'),
numpy/core/tests/test_datetime.py:942:        assert_equal(np.array('1969-12-01', dtype='M8[M]'),
numpy/core/tests/test_datetime.py:944:        assert_equal(np.array('1970-01-01', dtype='M8[M]'),
numpy/core/tests/test_datetime.py:946:        assert_equal(np.array('1980-02-01', dtype='M8[M]'),
numpy/core/tests/test_datetime.py:955:                assert_equal(np.array('1945', dtype=dt1),
numpy/core/tests/test_datetime.py:957:                assert_equal(np.array('1970', dtype=dt1),
numpy/core/tests/test_datetime.py:959:                assert_equal(np.array('9999', dtype=dt1),
numpy/core/tests/test_datetime.py:961:                assert_equal(np.array('10000', dtype=dt1),
numpy/core/tests/test_datetime.py:963:                assert_equal(np.datetime64('1945', unit1),
numpy/core/tests/test_datetime.py:965:                assert_equal(np.datetime64('1970', unit1),
numpy/core/tests/test_datetime.py:967:                assert_equal(np.datetime64('9999', unit1),
numpy/core/tests/test_datetime.py:969:                assert_equal(np.datetime64('10000', unit1),
numpy/core/tests/test_datetime.py:976:                assert_equal(np.array('1945-03-12T18', dtype=dt1),
numpy/core/tests/test_datetime.py:978:                assert_equal(np.array('1970-03-12T18', dtype=dt1),
numpy/core/tests/test_datetime.py:980:                assert_equal(np.array('9999-03-12T18', dtype=dt1),
numpy/core/tests/test_datetime.py:982:                assert_equal(np.array('10000-01-01T00', dtype=dt1),
numpy/core/tests/test_datetime.py:984:                assert_equal(np.datetime64('1945-03-12T18', unit1),
numpy/core/tests/test_datetime.py:986:                assert_equal(np.datetime64('1970-03-12T18', unit1),
numpy/core/tests/test_datetime.py:988:                assert_equal(np.datetime64('9999-03-12T18', unit1),
numpy/core/tests/test_datetime.py:990:                assert_equal(np.datetime64('10000-01-01T00', unit1),
numpy/core/tests/test_datetime.py:997:                assert_(np.equal(np.array('1932-02-17', dtype='M').astype(dt1),
numpy/core/tests/test_datetime.py:1000:                assert_(np.equal(np.array('10000-04-27', dtype='M').astype(dt1),
numpy/core/tests/test_datetime.py:1010:        assert_raises(TypeError, np.less, a, b, casting='same_kind')
numpy/core/tests/test_datetime.py:1016:        assert_equal(np.ones_like(a).dtype, a.dtype)
numpy/core/tests/test_datetime.py:1017:        assert_equal(np.zeros_like(a).dtype, a.dtype)
numpy/core/tests/test_datetime.py:1018:        assert_equal(np.empty_like(a).dtype, a.dtype)
numpy/core/tests/test_datetime.py:1019:        assert_equal(np.ones_like(b).dtype, b.dtype)
numpy/core/tests/test_datetime.py:1020:        assert_equal(np.zeros_like(b).dtype, b.dtype)
numpy/core/tests/test_datetime.py:1021:        assert_equal(np.empty_like(b).dtype, b.dtype)
numpy/core/tests/test_datetime.py:1039:            assert_equal(-tdb, tda)
numpy/core/tests/test_datetime.py:1040:            assert_equal((-tdb).dtype, tda.dtype)
numpy/core/tests/test_datetime.py:1041:            assert_equal(np.negative(tdb), tda)
numpy/core/tests/test_datetime.py:1042:            assert_equal(np.negative(tdb).dtype, tda.dtype)
numpy/core/tests/test_datetime.py:1045:            assert_equal(np.positive(tda), tda)
numpy/core/tests/test_datetime.py:1046:            assert_equal(np.positive(tda).dtype, tda.dtype)
numpy/core/tests/test_datetime.py:1047:            assert_equal(np.positive(tdb), tdb)
numpy/core/tests/test_datetime.py:1048:            assert_equal(np.positive(tdb).dtype, tdb.dtype)
numpy/core/tests/test_datetime.py:1051:            assert_equal(np.absolute(tdb), tda)
numpy/core/tests/test_datetime.py:1052:            assert_equal(np.absolute(tdb).dtype, tda.dtype)
numpy/core/tests/test_datetime.py:1055:            assert_equal(np.sign(tda), tdone)
numpy/core/tests/test_datetime.py:1056:            assert_equal(np.sign(tdb), tdmone)
numpy/core/tests/test_datetime.py:1057:            assert_equal(np.sign(tdzero), tdzero)
numpy/core/tests/test_datetime.py:1058:            assert_equal(np.sign(tda).dtype, tda.dtype)
numpy/core/tests/test_datetime.py:1083:            assert_equal(tda + tdb, tdc)
numpy/core/tests/test_datetime.py:1084:            assert_equal((tda + tdb).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1086:            assert_equal(tdb + True, tdb + 1)
numpy/core/tests/test_datetime.py:1087:            assert_equal((tdb + True).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1089:            assert_equal(tdb + 3*24, tdc)
numpy/core/tests/test_datetime.py:1090:            assert_equal((tdb + 3*24).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1092:            assert_equal(False + tdb, tdb)
numpy/core/tests/test_datetime.py:1093:            assert_equal((False + tdb).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1095:            assert_equal(3*24 + tdb, tdc)
numpy/core/tests/test_datetime.py:1096:            assert_equal((3*24 + tdb).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1098:            assert_equal(dta + True, dta + 1)
numpy/core/tests/test_datetime.py:1099:            assert_equal(dtnat + True, dtnat)
numpy/core/tests/test_datetime.py:1100:            assert_equal((dta + True).dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:1102:            assert_equal(dta + 3, dtb)
numpy/core/tests/test_datetime.py:1103:            assert_equal(dtnat + 3, dtnat)
numpy/core/tests/test_datetime.py:1104:            assert_equal((dta + 3).dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:1106:            assert_equal(False + dta, dta)
numpy/core/tests/test_datetime.py:1107:            assert_equal(False + dtnat, dtnat)
numpy/core/tests/test_datetime.py:1108:            assert_equal((False + dta).dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:1110:            assert_equal(3 + dta, dtb)
numpy/core/tests/test_datetime.py:1111:            assert_equal(3 + dtnat, dtnat)
numpy/core/tests/test_datetime.py:1112:            assert_equal((3 + dta).dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:1114:            assert_equal(dta + tda, dtb)
numpy/core/tests/test_datetime.py:1115:            assert_equal(dtnat + tda, dtnat)
numpy/core/tests/test_datetime.py:1116:            assert_equal((dta + tda).dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:1118:            assert_equal(tda + dta, dtb)
numpy/core/tests/test_datetime.py:1119:            assert_equal(tda + dtnat, dtnat)
numpy/core/tests/test_datetime.py:1120:            assert_equal((tda + dta).dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:1123:            assert_equal(np.add(dta, tdb, casting='unsafe'), dtc)
numpy/core/tests/test_datetime.py:1124:            assert_equal(np.add(dta, tdb, casting='unsafe').dtype,
numpy/core/tests/test_datetime.py:1126:            assert_equal(np.add(tdb, dta, casting='unsafe'), dtc)
numpy/core/tests/test_datetime.py:1127:            assert_equal(np.add(tdb, dta, casting='unsafe').dtype,
numpy/core/tests/test_datetime.py:1131:            assert_raises(TypeError, np.add, dta, dtb)
numpy/core/tests/test_datetime.py:1157:            assert_equal(tda - tdb, tdc)
numpy/core/tests/test_datetime.py:1158:            assert_equal((tda - tdb).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1159:            assert_equal(tdb - tda, -tdc)
numpy/core/tests/test_datetime.py:1160:            assert_equal((tdb - tda).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1162:            assert_equal(tdc - True, tdc - 1)
numpy/core/tests/test_datetime.py:1163:            assert_equal((tdc - True).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1165:            assert_equal(tdc - 3*24, -tdb)
numpy/core/tests/test_datetime.py:1166:            assert_equal((tdc - 3*24).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1168:            assert_equal(False - tdb, -tdb)
numpy/core/tests/test_datetime.py:1169:            assert_equal((False - tdb).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1171:            assert_equal(3*24 - tdb, tdc)
numpy/core/tests/test_datetime.py:1172:            assert_equal((3*24 - tdb).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1174:            assert_equal(dtb - True, dtb - 1)
numpy/core/tests/test_datetime.py:1175:            assert_equal(dtnat - True, dtnat)
numpy/core/tests/test_datetime.py:1176:            assert_equal((dtb - True).dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:1178:            assert_equal(dtb - 3, dta)
numpy/core/tests/test_datetime.py:1179:            assert_equal(dtnat - 3, dtnat)
numpy/core/tests/test_datetime.py:1180:            assert_equal((dtb - 3).dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:1182:            assert_equal(dtb - tda, dta)
numpy/core/tests/test_datetime.py:1183:            assert_equal(dtnat - tda, dtnat)
numpy/core/tests/test_datetime.py:1184:            assert_equal((dtb - tda).dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:1187:            assert_equal(np.subtract(dtc, tdb, casting='unsafe'), dte)
numpy/core/tests/test_datetime.py:1188:            assert_equal(np.subtract(dtc, tdb, casting='unsafe').dtype,
numpy/core/tests/test_datetime.py:1192:            assert_equal(np.subtract(dtc, dtd, casting='unsafe'),
numpy/core/tests/test_datetime.py:1194:            assert_equal(np.subtract(dtc, dtd, casting='unsafe').dtype,
numpy/core/tests/test_datetime.py:1196:            assert_equal(np.subtract(dtd, dtc, casting='unsafe'),
numpy/core/tests/test_datetime.py:1198:            assert_equal(np.subtract(dtd, dtc, casting='unsafe').dtype,
numpy/core/tests/test_datetime.py:1202:            assert_raises(TypeError, np.subtract, tda, dta)
numpy/core/tests/test_datetime.py:1204:            assert_raises(TypeError, np.subtract, False, dta)
numpy/core/tests/test_datetime.py:1206:            assert_raises(TypeError, np.subtract, 3, dta)
numpy/core/tests/test_datetime.py:1222:            assert_equal(tda * 2, tdc)
numpy/core/tests/test_datetime.py:1223:            assert_equal((tda * 2).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1225:            assert_equal(2 * tda, tdc)
numpy/core/tests/test_datetime.py:1226:            assert_equal((2 * tda).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1228:            assert_equal(tda * 1.5, tdb)
numpy/core/tests/test_datetime.py:1229:            assert_equal((tda * 1.5).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1231:            assert_equal(1.5 * tda, tdb)
numpy/core/tests/test_datetime.py:1232:            assert_equal((1.5 * tda).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1235:            assert_raises(TypeError, np.multiply, tda, tdb)
numpy/core/tests/test_datetime.py:1237:            assert_raises(TypeError, np.multiply, dta, tda)
numpy/core/tests/test_datetime.py:1239:            assert_raises(TypeError, np.multiply, tda, dta)
numpy/core/tests/test_datetime.py:1241:            assert_raises(TypeError, np.multiply, dta, 2)
numpy/core/tests/test_datetime.py:1243:            assert_raises(TypeError, np.multiply, 2, dta)
numpy/core/tests/test_datetime.py:1245:            assert_raises(TypeError, np.multiply, dta, 1.5)
numpy/core/tests/test_datetime.py:1247:            assert_raises(TypeError, np.multiply, 1.5, dta)
numpy/core/tests/test_datetime.py:1254:                assert_equal(a * b, res)
numpy/core/tests/test_datetime.py:1255:                assert_equal(b * a, res)
numpy/core/tests/test_datetime.py:1295:        assert_equal(op1 // op2, exp)
numpy/core/tests/test_datetime.py:1312:            assert_equal(actual, 0)
numpy/core/tests/test_datetime.py:1313:            assert_equal(actual.dtype, np.int64)
numpy/core/tests/test_datetime.py:1330:        assert_equal(actual, expected)
numpy/core/tests/test_datetime.py:1369:        assert_equal(divmod(op1, op2), expected)
numpy/core/tests/test_datetime.py:1389:        assert_equal(actual, expected)
numpy/core/tests/test_datetime.py:1407:            assert_equal(tdc / 2, tda)
numpy/core/tests/test_datetime.py:1408:            assert_equal((tdc / 2).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1410:            assert_equal(tda / 0.5, tdc)
numpy/core/tests/test_datetime.py:1411:            assert_equal((tda / 0.5).dtype, np.dtype('m8[h]'))
numpy/core/tests/test_datetime.py:1413:            assert_equal(tda / tdb, 6 / 9)
numpy/core/tests/test_datetime.py:1414:            assert_equal(np.divide(tda, tdb), 6 / 9)
numpy/core/tests/test_datetime.py:1415:            assert_equal(np.true_divide(tda, tdb), 6 / 9)
numpy/core/tests/test_datetime.py:1416:            assert_equal(tdb / tda, 9 / 6)
numpy/core/tests/test_datetime.py:1417:            assert_equal((tda / tdb).dtype, np.dtype('f8'))
numpy/core/tests/test_datetime.py:1418:            assert_equal(tda / tdd, 60)
numpy/core/tests/test_datetime.py:1419:            assert_equal(tdd / tda, 1 / 60)
numpy/core/tests/test_datetime.py:1422:            assert_raises(TypeError, np.divide, 2, tdb)
numpy/core/tests/test_datetime.py:1424:            assert_raises(TypeError, np.divide, 0.5, tdb)
numpy/core/tests/test_datetime.py:1426:            assert_raises(TypeError, np.divide, dta, tda)
numpy/core/tests/test_datetime.py:1428:            assert_raises(TypeError, np.divide, tda, dta)
numpy/core/tests/test_datetime.py:1430:            assert_raises(TypeError, np.divide, dta, 2)
numpy/core/tests/test_datetime.py:1432:            assert_raises(TypeError, np.divide, 2, dta)
numpy/core/tests/test_datetime.py:1434:            assert_raises(TypeError, np.divide, dta, 1.5)
numpy/core/tests/test_datetime.py:1436:            assert_raises(TypeError, np.divide, 1.5, dta)
numpy/core/tests/test_datetime.py:1443:                assert_equal(np.timedelta64(1) / tp(0), nat)
numpy/core/tests/test_datetime.py:1444:                assert_equal(np.timedelta64(0) / tp(0), nat)
numpy/core/tests/test_datetime.py:1445:                assert_equal(nat / tp(0), nat)
numpy/core/tests/test_datetime.py:1446:                assert_equal(nat / tp(2), nat)
numpy/core/tests/test_datetime.py:1448:            assert_equal(np.timedelta64(1) / float('inf'), np.timedelta64(0))
numpy/core/tests/test_datetime.py:1449:            assert_equal(np.timedelta64(0) / float('inf'), np.timedelta64(0))
numpy/core/tests/test_datetime.py:1450:            assert_equal(nat / float('inf'), nat)
numpy/core/tests/test_datetime.py:1452:            assert_equal(np.timedelta64(1) / float('nan'), nat)
numpy/core/tests/test_datetime.py:1453:            assert_equal(np.timedelta64(0) / float('nan'), nat)
numpy/core/tests/test_datetime.py:1454:            assert_equal(nat / float('nan'), nat)
numpy/core/tests/test_datetime.py:1465:        assert_equal(np.equal(a, b), [1, 0, 0, 0, 0])
numpy/core/tests/test_datetime.py:1466:        assert_equal(np.not_equal(a, b), [0, 1, 1, 1, 1])
numpy/core/tests/test_datetime.py:1467:        assert_equal(np.less(a, b), [0, 0, 1, 0, 1])
numpy/core/tests/test_datetime.py:1468:        assert_equal(np.less_equal(a, b), [1, 0, 1, 0, 1])
numpy/core/tests/test_datetime.py:1469:        assert_equal(np.greater(a, b), [0, 1, 0, 1, 0])
numpy/core/tests/test_datetime.py:1470:        assert_equal(np.greater_equal(a, b), [1, 1, 0, 1, 0])
numpy/core/tests/test_datetime.py:1480:            assert_(not op(dt_nat, dt_nat))
numpy/core/tests/test_datetime.py:1481:            assert_(not op(dt_nat, dt_other))
numpy/core/tests/test_datetime.py:1482:            assert_(not op(dt_other, dt_nat))
numpy/core/tests/test_datetime.py:1484:            assert_(not op(td_nat, td_nat))
numpy/core/tests/test_datetime.py:1485:            assert_(not op(td_nat, td_other))
numpy/core/tests/test_datetime.py:1486:            assert_(not op(td_other, td_nat))
numpy/core/tests/test_datetime.py:1488:        assert_(np.not_equal(dt_nat, dt_nat))
numpy/core/tests/test_datetime.py:1489:        assert_(np.not_equal(dt_nat, dt_other))
numpy/core/tests/test_datetime.py:1490:        assert_(np.not_equal(dt_other, dt_nat))
numpy/core/tests/test_datetime.py:1492:        assert_(np.not_equal(td_nat, td_nat))
numpy/core/tests/test_datetime.py:1493:        assert_(np.not_equal(td_nat, td_other))
numpy/core/tests/test_datetime.py:1494:        assert_(np.not_equal(td_other, td_nat))
numpy/core/tests/test_datetime.py:1501:        assert_equal(np.minimum(a, b), b)
numpy/core/tests/test_datetime.py:1502:        assert_equal(np.minimum(a, b).dtype, np.dtype('M8[s]'))
numpy/core/tests/test_datetime.py:1503:        assert_equal(np.fmin(a, b), b)
numpy/core/tests/test_datetime.py:1504:        assert_equal(np.fmin(a, b).dtype, np.dtype('M8[s]'))
numpy/core/tests/test_datetime.py:1505:        assert_equal(np.maximum(a, b), a)
numpy/core/tests/test_datetime.py:1506:        assert_equal(np.maximum(a, b).dtype, np.dtype('M8[s]'))
numpy/core/tests/test_datetime.py:1507:        assert_equal(np.fmax(a, b), a)
numpy/core/tests/test_datetime.py:1508:        assert_equal(np.fmax(a, b).dtype, np.dtype('M8[s]'))
numpy/core/tests/test_datetime.py:1511:        assert_equal(np.minimum(a.view('i8'), b.view('i8')), a.view('i8'))
numpy/core/tests/test_datetime.py:1516:        assert_equal(np.minimum(a, dtnat), dtnat)
numpy/core/tests/test_datetime.py:1517:        assert_equal(np.minimum(dtnat, a), dtnat)
numpy/core/tests/test_datetime.py:1518:        assert_equal(np.maximum(a, dtnat), dtnat)
numpy/core/tests/test_datetime.py:1519:        assert_equal(np.maximum(dtnat, a), dtnat)
numpy/core/tests/test_datetime.py:1520:        assert_equal(np.fmin(dtnat, a), a)
numpy/core/tests/test_datetime.py:1521:        assert_equal(np.fmin(a, dtnat), a)
numpy/core/tests/test_datetime.py:1522:        assert_equal(np.fmax(dtnat, a), a)
numpy/core/tests/test_datetime.py:1523:        assert_equal(np.fmax(a, dtnat), a)
numpy/core/tests/test_datetime.py:1528:        assert_equal(np.minimum(a, b), b)
numpy/core/tests/test_datetime.py:1529:        assert_equal(np.minimum(a, b).dtype, np.dtype('m8[s]'))
numpy/core/tests/test_datetime.py:1530:        assert_equal(np.fmin(a, b), b)
numpy/core/tests/test_datetime.py:1531:        assert_equal(np.fmin(a, b).dtype, np.dtype('m8[s]'))
numpy/core/tests/test_datetime.py:1532:        assert_equal(np.maximum(a, b), a)
numpy/core/tests/test_datetime.py:1533:        assert_equal(np.maximum(a, b).dtype, np.dtype('m8[s]'))
numpy/core/tests/test_datetime.py:1534:        assert_equal(np.fmax(a, b), a)
numpy/core/tests/test_datetime.py:1535:        assert_equal(np.fmax(a, b).dtype, np.dtype('m8[s]'))
numpy/core/tests/test_datetime.py:1538:        assert_equal(np.minimum(a.view('i8'), b.view('i8')), a.view('i8'))
numpy/core/tests/test_datetime.py:1550:        assert_raises(TypeError, np.minimum, a, b, casting='same_kind')
numpy/core/tests/test_datetime.py:1551:        assert_raises(TypeError, np.maximum, a, b, casting='same_kind')
numpy/core/tests/test_datetime.py:1552:        assert_raises(TypeError, np.fmin, a, b, casting='same_kind')
numpy/core/tests/test_datetime.py:1553:        assert_raises(TypeError, np.fmax, a, b, casting='same_kind')
numpy/core/tests/test_datetime.py:1558:        assert_(t[0].item().hour == 10)
numpy/core/tests/test_datetime.py:1561:        assert_(np.dtype('M8[Y/4]') == np.dtype('M8[3M]'))
numpy/core/tests/test_datetime.py:1562:        assert_(np.dtype('M8[Y/13]') == np.dtype('M8[4W]'))
numpy/core/tests/test_datetime.py:1563:        assert_(np.dtype('M8[3Y/73]') == np.dtype('M8[15D]'))
numpy/core/tests/test_datetime.py:1566:        assert_(np.dtype('M8[M/2]') == np.dtype('M8[2W]'))
numpy/core/tests/test_datetime.py:1567:        assert_(np.dtype('M8[M/15]') == np.dtype('M8[2D]'))
numpy/core/tests/test_datetime.py:1568:        assert_(np.dtype('M8[3M/40]') == np.dtype('M8[54h]'))
numpy/core/tests/test_datetime.py:1571:        assert_(np.dtype('m8[W/7]') == np.dtype('m8[D]'))
numpy/core/tests/test_datetime.py:1572:        assert_(np.dtype('m8[3W/14]') == np.dtype('m8[36h]'))
numpy/core/tests/test_datetime.py:1573:        assert_(np.dtype('m8[5W/140]') == np.dtype('m8[360m]'))
numpy/core/tests/test_datetime.py:1576:        assert_(np.dtype('M8[D/12]') == np.dtype('M8[2h]'))
numpy/core/tests/test_datetime.py:1577:        assert_(np.dtype('M8[D/120]') == np.dtype('M8[12m]'))
numpy/core/tests/test_datetime.py:1578:        assert_(np.dtype('M8[3D/960]') == np.dtype('M8[270s]'))
numpy/core/tests/test_datetime.py:1581:        assert_(np.dtype('m8[h/30]') == np.dtype('m8[2m]'))
numpy/core/tests/test_datetime.py:1582:        assert_(np.dtype('m8[3h/300]') == np.dtype('m8[36s]'))
numpy/core/tests/test_datetime.py:1585:        assert_(np.dtype('m8[m/30]') == np.dtype('m8[2s]'))
numpy/core/tests/test_datetime.py:1586:        assert_(np.dtype('m8[3m/300]') == np.dtype('m8[600ms]'))
numpy/core/tests/test_datetime.py:1589:        assert_(np.dtype('m8[s/100]') == np.dtype('m8[10ms]'))
numpy/core/tests/test_datetime.py:1590:        assert_(np.dtype('m8[3s/10000]') == np.dtype('m8[300us]'))
numpy/core/tests/test_datetime.py:1593:        assert_(np.dtype('M8[fs/100]') == np.dtype('M8[10as]'))
numpy/core/tests/test_datetime.py:1594:        assert_raises(ValueError, lambda: np.dtype('M8[3fs/10000]'))
numpy/core/tests/test_datetime.py:1597:        assert_raises(ValueError, lambda: np.dtype('M8[as/10]'))
numpy/core/tests/test_datetime.py:1601:        assert_equal(np.array(['1980-02-29T01:02:03'], np.dtype('M8[s]')),
numpy/core/tests/test_datetime.py:1604:        assert_equal(np.array(['+1980-02-29T01:02:03'], np.dtype('M8[s]')),
numpy/core/tests/test_datetime.py:1607:        assert_equal(np.array(['-1980-02-29T01:02:03'], np.dtype('M8[s]')),
numpy/core/tests/test_datetime.py:1632:            assert_equal(np.datetime64('1977-03-02T12:30-0230'),
numpy/core/tests/test_datetime.py:1637:        assert_raises(ValueError, np.array, ['badvalue'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1639:        assert_raises(ValueError, np.array, ['1980X'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1641:        assert_raises(ValueError, np.array, ['1980-'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1643:        assert_raises(ValueError, np.array, ['1980-00'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1644:        assert_raises(ValueError, np.array, ['1980-13'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1646:        assert_raises(ValueError, np.array, ['1980-1'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1647:        assert_raises(ValueError, np.array, ['1980-1-02'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1649:        assert_raises(ValueError, np.array, ['1980-Mor'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1651:        assert_raises(ValueError, np.array, ['1980-01-'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1653:        assert_raises(ValueError, np.array, ['1980-01-0'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1654:        assert_raises(ValueError, np.array, ['1980-01-00'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1655:        assert_raises(ValueError, np.array, ['1980-01-32'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1656:        assert_raises(ValueError, np.array, ['1979-02-29'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1657:        assert_raises(ValueError, np.array, ['1980-02-30'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1658:        assert_raises(ValueError, np.array, ['1980-03-32'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1659:        assert_raises(ValueError, np.array, ['1980-04-31'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1660:        assert_raises(ValueError, np.array, ['1980-05-32'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1661:        assert_raises(ValueError, np.array, ['1980-06-31'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1662:        assert_raises(ValueError, np.array, ['1980-07-32'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1663:        assert_raises(ValueError, np.array, ['1980-08-32'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1664:        assert_raises(ValueError, np.array, ['1980-09-31'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1665:        assert_raises(ValueError, np.array, ['1980-10-32'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1666:        assert_raises(ValueError, np.array, ['1980-11-31'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1667:        assert_raises(ValueError, np.array, ['1980-12-32'], np.dtype('M8[us]'))
numpy/core/tests/test_datetime.py:1725:            assert_equal(timesteps, x[0].astype(np.int64),
numpy/core/tests/test_datetime.py:1728:        assert_equal(x[0].astype(np.int64), 322689600000000000)
numpy/core/tests/test_datetime.py:1741:        assert_equal(np.datetime_as_string(np.datetime64(date, 'Y')),
numpy/core/tests/test_datetime.py:1743:        assert_equal(np.datetime_as_string(np.datetime64(date, 'M')),
numpy/core/tests/test_datetime.py:1745:        assert_equal(np.datetime_as_string(np.datetime64(date, 'D')),
numpy/core/tests/test_datetime.py:1747:        assert_equal(np.datetime_as_string(np.datetime64(datetime, 'h')),
numpy/core/tests/test_datetime.py:1749:        assert_equal(np.datetime_as_string(np.datetime64(datetime, 'm')),
numpy/core/tests/test_datetime.py:1751:        assert_equal(np.datetime_as_string(np.datetime64(datetime, 's')),
numpy/core/tests/test_datetime.py:1753:        assert_equal(np.datetime_as_string(np.datetime64(datetime, 'ms')),
numpy/core/tests/test_datetime.py:1756:            assert_equal(np.datetime_as_string(np.datetime64(datetime, us)),
numpy/core/tests/test_datetime.py:1761:        assert_equal(np.datetime_as_string(np.datetime64(datetime, 'ns')),
numpy/core/tests/test_datetime.py:1763:        assert_equal(np.datetime_as_string(np.datetime64(datetime, 'ps')),
numpy/core/tests/test_datetime.py:1765:        assert_equal(np.datetime_as_string(np.datetime64(datetime, 'fs')),
numpy/core/tests/test_datetime.py:1770:        assert_equal(np.datetime_as_string(np.datetime64(datetime, 'as')),
numpy/core/tests/test_datetime.py:1774:        assert_equal(np.datetime_as_string(np.datetime64(datetime, 'ns')),
numpy/core/tests/test_datetime.py:1776:        assert_equal(np.datetime_as_string(np.datetime64(datetime, 'ps')),
numpy/core/tests/test_datetime.py:1778:        assert_equal(np.datetime_as_string(np.datetime64(datetime, 'fs')),
numpy/core/tests/test_datetime.py:1783:        assert_equal(np.datetime_as_string(np.datetime64(datetime, 'as')),
numpy/core/tests/test_datetime.py:1788:        assert_equal(np.datetime_as_string(a, unit='Y', casting='unsafe'),
numpy/core/tests/test_datetime.py:1790:        assert_equal(np.datetime_as_string(a, unit='M', casting='unsafe'),
numpy/core/tests/test_datetime.py:1792:        assert_equal(np.datetime_as_string(a, unit='W', casting='unsafe'),
numpy/core/tests/test_datetime.py:1794:        assert_equal(np.datetime_as_string(a, unit='D', casting='unsafe'),
numpy/core/tests/test_datetime.py:1796:        assert_equal(np.datetime_as_string(a, unit='h'), '2032-07-18T12')
numpy/core/tests/test_datetime.py:1797:        assert_equal(np.datetime_as_string(a, unit='m'),
numpy/core/tests/test_datetime.py:1799:        assert_equal(np.datetime_as_string(a, unit='s'),
numpy/core/tests/test_datetime.py:1801:        assert_equal(np.datetime_as_string(a, unit='ms'),
numpy/core/tests/test_datetime.py:1803:        assert_equal(np.datetime_as_string(a, unit='us'),
numpy/core/tests/test_datetime.py:1805:        assert_equal(np.datetime_as_string(a, unit='ns'),
numpy/core/tests/test_datetime.py:1807:        assert_equal(np.datetime_as_string(a, unit='ps'),
numpy/core/tests/test_datetime.py:1809:        assert_equal(np.datetime_as_string(a, unit='fs'),
numpy/core/tests/test_datetime.py:1811:        assert_equal(np.datetime_as_string(a, unit='as'),
numpy/core/tests/test_datetime.py:1846:        assert_equal(np.datetime_as_string(a),
numpy/core/tests/test_datetime.py:1848:        assert_equal(np.datetime_as_string(a, timezone='naive'),
numpy/core/tests/test_datetime.py:1850:        assert_equal(np.datetime_as_string(a, timezone='UTC'),
numpy/core/tests/test_datetime.py:1852:        assert_(np.datetime_as_string(a, timezone='local') !=
numpy/core/tests/test_datetime.py:1857:        assert_equal(np.datetime_as_string(a, timezone=tz('US/Central')),
numpy/core/tests/test_datetime.py:1859:        assert_equal(np.datetime_as_string(a, timezone=tz('US/Eastern')),
numpy/core/tests/test_datetime.py:1861:        assert_equal(np.datetime_as_string(a, timezone=tz('US/Pacific')),
numpy/core/tests/test_datetime.py:1864:        assert_equal(np.datetime_as_string(b, timezone=tz('US/Central')),
numpy/core/tests/test_datetime.py:1866:        assert_equal(np.datetime_as_string(b, timezone=tz('US/Eastern')),
numpy/core/tests/test_datetime.py:1868:        assert_equal(np.datetime_as_string(b, timezone=tz('US/Pacific')),
numpy/core/tests/test_datetime.py:1885:        assert_equal(a.dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:1891:        assert_equal(a.dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:1898:        assert_equal(a.dtype, np.dtype('M8[M]'))
numpy/core/tests/test_datetime.py:1905:        assert_equal(a.dtype, np.dtype('M8[Y]'))
numpy/core/tests/test_datetime.py:1909:        assert_equal(a.dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:1914:        assert_raises(ValueError, np.arange, np.datetime64('today'),
numpy/core/tests/test_datetime.py:1917:        assert_raises(TypeError, np.arange, np.datetime64('2011-03-01', 'D'),
numpy/core/tests/test_datetime.py:1925:        assert_equal(np.arange(d, d + 1), d)
numpy/core/tests/test_datetime.py:1926:        assert_raises(ValueError, np.arange, d)
numpy/core/tests/test_datetime.py:1930:        assert_equal(a.dtype, np.dtype('m8'))
numpy/core/tests/test_datetime.py:1931:        assert_equal(a, np.timedelta64(0) + np.arange(3, 10))
numpy/core/tests/test_datetime.py:1934:        assert_equal(a.dtype, np.dtype('m8[s]'))
numpy/core/tests/test_datetime.py:1935:        assert_equal(a, np.timedelta64(0, 's') + np.arange(3, 10, 2))
numpy/core/tests/test_datetime.py:1938:        assert_raises(ValueError, np.arange, np.timedelta64(0),
numpy/core/tests/test_datetime.py:1941:        assert_raises(TypeError, np.arange, np.timedelta64(0, 'D'),
numpy/core/tests/test_datetime.py:1943:        assert_raises(TypeError, np.arange, np.timedelta64(0, 'Y'),
numpy/core/tests/test_datetime.py:1982:        assert_equal(val1 % val2, expected)
numpy/core/tests/test_datetime.py:1999:            assert_equal(actual, np.timedelta64('NaT'))
numpy/core/tests/test_datetime.py:2018:        assert_equal(np.arange(d, d + 1), d)
numpy/core/tests/test_datetime.py:2019:        assert_equal(np.arange(d), np.arange(0, d))
numpy/core/tests/test_datetime.py:2023:        assert_equal(np.maximum.reduce(a).dtype, np.dtype('M8[D]'))
numpy/core/tests/test_datetime.py:2024:        assert_equal(np.maximum.reduce(a),
numpy/core/tests/test_datetime.py:2028:        assert_equal(np.maximum.reduce(a).dtype, np.dtype('m8[s]'))
numpy/core/tests/test_datetime.py:2029:        assert_equal(np.maximum.reduce(a),
numpy/core/tests/test_datetime.py:2036:        assert_array_equal(a.mean(), a.sum() / len(a))
numpy/core/tests/test_datetime.py:2067:        assert_equal(np.busday_offset('2010-08', 0, roll='backward'),
numpy/core/tests/test_datetime.py:2069:        assert_equal(np.busday_offset('2010-08', 0, roll='preceding'),
numpy/core/tests/test_datetime.py:2071:        assert_equal(np.busday_offset('2010-08', 0, roll='modifiedpreceding'),
numpy/core/tests/test_datetime.py:2073:        assert_equal(np.busday_offset('2010-08', 0, roll='modifiedfollowing'),
numpy/core/tests/test_datetime.py:2075:        assert_equal(np.busday_offset('2010-08', 0, roll='forward'),
numpy/core/tests/test_datetime.py:2077:        assert_equal(np.busday_offset('2010-08', 0, roll='following'),
numpy/core/tests/test_datetime.py:2079:        assert_equal(np.busday_offset('2010-10-30', 0, roll='following'),
numpy/core/tests/test_datetime.py:2094:        assert_raises(ValueError, np.busday_offset, '2011-06-04', 0)
numpy/core/tests/test_datetime.py:2097:        assert_equal(np.busday_offset('2006-02-01', 25),
numpy/core/tests/test_datetime.py:2099:        assert_equal(np.busday_offset('2006-03-08', -25),
numpy/core/tests/test_datetime.py:2101:        assert_equal(np.busday_offset('2007-02-25', 11, weekmask='SatSun'),
numpy/core/tests/test_datetime.py:2103:        assert_equal(np.busday_offset('2007-04-07', -11, weekmask='SatSun'),
numpy/core/tests/test_datetime.py:2107:        assert_equal(np.busday_offset(np.datetime64('NaT'), 1, roll='nat'),
numpy/core/tests/test_datetime.py:2109:        assert_equal(np.busday_offset(np.datetime64('NaT'), 1, roll='following'),
numpy/core/tests/test_datetime.py:2111:        assert_equal(np.busday_offset(np.datetime64('NaT'), 1, roll='preceding'),
numpy/core/tests/test_datetime.py:2123:        assert_equal(bdd.weekmask, np.array([1, 1, 1, 1, 1, 0, 0], dtype='?'))
numpy/core/tests/test_datetime.py:2127:        assert_equal(bdd.weekmask, np.array([0, 1, 1, 1, 1, 0, 1], dtype='?'))
numpy/core/tests/test_datetime.py:2131:        assert_equal(bdd.weekmask, np.array([0, 0, 1, 1, 0, 0, 1], dtype='?'))
numpy/core/tests/test_datetime.py:2135:        assert_equal(bdd.weekmask, np.array([1, 1, 0, 0, 0, 0, 0], dtype='?'))
numpy/core/tests/test_datetime.py:2138:        assert_raises(ValueError, np.busdaycalendar, weekmask=[0, 0, 0, 0, 0, 0, 0])
numpy/core/tests/test_datetime.py:2140:        assert_raises(ValueError, np.busdaycalendar, weekmask="satsun")
numpy/core/tests/test_datetime.py:2142:        assert_raises(ValueError, np.busdaycalendar, weekmask="")
numpy/core/tests/test_datetime.py:2144:        assert_raises(ValueError, np.busdaycalendar, weekmask="Mon Tue We")
numpy/core/tests/test_datetime.py:2145:        assert_raises(ValueError, np.busdaycalendar, weekmask="Max")
numpy/core/tests/test_datetime.py:2146:        assert_raises(ValueError, np.busdaycalendar, weekmask="Monday Tue")
numpy/core/tests/test_datetime.py:2327:        assert_equal(np.busday_count('2011-01-01', dates, busdaycal=bdd),
numpy/core/tests/test_datetime.py:2330:        assert_equal(np.busday_count(dates, '2011-01-01', busdaycal=bdd),
numpy/core/tests/test_datetime.py:2335:        assert_equal(np.busday_count(dates, '2011-12-31', busdaycal=bdd),
numpy/core/tests/test_datetime.py:2338:        assert_equal(np.busday_count('2011-12-31', dates, busdaycal=bdd),
numpy/core/tests/test_datetime.py:2348:        assert_equal(np.busday_count('2011-03', '2011-04', weekmask='Mon'), 4)
numpy/core/tests/test_datetime.py:2350:        assert_equal(np.busday_count('2011-04', '2011-03', weekmask='Mon'), -4)
numpy/core/tests/test_datetime.py:2361:        assert_equal(np.is_busday('2011-01-01'), False)
numpy/core/tests/test_datetime.py:2362:        assert_equal(np.is_busday('2011-01-02'), False)
numpy/core/tests/test_datetime.py:2363:        assert_equal(np.is_busday('2011-01-03'), True)
numpy/core/tests/test_datetime.py:2366:        assert_equal(np.is_busday(holidays, busdaycal=bdd),
numpy/core/tests/test_datetime.py:2372:        assert_equal(a.view(np.int64), 2**31 - 1)
numpy/core/tests/test_datetime.py:2374:        assert_equal(a.view(np.int64), 2**31)
numpy/core/tests/test_datetime.py:2380:            assert_equal(a.view(np.int64), 2**31 - 1)
numpy/core/tests/test_datetime.py:2383:            assert_equal(a.view(np.int64), 2**31)
numpy/core/tests/test_datetime.py:2387:        assert_equal(str(a), '2038-01-20T13:21:14')
numpy/core/tests/test_datetime.py:2390:        assert_(np.isnat(np.datetime64('NaT', 'ms')))
numpy/core/tests/test_datetime.py:2391:        assert_(np.isnat(np.datetime64('NaT', 'ns')))
numpy/core/tests/test_datetime.py:2392:        assert_(not np.isnat(np.datetime64('2038-01-19T03:14:07')))
numpy/core/tests/test_datetime.py:2394:        assert_(np.isnat(np.timedelta64('NaT', "ms")))
numpy/core/tests/test_datetime.py:2395:        assert_(not np.isnat(np.timedelta64(34, "ms")))
numpy/core/tests/test_datetime.py:2402:            assert_equal(np.isnat(arr), res)
numpy/core/tests/test_datetime.py:2404:            assert_equal(np.isnat(arr), res)
numpy/core/tests/test_datetime.py:2406:            assert_equal(np.isnat(arr), res)
numpy/core/tests/test_datetime.py:2408:            assert_equal(np.isnat(arr), res)
numpy/core/tests/test_datetime.py:2415:            assert_raises(TypeError, np.isnat, np.zeros(10, t))
numpy/core/tests/test_datetime.py:2418:        assert_(not np.isfinite(np.datetime64('NaT', 'ms')))
numpy/core/tests/test_datetime.py:2419:        assert_(not np.isfinite(np.datetime64('NaT', 'ns')))
numpy/core/tests/test_datetime.py:2420:        assert_(np.isfinite(np.datetime64('2038-01-19T03:14:07')))
numpy/core/tests/test_datetime.py:2422:        assert_(not np.isfinite(np.timedelta64('NaT', "ms")))
numpy/core/tests/test_datetime.py:2423:        assert_(np.isfinite(np.timedelta64(34, "ms")))
numpy/core/tests/test_datetime.py:2437:        assert_equal(np.isfinite(arr), pos)
numpy/core/tests/test_datetime.py:2438:        assert_equal(np.isinf(arr), false)
numpy/core/tests/test_datetime.py:2439:        assert_equal(np.isnan(arr), neg)
numpy/core/tests/test_datetime.py:2455:        assert_raises(ValueError, obj_arr.astype, 'M8')
numpy/core/tests/test_datetime.py:2456:        assert_raises(ValueError, obj_arr.astype, 'm8')
numpy/core/tests/test_datetime.py:2462:        assert res.dtype == np.dtype("M8[D]")
numpy/core/tests/test_datetime.py:2463:        assert_equal(arr.astype("M8"), res)
numpy/core/tests/test_datetime.py:2465:        assert_equal(arr.astype("M8"), res)
numpy/core/tests/test_datetime.py:2467:        assert_equal(arr.astype("S").astype("M8"), res)
numpy/core/tests/test_datetime.py:2505:        assert limit_via_str == limit
numpy/core/tests/test_datetime.py:2512:        assert_equal(np.datetime_data(a.dtype), ('D', 1))
numpy/core/tests/test_datetime.py:2517:        assert np.datetime_data(dt.dtype) == ('ms', 5)
numpy/core/tests/test_datetime.py:2520:        assert np.datetime_data(dt.dtype) == ('ms', 5)
numpy/core/tests/test_datetime.py:2525:        assert np.datetime_data(dt.dtype) == ('us', 5)
numpy/core/tests/test_datetime.py:2528:        assert np.datetime_data(dt.dtype) == ('us', 5)
numpy/core/tests/test__exceptions.py:18:        assert res._total_size == error._total_size
numpy/core/tests/test__exceptions.py:29:        assert f(0) == '0 bytes'
numpy/core/tests/test__exceptions.py:30:        assert f(1) == '1 bytes'
numpy/core/tests/test__exceptions.py:31:        assert f(1023) == '1023 bytes'
numpy/core/tests/test__exceptions.py:32:        assert f(Ki) == '1.00 KiB'
numpy/core/tests/test__exceptions.py:33:        assert f(Ki+1) == '1.00 KiB'
numpy/core/tests/test__exceptions.py:34:        assert f(10*Ki) == '10.0 KiB'
numpy/core/tests/test__exceptions.py:35:        assert f(int(999.4*Ki)) == '999. KiB'
numpy/core/tests/test__exceptions.py:36:        assert f(int(1023.4*Ki)) == '1023. KiB'
numpy/core/tests/test__exceptions.py:37:        assert f(int(1023.5*Ki)) == '1.00 MiB'
numpy/core/tests/test__exceptions.py:38:        assert f(Ki*Ki) == '1.00 MiB'
numpy/core/tests/test__exceptions.py:41:        assert f(int(Ki*Ki*Ki*0.9999)) == '1.00 GiB'
numpy/core/tests/test__exceptions.py:42:        assert f(Ki*Ki*Ki*Ki*Ki*Ki) == '1.00 EiB'
numpy/core/tests/test__exceptions.py:45:        assert f(Ki*Ki*Ki*Ki*Ki*Ki*123456) == '123456. EiB'
numpy/core/tests/test__exceptions.py:50:        assert e._total_size == 1
numpy/core/tests/test__exceptions.py:53:        assert e._total_size == 1024
numpy/core/tests/test__exceptions.py:59:        assert isinstance(pickle.dumps(_UFuncNoLoopError), bytes)
numpy/core/tests/test__exceptions.py:72:            assert exc.axis is None
numpy/core/tests/test__exceptions.py:73:            assert exc.ndim is None
numpy/core/tests/test__exceptions.py:76:            assert exc.axis == axis
numpy/core/tests/test__exceptions.py:77:            assert exc.ndim == ndim
numpy/core/tests/test__exceptions.py:84:        assert type(exc) is type(exc2)
numpy/core/tests/test__exceptions.py:88:            assert attr1 == attr2, name
numpy/core/tests/test_extint128.py:81:                assert_raises(OverflowError, mt.extint_safe_binop, a, b, op)
numpy/core/tests/test_extint128.py:85:                    # assert_equal is slow
numpy/core/tests/test_extint128.py:86:                    assert_equal(d, c)
numpy/core/tests/test_extint128.py:94:                assert_equal(b, a)
numpy/core/tests/test_extint128.py:101:                assert_raises(OverflowError, mt.extint_to_64, a)
numpy/core/tests/test_extint128.py:105:                    assert_equal(b, a)
numpy/core/tests/test_extint128.py:114:                assert_equal(d, c)
numpy/core/tests/test_extint128.py:122:                assert_raises(OverflowError, mt.extint_add_128, a, b)
numpy/core/tests/test_extint128.py:126:                    assert_equal(d, c)
numpy/core/tests/test_extint128.py:134:                assert_raises(OverflowError, mt.extint_sub_128, a, b)
numpy/core/tests/test_extint128.py:138:                    assert_equal(d, c)
numpy/core/tests/test_extint128.py:147:                assert_equal(c, b)
numpy/core/tests/test_extint128.py:159:                assert_equal(c, b)
numpy/core/tests/test_extint128.py:171:                assert_equal(c, b)
numpy/core/tests/test_extint128.py:180:                assert_equal(d, c)
numpy/core/tests/test_extint128.py:197:                assert_equal(d, c)
numpy/core/tests/test_extint128.py:198:                assert_equal(dr, cr)
numpy/core/tests/test_extint128.py:199:                assert_equal(b*d + dr, a)
numpy/core/tests/test_extint128.py:209:                assert_equal(d, c)
numpy/core/tests/test_extint128.py:219:                assert_equal(d, c)
numpy/core/tests/test_cython.py:71:    assert checks.is_td64(np.timedelta64(1234))
numpy/core/tests/test_cython.py:72:    assert checks.is_td64(np.timedelta64(1234, "ns"))
numpy/core/tests/test_cython.py:73:    assert checks.is_td64(np.timedelta64("NaT", "ns"))
numpy/core/tests/test_cython.py:75:    assert not checks.is_td64(1)
numpy/core/tests/test_cython.py:76:    assert not checks.is_td64(None)
numpy/core/tests/test_cython.py:77:    assert not checks.is_td64("foo")
numpy/core/tests/test_cython.py:78:    assert not checks.is_td64(np.datetime64("now", "s"))
numpy/core/tests/test_cython.py:84:    assert checks.is_dt64(np.datetime64(1234, "ns"))
numpy/core/tests/test_cython.py:85:    assert checks.is_dt64(np.datetime64("NaT", "ns"))
numpy/core/tests/test_cython.py:87:    assert not checks.is_dt64(1)
numpy/core/tests/test_cython.py:88:    assert not checks.is_dt64(None)
numpy/core/tests/test_cython.py:89:    assert not checks.is_dt64("foo")
numpy/core/tests/test_cython.py:90:    assert not checks.is_dt64(np.timedelta64(1234))
numpy/core/tests/test_cython.py:101:    assert result == expected
numpy/core/tests/test_cython.py:112:    assert result == expected
numpy/core/tests/test_cython.py:121:    assert result == expected
numpy/core/tests/test_cython.py:126:    assert result == expected
numpy/core/tests/test_cython.py:132:    assert checks.is_integer(1)
numpy/core/tests/test_cython.py:133:    assert checks.is_integer(np.int8(1))
numpy/core/tests/test_cython.py:134:    assert checks.is_integer(np.uint64(1))
numpy/core/tests/test_umath_complex.py:137:        assert_almost_equal(y, y_r)
numpy/core/tests/test_umath_complex.py:154:            assert_raises(FloatingPointError, np.log, x)
numpy/core/tests/test_umath_complex.py:156:            assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:166:            assert_raises(FloatingPointError, np.log, x)
numpy/core/tests/test_umath_complex.py:168:            assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:176:        assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:181:        assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:192:            assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:201:            assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:209:        assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:216:        assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:223:        assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:230:        assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:237:        assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:242:        assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:250:        assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:257:        assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:264:        assert_almost_equal(np.log(x), y)
numpy/core/tests/test_umath_complex.py:273:                assert_almost_equal(np.log(xa[i].conj()), ya[i].conj())
numpy/core/tests/test_umath_complex.py:367:        assert_almost_equal(y, y_r)
numpy/core/tests/test_umath_complex.py:387:            assert_almost_equal(n_r[i], p_r[i], err_msg='Loop %d\n' % i)
numpy/core/tests/test_umath_complex.py:407:            assert_almost_equal(n_r[i], p_r[i], err_msg='Loop %d\n' % i)
numpy/core/tests/test_umath_complex.py:420:        assert_almost_equal(y, y_r)
numpy/core/tests/test_umath_complex.py:425:        assert_array_equal(np.abs(x), np.real(x))
numpy/core/tests/test_umath_complex.py:428:        assert_array_equal(np.abs(x), np.real(x))
numpy/core/tests/test_umath_complex.py:431:        assert_array_equal(np.abs(x), np.real(x))
numpy/core/tests/test_umath_complex.py:434:        assert_array_equal(np.abs(x), np.real(x))
numpy/core/tests/test_umath_complex.py:466:        assert len(xa) == len(x) == len(y)
numpy/core/tests/test_umath_complex.py:542:        assert_equal(f(z1), x)
numpy/core/tests/test_umath_complex.py:544:        assert_almost_equal(f(z1), x)
numpy/core/tests/test_umath_complex.py:552:            assert_equal(f(z1), z2)
numpy/core/tests/test_umath_complex.py:554:            assert_almost_equal(f(z1), z2)
numpy/core/tests/test_umath_complex.py:579:        assert_equal(np.abs(arr[::stride]), abs_true[::stride])
numpy/core/tests/test_umath_complex.py:581:            assert_equal(np.square(arr[::stride]), sq_true[::stride])
numpy/core/tests/test_umath_complex.py:591:        assert_equal(np.abs(arr[::stride]), abs_true[::stride])
numpy/core/tests/test_umath_complex.py:621:        assert_array_max_ulp(h.real, g.real, 1)
numpy/core/tests/test_umath_complex.py:622:        assert_array_max_ulp(h.imag, g.imag, 1)
numpy/core/tests/test_custom_dtypes.py:27:        assert sf2.get_scaling() == 2.
numpy/core/tests/test_custom_dtypes.py:29:        assert sf6.get_scaling() == 6.
numpy/core/tests/test_custom_dtypes.py:35:        assert dt == SF(1.)
numpy/core/tests/test_custom_dtypes.py:41:        assert a.dtype.get_scaling() == scaling
numpy/core/tests/test_custom_dtypes.py:42:        assert_array_equal(scaling * a.view(np.float64), [1., 2., 3.])
numpy/core/tests/test_custom_dtypes.py:46:        assert repr(SF(scaling=1.)) == "_ScaledFloatTestDType(scaling=1.0)"
numpy/core/tests/test_custom_dtypes.py:52:        assert a.dtype.get_scaling() == scaling
numpy/core/tests/test_custom_dtypes.py:53:        assert_array_equal(scaling * a.view(np.float64), [1., 2., 3.])
numpy/core/tests/test_custom_dtypes.py:59:        assert a.tolist() == [1., 2., 3.]
numpy/core/tests/test_custom_dtypes.py:65:        assert np.can_cast(a, SF(-1.), casting="equiv")
numpy/core/tests/test_custom_dtypes.py:66:        assert not np.can_cast(a, SF(-1.), casting="no")
numpy/core/tests/test_custom_dtypes.py:68:        assert_array_equal(-1 * na.view(np.float64), a.view(np.float64))
numpy/core/tests/test_custom_dtypes.py:70:        assert np.can_cast(a, SF(2.), casting="same_kind")
numpy/core/tests/test_custom_dtypes.py:71:        assert not np.can_cast(a, SF(2.), casting="safe")
numpy/core/tests/test_custom_dtypes.py:73:        assert_array_equal(2 * a2.view(np.float64), a.view(np.float64))
numpy/core/tests/test_custom_dtypes.py:84:        assert np.result_type(SF(2.), SF(3.)) == SF(3.)
numpy/core/tests/test_custom_dtypes.py:85:        assert np.result_type(SF(3.), SF(2.)) == SF(3.)
numpy/core/tests/test_custom_dtypes.py:87:        assert np.result_type(SF(3.), np.float64) == SF(3.)
numpy/core/tests/test_custom_dtypes.py:88:        assert np.result_type(np.float64, SF(0.5)) == SF(1.)
numpy/core/tests/test_custom_dtypes.py:100:        assert res.dtype.get_scaling() == 8.
numpy/core/tests/test_custom_dtypes.py:102:        assert_array_equal(res.view(np.float64), expected_view)
numpy/core/tests/test_custom_dtypes.py:111:        assert res == a.astype(np.float64).sum()
numpy/core/tests/test_custom_dtypes.py:128:        assert_array_equal(b.view(np.float64), float_b)
numpy/core/tests/test_custom_dtypes.py:138:        assert res1.dtype == res2.dtype == b.dtype
numpy/core/tests/test_custom_dtypes.py:140:        assert_array_equal(res1.view(np.float64), expected_view)
numpy/core/tests/test_custom_dtypes.py:141:        assert_array_equal(res2.view(np.float64), expected_view)
numpy/core/tests/test_custom_dtypes.py:156:        assert res.dtype == np.result_type(a.dtype, b.dtype)
numpy/core/tests/test_custom_dtypes.py:159:        assert_array_equal(res.view(np.float64), expected_view)
numpy/core/tests/test_custom_dtypes.py:192:        assert_array_equal(res, expected)
numpy/core/tests/test_custom_dtypes.py:197:        assert_array_equal(res, expected)
numpy/core/tests/test_defchararray.py:17:        assert_equal(B.dtype.itemsize, 10)
numpy/core/tests/test_defchararray.py:18:        assert_array_equal(B, [[b'abc', b'2'],
numpy/core/tests/test_defchararray.py:24:        assert_raises(ValueError, np.char.array, (A,))
numpy/core/tests/test_defchararray.py:26:        assert_equal(B.dtype.itemsize, 10 * np.array('a', 'U').dtype.itemsize)
numpy/core/tests/test_defchararray.py:27:        assert_array_equal(B, [['abc', u'Sigma \u03a3'],
numpy/core/tests/test_defchararray.py:33:        assert_equal(A.dtype.type, np.string_)
numpy/core/tests/test_defchararray.py:35:        assert_array_equal(B, A)
numpy/core/tests/test_defchararray.py:36:        assert_equal(B.dtype, A.dtype)
numpy/core/tests/test_defchararray.py:37:        assert_equal(B.shape, A.shape)
numpy/core/tests/test_defchararray.py:39:        assert_(B[0, 0] != A[0, 0])
numpy/core/tests/test_defchararray.py:41:        assert_array_equal(C, A)
numpy/core/tests/test_defchararray.py:42:        assert_equal(C.dtype, A.dtype)
numpy/core/tests/test_defchararray.py:44:        assert_(C[0, 0] != B[0, 0])
numpy/core/tests/test_defchararray.py:45:        assert_(C[0, 0] == A[0, 0])
numpy/core/tests/test_defchararray.py:50:        assert_equal(A.dtype.type, np.unicode_)
numpy/core/tests/test_defchararray.py:52:        assert_array_equal(B, A)
numpy/core/tests/test_defchararray.py:53:        assert_equal(B.dtype, A.dtype)
numpy/core/tests/test_defchararray.py:54:        assert_equal(B.shape, A.shape)
numpy/core/tests/test_defchararray.py:56:        assert_array_equal(B, A)
numpy/core/tests/test_defchararray.py:57:        assert_equal(B.dtype, A.dtype)
numpy/core/tests/test_defchararray.py:58:        assert_equal(B.shape, A.shape)
numpy/core/tests/test_defchararray.py:63:        assert_raises(UnicodeEncodeError, fail)
numpy/core/tests/test_defchararray.py:68:        assert_(issubclass((A + B).dtype.type, np.unicode_))
numpy/core/tests/test_defchararray.py:72:        assert_equal(len(A), 1)
numpy/core/tests/test_defchararray.py:73:        assert_equal(len(A[0]), 3)
numpy/core/tests/test_defchararray.py:74:        assert_(issubclass(A.dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:78:        assert_equal(len(A), 1)
numpy/core/tests/test_defchararray.py:79:        assert_equal(len(A[0]), 1)
numpy/core/tests/test_defchararray.py:80:        assert_equal(A.itemsize, 4)
numpy/core/tests/test_defchararray.py:81:        assert_(issubclass(A.dtype.type, np.unicode_))
numpy/core/tests/test_defchararray.py:89:        assert_raises(AttributeError, fail)
numpy/core/tests/test_defchararray.py:96:        assert_raises(TypeError, fail)
numpy/core/tests/test_defchararray.py:103:        assert_raises(TypeError, fail)
numpy/core/tests/test_defchararray.py:110:        assert_raises(TypeError, fail)
numpy/core/tests/test_defchararray.py:117:        assert_raises(TypeError, fail)
numpy/core/tests/test_defchararray.py:124:        assert_raises(TypeError, fail)
numpy/core/tests/test_defchararray.py:131:        assert_raises(ValueError, fail)
numpy/core/tests/test_defchararray.py:142:        assert_(np.all(self.A == self.B))
numpy/core/tests/test_defchararray.py:143:        assert_(np.all(self.A >= self.B))
numpy/core/tests/test_defchararray.py:144:        assert_(np.all(self.A <= self.B))
numpy/core/tests/test_defchararray.py:145:        assert_(not np.any(self.A > self.B))
numpy/core/tests/test_defchararray.py:146:        assert_(not np.any(self.A < self.B))
numpy/core/tests/test_defchararray.py:147:        assert_(not np.any(self.A != self.B))
numpy/core/tests/test_defchararray.py:154:        assert_equal(self.A.shape, (4,))
numpy/core/tests/test_defchararray.py:155:        assert_equal(self.A.upper()[:2].tobytes(), b'AB')
numpy/core/tests/test_defchararray.py:165:        assert_array_equal((self.A != self.B), [[True, False], [True, True]])
numpy/core/tests/test_defchararray.py:168:        assert_array_equal((self.A == self.B), [[False, True], [False, False]])
numpy/core/tests/test_defchararray.py:171:        assert_array_equal((self.A >= self.B), [[False, True], [True, True]])
numpy/core/tests/test_defchararray.py:174:        assert_array_equal((self.A <= self.B), [[True, True], [False, False]])
numpy/core/tests/test_defchararray.py:177:        assert_array_equal((self.A > self.B), [[False, False], [True, True]])
numpy/core/tests/test_defchararray.py:180:        assert_array_equal((self.A < self.B), [[True, False], [False, False]])
numpy/core/tests/test_defchararray.py:185:        assert_(isinstance(out1, np.ndarray))
numpy/core/tests/test_defchararray.py:186:        assert_(isinstance(out2, np.ndarray))
numpy/core/tests/test_defchararray.py:214:        assert_(issubclass(np.char.str_len(self.A).dtype.type, np.integer))
numpy/core/tests/test_defchararray.py:215:        assert_array_equal(np.char.str_len(self.A), [[5, 0], [5, 9], [12, 5]])
numpy/core/tests/test_defchararray.py:216:        assert_array_equal(np.char.str_len(self.B), [[3, 0], [5, 9], [12, 5]])
numpy/core/tests/test_defchararray.py:219:        assert_(issubclass(self.A.count('').dtype.type, np.integer))
numpy/core/tests/test_defchararray.py:220:        assert_array_equal(self.A.count('a'), [[1, 0], [0, 1], [0, 0]])
numpy/core/tests/test_defchararray.py:221:        assert_array_equal(self.A.count('123'), [[0, 0], [1, 0], [1, 0]])
numpy/core/tests/test_defchararray.py:224:        assert_array_equal(self.A.count('a', 0, 2), [[1, 0], [0, 0], [0, 0]])
numpy/core/tests/test_defchararray.py:225:        assert_array_equal(self.B.count('a'), [[0, 0], [0, 1], [0, 0]])
numpy/core/tests/test_defchararray.py:226:        assert_array_equal(self.B.count('123'), [[0, 0], [1, 0], [1, 0]])
numpy/core/tests/test_defchararray.py:230:        assert_(issubclass(self.A.endswith('').dtype.type, np.bool_))
numpy/core/tests/test_defchararray.py:231:        assert_array_equal(self.A.endswith(' '), [[1, 0], [0, 0], [1, 0]])
numpy/core/tests/test_defchararray.py:232:        assert_array_equal(self.A.endswith('3', 0, 3), [[0, 0], [1, 0], [1, 0]])
numpy/core/tests/test_defchararray.py:237:        assert_raises(TypeError, fail)
numpy/core/tests/test_defchararray.py:240:        assert_(issubclass(self.A.find('a').dtype.type, np.integer))
numpy/core/tests/test_defchararray.py:241:        assert_array_equal(self.A.find('a'), [[1, -1], [-1, 6], [-1, -1]])
numpy/core/tests/test_defchararray.py:242:        assert_array_equal(self.A.find('3'), [[-1, -1], [2, -1], [2, -1]])
numpy/core/tests/test_defchararray.py:243:        assert_array_equal(self.A.find('a', 0, 2), [[1, -1], [-1, -1], [-1, -1]])
numpy/core/tests/test_defchararray.py:244:        assert_array_equal(self.A.find(['1', 'P']), [[-1, -1], [0, -1], [0, 1]])
numpy/core/tests/test_defchararray.py:251:        assert_raises(ValueError, fail)
numpy/core/tests/test_defchararray.py:252:        assert_(np.char.index('abcba', 'b') == 1)
numpy/core/tests/test_defchararray.py:253:        assert_(issubclass(np.char.index('abcba', 'b').dtype.type, np.integer))
numpy/core/tests/test_defchararray.py:256:        assert_(issubclass(self.A.isalnum().dtype.type, np.bool_))
numpy/core/tests/test_defchararray.py:257:        assert_array_equal(self.A.isalnum(), [[False, False], [True, True], [False, True]])
numpy/core/tests/test_defchararray.py:260:        assert_(issubclass(self.A.isalpha().dtype.type, np.bool_))
numpy/core/tests/test_defchararray.py:261:        assert_array_equal(self.A.isalpha(), [[False, False], [False, True], [False, True]])
numpy/core/tests/test_defchararray.py:264:        assert_(issubclass(self.A.isdigit().dtype.type, np.bool_))
numpy/core/tests/test_defchararray.py:265:        assert_array_equal(self.A.isdigit(), [[False, False], [True, False], [False, False]])
numpy/core/tests/test_defchararray.py:268:        assert_(issubclass(self.A.islower().dtype.type, np.bool_))
numpy/core/tests/test_defchararray.py:269:        assert_array_equal(self.A.islower(), [[True, False], [False, False], [False, False]])
numpy/core/tests/test_defchararray.py:272:        assert_(issubclass(self.A.isspace().dtype.type, np.bool_))
numpy/core/tests/test_defchararray.py:273:        assert_array_equal(self.A.isspace(), [[False, False], [False, False], [False, False]])
numpy/core/tests/test_defchararray.py:276:        assert_(issubclass(self.A.istitle().dtype.type, np.bool_))
numpy/core/tests/test_defchararray.py:277:        assert_array_equal(self.A.istitle(), [[False, False], [False, False], [False, False]])
numpy/core/tests/test_defchararray.py:280:        assert_(issubclass(self.A.isupper().dtype.type, np.bool_))
numpy/core/tests/test_defchararray.py:281:        assert_array_equal(self.A.isupper(), [[False, False], [False, False], [False, True]])
numpy/core/tests/test_defchararray.py:284:        assert_(issubclass(self.A.rfind('a').dtype.type, np.integer))
numpy/core/tests/test_defchararray.py:285:        assert_array_equal(self.A.rfind('a'), [[1, -1], [-1, 6], [-1, -1]])
numpy/core/tests/test_defchararray.py:286:        assert_array_equal(self.A.rfind('3'), [[-1, -1], [2, -1], [6, -1]])
numpy/core/tests/test_defchararray.py:287:        assert_array_equal(self.A.rfind('a', 0, 2), [[1, -1], [-1, -1], [-1, -1]])
numpy/core/tests/test_defchararray.py:288:        assert_array_equal(self.A.rfind(['1', 'P']), [[-1, -1], [0, -1], [0, 2]])
numpy/core/tests/test_defchararray.py:295:        assert_raises(ValueError, fail)
numpy/core/tests/test_defchararray.py:296:        assert_(np.char.rindex('abcba', 'b') == 3)
numpy/core/tests/test_defchararray.py:297:        assert_(issubclass(np.char.rindex('abcba', 'b').dtype.type, np.integer))
numpy/core/tests/test_defchararray.py:300:        assert_(issubclass(self.A.startswith('').dtype.type, np.bool_))
numpy/core/tests/test_defchararray.py:301:        assert_array_equal(self.A.startswith(' '), [[1, 0], [0, 0], [0, 0]])
numpy/core/tests/test_defchararray.py:302:        assert_array_equal(self.A.startswith('1', 0, 3), [[0, 0], [1, 0], [1, 0]])
numpy/core/tests/test_defchararray.py:307:        assert_raises(TypeError, fail)
numpy/core/tests/test_defchararray.py:324:        assert_(issubclass(self.A.capitalize().dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:325:        assert_array_equal(self.A.capitalize(), tgt)
numpy/core/tests/test_defchararray.py:330:        assert_(issubclass(self.B.capitalize().dtype.type, np.unicode_))
numpy/core/tests/test_defchararray.py:331:        assert_array_equal(self.B.capitalize(), tgt)
numpy/core/tests/test_defchararray.py:334:        assert_(issubclass(self.A.center(10).dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:336:        assert_array_equal(np.char.str_len(C), [[10, 20], [10, 20], [12, 20]])
numpy/core/tests/test_defchararray.py:339:        assert_(np.all(C.startswith(b'#')))
numpy/core/tests/test_defchararray.py:340:        assert_(np.all(C.endswith(b'#')))
numpy/core/tests/test_defchararray.py:345:        assert_(issubclass(C.dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:346:        assert_array_equal(C, tgt)
numpy/core/tests/test_defchararray.py:350:        assert_(A.decode('unicode-escape')[0] == '\u03a3')
numpy/core/tests/test_defchararray.py:354:        assert_(B[0][0] == str(' \\u03a3 ').encode('latin1'))
numpy/core/tests/test_defchararray.py:358:        assert_(T[2, 0] == b'123      345 \0')
numpy/core/tests/test_defchararray.py:366:        assert_(issubclass(A.dtype.type, np.unicode_))
numpy/core/tests/test_defchararray.py:370:        assert_array_equal(np.char.join([',', '#'], A0), tgt)
numpy/core/tests/test_defchararray.py:373:        assert_(issubclass(self.A.ljust(10).dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:376:        assert_array_equal(np.char.str_len(C), [[10, 20], [10, 20], [12, 20]])
numpy/core/tests/test_defchararray.py:379:        assert_array_equal(C.startswith(b'#'), [
numpy/core/tests/test_defchararray.py:381:        assert_(np.all(C.endswith(b'#')))
numpy/core/tests/test_defchararray.py:386:        assert_(issubclass(C.dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:387:        assert_array_equal(C, tgt)
numpy/core/tests/test_defchararray.py:393:        assert_(issubclass(self.A.lower().dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:394:        assert_array_equal(self.A.lower(), tgt)
numpy/core/tests/test_defchararray.py:399:        assert_(issubclass(self.B.lower().dtype.type, np.unicode_))
numpy/core/tests/test_defchararray.py:400:        assert_array_equal(self.B.lower(), tgt)
numpy/core/tests/test_defchararray.py:406:        assert_(issubclass(self.A.lstrip().dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:407:        assert_array_equal(self.A.lstrip(), tgt)
numpy/core/tests/test_defchararray.py:412:        assert_array_equal(self.A.lstrip([b'1', b'M']), tgt)
numpy/core/tests/test_defchararray.py:417:        assert_(issubclass(self.B.lstrip().dtype.type, np.unicode_))
numpy/core/tests/test_defchararray.py:418:        assert_array_equal(self.B.lstrip(), tgt)
numpy/core/tests/test_defchararray.py:425:        assert_(issubclass(P.dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:426:        assert_array_equal(P, tgt)
numpy/core/tests/test_defchararray.py:434:        assert_(issubclass(R.dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:435:        assert_array_equal(R, tgt)
numpy/core/tests/test_defchararray.py:438:        assert_(issubclass(self.A.rjust(10).dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:441:        assert_array_equal(np.char.str_len(C), [[10, 20], [10, 20], [12, 20]])
numpy/core/tests/test_defchararray.py:444:        assert_(np.all(C.startswith(b'#')))
numpy/core/tests/test_defchararray.py:445:        assert_array_equal(C.endswith(b'#'),
numpy/core/tests/test_defchararray.py:451:        assert_(issubclass(C.dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:452:        assert_array_equal(C, tgt)
numpy/core/tests/test_defchararray.py:459:        assert_(issubclass(P.dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:460:        assert_array_equal(P, tgt)
numpy/core/tests/test_defchararray.py:467:        assert_(issubclass(A.dtype.type, np.object_))
numpy/core/tests/test_defchararray.py:468:        assert_equal(A.tolist(), tgt)
numpy/core/tests/test_defchararray.py:471:        assert_(issubclass(self.A.rstrip().dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:476:        assert_array_equal(self.A.rstrip(), tgt)
numpy/core/tests/test_defchararray.py:482:        assert_array_equal(self.A.rstrip([b'5', b'ER']), tgt)
numpy/core/tests/test_defchararray.py:487:        assert_(issubclass(self.B.rstrip().dtype.type, np.unicode_))
numpy/core/tests/test_defchararray.py:488:        assert_array_equal(self.B.rstrip(), tgt)
numpy/core/tests/test_defchararray.py:494:        assert_(issubclass(self.A.strip().dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:495:        assert_array_equal(self.A.strip(), tgt)
numpy/core/tests/test_defchararray.py:500:        assert_array_equal(self.A.strip([b'15', b'EReM']), tgt)
numpy/core/tests/test_defchararray.py:505:        assert_(issubclass(self.B.strip().dtype.type, np.unicode_))
numpy/core/tests/test_defchararray.py:506:        assert_array_equal(self.B.strip(), tgt)
numpy/core/tests/test_defchararray.py:514:        assert_(issubclass(A.dtype.type, np.object_))
numpy/core/tests/test_defchararray.py:515:        assert_equal(A.tolist(), tgt)
numpy/core/tests/test_defchararray.py:519:        assert_(issubclass(A.dtype.type, np.object_))
numpy/core/tests/test_defchararray.py:520:        assert_(A.shape == (1,))
numpy/core/tests/test_defchararray.py:521:        assert_(len(A[0]) == 3)
numpy/core/tests/test_defchararray.py:527:        assert_(issubclass(self.A.swapcase().dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:528:        assert_array_equal(self.A.swapcase(), tgt)
numpy/core/tests/test_defchararray.py:533:        assert_(issubclass(self.B.swapcase().dtype.type, np.unicode_))
numpy/core/tests/test_defchararray.py:534:        assert_array_equal(self.B.swapcase(), tgt)
numpy/core/tests/test_defchararray.py:540:        assert_(issubclass(self.A.title().dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:541:        assert_array_equal(self.A.title(), tgt)
numpy/core/tests/test_defchararray.py:546:        assert_(issubclass(self.B.title().dtype.type, np.unicode_))
numpy/core/tests/test_defchararray.py:547:        assert_array_equal(self.B.title(), tgt)
numpy/core/tests/test_defchararray.py:553:        assert_(issubclass(self.A.upper().dtype.type, np.string_))
numpy/core/tests/test_defchararray.py:554:        assert_array_equal(self.A.upper(), tgt)
numpy/core/tests/test_defchararray.py:559:        assert_(issubclass(self.B.upper().dtype.type, np.unicode_))
numpy/core/tests/test_defchararray.py:560:        assert_array_equal(self.B.upper(), tgt)
numpy/core/tests/test_defchararray.py:567:        assert_raises(TypeError, fail)
numpy/core/tests/test_defchararray.py:568:        assert_(issubclass(self.B.isnumeric().dtype.type, np.bool_))
numpy/core/tests/test_defchararray.py:569:        assert_array_equal(self.B.isnumeric(), [
numpy/core/tests/test_defchararray.py:577:        assert_raises(TypeError, fail)
numpy/core/tests/test_defchararray.py:578:        assert_(issubclass(self.B.isdecimal().dtype.type, np.bool_))
numpy/core/tests/test_defchararray.py:579:        assert_array_equal(self.B.isdecimal(), [
numpy/core/tests/test_defchararray.py:593:        assert_array_equal(AB, (self.A + self.B))
numpy/core/tests/test_defchararray.py:594:        assert_(len((self.A + self.B)[0][0]) == 6)
numpy/core/tests/test_defchararray.py:599:        assert_array_equal(QA, ('q' + self.A))
numpy/core/tests/test_defchararray.py:607:            assert_array_equal(Ar, (self.A * r))
numpy/core/tests/test_defchararray.py:619:            assert_array_equal(Ar, (r * self.A))
numpy/core/tests/test_defchararray.py:632:        assert_array_equal(FC, F % C)
numpy/core/tests/test_defchararray.py:636:        assert_array_equal(A1, (A % 1))
numpy/core/tests/test_defchararray.py:639:        assert_array_equal(A2, (A % [[1, 2], [3, 4]]))
numpy/core/tests/test_defchararray.py:642:        assert_(("%s" % self.A) == str(self.A))
numpy/core/tests/test_defchararray.py:643:        assert_(("%r" % self.A) == repr(self.A))
numpy/core/tests/test_defchararray.py:656:        assert_array_equal(sl1, arr)
numpy/core/tests/test_defchararray.py:657:        assert_(sl1.base is arr)
numpy/core/tests/test_defchararray.py:658:        assert_(sl1.base.base is arr.base)
numpy/core/tests/test_defchararray.py:661:        assert_array_equal(sl2, arr)
numpy/core/tests/test_defchararray.py:662:        assert_(sl2.base is arr)
numpy/core/tests/test_defchararray.py:663:        assert_(sl2.base.base is arr.base)
numpy/core/tests/test_defchararray.py:665:        assert_(arr[0, 0] == b'abc')
numpy/core/tests/test_defchararray.py:673:    assert_(s[[]].size == 0)
numpy/core/tests/test_conversion_utils.py:27:                assert self.conv(val) == expected
numpy/core/tests/test_conversion_utils.py:29:            assert self.conv(val) == expected
numpy/core/tests/test_conversion_utils.py:35:        assert self.conv(val) == expected
numpy/core/tests/test_conversion_utils.py:38:            assert self.conv(val.encode('ascii')) == expected
numpy/core/tests/test_conversion_utils.py:158:        assert self.conv(np.CLIP) == 'NPY_CLIP'
numpy/core/tests/test_conversion_utils.py:159:        assert self.conv(np.WRAP) == 'NPY_WRAP'
numpy/core/tests/test_conversion_utils.py:160:        assert self.conv(np.RAISE) == 'NPY_RAISE'
numpy/core/tests/test_conversion_utils.py:182:        assert self.conv(1) == (1,)
numpy/core/tests/test_conversion_utils.py:183:        assert self.conv((1, 2)) == (1, 2)
numpy/core/tests/test_conversion_utils.py:184:        assert self.conv([1, 2]) == (1, 2)
numpy/core/tests/test_conversion_utils.py:185:        assert self.conv(()) == ()
numpy/core/tests/test_conversion_utils.py:190:            assert self.conv(None) == ()
numpy/core/tests/test_conversion_utils.py:203:        assert self.conv([1]*32) == (1,)*32
numpy/core/tests/test_scalarprint.py:29:                assert_equal(str(styp(val)), want, err_msg=msg)
numpy/core/tests/test_scalarprint.py:35:            assert_equal(str(np.float64(v)), str(v))
numpy/core/tests/test_scalarprint.py:36:            assert_equal(str(np.float64(v)), repr(v))
numpy/core/tests/test_scalarprint.py:37:            assert_equal(repr(np.float64(v)), repr(v))
numpy/core/tests/test_scalarprint.py:38:            assert_equal(repr(np.float64(v)), str(v))
numpy/core/tests/test_scalarprint.py:61:        assert_equal(output, str(x) + '\n')
numpy/core/tests/test_scalarprint.py:92:        assert_equal(capture, repr(np.sqrt(2)))
numpy/core/tests/test_scalarprint.py:105:        assert_equal(fpos32('1.0'), "1.")
numpy/core/tests/test_scalarprint.py:106:        assert_equal(fsci32('1.0'), "1.e+00")
numpy/core/tests/test_scalarprint.py:107:        assert_equal(fpos32('10.234'), "10.234")
numpy/core/tests/test_scalarprint.py:108:        assert_equal(fpos32('-10.234'), "-10.234")
numpy/core/tests/test_scalarprint.py:109:        assert_equal(fsci32('10.234'), "1.0234e+01")
numpy/core/tests/test_scalarprint.py:110:        assert_equal(fsci32('-10.234'), "-1.0234e+01")
numpy/core/tests/test_scalarprint.py:111:        assert_equal(fpos32('1000.0'), "1000.")
numpy/core/tests/test_scalarprint.py:112:        assert_equal(fpos32('1.0', precision=0), "1.")
numpy/core/tests/test_scalarprint.py:113:        assert_equal(fsci32('1.0', precision=0), "1.e+00")
numpy/core/tests/test_scalarprint.py:114:        assert_equal(fpos32('10.234', precision=0), "10.")
numpy/core/tests/test_scalarprint.py:115:        assert_equal(fpos32('-10.234', precision=0), "-10.")
numpy/core/tests/test_scalarprint.py:116:        assert_equal(fsci32('10.234', precision=0), "1.e+01")
numpy/core/tests/test_scalarprint.py:117:        assert_equal(fsci32('-10.234', precision=0), "-1.e+01")
numpy/core/tests/test_scalarprint.py:118:        assert_equal(fpos32('10.234', precision=2), "10.23")
numpy/core/tests/test_scalarprint.py:119:        assert_equal(fsci32('-10.234', precision=2), "-1.02e+01")
numpy/core/tests/test_scalarprint.py:120:        assert_equal(fsci64('9.9999999999999995e-08', **preckwd(16)),
numpy/core/tests/test_scalarprint.py:122:        assert_equal(fsci64('9.8813129168249309e-324', **preckwd(16)),
numpy/core/tests/test_scalarprint.py:124:        assert_equal(fsci64('9.9999999999999694e-311', **preckwd(16)),
numpy/core/tests/test_scalarprint.py:130:        assert_equal(fpos32('3.14159265358979323846', **preckwd(10)),
numpy/core/tests/test_scalarprint.py:132:        assert_equal(fsci32('3.14159265358979323846', **preckwd(10)),
numpy/core/tests/test_scalarprint.py:134:        assert_equal(fpos64('3.14159265358979323846', **preckwd(10)),
numpy/core/tests/test_scalarprint.py:136:        assert_equal(fsci64('3.14159265358979323846', **preckwd(10)),
numpy/core/tests/test_scalarprint.py:139:        assert_equal(fpos32('299792458.0', **preckwd(5)), "299792448.00000")
numpy/core/tests/test_scalarprint.py:140:        assert_equal(fsci32('299792458.0', **preckwd(5)), "2.99792e+08")
numpy/core/tests/test_scalarprint.py:141:        assert_equal(fpos64('299792458.0', **preckwd(5)), "299792458.00000")
numpy/core/tests/test_scalarprint.py:142:        assert_equal(fsci64('299792458.0', **preckwd(5)), "2.99792e+08")
numpy/core/tests/test_scalarprint.py:144:        assert_equal(fpos32('3.14159265358979323846', **preckwd(25)),
numpy/core/tests/test_scalarprint.py:146:        assert_equal(fpos64('3.14159265358979323846', **preckwd(50)),
numpy/core/tests/test_scalarprint.py:148:        assert_equal(fpos64('3.14159265358979323846'), "3.141592653589793")
numpy/core/tests/test_scalarprint.py:152:        assert_equal(fpos32(0.5**(126 + 23), unique=False, precision=149),
numpy/core/tests/test_scalarprint.py:157:        assert_equal(fpos64(5e-324, unique=False, precision=1074),
numpy/core/tests/test_scalarprint.py:180:        assert_equal(fpos32(f32x, **preckwd(0)),
numpy/core/tests/test_scalarprint.py:182:        assert_equal(fpos64(np.finfo(np.float64).max, **preckwd(0)),
numpy/core/tests/test_scalarprint.py:191:        assert_equal(fpos32(f32x),
numpy/core/tests/test_scalarprint.py:198:        assert_equal(fpos32(f32x, unique=True, fractional=True, precision=0),
numpy/core/tests/test_scalarprint.py:200:        assert_equal(fpos32(f32x, unique=True, fractional=True, precision=4),
numpy/core/tests/test_scalarprint.py:202:        assert_equal(fpos32(f32x, unique=True, fractional=True, min_digits=0),
numpy/core/tests/test_scalarprint.py:204:        assert_equal(fpos32(f32x, unique=True, fractional=True, min_digits=4),
numpy/core/tests/test_scalarprint.py:211:        assert_equal(fpos32(f32x, unique=True, fractional=False, precision=4),
numpy/core/tests/test_scalarprint.py:213:        assert_equal(fpos32(f32x, unique=True, fractional=False, precision=20),
numpy/core/tests/test_scalarprint.py:215:        assert_equal(fpos32(f32x, unique=True, fractional=False, min_digits=4),
numpy/core/tests/test_scalarprint.py:223:        assert_equal(fpos32(f32x, unique=False, fractional=False, precision=4),
numpy/core/tests/test_scalarprint.py:228:        assert_equal(fsci64(a, unique=True), '-6.310887241768095e-30')
numpy/core/tests/test_scalarprint.py:229:        assert_equal(fsci64(a, unique=False, precision=15),
numpy/core/tests/test_scalarprint.py:231:        assert_equal(fsci64(a, unique=True, precision=15),
numpy/core/tests/test_scalarprint.py:233:        assert_equal(fsci64(a, unique=True, min_digits=15),
numpy/core/tests/test_scalarprint.py:235:        assert_equal(fsci64(a, unique=True, precision=15, min_digits=15),
numpy/core/tests/test_scalarprint.py:238:        assert_equal(fsci64(a, unique=True, precision=14),
numpy/core/tests/test_scalarprint.py:240:        assert_equal(fsci64(a, unique=True, min_digits=16),
numpy/core/tests/test_scalarprint.py:242:        assert_equal(fsci64(a, unique=True, precision=16),
numpy/core/tests/test_scalarprint.py:244:        assert_equal(fsci64(a, unique=True, min_digits=14),
numpy/core/tests/test_scalarprint.py:247:        assert_equal(fsci64('1e120', min_digits=3), '1.000e+120')
numpy/core/tests/test_scalarprint.py:248:        assert_equal(fsci64('1e100', min_digits=3), '1.000e+100')
numpy/core/tests/test_scalarprint.py:251:        assert_equal(fpos32('1.0', unique=False, precision=3), "1.000")
numpy/core/tests/test_scalarprint.py:252:        assert_equal(fpos64('1.0', unique=False, precision=3), "1.000")
numpy/core/tests/test_scalarprint.py:253:        assert_equal(fsci32('1.0', unique=False, precision=3), "1.000e+00")
numpy/core/tests/test_scalarprint.py:254:        assert_equal(fsci64('1.0', unique=False, precision=3), "1.000e+00")
numpy/core/tests/test_scalarprint.py:255:        assert_equal(fpos32('1.5', unique=False, precision=3), "1.500")
numpy/core/tests/test_scalarprint.py:256:        assert_equal(fpos64('1.5', unique=False, precision=3), "1.500")
numpy/core/tests/test_scalarprint.py:257:        assert_equal(fsci32('1.5', unique=False, precision=3), "1.500e+00")
numpy/core/tests/test_scalarprint.py:258:        assert_equal(fsci64('1.5', unique=False, precision=3), "1.500e+00")
numpy/core/tests/test_scalarprint.py:274:            assert_equal(fpos(tp('1.0'), pad_left=4, pad_right=4), "   1.    ")
numpy/core/tests/test_scalarprint.py:275:            assert_equal(fpos(tp('-1.0'), pad_left=4, pad_right=4), "  -1.    ")
numpy/core/tests/test_scalarprint.py:276:            assert_equal(fpos(tp('-10.2'),
numpy/core/tests/test_scalarprint.py:280:            assert_equal(fsci(tp('1.23e1'), exp_digits=5), "1.23e+00001")
numpy/core/tests/test_scalarprint.py:283:            assert_equal(fpos(tp('1.0'), unique=False, precision=4), "1.0000")
numpy/core/tests/test_scalarprint.py:284:            assert_equal(fsci(tp('1.0'), unique=False, precision=4),
numpy/core/tests/test_scalarprint.py:290:            assert_equal(fpos(tp('1.'), unique=False, precision=4, trim='k'),
numpy/core/tests/test_scalarprint.py:293:            assert_equal(fpos(tp('1.'), unique=False, precision=4, trim='.'),
numpy/core/tests/test_scalarprint.py:295:            assert_equal(fpos(tp('1.2'), unique=False, precision=4, trim='.'),
numpy/core/tests/test_scalarprint.py:298:            assert_equal(fpos(tp('1.'), unique=False, precision=4, trim='0'),
numpy/core/tests/test_scalarprint.py:300:            assert_equal(fpos(tp('1.2'), unique=False, precision=4, trim='0'),
numpy/core/tests/test_scalarprint.py:302:            assert_equal(fpos(tp('1.'), trim='0'), "1.0")
numpy/core/tests/test_scalarprint.py:304:            assert_equal(fpos(tp('1.'), unique=False, precision=4, trim='-'),
numpy/core/tests/test_scalarprint.py:306:            assert_equal(fpos(tp('1.2'), unique=False, precision=4, trim='-'),
numpy/core/tests/test_scalarprint.py:308:            assert_equal(fpos(tp('1.'), trim='-'), "1")
numpy/core/tests/test_scalarprint.py:309:            assert_equal(fpos(tp('1.001'), precision=1, trim='-'), "1")
numpy/core/tests/test_scalarprint.py:361:        assert_equal(got, expected)
numpy/core/tests/test_scalarprint.py:368:        assert_equal(str(a), str(b))
numpy/core/tests/test_scalarprint.py:369:        assert_(a != b)
numpy/core/tests/test_scalarprint.py:375:        assert_(repr(x) != repr(y))
numpy/core/tests/test_scalarprint.py:376:        assert_equal(np.float32(repr(x)), x)
numpy/core/tests/test_scalarprint.py:377:        assert_equal(np.float32(repr(y)), y)
numpy/core/tests/test_scalarprint.py:381:        assert_equal(repr(np.float64(0.1)), repr(0.1))
numpy/core/tests/test_scalarprint.py:382:        assert_(repr(np.float64(0.20000000000000004)) != repr(0.2))
numpy/core/tests/test_casting_unittests.py:133:        assert np.can_cast(floating, string)
numpy/core/tests/test_casting_unittests.py:135:        assert np.can_cast(floating, f"{string}100")
numpy/core/tests/test_casting_unittests.py:139:        assert np.can_cast("d", "V")
numpy/core/tests/test_casting_unittests.py:140:        assert np.can_cast("S20", "V")
numpy/core/tests/test_casting_unittests.py:143:        assert not np.can_cast("d", "V1")
numpy/core/tests/test_casting_unittests.py:144:        assert not np.can_cast("S20", "V1")
numpy/core/tests/test_casting_unittests.py:145:        assert not np.can_cast("U1", "V1")
numpy/core/tests/test_casting_unittests.py:147:        assert np.can_cast("d,i", "V", casting="same_kind")
numpy/core/tests/test_casting_unittests.py:149:        assert np.can_cast("V3", "V", casting="no")
numpy/core/tests/test_casting_unittests.py:150:        assert np.can_cast("V0", "V", casting="no")
numpy/core/tests/test_casting_unittests.py:212:        assert stride1 * len(arr1) <= from_bytes.nbytes
numpy/core/tests/test_casting_unittests.py:213:        assert stride2 * len(arr2) <= to_bytes.nbytes
numpy/core/tests/test_casting_unittests.py:232:            assert buf.count(b"\0") == len(buf)
numpy/core/tests/test_casting_unittests.py:245:            assert not new1.flags.aligned or new1.dtype.alignment == 1
numpy/core/tests/test_casting_unittests.py:246:            assert not new2.flags.aligned or new2.dtype.alignment == 1
numpy/core/tests/test_casting_unittests.py:257:                assert default == to_Dt()
numpy/core/tests/test_casting_unittests.py:263:                    assert(type(from_res) == from_Dt)
numpy/core/tests/test_casting_unittests.py:264:                    assert(type(to_res) == to_Dt)
numpy/core/tests/test_casting_unittests.py:268:                        assert casting == Casting.no
numpy/core/tests/test_casting_unittests.py:270:                        assert Casting.equiv == CAST_TABLE[from_Dt][to_Dt]
numpy/core/tests/test_casting_unittests.py:272:                        assert from_res.isnative == to_res.isnative
numpy/core/tests/test_casting_unittests.py:276:                            assert from_res.isnative != to_res.isnative
numpy/core/tests/test_casting_unittests.py:277:                        assert casting == CAST_TABLE[from_Dt][to_Dt]
numpy/core/tests/test_casting_unittests.py:280:                        assert(from_dt is from_res)
numpy/core/tests/test_casting_unittests.py:281:                        assert(to_dt is to_res)
numpy/core/tests/test_casting_unittests.py:317:            assert arr2.tolist() == values
numpy/core/tests/test_casting_unittests.py:323:            assert_array_equal(arr2_o, arr2)
numpy/core/tests/test_casting_unittests.py:324:            assert arr2_o.tobytes() == arr2.tobytes()
numpy/core/tests/test_casting_unittests.py:335:            assert_array_equal(arr2_o, arr2)
numpy/core/tests/test_casting_unittests.py:336:            assert arr2_o.tobytes() == arr2.tobytes()
numpy/core/tests/test_casting_unittests.py:341:            assert_array_equal(arr2_o, arr2)
numpy/core/tests/test_casting_unittests.py:342:            assert arr2_o.tobytes() == arr2.tobytes()
numpy/core/tests/test_casting_unittests.py:360:            assert from_res is from_dt
numpy/core/tests/test_casting_unittests.py:361:            assert to_res is time_dt
numpy/core/tests/test_casting_unittests.py:364:            assert casting & CAST_TABLE[from_Dt][type(time_dt)]
numpy/core/tests/test_casting_unittests.py:365:            assert view_off is None
numpy/core/tests/test_casting_unittests.py:384:            assert [int(v) for v in arr2.tolist()] == values
numpy/core/tests/test_casting_unittests.py:390:            assert_array_equal(arr2_o, arr2)
numpy/core/tests/test_casting_unittests.py:391:            assert arr2_o.tobytes() == arr2.tobytes()
numpy/core/tests/test_casting_unittests.py:432:        assert values.dtype.byteorder == from_dt.byteorder
numpy/core/tests/test_casting_unittests.py:433:        assert np.isnat(values.view(from_dt)[0])
numpy/core/tests/test_casting_unittests.py:439:        assert from_res is from_dt
numpy/core/tests/test_casting_unittests.py:440:        assert to_res is to_dt or to_dt is None
numpy/core/tests/test_casting_unittests.py:441:        assert casting == expected_casting
numpy/core/tests/test_casting_unittests.py:442:        assert view_off == expected_view_off
numpy/core/tests/test_casting_unittests.py:468:                assert_array_equal(out.view("int64"), expected_out.view("int64"))
numpy/core/tests/test_casting_unittests.py:489:        assert res_dt.itemsize == expected_length * fact
numpy/core/tests/test_casting_unittests.py:490:        assert safety == Casting.safe  # we consider to string casts "safe"
numpy/core/tests/test_casting_unittests.py:491:        assert view_off is None
numpy/core/tests/test_casting_unittests.py:492:        assert isinstance(res_dt, string_DT)
numpy/core/tests/test_casting_unittests.py:505:            assert res_dt is to_dt
numpy/core/tests/test_casting_unittests.py:506:            assert safety == expected_safety
numpy/core/tests/test_casting_unittests.py:507:            assert view_off is None
numpy/core/tests/test_casting_unittests.py:513:        assert safety == Casting.unsafe
numpy/core/tests/test_casting_unittests.py:514:        assert view_off is None
numpy/core/tests/test_casting_unittests.py:519:        assert safety == Casting.unsafe
numpy/core/tests/test_casting_unittests.py:520:        assert view_off is None
numpy/core/tests/test_casting_unittests.py:521:        assert other_dt is res_dt  # returns the singleton for simple dtypes
numpy/core/tests/test_casting_unittests.py:544:            assert other_dt.byteorder != res_other_dt.byteorder
numpy/core/tests/test_casting_unittests.py:554:        assert not cast._supports_unaligned  # if support is added, should test
numpy/core/tests/test_casting_unittests.py:568:            assert_array_equal(str_arr.astype(string_dt_short), str_arr_short)
numpy/core/tests/test_casting_unittests.py:571:            assert_array_equal(str_arr, str_arr_long)
numpy/core/tests/test_casting_unittests.py:579:            assert_array_equal(orig_arr, other_arr)
numpy/core/tests/test_casting_unittests.py:583:            assert_array_equal(orig_arr, other_arr)
numpy/core/tests/test_casting_unittests.py:601:        assert res_dt.itemsize == expected_length * fact
numpy/core/tests/test_casting_unittests.py:602:        assert isinstance(res_dt, string_DT)
numpy/core/tests/test_casting_unittests.py:616:        assert view_off == expected_view_off
numpy/core/tests/test_casting_unittests.py:617:        assert expected_safety == safety
numpy/core/tests/test_casting_unittests.py:624:            assert res_dt is to_dt
numpy/core/tests/test_casting_unittests.py:626:                assert view_off == expected_view_off
numpy/core/tests/test_casting_unittests.py:628:                assert view_off is None
numpy/core/tests/test_casting_unittests.py:630:                assert safety == expected_safety
numpy/core/tests/test_casting_unittests.py:632:                assert safety == Casting.same_kind
numpy/core/tests/test_casting_unittests.py:634:                assert safety == expected_safety
numpy/core/tests/test_casting_unittests.py:636:                assert safety == Casting.safe
numpy/core/tests/test_casting_unittests.py:657:            assert data2[()] == element
numpy/core/tests/test_casting_unittests.py:658:            assert data2.copy()[()] == element
numpy/core/tests/test_casting_unittests.py:664:        assert np.array([], dtype="V5").astype("S").dtype.itemsize == 5
numpy/core/tests/test_casting_unittests.py:665:        assert np.array([], dtype="V5").astype("U").dtype.itemsize == 4 * 5
numpy/core/tests/test_casting_unittests.py:685:        assert safety == Casting.unsafe
numpy/core/tests/test_casting_unittests.py:686:        assert view_off is None
numpy/core/tests/test_casting_unittests.py:687:        assert res_dt is dtype
numpy/core/tests/test_casting_unittests.py:691:        assert safety == Casting.unsafe
numpy/core/tests/test_casting_unittests.py:692:        assert view_off is None
numpy/core/tests/test_casting_unittests.py:693:        assert res_dt == dtype.newbyteorder("=")
numpy/core/tests/test_casting_unittests.py:703:        assert safety == Casting.safe
numpy/core/tests/test_casting_unittests.py:704:        assert view_off is None
numpy/core/tests/test_casting_unittests.py:705:        assert res_dt is np.dtype("O")
numpy/core/tests/test_casting_unittests.py:712:        assert np.can_cast("V4", dtype, casting=casting) == expected
numpy/core/tests/test_casting_unittests.py:713:        assert np.can_cast(dtype, "V4", casting=casting) == expected
numpy/core/tests/test_casting_unittests.py:734:        assert safety == Casting.equiv
numpy/core/tests/test_casting_unittests.py:737:        assert view_off == expected_off
numpy/core/tests/test_casting_unittests.py:778:        assert view_off == expected_off
numpy/core/tests/test_casting_unittests.py:787:        assert arr_NULLs.tobytes() == b"\x00" * arr_NULLs.nbytes
numpy/core/tests/test_casting_unittests.py:795:            assert_array_equal(expected, arr_NULLs.astype(dtype))
numpy/core/tests/test_casting_unittests.py:806:        assert_array_equal(res, expected)
numpy/core/tests/test_abc.py:10:        assert_(issubclass(np.number, numbers.Number))
numpy/core/tests/test_abc.py:12:        assert_(issubclass(np.inexact, numbers.Complex))
numpy/core/tests/test_abc.py:13:        assert_(issubclass(np.complexfloating, numbers.Complex))
numpy/core/tests/test_abc.py:14:        assert_(issubclass(np.floating, numbers.Real))
numpy/core/tests/test_abc.py:16:        assert_(issubclass(np.integer, numbers.Integral))
numpy/core/tests/test_abc.py:17:        assert_(issubclass(np.signedinteger, numbers.Integral))
numpy/core/tests/test_abc.py:18:        assert_(issubclass(np.unsignedinteger, numbers.Integral))
numpy/core/tests/test_abc.py:22:            assert_(isinstance(t(), numbers.Real),
numpy/core/tests/test_abc.py:24:            assert_(issubclass(t, numbers.Real),
numpy/core/tests/test_abc.py:26:            assert_(not isinstance(t(), numbers.Rational),
numpy/core/tests/test_abc.py:28:            assert_(not issubclass(t, numbers.Rational),
numpy/core/tests/test_abc.py:33:            assert_(isinstance(t(), numbers.Complex),
numpy/core/tests/test_abc.py:35:            assert_(issubclass(t, numbers.Complex),
numpy/core/tests/test_abc.py:37:            assert_(not isinstance(t(), numbers.Real),
numpy/core/tests/test_abc.py:39:            assert_(not issubclass(t, numbers.Real),
numpy/core/tests/test_abc.py:44:            assert_(isinstance(t(), numbers.Integral),
numpy/core/tests/test_abc.py:46:            assert_(issubclass(t, numbers.Integral),
numpy/core/tests/test_abc.py:51:            assert_(isinstance(t(), numbers.Integral),
numpy/core/tests/test_abc.py:53:            assert_(issubclass(t, numbers.Integral),
numpy/core/tests/test_ufunc.py:28:        assert_raises(TypeError, np.add, 1, 2, castingx='safe')
numpy/core/tests/test_ufunc.py:29:        assert_raises(TypeError, np.add, 1, 2, dtypex=int)
numpy/core/tests/test_ufunc.py:30:        assert_raises(TypeError, np.add, 1, 2, extobjx=[4096])
numpy/core/tests/test_ufunc.py:31:        assert_raises(TypeError, np.add, 1, 2, outx=None)
numpy/core/tests/test_ufunc.py:32:        assert_raises(TypeError, np.add, 1, 2, sigx='ii->i')
numpy/core/tests/test_ufunc.py:33:        assert_raises(TypeError, np.add, 1, 2, signaturex='ii->i')
numpy/core/tests/test_ufunc.py:34:        assert_raises(TypeError, np.add, 1, 2, subokx=False)
numpy/core/tests/test_ufunc.py:35:        assert_raises(TypeError, np.add, 1, 2, wherex=[True])
numpy/core/tests/test_ufunc.py:38:        assert_raises(TypeError, np.add, 1, 2, sig='ii->i',
numpy/core/tests/test_ufunc.py:42:        assert_raises(TypeError, np.add, 1, 2, sig='ii->i',
numpy/core/tests/test_ufunc.py:44:        assert_raises(TypeError, np.add, 1, 2, signature='ii->i',
numpy/core/tests/test_ufunc.py:49:        assert_raises(TypeError, np.add, 1, 2, extobj=[4096], parrot=True)
numpy/core/tests/test_ufunc.py:107:        assert_allclose(ys, y)
numpy/core/tests/test_ufunc.py:108:        assert_equal(ys.dtype, output_dtype)
numpy/core/tests/test_ufunc.py:117:        assert_allclose(ys, y)
numpy/core/tests/test_ufunc.py:118:        assert_equal(ys.dtype, output_dtype)
numpy/core/tests/test_ufunc.py:130:        assert_(np.all(np.abs(x) == 1))
numpy/core/tests/test_ufunc.py:134:        assert_(np.all(np.conjugate(x) == True))
numpy/core/tests/test_ufunc.py:138:        assert_(np.all(np.add(x, x) == 2))
numpy/core/tests/test_ufunc.py:142:        assert_(np.all(np.logical_xor(x, x)))
numpy/core/tests/test_ufunc.py:146:        assert_(np.all(np.logical_xor(x, x)))
numpy/core/tests/test_ufunc.py:151:        assert isinstance(arr[0], complex)
numpy/core/tests/test_ufunc.py:153:        assert res.dtype == np.dtype("O")
numpy/core/tests/test_ufunc.py:154:        assert_array_equal(res, np.array([1-2j, 3+4j], dtype="O"))
numpy/core/tests/test_ufunc.py:180:                assert_array_almost_equal(res_num.astype("O"), res_obj)
numpy/core/tests/test_ufunc.py:197:            assert_(res is _rational_tests.test_add)
numpy/core/tests/test_ufunc.py:202:        assert_(pickle.loads(astring) is np.cos)
numpy/core/tests/test_ufunc.py:211:        assert obj is umt._pickleable_module_global_ufunc
numpy/core/tests/test_ufunc.py:217:        assert_array_equal(np.add.reduceat(x, idx)[::2], [1, 3, 5, 7])
numpy/core/tests/test_ufunc.py:309:        assert_equal(enabled, 1)
numpy/core/tests/test_ufunc.py:310:        assert_equal(num_dims, (1,  1,  0))
numpy/core/tests/test_ufunc.py:311:        assert_equal(ixs, (0, 0))
numpy/core/tests/test_ufunc.py:312:        assert_equal(flags, (self.size_inferred,))
numpy/core/tests/test_ufunc.py:313:        assert_equal(sizes, (-1,))
numpy/core/tests/test_ufunc.py:319:        assert_equal(enabled, 0)
numpy/core/tests/test_ufunc.py:320:        assert_equal(num_dims, (0,  0,  0))
numpy/core/tests/test_ufunc.py:321:        assert_equal(ixs, ())
numpy/core/tests/test_ufunc.py:322:        assert_equal(flags, ())
numpy/core/tests/test_ufunc.py:323:        assert_equal(sizes, ())
numpy/core/tests/test_ufunc.py:329:        assert_equal(enabled, 1)
numpy/core/tests/test_ufunc.py:330:        assert_equal(num_dims, (2, 1, 1))
numpy/core/tests/test_ufunc.py:331:        assert_equal(ixs, (0, 1, 2, 3))
numpy/core/tests/test_ufunc.py:332:        assert_equal(flags, (self.size_inferred,)*4)
numpy/core/tests/test_ufunc.py:333:        assert_equal(sizes, (-1, -1, -1, -1))
numpy/core/tests/test_ufunc.py:338:        assert_equal(enabled, 1)
numpy/core/tests/test_ufunc.py:339:        assert_equal(num_dims, (2, 1, 2))
numpy/core/tests/test_ufunc.py:340:        assert_equal(ixs, (0, 1, 2, 1, 3))
numpy/core/tests/test_ufunc.py:341:        assert_equal(flags, (self.size_inferred,)*4)
numpy/core/tests/test_ufunc.py:342:        assert_equal(sizes, (-1, -1, -1, -1))
numpy/core/tests/test_ufunc.py:348:        assert_equal(enabled, 1)
numpy/core/tests/test_ufunc.py:349:        assert_equal(num_dims, (2, 2, 2))
numpy/core/tests/test_ufunc.py:350:        assert_equal(ixs, (0, 1, 1, 2, 0, 2))
numpy/core/tests/test_ufunc.py:351:        assert_equal(flags, (self.size_inferred,)*3)
numpy/core/tests/test_ufunc.py:352:        assert_equal(sizes, (-1, -1, -1))
numpy/core/tests/test_ufunc.py:358:        assert_equal(enabled, 1)
numpy/core/tests/test_ufunc.py:359:        assert_equal(num_dims, (2, 2, 2))
numpy/core/tests/test_ufunc.py:360:        assert_equal(ixs, (0, 1, 1, 2, 0, 2))
numpy/core/tests/test_ufunc.py:364:        assert_equal(sizes, (-1, -1, -1))
numpy/core/tests/test_ufunc.py:369:        assert_equal(enabled, 1)
numpy/core/tests/test_ufunc.py:370:        assert_equal(num_dims, (1, 0))
numpy/core/tests/test_ufunc.py:371:        assert_equal(ixs, (0,))
numpy/core/tests/test_ufunc.py:372:        assert_equal(flags, (0,))
numpy/core/tests/test_ufunc.py:373:        assert_equal(sizes, (3,))
numpy/core/tests/test_ufunc.py:378:        assert_equal(enabled, 1)
numpy/core/tests/test_ufunc.py:379:        assert_equal(num_dims, (1, 2, 1, 1))
numpy/core/tests/test_ufunc.py:380:        assert_equal(ixs, (0, 0, 0, 1, 2))
numpy/core/tests/test_ufunc.py:381:        assert_equal(flags, (0, self.size_inferred, 0))
numpy/core/tests/test_ufunc.py:382:        assert_equal(sizes, (3, -1, 9))
numpy/core/tests/test_ufunc.py:387:        assert_equal(enabled, 1)
numpy/core/tests/test_ufunc.py:388:        assert_equal(num_dims, (1, 2, 1, 1))
numpy/core/tests/test_ufunc.py:389:        assert_equal(ixs, (0, 0, 0, 1, 2))
numpy/core/tests/test_ufunc.py:390:        assert_equal(flags, (self.can_ignore, self.size_inferred, 0))
numpy/core/tests/test_ufunc.py:391:        assert_equal(sizes, (3, -1, 9))
numpy/core/tests/test_ufunc.py:396:        assert_equal(enabled, 1)
numpy/core/tests/test_ufunc.py:397:        assert_equal(num_dims, (1, 0))
numpy/core/tests/test_ufunc.py:398:        assert_equal(ixs, (0,))
numpy/core/tests/test_ufunc.py:399:        assert_equal(flags, (0,))
numpy/core/tests/test_ufunc.py:400:        assert_equal(sizes, (3,))
numpy/core/tests/test_ufunc.py:405:        assert_equal(enabled, 1)
numpy/core/tests/test_ufunc.py:406:        assert_equal(num_dims, (1, 2, 1, 1))
numpy/core/tests/test_ufunc.py:407:        assert_equal(ixs, (0, 0, 0, 1, 2))
numpy/core/tests/test_ufunc.py:408:        assert_equal(flags, (self.can_ignore, self.size_inferred, 0))
numpy/core/tests/test_ufunc.py:409:        assert_equal(sizes, (3, -1, 9))
numpy/core/tests/test_ufunc.py:428:        assert_equal(umt.inner1d.signature, "(i),(i)->()")
numpy/core/tests/test_ufunc.py:432:        assert_equal(np.add(a, 0.5), [0.5, 1, 1.5])
numpy/core/tests/test_ufunc.py:434:            assert_equal(np.add(a, 0.5, sig='i', casting='unsafe'), [0, 0, 1])
numpy/core/tests/test_ufunc.py:435:        assert_equal(np.add(a, 0.5, sig='ii->i', casting='unsafe'), [0, 0, 1])
numpy/core/tests/test_ufunc.py:437:            assert_equal(np.add(a, 0.5, sig=('i4',), casting='unsafe'),
numpy/core/tests/test_ufunc.py:439:        assert_equal(np.add(a, 0.5, sig=('i4', 'i4', 'i4'),
numpy/core/tests/test_ufunc.py:444:        assert_equal(b, [0.5, 1, 1.5])
numpy/core/tests/test_ufunc.py:448:        assert_equal(b, [0, 0, 1])
numpy/core/tests/test_ufunc.py:451:        assert_equal(b, [0, 0, 1])
numpy/core/tests/test_ufunc.py:455:        assert_equal(b, [0, 0, 1])
numpy/core/tests/test_ufunc.py:458:        assert_equal(b, [0, 0, 1])
numpy/core/tests/test_ufunc.py:465:        assert_array_equal(res1, res2)
numpy/core/tests/test_ufunc.py:468:        assert_array_equal(res1, res2)
numpy/core/tests/test_ufunc.py:484:        assert res.dtype == "d"
numpy/core/tests/test_ufunc.py:486:        assert res.dtype == "d"
numpy/core/tests/test_ufunc.py:500:        assert res == 1  # the cast happens first.
numpy/core/tests/test_ufunc.py:503:        assert res == 1
numpy/core/tests/test_ufunc.py:553:        assert_array_equal(expected, res)
numpy/core/tests/test_ufunc.py:560:        assert_array_equal(expected, res)
numpy/core/tests/test_ufunc.py:569:        assert_array_equal(expected, res)
numpy/core/tests/test_ufunc.py:592:                assert_allclose(res, tgt, rtol=rtol)
numpy/core/tests/test_ufunc.py:595:                    assert_(res.dtype.name == 'float64')
numpy/core/tests/test_ufunc.py:597:                    assert_(res.dtype.name == dt.name )
numpy/core/tests/test_ufunc.py:606:                    assert_raises(TypeError, np.true_divide, x, y, dtype=dtout)
numpy/core/tests/test_ufunc.py:612:                        assert_raises(TypeError, np.true_divide, x, y, dtype=dtout)
numpy/core/tests/test_ufunc.py:628:                        assert_allclose(res, tgt, rtol=rtol, atol=atol)
numpy/core/tests/test_ufunc.py:629:                        assert_(res.dtype.name == dtout.name)
numpy/core/tests/test_ufunc.py:645:                    assert_allclose(res, tgt, rtol=rtol, atol=atol)
numpy/core/tests/test_ufunc.py:646:                    assert_(res.dtype.name == dtout.name)
numpy/core/tests/test_ufunc.py:651:        assert_(res == 1.0)
numpy/core/tests/test_ufunc.py:652:        assert_(res.dtype.name == 'float64')
numpy/core/tests/test_ufunc.py:654:        assert_(res == 0.0)
numpy/core/tests/test_ufunc.py:655:        assert_(res.dtype.name == 'float64')
numpy/core/tests/test_ufunc.py:659:        assert_almost_equal((a / 10.).sum() - a.size / 10., 0, 4)
numpy/core/tests/test_ufunc.py:662:        assert_almost_equal((a / 10.).sum() - a.size / 10., 0, 13)
numpy/core/tests/test_ufunc.py:676:                    assert_almost_equal(np.sum(d), tgt)
numpy/core/tests/test_ufunc.py:677:                    assert_equal(len(w), 1 * overflow)
numpy/core/tests/test_ufunc.py:679:                    assert_almost_equal(np.sum(d[::-1]), tgt)
numpy/core/tests/test_ufunc.py:680:                    assert_equal(len(w), 2 * overflow)
numpy/core/tests/test_ufunc.py:683:            assert_almost_equal(np.sum(d[::2]), 250.)
numpy/core/tests/test_ufunc.py:684:            assert_almost_equal(np.sum(d[1::2]), 250.)
numpy/core/tests/test_ufunc.py:685:            assert_almost_equal(np.sum(d[::3]), 167.)
numpy/core/tests/test_ufunc.py:686:            assert_almost_equal(np.sum(d[1::3]), 167.)
numpy/core/tests/test_ufunc.py:687:            assert_almost_equal(np.sum(d[::-2]), 250.)
numpy/core/tests/test_ufunc.py:688:            assert_almost_equal(np.sum(d[-1::-2]), 250.)
numpy/core/tests/test_ufunc.py:689:            assert_almost_equal(np.sum(d[::-3]), 167.)
numpy/core/tests/test_ufunc.py:690:            assert_almost_equal(np.sum(d[-1::-3]), 167.)
numpy/core/tests/test_ufunc.py:694:            assert_almost_equal(d, 2.)
numpy/core/tests/test_ufunc.py:704:                assert_almost_equal(np.sum(d), tgt)
numpy/core/tests/test_ufunc.py:705:                assert_almost_equal(np.sum(d[::-1]), tgt)
numpy/core/tests/test_ufunc.py:708:            assert_almost_equal(np.sum(d[::2]), 250. + 250j)
numpy/core/tests/test_ufunc.py:709:            assert_almost_equal(np.sum(d[1::2]), 250. + 250j)
numpy/core/tests/test_ufunc.py:710:            assert_almost_equal(np.sum(d[::3]), 167. + 167j)
numpy/core/tests/test_ufunc.py:711:            assert_almost_equal(np.sum(d[1::3]), 167. + 167j)
numpy/core/tests/test_ufunc.py:712:            assert_almost_equal(np.sum(d[::-2]), 250. + 250j)
numpy/core/tests/test_ufunc.py:713:            assert_almost_equal(np.sum(d[-1::-2]), 250. + 250j)
numpy/core/tests/test_ufunc.py:714:            assert_almost_equal(np.sum(d[::-3]), 167. + 167j)
numpy/core/tests/test_ufunc.py:715:            assert_almost_equal(np.sum(d[-1::-3]), 167. + 167j)
numpy/core/tests/test_ufunc.py:719:            assert_almost_equal(d, 2. + 2j)
numpy/core/tests/test_ufunc.py:723:        assert_equal(np.sum([3], initial=2), 5)
numpy/core/tests/test_ufunc.py:726:        assert_almost_equal(np.sum([0.2], initial=0.1), 0.3)
numpy/core/tests/test_ufunc.py:729:        assert_equal(np.sum(np.ones((2, 3, 5), dtype=np.int64), axis=(0, 2), initial=2),
numpy/core/tests/test_ufunc.py:734:        assert_equal(np.sum([[1., 2.], [3., 4.]], where=[True, False]), 4.)
numpy/core/tests/test_ufunc.py:740:        assert_array_equal(umt.inner1d(a, a), np.sum(a*a, axis=-1))
numpy/core/tests/test_ufunc.py:742:        assert_array_equal(umt.inner1d(a, a), np.sum(a*a))
numpy/core/tests/test_ufunc.py:748:        assert_array_equal(umt.inner1d(a, b), np.sum(a*b, axis=-1), err_msg=msg)
numpy/core/tests/test_ufunc.py:751:        assert_array_equal(umt.inner1d(a, b), np.sum(a*b, axis=-1), err_msg=msg)
numpy/core/tests/test_ufunc.py:755:        assert_raises(ValueError, umt.inner1d, a, b)
numpy/core/tests/test_ufunc.py:759:        assert_raises(ValueError, umt.inner1d, a, b)
numpy/core/tests/test_ufunc.py:763:        assert_raises(ValueError, umt.inner1d, a, b)
numpy/core/tests/test_ufunc.py:769:        assert_equal(u.strides[0], 0)
numpy/core/tests/test_ufunc.py:774:            assert_equal(len(w), 1)
numpy/core/tests/test_ufunc.py:775:            assert_(x[0, 0] != u[0, 0])
numpy/core/tests/test_ufunc.py:782:        assert_raises(ValueError, umt.inner1d, a, b, out)
numpy/core/tests/test_ufunc.py:785:        assert_(c is out2)
numpy/core/tests/test_ufunc.py:795:        assert (out == np.arange(3) * 2).all()
numpy/core/tests/test_ufunc.py:800:        assert (out == 5).all()
numpy/core/tests/test_ufunc.py:805:        assert_array_equal(umt.inner1d(a, a), np.sum(a*a, axis=-1),
numpy/core/tests/test_ufunc.py:810:        assert_array_almost_equal(umt.inner1d(a, b), np.sum(a*b, axis=-1),
numpy/core/tests/test_ufunc.py:816:        assert_array_equal(umt.inner1d(a, a), np.sum(a*a, axis=-1),
numpy/core/tests/test_ufunc.py:820:        assert_array_equal(umt.inner1d(a, a), np.sum(a*a, axis=-1),
numpy/core/tests/test_ufunc.py:826:        assert_equal((Ba+Ba).dtype, np.dtype('f8'))
numpy/core/tests/test_ufunc.py:827:        assert_equal((Ba+La).dtype, np.dtype('f8'))
numpy/core/tests/test_ufunc.py:828:        assert_equal((La+Ba).dtype, np.dtype('f8'))
numpy/core/tests/test_ufunc.py:829:        assert_equal((La+La).dtype, np.dtype('f8'))
numpy/core/tests/test_ufunc.py:831:        assert_equal(np.absolute(La).dtype, np.dtype('f8'))
numpy/core/tests/test_ufunc.py:832:        assert_equal(np.absolute(Ba).dtype, np.dtype('f8'))
numpy/core/tests/test_ufunc.py:833:        assert_equal(np.negative(La).dtype, np.dtype('f8'))
numpy/core/tests/test_ufunc.py:834:        assert_equal(np.negative(Ba).dtype, np.dtype('f8'))
numpy/core/tests/test_ufunc.py:843:        assert_equal(x[0, 0, 0, 0, 0, 0], -1, err_msg=msg2)
numpy/core/tests/test_ufunc.py:844:        assert_array_equal(umt.inner1d(a, b), np.sum(a*b, axis=-1), err_msg=msg)
numpy/core/tests/test_ufunc.py:849:        assert_equal(x[0, 0, 0], -1, err_msg=msg2)
numpy/core/tests/test_ufunc.py:850:        assert_array_equal(umt.inner1d(a, b), np.sum(a*b, axis=-1), err_msg=msg)
numpy/core/tests/test_ufunc.py:858:        assert_array_equal(c, np.sum(a*b, axis=-1), err_msg=msg)
numpy/core/tests/test_ufunc.py:861:        assert_array_equal(c, np.sum(a*b, axis=-1), err_msg=msg)
numpy/core/tests/test_ufunc.py:866:        assert_array_equal(c, np.sum(a*b, axis=-1), err_msg=msg)
numpy/core/tests/test_ufunc.py:869:        assert_array_equal(c, np.sum(a*b, axis=-1), err_msg=msg)
numpy/core/tests/test_ufunc.py:874:        assert_array_equal(c[..., 0], np.sum(a*b, axis=-1), err_msg=msg)
numpy/core/tests/test_ufunc.py:877:        assert_array_equal(c[..., 0], np.sum(a*b, axis=-1), err_msg=msg)
numpy/core/tests/test_ufunc.py:886:        assert_array_equal(c, (a * b).sum(-1))
numpy/core/tests/test_ufunc.py:889:        assert_array_equal(c, (a * b).sum(-1))
numpy/core/tests/test_ufunc.py:892:        assert_array_equal(c, (a * b).sum(-1))
numpy/core/tests/test_ufunc.py:895:        assert_array_equal(c, (a * b).sum(-1))
numpy/core/tests/test_ufunc.py:898:        assert_array_equal(c, (a * b).sum(-1))
numpy/core/tests/test_ufunc.py:901:        assert_array_equal(c, (a * b).sum(-1))
numpy/core/tests/test_ufunc.py:904:        assert_array_equal(c, (a * b).sum(0))
numpy/core/tests/test_ufunc.py:906:        assert_array_equal(c, (a.transpose(1, 2, 0) * b).sum(-1))
numpy/core/tests/test_ufunc.py:909:        assert_raises(TypeError, inner1d, a, b, axes=-1)
numpy/core/tests/test_ufunc.py:911:        assert_raises(ValueError, inner1d, a, b, axes=[-1])
numpy/core/tests/test_ufunc.py:913:        assert_raises(TypeError, inner1d, a, b, axes=[-1.0, -1.0])
numpy/core/tests/test_ufunc.py:914:        assert_raises(TypeError, inner1d, a, b, axes=[(-1.0,), -1])
numpy/core/tests/test_ufunc.py:915:        assert_raises(TypeError, inner1d, a, b, axes=[None, 1])
numpy/core/tests/test_ufunc.py:918:        assert_raises(TypeError, inner1d, a, b, axes=[-1, -1, -1])
numpy/core/tests/test_ufunc.py:920:        assert_raises(ValueError, inner1d, a, b, axes=[-1, -1, (-1,)])
numpy/core/tests/test_ufunc.py:921:        assert_raises(ValueError, inner1d, a, b, axes=[-1, (-2, -1), ()])
numpy/core/tests/test_ufunc.py:923:        assert_raises(ValueError, inner1d, a, b, axes=[0, 1])
numpy/core/tests/test_ufunc.py:931:        assert_array_equal(c, np.matmul(a, b))
numpy/core/tests/test_ufunc.py:934:        assert_array_equal(c, np.matmul(a, b))
numpy/core/tests/test_ufunc.py:937:        assert_array_equal(c, np.matmul(a, b))
numpy/core/tests/test_ufunc.py:940:        assert_array_equal(c, np.matmul(a.transpose(1, 0, 2),
numpy/core/tests/test_ufunc.py:945:        assert_(c is d)
numpy/core/tests/test_ufunc.py:946:        assert_array_equal(c, np.matmul(a, b))
numpy/core/tests/test_ufunc.py:950:        assert_(c is d)
numpy/core/tests/test_ufunc.py:951:        assert_array_equal(c, np.matmul(a, b).transpose(3, 0, 1, 2))
numpy/core/tests/test_ufunc.py:954:        assert_raises(TypeError, mm, a, b, axis=1)
numpy/core/tests/test_ufunc.py:956:        assert_raises(TypeError, mm, a, b, axes=1)
numpy/core/tests/test_ufunc.py:957:        assert_raises(TypeError, mm, a, b, axes=((-2, -1), (-2, -1), (-2, -1)))
numpy/core/tests/test_ufunc.py:959:        assert_raises(ValueError, mm, a, b, axes=[])
numpy/core/tests/test_ufunc.py:960:        assert_raises(ValueError, mm, a, b, axes=[(-2, -1)])
numpy/core/tests/test_ufunc.py:962:        assert_raises(TypeError, mm, a, b, axes=[-1, -1, -1])
numpy/core/tests/test_ufunc.py:963:        assert_raises(TypeError, mm, a, b, axes=[(-2, -1), (-2, -1), -1])
numpy/core/tests/test_ufunc.py:968:        assert_raises(TypeError, mm, a, b, axes=[(-2, -1), (-2, -1), None])
numpy/core/tests/test_ufunc.py:970:        assert_raises(ValueError, mm, a, b, axes=[(-2, -1), (-2, -1), (-2, -2)])
numpy/core/tests/test_ufunc.py:973:        assert_raises(ValueError, mm, z, z[0])
numpy/core/tests/test_ufunc.py:974:        assert_raises(ValueError, mm, z, z, out=z[:, 0])
numpy/core/tests/test_ufunc.py:975:        assert_raises(ValueError, mm, z[1], z, axes=[0, 1])
numpy/core/tests/test_ufunc.py:976:        assert_raises(ValueError, mm, z, z, out=z[0], axes=[0, 1])
numpy/core/tests/test_ufunc.py:978:        assert_raises(TypeError, np.add, 1., 1., axes=[0])
numpy/core/tests/test_ufunc.py:980:        assert_raises(TypeError, mm, z, z, axes=[0, 1], parrot=True)
numpy/core/tests/test_ufunc.py:988:        assert_array_equal(c, (a * b).sum(-1))
numpy/core/tests/test_ufunc.py:990:        assert_array_equal(c, (a * b).sum(-1))
numpy/core/tests/test_ufunc.py:993:        assert_(d is out)
numpy/core/tests/test_ufunc.py:994:        assert_array_equal(d, c)
numpy/core/tests/test_ufunc.py:996:        assert_array_equal(c, (a * b).sum(0))
numpy/core/tests/test_ufunc.py:1001:        assert_array_equal(umt.innerwt(a, b, w, axis=0),
numpy/core/tests/test_ufunc.py:1003:        assert_array_equal(umt.cumsum(a, axis=0), np.cumsum(a, axis=0))
numpy/core/tests/test_ufunc.py:1004:        assert_array_equal(umt.cumsum(a, axis=-1), np.cumsum(a, axis=-1))
numpy/core/tests/test_ufunc.py:1007:        assert_(out is b)
numpy/core/tests/test_ufunc.py:1008:        assert_array_equal(b, np.cumsum(a, axis=0))
numpy/core/tests/test_ufunc.py:1010:        assert_(out is b)
numpy/core/tests/test_ufunc.py:1011:        assert_array_equal(b, np.cumsum(a, axis=-1))
numpy/core/tests/test_ufunc.py:1014:        assert_raises(TypeError, inner1d, a, b, axis=0, axes=[0, 0])
numpy/core/tests/test_ufunc.py:1016:        assert_raises(TypeError, inner1d, a, b, axis=[0])
numpy/core/tests/test_ufunc.py:1019:        assert_raises(TypeError, mm, a, b, axis=1)
numpy/core/tests/test_ufunc.py:1022:        assert_raises(ValueError, umt.cumsum, a, out=out, axis=0)
numpy/core/tests/test_ufunc.py:1024:        assert_raises(TypeError, np.add, 1., 1., axis=0)
numpy/core/tests/test_ufunc.py:1032:        assert_array_equal(c, (a * b).sum(-1))
numpy/core/tests/test_ufunc.py:1034:        assert_array_equal(c, (a * b).sum(-1))
numpy/core/tests/test_ufunc.py:1036:        assert_array_equal(c, (a * b).sum(-1, keepdims=True))
numpy/core/tests/test_ufunc.py:1039:        assert_(d is out)
numpy/core/tests/test_ufunc.py:1040:        assert_array_equal(d, c)
numpy/core/tests/test_ufunc.py:1043:        assert_array_equal(c, (a * b).sum(-1, keepdims=False))
numpy/core/tests/test_ufunc.py:1045:        assert_array_equal(c, (a * b).sum(-1, keepdims=True))
numpy/core/tests/test_ufunc.py:1047:        assert_array_equal(c, (a * b).sum(0, keepdims=False))
numpy/core/tests/test_ufunc.py:1049:        assert_array_equal(c, (a * b).sum(0, keepdims=True))
numpy/core/tests/test_ufunc.py:1051:        assert_array_equal(c, (a * b).sum(-1))
numpy/core/tests/test_ufunc.py:1053:        assert_array_equal(c, (a * b).sum(-1, keepdims=True))
numpy/core/tests/test_ufunc.py:1055:        assert_array_equal(c, (a * b).sum(0))
numpy/core/tests/test_ufunc.py:1057:        assert_array_equal(c, (a * b).sum(0, keepdims=True))
numpy/core/tests/test_ufunc.py:1059:        assert_array_equal(c, (a.transpose(1, 2, 0) * b).sum(-1))
numpy/core/tests/test_ufunc.py:1061:        assert_array_equal(c, (a.transpose(1, 2, 0) * b).sum(-1,
numpy/core/tests/test_ufunc.py:1064:        assert_array_equal(c, (a.transpose(1, 2, 0) * b).sum(-1,
numpy/core/tests/test_ufunc.py:1067:        assert_array_equal(c, (a * b.transpose(2, 0, 1)).sum(0, keepdims=True))
numpy/core/tests/test_ufunc.py:1070:        assert_array_equal(c, (a.transpose(1, 0, 2) * b.transpose(0, 2, 1))
numpy/core/tests/test_ufunc.py:1076:        assert_array_equal(c, expected)
numpy/core/tests/test_ufunc.py:1078:        assert_array_equal(c, expected[:, np.newaxis, np.newaxis])
numpy/core/tests/test_ufunc.py:1082:        assert_array_equal(cs, expected_s)
numpy/core/tests/test_ufunc.py:1083:        assert_array_equal(cl, expected_l)
numpy/core/tests/test_ufunc.py:1085:        assert_array_equal(cs, expected_s[:, np.newaxis, np.newaxis])
numpy/core/tests/test_ufunc.py:1086:        assert_array_equal(cl, expected_l[:, np.newaxis, np.newaxis])
numpy/core/tests/test_ufunc.py:1091:        assert_array_equal(umt.innerwt(a, b, w, keepdims=True),
numpy/core/tests/test_ufunc.py:1093:        assert_array_equal(umt.innerwt(a, b, w, axis=0, keepdims=True),
numpy/core/tests/test_ufunc.py:1097:        assert_raises(TypeError, inner1d, a, b, keepdims='true')
numpy/core/tests/test_ufunc.py:1100:        assert_raises(TypeError, mm, a, b, keepdims=True)
numpy/core/tests/test_ufunc.py:1101:        assert_raises(TypeError, mm, a, b, keepdims=False)
numpy/core/tests/test_ufunc.py:1103:        assert_raises(TypeError, np.add, 1., 1., keepdims=False)
numpy/core/tests/test_ufunc.py:1109:        assert_array_equal(umt.innerwt(a, b, w), np.sum(a*b*w, axis=-1))
numpy/core/tests/test_ufunc.py:1113:        assert_array_equal(umt.innerwt(a, b, w), np.sum(a*b*w, axis=-1))
numpy/core/tests/test_ufunc.py:1120:        assert_array_equal(umt.innerwt(a, b, w), np.sum(a*b*w, axis=-1))
numpy/core/tests/test_ufunc.py:1125:        assert_array_equal(umt.cross1d(a, a), np.zeros((3, 3)))
numpy/core/tests/test_ufunc.py:1128:        assert_(result is out)
numpy/core/tests/test_ufunc.py:1129:        assert_array_equal(result, np.vstack((np.zeros(3), a[2], -a[1])))
numpy/core/tests/test_ufunc.py:1130:        assert_raises(ValueError, umt.cross1d, np.eye(4), np.eye(4))
numpy/core/tests/test_ufunc.py:1131:        assert_raises(ValueError, umt.cross1d, a, np.arange(4.))
numpy/core/tests/test_ufunc.py:1133:        assert_raises(ValueError, umt.cross1d, a, np.arange(3.), np.zeros((3, 4)))
numpy/core/tests/test_ufunc.py:1135:        assert_raises(ValueError, umt.cross1d, a, np.arange(3.), np.zeros(3))
numpy/core/tests/test_ufunc.py:1149:        assert_array_equal(matmul_col_vec, mm_col_vec)
numpy/core/tests/test_ufunc.py:1152:        assert_raises(ValueError, umt.matrix_multiply, mat, single_vec)
numpy/core/tests/test_ufunc.py:1155:        assert_array_equal(matmul_col, mm_col_vec.squeeze())
numpy/core/tests/test_ufunc.py:1160:        assert_array_equal(matmul_col_vec, mm_col_vec)
numpy/core/tests/test_ufunc.py:1168:        assert_array_equal(matmul_row_vec, mm_row_vec)
numpy/core/tests/test_ufunc.py:1170:        assert_raises(ValueError, umt.matrix_multiply, single_vec, mat)
numpy/core/tests/test_ufunc.py:1172:        assert_array_equal(matmul_row, mm_row_vec.squeeze())
numpy/core/tests/test_ufunc.py:1176:        assert_array_equal(matmul_row_vec, mm_row_vec)
numpy/core/tests/test_ufunc.py:1183:        assert_array_equal(matmul_row_col_vec, mm_row_col_vec)
numpy/core/tests/test_ufunc.py:1185:        assert_raises(ValueError, umt.matrix_multiply, single_vec, single_vec)
numpy/core/tests/test_ufunc.py:1187:        assert_array_equal(matmul_row_col, mm_row_col_vec.squeeze())
numpy/core/tests/test_ufunc.py:1191:        assert_array_equal(matmul_row_col_array, mm_row_col_array)
numpy/core/tests/test_ufunc.py:1196:        assert_array_equal(out, mm_row_col_array)
numpy/core/tests/test_ufunc.py:1199:        assert_array_equal(out, mm_row_col_array)
numpy/core/tests/test_ufunc.py:1206:        assert_array_equal(out, mm_row_col_vec.squeeze())
numpy/core/tests/test_ufunc.py:1214:        assert_array_equal(res, np.zeros((0, 0)))
numpy/core/tests/test_ufunc.py:1216:        assert_array_equal(res, np.zeros((10, 10)))
numpy/core/tests/test_ufunc.py:1263:                            assert_array_almost_equal(
numpy/core/tests/test_ufunc.py:1270:        assert_equal(ref, True, err_msg="reference check")
numpy/core/tests/test_ufunc.py:1278:        assert_almost_equal(out, b)
numpy/core/tests/test_ufunc.py:1280:        assert_raises(ValueError, umt.euclidean_pdist, a)
numpy/core/tests/test_ufunc.py:1285:        assert_array_equal(result, a.cumsum())
numpy/core/tests/test_ufunc.py:1289:        assert_equal(np.logical_or(a, None),
numpy/core/tests/test_ufunc.py:1291:        assert_equal(np.logical_or(a, True),
numpy/core/tests/test_ufunc.py:1293:        assert_equal(np.logical_or(a, 12),
numpy/core/tests/test_ufunc.py:1295:        assert_equal(np.logical_or(a, "blah"),
numpy/core/tests/test_ufunc.py:1298:        assert_equal(np.logical_and(a, None),
numpy/core/tests/test_ufunc.py:1300:        assert_equal(np.logical_and(a, True),
numpy/core/tests/test_ufunc.py:1302:        assert_equal(np.logical_and(a, 12),
numpy/core/tests/test_ufunc.py:1304:        assert_equal(np.logical_and(a, "blah"),
numpy/core/tests/test_ufunc.py:1307:        assert_equal(np.logical_not(a),
numpy/core/tests/test_ufunc.py:1310:        assert_equal(np.logical_or.reduce(a), 3)
numpy/core/tests/test_ufunc.py:1311:        assert_equal(np.logical_and.reduce(a), None)
numpy/core/tests/test_ufunc.py:1319:        assert_equal(arr0d == arr0d, True)
numpy/core/tests/test_ufunc.py:1320:        assert_equal(np.equal(arr0d, arr0d), True)  # normal behavior is a cast
numpy/core/tests/test_ufunc.py:1323:        assert_equal(arr1d == arr1d, np.array([True]))
numpy/core/tests/test_ufunc.py:1324:        assert_equal(np.equal(arr1d, arr1d), np.array([True]))  # normal behavior is a cast
numpy/core/tests/test_ufunc.py:1325:        assert_equal(np.equal(arr1d, arr1d, dtype=object), np.array(['==']))
numpy/core/tests/test_ufunc.py:1330:        assert_equal(np.sum(a), 'abc')
numpy/core/tests/test_ufunc.py:1331:        assert_equal(np.max(a), 'c')
numpy/core/tests/test_ufunc.py:1332:        assert_equal(np.min(a), 'a')
numpy/core/tests/test_ufunc.py:1334:        assert_equal(np.sum(a), 2)
numpy/core/tests/test_ufunc.py:1335:        assert_equal(np.prod(a), 0)
numpy/core/tests/test_ufunc.py:1336:        assert_equal(np.any(a), True)
numpy/core/tests/test_ufunc.py:1337:        assert_equal(np.all(a), False)
numpy/core/tests/test_ufunc.py:1338:        assert_equal(np.max(a), True)
numpy/core/tests/test_ufunc.py:1339:        assert_equal(np.min(a), False)
numpy/core/tests/test_ufunc.py:1340:        assert_equal(np.array([[1]], dtype=object).sum(), 1)
numpy/core/tests/test_ufunc.py:1341:        assert_equal(np.array([[[1, 2]]], dtype=object).sum((0, 1)), [1, 2])
numpy/core/tests/test_ufunc.py:1342:        assert_equal(np.array([1], dtype=object).sum(initial=1), 2)
numpy/core/tests/test_ufunc.py:1343:        assert_equal(np.array([[1], [2, 3]], dtype=object)
numpy/core/tests/test_ufunc.py:1353:        assert_array_equal(arr,
numpy/core/tests/test_ufunc.py:1362:        assert_array_equal(arr[0, :],
numpy/core/tests/test_ufunc.py:1369:        assert_array_equal(res, np.array([1, 1, 3], dtype=object))
numpy/core/tests/test_ufunc.py:1382:        assert_array_equal(arr, out)
numpy/core/tests/test_ufunc.py:1391:        assert_array_equal(arr, out)
numpy/core/tests/test_ufunc.py:1397:        assert_array_equal(res, np.array([None, 2], dtype=object))
numpy/core/tests/test_ufunc.py:1405:            assert_equal(np.sum(a), 0)
numpy/core/tests/test_ufunc.py:1406:            assert_equal(np.prod(a), 1)
numpy/core/tests/test_ufunc.py:1407:            assert_equal(np.any(a), False)
numpy/core/tests/test_ufunc.py:1408:            assert_equal(np.all(a), True)
numpy/core/tests/test_ufunc.py:1409:            assert_raises(ValueError, np.max, a)
numpy/core/tests/test_ufunc.py:1410:            assert_raises(ValueError, np.min, a)
numpy/core/tests/test_ufunc.py:1414:        assert_raises(np.AxisError, a.all, axis=1)
numpy/core/tests/test_ufunc.py:1416:        assert_raises(np.AxisError, a.all, axis=-2)
numpy/core/tests/test_ufunc.py:1419:        assert_raises(np.AxisError, a.any, axis=1)
numpy/core/tests/test_ufunc.py:1421:        assert_raises(np.AxisError, a.any, axis=-2)
numpy/core/tests/test_ufunc.py:1426:        assert_equal(np.sum(3, axis=0), 3)
numpy/core/tests/test_ufunc.py:1427:        assert_equal(np.prod(3.5, axis=0), 3.5)
numpy/core/tests/test_ufunc.py:1428:        assert_equal(np.any(True, axis=0), True)
numpy/core/tests/test_ufunc.py:1429:        assert_equal(np.all(False, axis=0), False)
numpy/core/tests/test_ufunc.py:1430:        assert_equal(np.max(3, axis=0), 3)
numpy/core/tests/test_ufunc.py:1431:        assert_equal(np.min(2.5, axis=0), 2.5)
numpy/core/tests/test_ufunc.py:1434:        assert_equal(np.power.reduce(3), 3)
numpy/core/tests/test_ufunc.py:1437:        assert_(type(np.prod(np.float32(2.5), axis=0)) is np.float32)
numpy/core/tests/test_ufunc.py:1438:        assert_(type(np.sum(np.float32(2.5), axis=0)) is np.float32)
numpy/core/tests/test_ufunc.py:1439:        assert_(type(np.max(np.float32(2.5), axis=0)) is np.float32)
numpy/core/tests/test_ufunc.py:1440:        assert_(type(np.min(np.float32(2.5), axis=0)) is np.float32)
numpy/core/tests/test_ufunc.py:1443:        assert_(type(np.any(0, axis=0)) is np.bool_)
numpy/core/tests/test_ufunc.py:1449:        assert_(type(np.any(a)) is MyArray)
numpy/core/tests/test_ufunc.py:1457:        assert_equal(c, 2)
numpy/core/tests/test_ufunc.py:1462:        assert_equal(b, 0)
numpy/core/tests/test_ufunc.py:1470:        assert_equal(c, [0, 2, 0, 4, 0, 6, 0])
numpy/core/tests/test_ufunc.py:1474:        assert_equal(a, [[2, 27], [16, 5]])
numpy/core/tests/test_ufunc.py:1477:        assert_equal(a, [[0, 27], [14, 5]])
numpy/core/tests/test_ufunc.py:1488:        assert_equal(c, [2, 1.5, 1.5, 2, 1.5, 1.5, 2, 2, 2, 1.5])
numpy/core/tests/test_ufunc.py:1494:        assert_equal(np.sqrt(a, where=m), [1])
numpy/core/tests/test_ufunc.py:1499:        assert_equal(np.sqrt(a, where=m), [1])
numpy/core/tests/test_ufunc.py:1510:        assert_array_equal((a[where] < b_where), out[where].astype(bool))
numpy/core/tests/test_ufunc.py:1511:        assert not out[~where].any()  # outside mask, out remains all 0
numpy/core/tests/test_ufunc.py:1519:        assert_equal(np.minimum.reduce(a, axis=None), 0)
numpy/core/tests/test_ufunc.py:1520:        assert_equal(np.minimum.reduce(a, axis=(0, 1)), [0, 1, 1, 1])
numpy/core/tests/test_ufunc.py:1521:        assert_equal(np.minimum.reduce(a, axis=(0, 2)), [0, 1, 1])
numpy/core/tests/test_ufunc.py:1522:        assert_equal(np.minimum.reduce(a, axis=(1, 2)), [1, 0])
numpy/core/tests/test_ufunc.py:1523:        assert_equal(np.minimum.reduce(a, axis=0),
numpy/core/tests/test_ufunc.py:1525:        assert_equal(np.minimum.reduce(a, axis=1),
numpy/core/tests/test_ufunc.py:1527:        assert_equal(np.minimum.reduce(a, axis=2),
numpy/core/tests/test_ufunc.py:1529:        assert_equal(np.minimum.reduce(a, axis=()), a)
numpy/core/tests/test_ufunc.py:1533:        assert_equal(np.minimum.reduce(a, axis=None), 0)
numpy/core/tests/test_ufunc.py:1534:        assert_equal(np.minimum.reduce(a, axis=(0, 1)), [0, 1, 1, 1])
numpy/core/tests/test_ufunc.py:1535:        assert_equal(np.minimum.reduce(a, axis=(0, 2)), [1, 0, 1])
numpy/core/tests/test_ufunc.py:1536:        assert_equal(np.minimum.reduce(a, axis=(1, 2)), [0, 1])
numpy/core/tests/test_ufunc.py:1537:        assert_equal(np.minimum.reduce(a, axis=0),
numpy/core/tests/test_ufunc.py:1539:        assert_equal(np.minimum.reduce(a, axis=1),
numpy/core/tests/test_ufunc.py:1541:        assert_equal(np.minimum.reduce(a, axis=2),
numpy/core/tests/test_ufunc.py:1543:        assert_equal(np.minimum.reduce(a, axis=()), a)
numpy/core/tests/test_ufunc.py:1547:        assert_equal(np.minimum.reduce(a, axis=None), 0)
numpy/core/tests/test_ufunc.py:1548:        assert_equal(np.minimum.reduce(a, axis=(0, 1)), [1, 0, 1, 1])
numpy/core/tests/test_ufunc.py:1549:        assert_equal(np.minimum.reduce(a, axis=(0, 2)), [0, 1, 1])
numpy/core/tests/test_ufunc.py:1550:        assert_equal(np.minimum.reduce(a, axis=(1, 2)), [0, 1])
numpy/core/tests/test_ufunc.py:1551:        assert_equal(np.minimum.reduce(a, axis=0),
numpy/core/tests/test_ufunc.py:1553:        assert_equal(np.minimum.reduce(a, axis=1),
numpy/core/tests/test_ufunc.py:1555:        assert_equal(np.minimum.reduce(a, axis=2),
numpy/core/tests/test_ufunc.py:1557:        assert_equal(np.minimum.reduce(a, axis=()), a)
numpy/core/tests/test_ufunc.py:1567:        assert res[0] == 3
numpy/core/tests/test_ufunc.py:1568:        assert res[-1] == 4
numpy/core/tests/test_ufunc.py:1599:        assert_equal(np.maximum.reduce([], initial=0), 0)
numpy/core/tests/test_ufunc.py:1602:        assert_equal(np.minimum.reduce([], initial=np.inf), np.inf)
numpy/core/tests/test_ufunc.py:1603:        assert_equal(np.maximum.reduce([], initial=-np.inf), -np.inf)
numpy/core/tests/test_ufunc.py:1606:        assert_equal(np.minimum.reduce([5], initial=4), 4)
numpy/core/tests/test_ufunc.py:1607:        assert_equal(np.maximum.reduce([4], initial=5), 5)
numpy/core/tests/test_ufunc.py:1608:        assert_equal(np.maximum.reduce([5], initial=4), 5)
numpy/core/tests/test_ufunc.py:1609:        assert_equal(np.minimum.reduce([4], initial=5), 4)
numpy/core/tests/test_ufunc.py:1612:        assert_raises(ValueError, np.minimum.reduce, [], initial=None)
numpy/core/tests/test_ufunc.py:1613:        assert_raises(ValueError, np.add.reduce, [], initial=None)
numpy/core/tests/test_ufunc.py:1616:        assert_equal(np.add.reduce([], initial=np._NoValue), 0)
numpy/core/tests/test_ufunc.py:1621:        assert_equal(res, 15)
numpy/core/tests/test_ufunc.py:1637:        assert_equal(res, check)
numpy/core/tests/test_ufunc.py:1639:        assert_array_equal(a, a_copy)
numpy/core/tests/test_ufunc.py:1654:        assert_equal(res, check)
numpy/core/tests/test_ufunc.py:1659:        assert_raises(ValueError, np.maximum.reduce, a, where=m)
numpy/core/tests/test_ufunc.py:1665:        assert_equal(res, [8.0, 4.0, 8.0])
numpy/core/tests/test_ufunc.py:1668:        assert_equal(res, [2.0, 8.0])
numpy/core/tests/test_ufunc.py:1671:        assert_equal(res, a)
numpy/core/tests/test_ufunc.py:1673:        assert_raises(ValueError, np.divide.reduce, a, axis=(0, 1))
numpy/core/tests/test_ufunc.py:1693:            assert_raises(ValueError, f, *args, **kwargs)
numpy/core/tests/test_ufunc.py:1714:        assert_equal(np.maximum.identity, None)
numpy/core/tests/test_ufunc.py:1747:        assert_array_equal(assert_no_warnings(np.add, a, 1.1),
numpy/core/tests/test_ufunc.py:1749:        assert_raises(TypeError, np.add, a, 1.1, out=a)
numpy/core/tests/test_ufunc.py:1754:        assert_raises(TypeError, add_inplace, a, 1.1)
numpy/core/tests/test_ufunc.py:1756:        assert_no_warnings(np.add, a, 1.1, out=a, casting="unsafe")
numpy/core/tests/test_ufunc.py:1757:        assert_array_equal(a, [2, 3, 4])
numpy/core/tests/test_ufunc.py:1770:        assert_equal(result, target)
numpy/core/tests/test_ufunc.py:1775:        assert_equal(result, target)
numpy/core/tests/test_ufunc.py:1780:        assert_equal(result, target)
numpy/core/tests/test_ufunc.py:1796:        assert_equal(a, 3)
numpy/core/tests/test_ufunc.py:1798:        assert_equal(a, 10)
numpy/core/tests/test_ufunc.py:1807:        assert_equal(result, np.array([(2, 4, 6)], dtype='u8,u8,u8'))
numpy/core/tests/test_ufunc.py:1808:        assert_raises(RuntimeError, struct_ufunc.register_fail)
numpy/core/tests/test_ufunc.py:1828:        assert_equal(result, expected)
numpy/core/tests/test_ufunc.py:1864:        assert_(MyThing.rmul_count == 1, MyThing.rmul_count)
numpy/core/tests/test_ufunc.py:1865:        assert_(MyThing.getitem_count <= 2, MyThing.getitem_count)
numpy/core/tests/test_ufunc.py:1871:        assert_equal(a, [0, 1, 4, 3, 4, 6, 6, 7, 8, 9])
numpy/core/tests/test_ufunc.py:1876:        assert_equal(a, [0, 1, 202, 3, 4, 105, 6, 7, 8, 9])
numpy/core/tests/test_ufunc.py:1881:        assert_equal(a, [[0, 201, 102], [3, 404, 205], [6, 607, 308]])
numpy/core/tests/test_ufunc.py:1902:        assert_equal(a, [[0, 1, 2], [403, 404, 405], [206, 207, 208]])
numpy/core/tests/test_ufunc.py:1923:        assert_equal(a, [[0, 401, 202], [3, 4, 5], [6, 7, 8]])
numpy/core/tests/test_ufunc.py:1959:        assert_equal(a, [0, 1, 2, 3, 4, -5, 6, 7, 8, 9])
numpy/core/tests/test_ufunc.py:1964:        assert_equal(a, 1)
numpy/core/tests/test_ufunc.py:1966:        assert_raises(IndexError, np.add.at, a, 0, 1)
numpy/core/tests/test_ufunc.py:1967:        assert_raises(IndexError, np.add.at, a, [], 1)
numpy/core/tests/test_ufunc.py:1972:        assert_equal(a, np.array([0, 1, 4414, 46, 4, 5, 6, 7, 8, 9]))
numpy/core/tests/test_ufunc.py:1978:        assert_equal(a, [1, 1, 1, 3, 1, 5, 1, 7, 1, 9])
numpy/core/tests/test_ufunc.py:1983:        assert_equal(a, [0, 1, 2, 3, 4, 5 ^ 0xffffffff, 6, 7, 8, 9])
numpy/core/tests/test_ufunc.py:1989:        assert_array_equal(orig, np.arange(4))
numpy/core/tests/test_ufunc.py:1995:        assert_array_equal(values, [1, 8, 6, 4])
numpy/core/tests/test_ufunc.py:1999:        assert_raises(TypeError, np.add.at, values, [0, 1], 1)
numpy/core/tests/test_ufunc.py:2000:        assert_array_equal(values, np.array(['a', 1], dtype=object))
numpy/core/tests/test_ufunc.py:2003:        assert_raises(ValueError, np.modf.at, np.arange(10), [1])
numpy/core/tests/test_ufunc.py:2010:        assert_equal(f(d), r)
numpy/core/tests/test_ufunc.py:2012:        assert_equal(f(d, axis=0), r)
numpy/core/tests/test_ufunc.py:2013:        assert_equal(f(d, 0), r)
numpy/core/tests/test_ufunc.py:2014:        assert_equal(f(d, 0, dtype=None), r)
numpy/core/tests/test_ufunc.py:2015:        assert_equal(f(d, 0, dtype='i'), r)
numpy/core/tests/test_ufunc.py:2016:        assert_equal(f(d, 0, 'i'), r)
numpy/core/tests/test_ufunc.py:2017:        assert_equal(f(d, 0, None), r)
numpy/core/tests/test_ufunc.py:2018:        assert_equal(f(d, 0, None, out=None), r)
numpy/core/tests/test_ufunc.py:2019:        assert_equal(f(d, 0, None, out=o), r)
numpy/core/tests/test_ufunc.py:2020:        assert_equal(f(d, 0, None, o), r)
numpy/core/tests/test_ufunc.py:2021:        assert_equal(f(d, 0, None, None), r)
numpy/core/tests/test_ufunc.py:2022:        assert_equal(f(d, 0, None, None, keepdims=False), r)
numpy/core/tests/test_ufunc.py:2023:        assert_equal(f(d, 0, None, None, True), r.reshape((1,) + r.shape))
numpy/core/tests/test_ufunc.py:2024:        assert_equal(f(d, 0, None, None, False, 0), r)
numpy/core/tests/test_ufunc.py:2025:        assert_equal(f(d, 0, None, None, False, initial=0), r)
numpy/core/tests/test_ufunc.py:2026:        assert_equal(f(d, 0, None, None, False, 0, True), r)
numpy/core/tests/test_ufunc.py:2027:        assert_equal(f(d, 0, None, None, False, 0, where=True), r)
numpy/core/tests/test_ufunc.py:2029:        assert_equal(f(d, axis=0, dtype=None, out=None, keepdims=False), r)
numpy/core/tests/test_ufunc.py:2030:        assert_equal(f(d, 0, dtype=None, out=None, keepdims=False), r)
numpy/core/tests/test_ufunc.py:2031:        assert_equal(f(d, 0, None, out=None, keepdims=False), r)
numpy/core/tests/test_ufunc.py:2036:        assert_raises(TypeError, f)
numpy/core/tests/test_ufunc.py:2038:        assert_raises(TypeError, f, d, 0, None, None, False, 0, True, 1)
numpy/core/tests/test_ufunc.py:2040:        assert_raises(TypeError, f, d, "invalid")
numpy/core/tests/test_ufunc.py:2041:        assert_raises(TypeError, f, d, axis="invalid")
numpy/core/tests/test_ufunc.py:2045:        assert_raises(TypeError, f, d, 0, "invalid")
numpy/core/tests/test_ufunc.py:2046:        assert_raises(TypeError, f, d, dtype="invalid")
numpy/core/tests/test_ufunc.py:2047:        assert_raises(TypeError, f, d, dtype="invalid", out=None)
numpy/core/tests/test_ufunc.py:2049:        assert_raises(TypeError, f, d, 0, None, "invalid")
numpy/core/tests/test_ufunc.py:2050:        assert_raises(TypeError, f, d, out="invalid")
numpy/core/tests/test_ufunc.py:2051:        assert_raises(TypeError, f, d, out="invalid", dtype=None)
numpy/core/tests/test_ufunc.py:2060:        assert_raises(TypeError, f, d, axis=0, dtype=None, invalid=0)
numpy/core/tests/test_ufunc.py:2061:        assert_raises(TypeError, f, d, invalid=0)
numpy/core/tests/test_ufunc.py:2081:        assert_equal(np.all(target == (mra == ra[0])), True)
numpy/core/tests/test_ufunc.py:2088:        assert_(a != b)
numpy/core/tests/test_ufunc.py:2089:        assert_(b != a)
numpy/core/tests/test_ufunc.py:2090:        assert_(not (a == b))
numpy/core/tests/test_ufunc.py:2091:        assert_(not (b == a))
numpy/core/tests/test_ufunc.py:2109:            assert_raises(TypeError, f, a, b)
numpy/core/tests/test_ufunc.py:2110:            assert_raises(TypeError, f, c, a)
numpy/core/tests/test_ufunc.py:2120:        assert res.dtype == object
numpy/core/tests/test_ufunc.py:2139:        assert_array_equal(ufunc(a, c), ufunc([True, True], True))
numpy/core/tests/test_ufunc.py:2140:        assert ufunc.reduce(a) == True
numpy/core/tests/test_ufunc.py:2144:        assert_array_equal(ufunc(a, c, out=out), expected)
numpy/core/tests/test_ufunc.py:2146:        assert ufunc.reduce(a, out=out) == True
numpy/core/tests/test_ufunc.py:2151:        assert ufunc.reduce(a, out=out) == 1
numpy/core/tests/test_ufunc.py:2186:        assert np.add.reduce(arr_be) == np.add.reduce(arr_le)
numpy/core/tests/test_ufunc.py:2187:        assert_array_equal(np.add.accumulate(arr_be), np.add.accumulate(arr_le))
numpy/core/tests/test_ufunc.py:2188:        assert_array_equal(
numpy/core/tests/test_ufunc.py:2198:        assert np.add.reduce(arr, out=out) == 1000
numpy/core/tests/test_ufunc.py:2200:        assert np.multiply.reduce(arr, out=out) == 2**10
numpy/core/tests/test_ufunc.py:2212:        assert single_res != res
numpy/core/tests/test_ufunc.py:2222:        assert_array_equal(expected, out)
numpy/core/tests/test_ufunc.py:2227:        assert_array_equal(expected, out)
numpy/core/tests/test_ufunc.py:2232:        assert_array_equal(expected, out)
numpy/core/tests/test_ufunc.py:2251:        assert_equal(r0, r1)
numpy/core/tests/test_ufunc.py:2252:        assert_equal(y_base[1,:], y_base_copy[1,:])
numpy/core/tests/test_ufunc.py:2253:        assert_equal(y_base[3,:], y_base_copy[3,:])
numpy/core/tests/test_ufunc.py:2287:            assert_(check is out)
numpy/core/tests/test_ufunc.py:2288:            assert_array_equal(check, correct_out)
numpy/core/tests/test_ufunc.py:2310:        assert np.add.reduce(np.ones(5), out=out) is out
numpy/core/tests/test_ufunc.py:2311:        assert type(np.add.reduce(out)) is MyArr
numpy/core/tests/test_ufunc.py:2315:        assert_('\n' not in umt.inner1d_no_doc.__doc__)
numpy/core/tests/test_ufunc.py:2321:        assert exc.match('loop of ufunc does not support')
numpy/core/tests/test_ufunc.py:2326:            assert not np.isfinite(nat)
numpy/core/tests/test_ufunc.py:2333:            assert np.isnan(nat)
numpy/core/tests/test_ufunc.py:2340:            assert not np.isinf(nat)
numpy/core/tests/test_ufunc.py:2366:            assert len(res) == len(outs)
numpy/core/tests/test_ufunc.py:2368:                assert r.dtype == np.dtype(t)
numpy/core/tests/test_ufunc.py:2370:            assert res.dtype == np.dtype(out)
numpy/core/tests/test_ufunc.py:2406:                assert_allclose(res_c, res_n, atol=tol, rtol=tol)
numpy/core/tests/test_ufunc.py:2408:                assert_equal(c_ar, n_ar)
numpy/core/tests/test_ufunc.py:2419:    assert np.isnan(b)
numpy/core/tests/test_ufunc.py:2445:    assert count == sys.getrefcount(value)
numpy/core/tests/test_ufunc.py:2448:    assert out[-1] == 1
numpy/core/tests/test_ufunc.py:2454:    assert count == sys.getrefcount(value)
numpy/core/tests/test_ufunc.py:2457:    assert out[-1] == 1
numpy/core/tests/test_ufunc.py:2487:    assert count == sys.getrefcount(value)
numpy/core/tests/test_ufunc.py:2492:    assert out[()] < value * offset
numpy/core/tests/test_ufunc.py:2532:    assert _check_neg_zero(arr + arr2)
numpy/core/tests/test_ufunc.py:2535:    assert _check_neg_zero(arr)
numpy/core/tests/test_ufunc.py:2559:            assert _check_neg_zero(res)
numpy/core/tests/test_ufunc.py:2562:            assert not np.signbit(res.real)
numpy/core/tests/test_ufunc.py:2563:            assert not np.signbit(res.imag)
numpy/core/tests/test_dtype.py:25:    assert_equal(a, b)
numpy/core/tests/test_dtype.py:26:    assert_equal(hash(a), hash(b),
numpy/core/tests/test_dtype.py:30:    assert_(a != b)
numpy/core/tests/test_dtype.py:31:    assert_(hash(a) != hash(b),
numpy/core/tests/test_dtype.py:50:            assert_(dt.byteorder != dt2.byteorder, "bogus test")
numpy/core/tests/test_dtype.py:51:            assert_dtype_equal(dt, dt2)
numpy/core/tests/test_dtype.py:53:            assert_(dt.byteorder != dt3.byteorder, "bogus test")
numpy/core/tests/test_dtype.py:54:            assert_dtype_equal(dt, dt3)
numpy/core/tests/test_dtype.py:65:        assert_(left == right)
numpy/core/tests/test_dtype.py:66:        assert_(hash(left) == hash(right))
numpy/core/tests/test_dtype.py:71:        assert_raises(TypeError, np.dtype, 'O3')
numpy/core/tests/test_dtype.py:72:        assert_raises(TypeError, np.dtype, 'O5')
numpy/core/tests/test_dtype.py:73:        assert_raises(TypeError, np.dtype, 'O7')
numpy/core/tests/test_dtype.py:74:        assert_raises(TypeError, np.dtype, 'b3')
numpy/core/tests/test_dtype.py:75:        assert_raises(TypeError, np.dtype, 'h4')
numpy/core/tests/test_dtype.py:76:        assert_raises(TypeError, np.dtype, 'I5')
numpy/core/tests/test_dtype.py:77:        assert_raises(TypeError, np.dtype, 'e3')
numpy/core/tests/test_dtype.py:78:        assert_raises(TypeError, np.dtype, 'f5')
numpy/core/tests/test_dtype.py:81:            assert_raises(TypeError, np.dtype, 'g12')
numpy/core/tests/test_dtype.py:83:            assert_raises(TypeError, np.dtype, 'g16')
numpy/core/tests/test_dtype.py:86:            assert_raises(TypeError, np.dtype, 'l4')
numpy/core/tests/test_dtype.py:87:            assert_raises(TypeError, np.dtype, 'L4')
numpy/core/tests/test_dtype.py:89:            assert_raises(TypeError, np.dtype, 'l8')
numpy/core/tests/test_dtype.py:90:            assert_raises(TypeError, np.dtype, 'L8')
numpy/core/tests/test_dtype.py:93:            assert_raises(TypeError, np.dtype, 'q4')
numpy/core/tests/test_dtype.py:94:            assert_raises(TypeError, np.dtype, 'Q4')
numpy/core/tests/test_dtype.py:96:            assert_raises(TypeError, np.dtype, 'q8')
numpy/core/tests/test_dtype.py:97:            assert_raises(TypeError, np.dtype, 'Q8')
numpy/core/tests/test_dtype.py:104:        assert not np.dtype(np.int32) == 7, "dtype richcompare failed for =="
numpy/core/tests/test_dtype.py:105:        assert np.dtype(np.int32) != 7, "dtype richcompare failed for !="
numpy/core/tests/test_dtype.py:139:        assert_dtype_equal(from_bytes, from_str)
numpy/core/tests/test_dtype.py:143:        assert_raises(TypeError, np.dtype, b'')
numpy/core/tests/test_dtype.py:145:        assert_raises(TypeError, np.dtype, b'|')
numpy/core/tests/test_dtype.py:149:        assert_dtype_equal(np.dtype(bytes([0])), np.dtype('bool'))
numpy/core/tests/test_dtype.py:150:        assert_dtype_equal(np.dtype(bytes([17])), np.dtype(object))
numpy/core/tests/test_dtype.py:153:        assert_dtype_equal(np.dtype(b'f'), np.dtype('float32'))
numpy/core/tests/test_dtype.py:156:        assert_raises(TypeError, np.dtype, b'\xff')
numpy/core/tests/test_dtype.py:157:        assert_raises(TypeError, np.dtype, b's\xff')
numpy/core/tests/test_dtype.py:185:        assert_equal(x == y, False)
numpy/core/tests/test_dtype.py:187:        assert np.can_cast(x, y, casting="equiv")
numpy/core/tests/test_dtype.py:195:        assert_dtype_equal(a, b)
numpy/core/tests/test_dtype.py:201:        assert_dtype_not_equal(a, b)
numpy/core/tests/test_dtype.py:211:        assert_dtype_not_equal(a, b)
numpy/core/tests/test_dtype.py:223:        assert refcounts == refcounts_new
numpy/core/tests/test_dtype.py:230:        assert_dtype_equal(a, b)
numpy/core/tests/test_dtype.py:231:        assert_dtype_not_equal(a, c)
numpy/core/tests/test_dtype.py:233:        assert_dtype_equal(a, c)
numpy/core/tests/test_dtype.py:234:        assert_dtype_not_equal(a, b)
numpy/core/tests/test_dtype.py:237:        assert_dtype_equal(a, b)
numpy/core/tests/test_dtype.py:238:        assert_dtype_not_equal(a, c)
numpy/core/tests/test_dtype.py:252:        assert_equal(dt.itemsize, 8)
numpy/core/tests/test_dtype.py:254:        assert_equal(dt.itemsize, 8)
numpy/core/tests/test_dtype.py:258:        assert_equal(dt.itemsize, 8)
numpy/core/tests/test_dtype.py:260:        assert_equal(dt.itemsize, 8)
numpy/core/tests/test_dtype.py:265:        assert_equal(dt1.itemsize, 20)
numpy/core/tests/test_dtype.py:271:        assert_equal(dt2.itemsize, 20)
numpy/core/tests/test_dtype.py:275:        assert_equal(dt3.itemsize, 20)
numpy/core/tests/test_dtype.py:276:        assert_equal(dt1, dt2)
numpy/core/tests/test_dtype.py:277:        assert_equal(dt2, dt3)
numpy/core/tests/test_dtype.py:282:        assert_equal(dt1.itemsize, 11)
numpy/core/tests/test_dtype.py:288:        assert_equal(dt2.itemsize, 11)
numpy/core/tests/test_dtype.py:292:        assert_equal(dt3.itemsize, 11)
numpy/core/tests/test_dtype.py:293:        assert_equal(dt1, dt2)
numpy/core/tests/test_dtype.py:294:        assert_equal(dt2, dt3)
numpy/core/tests/test_dtype.py:299:        assert_equal(dt1.descr, [('a', '|i1'), ('', '|V3'),
numpy/core/tests/test_dtype.py:307:        assert_equal(dt.itemsize, 4)
numpy/core/tests/test_dtype.py:311:        assert_equal(a['f0'], 10 + 36*256*256)
numpy/core/tests/test_dtype.py:315:        assert_equal(dt.itemsize, 8)
numpy/core/tests/test_dtype.py:324:        assert_equal(a.astype(dt2), b)
numpy/core/tests/test_dtype.py:325:        assert_equal(b.astype(dt), a)
numpy/core/tests/test_dtype.py:326:        assert_equal(a.view(dt2), b)
numpy/core/tests/test_dtype.py:327:        assert_equal(b.view(dt), a)
numpy/core/tests/test_dtype.py:366:        assert_array_equal(res, expected)
numpy/core/tests/test_dtype.py:370:        assert_equal(dt, np.dtype([('f0', 'M8[D]'),
numpy/core/tests/test_dtype.py:377:        assert_dtype_equal(dt, np.dtype(dt.fields))
numpy/core/tests/test_dtype.py:379:        assert_equal(dt2.fields, dt.fields)
numpy/core/tests/test_dtype.py:387:        assert_dtype_equal(dt, dt2)
numpy/core/tests/test_dtype.py:388:        assert_equal(dt.fields['val1'][0].itemsize, 0)
numpy/core/tests/test_dtype.py:389:        assert_equal(dt.itemsize, dt.fields['val2'][0].itemsize)
numpy/core/tests/test_dtype.py:393:        assert_equal(len(d.names), 3)
numpy/core/tests/test_dtype.py:395:            assert_equal(d.fields[n][0], np.dtype('?'))
numpy/core/tests/test_dtype.py:403:        assert_raises(TypeError, make_dtype, 'ASD')
numpy/core/tests/test_dtype.py:404:        assert_raises(OverflowError, make_dtype, 2**70)
numpy/core/tests/test_dtype.py:405:        assert_raises(TypeError, make_dtype, 2.3)
numpy/core/tests/test_dtype.py:406:        assert_raises(ValueError, make_dtype, -10)
numpy/core/tests/test_dtype.py:414:        assert_dtype_equal(dt[0], np.dtype(np.int8))
numpy/core/tests/test_dtype.py:415:        assert_dtype_equal(dt[1], np.dtype((np.float32, 3)))
numpy/core/tests/test_dtype.py:416:        assert_dtype_equal(dt[-1], dt[1])
numpy/core/tests/test_dtype.py:417:        assert_dtype_equal(dt[-2], dt[0])
numpy/core/tests/test_dtype.py:418:        assert_raises(IndexError, lambda: dt[-3])
numpy/core/tests/test_dtype.py:420:        assert_raises(TypeError, operator.getitem, dt, 3.0)
numpy/core/tests/test_dtype.py:422:        assert_equal(dt[1], dt[np.int8(1)])
numpy/core/tests/test_dtype.py:443:        assert_equal(dt_sub.isalignedstruct, align_flag)
numpy/core/tests/test_dtype.py:455:        assert_equal(dt_sub.isalignedstruct, align_flag)
numpy/core/tests/test_dtype.py:467:        assert_equal(dt_sub.isalignedstruct, align_flag)
numpy/core/tests/test_dtype.py:469:        assert_raises(TypeError, operator.getitem, dt, ())
numpy/core/tests/test_dtype.py:470:        assert_raises(TypeError, operator.getitem, dt, [1, 2, 3])
numpy/core/tests/test_dtype.py:471:        assert_raises(TypeError, operator.getitem, dt, ['col1', 2])
numpy/core/tests/test_dtype.py:472:        assert_raises(KeyError, operator.getitem, dt, ['fake'])
numpy/core/tests/test_dtype.py:473:        assert_raises(KeyError, operator.getitem, dt, ['title'])
numpy/core/tests/test_dtype.py:474:        assert_raises(ValueError, operator.getitem, dt, ['col1', 'col1'])
numpy/core/tests/test_dtype.py:484:        assert_raises(ValueError, a.view, np.dtype([]))
numpy/core/tests/test_dtype.py:487:        assert_equal(d.shape, (10,))
numpy/core/tests/test_dtype.py:488:        assert_equal(d.itemsize, 0)
numpy/core/tests/test_dtype.py:489:        assert_equal(d.base, np.dtype([]))
numpy/core/tests/test_dtype.py:492:        assert_equal(arr.dtype, np.dtype([]))
numpy/core/tests/test_dtype.py:493:        assert_raises(ValueError, np.frombuffer, b'', dtype=[])
numpy/core/tests/test_dtype.py:494:        assert_equal(np.frombuffer(b'', dtype=[], count=2),
numpy/core/tests/test_dtype.py:497:        assert_raises(ValueError, np.dtype, ([], 'f8'))
numpy/core/tests/test_dtype.py:498:        assert_raises(ValueError, np.zeros(1, dtype='i4').view, [])
numpy/core/tests/test_dtype.py:500:        assert_equal(np.zeros(2, dtype=[]) == np.zeros(2, dtype=[]),
numpy/core/tests/test_dtype.py:503:        assert_equal(np.zeros((1, 2), dtype=[]) == a,
numpy/core/tests/test_dtype.py:511:        assert_dtype_equal(a, b)
numpy/core/tests/test_dtype.py:513:        assert_equal(type(a.subdtype[1]), tuple)
numpy/core/tests/test_dtype.py:514:        assert_equal(type(b.subdtype[1]), tuple)
numpy/core/tests/test_dtype.py:520:        assert_dtype_equal(a, b)
numpy/core/tests/test_dtype.py:526:        assert_dtype_not_equal(a, b)
numpy/core/tests/test_dtype.py:530:        assert_dtype_not_equal(a, b)
numpy/core/tests/test_dtype.py:534:        assert_dtype_not_equal(a, b)
numpy/core/tests/test_dtype.py:538:        assert_dtype_equal(np.dtype('f8'), np.dtype(('f8', tuple())))
numpy/core/tests/test_dtype.py:542:            assert_dtype_equal(np.dtype('f8'), np.dtype(('f8', 1)))
numpy/core/tests/test_dtype.py:543:        assert_dtype_equal(np.dtype((int, 2)), np.dtype((int, (2,))))
numpy/core/tests/test_dtype.py:544:        assert_dtype_equal(np.dtype(('<f4', (3, 2))), np.dtype(('<f4', (3, 2))))
numpy/core/tests/test_dtype.py:546:        assert_dtype_equal(np.dtype(d), np.dtype(d))
numpy/core/tests/test_dtype.py:550:        assert_dtype_not_equal(np.dtype('f8'), np.dtype(('f8', (1,))))
numpy/core/tests/test_dtype.py:551:        assert_dtype_not_equal(np.dtype(('f8', (1,))), np.dtype(('f8', (1, 1))))
numpy/core/tests/test_dtype.py:552:        assert_dtype_not_equal(np.dtype(('f4', (3, 2))), np.dtype(('f4', (2, 3))))
numpy/core/tests/test_dtype.py:556:        assert_dtype_not_equal(
numpy/core/tests/test_dtype.py:559:        assert_dtype_not_equal(
numpy/core/tests/test_dtype.py:562:        assert_dtype_not_equal(
numpy/core/tests/test_dtype.py:565:        assert_dtype_not_equal(
numpy/core/tests/test_dtype.py:576:        assert_(isinstance(dt['a'].shape, tuple))
numpy/core/tests/test_dtype.py:577:        assert_(isinstance(dt['a'].shape[0], int))
numpy/core/tests/test_dtype.py:580:        assert_(isinstance(dt['a'].shape, tuple))
numpy/core/tests/test_dtype.py:592:        assert_(isinstance(dt['a'].shape, tuple))
numpy/core/tests/test_dtype.py:593:        assert_(isinstance(dt['a'].shape[0], int))
numpy/core/tests/test_dtype.py:595:        assert_(isinstance(dt['a'].shape, tuple))
numpy/core/tests/test_dtype.py:596:        assert_(isinstance(dt['a'].shape[0], int))
numpy/core/tests/test_dtype.py:600:        assert_equal(dt['a'].shape, ())
numpy/core/tests/test_dtype.py:601:        assert_equal(dt['a'].ndim, 0)
numpy/core/tests/test_dtype.py:604:        assert_equal(dt['a'].shape, ())
numpy/core/tests/test_dtype.py:605:        assert_equal(dt['a'].ndim, 0)
numpy/core/tests/test_dtype.py:608:        assert_equal(dt['a'].shape, (4,))
numpy/core/tests/test_dtype.py:609:        assert_equal(dt['a'].ndim, 1)
numpy/core/tests/test_dtype.py:612:        assert_equal(dt['a'].shape, (1, 2, 3))
numpy/core/tests/test_dtype.py:613:        assert_equal(dt['a'].ndim, 3)
numpy/core/tests/test_dtype.py:620:        assert_raises(ValueError, np.dtype, [('a', 'f4', max_int // 4 + 1)])
numpy/core/tests/test_dtype.py:621:        assert_raises(ValueError, np.dtype, [('a', 'f4', max_int + 1)])
numpy/core/tests/test_dtype.py:622:        assert_raises(ValueError, np.dtype, [('a', 'f4', (max_int, 2))])
numpy/core/tests/test_dtype.py:624:        assert_raises(ValueError, np.dtype, [('a', 'f4', max_intp + 1)])
numpy/core/tests/test_dtype.py:626:        assert_raises(ValueError, np.dtype, [('a', 'f4', -1)])
numpy/core/tests/test_dtype.py:627:        assert_raises(ValueError, np.dtype, [('a', 'f4', (-1, -1))])
numpy/core/tests/test_dtype.py:633:        assert_equal(t1.alignment, t2.alignment)
numpy/core/tests/test_dtype.py:638:        assert dt == np.dtype([])
numpy/core/tests/test_dtype.py:640:        assert dt == np.dtype([])
numpy/core/tests/test_dtype.py:701:        assert now - before == count * 3
numpy/core/tests/test_dtype.py:704:        assert now == before
numpy/core/tests/test_dtype.py:715:        assert sys.getrefcount(singleton) - before == count * 3
numpy/core/tests/test_dtype.py:720:        assert after2 - before2 == count * 3
numpy/core/tests/test_dtype.py:723:        assert sys.getrefcount(one) == before2
numpy/core/tests/test_dtype.py:724:        assert sys.getrefcount(singleton) == before
numpy/core/tests/test_dtype.py:752:        assert after_val0 - before_val0 == count * items_changed
numpy/core/tests/test_dtype.py:759:        assert before_val0 - after_val0 == count * items_changed
numpy/core/tests/test_dtype.py:760:        assert after_val1 - before_val1 == count * items_changed
numpy/core/tests/test_dtype.py:776:        assert after - before == count * 2
numpy/core/tests/test_dtype.py:780:        assert after_repeat - after == count * 2 * 10
numpy/core/tests/test_dtype.py:799:        assert_array_equal(arr["a"]["aa"], np.zeros((3, 2, 3)))
numpy/core/tests/test_dtype.py:808:        assert_array_equal(arr["a"]["aa"], np.zeros((3, 2, 3)))
numpy/core/tests/test_dtype.py:821:        assert_dtype_equal(a, b)
numpy/core/tests/test_dtype.py:827:        assert_dtype_equal(c, d)
numpy/core/tests/test_dtype.py:855:        assert_(d.metadata is None)
numpy/core/tests/test_dtype.py:859:        assert_(d.metadata == {'datum': 1})
numpy/core/tests/test_dtype.py:862:        assert_raises(TypeError, np.dtype, int, metadata='datum')
numpy/core/tests/test_dtype.py:863:        assert_raises(TypeError, np.dtype, int, metadata=1)
numpy/core/tests/test_dtype.py:864:        assert_raises(TypeError, np.dtype, int, metadata=None)
numpy/core/tests/test_dtype.py:868:        assert_(d['a'].metadata == {'datum': 1})
numpy/core/tests/test_dtype.py:872:        assert_(d.metadata == {'datum': 1})
numpy/core/tests/test_dtype.py:880:        assert_equal(str(dt),
numpy/core/tests/test_dtype.py:894:        assert_equal(str(dt),
numpy/core/tests/test_dtype.py:904:            assert_equal(str(dt),
numpy/core/tests/test_dtype.py:913:        assert_equal(np.dtype(eval(str(dt))), dt)
numpy/core/tests/test_dtype.py:918:        assert_equal(str(dt),
numpy/core/tests/test_dtype.py:928:        assert_equal(str(dt),
numpy/core/tests/test_dtype.py:939:        assert_equal(str(dt),
numpy/core/tests/test_dtype.py:947:        assert_equal(str(dt),
numpy/core/tests/test_dtype.py:955:        assert_equal(repr(dt),
numpy/core/tests/test_dtype.py:965:        assert_equal(repr(dt),
numpy/core/tests/test_dtype.py:976:        assert_equal(repr(dt),
numpy/core/tests/test_dtype.py:988:        assert_equal(repr(dt),
numpy/core/tests/test_dtype.py:997:        assert_equal(repr(dt),
numpy/core/tests/test_dtype.py:1002:        assert_equal(repr(dt), "dtype(('<i2', (1,)))")
numpy/core/tests/test_dtype.py:1003:        assert_equal(str(dt), "('<i2', (1,))")
numpy/core/tests/test_dtype.py:1015:        assert_equal(repr(dt), "dtype('V')")
numpy/core/tests/test_dtype.py:1016:        assert_equal(str(dt), '|V0')
numpy/core/tests/test_dtype.py:1017:        assert_equal(dt.name, 'record')
numpy/core/tests/test_dtype.py:1021:        assert_equal(repr(dt), "dtype('V2')")
numpy/core/tests/test_dtype.py:1022:        assert_equal(str(dt), '|V2')
numpy/core/tests/test_dtype.py:1023:        assert_equal(dt.name, 'record16')
numpy/core/tests/test_dtype.py:1027:        assert_equal(repr(dt), "dtype((numpy.record, [('a', '<u2')]))")
numpy/core/tests/test_dtype.py:1028:        assert_equal(str(dt), "(numpy.record, [('a', '<u2')])")
numpy/core/tests/test_dtype.py:1029:        assert_equal(dt.name, 'record16')
numpy/core/tests/test_dtype.py:1041:            assert_raises(AttributeError, delattr, dt, s)
numpy/core/tests/test_dtype.py:1047:            assert_raises(AttributeError, delattr, dt, s)
numpy/core/tests/test_dtype.py:1059:        assert_equal(new_dtype.itemsize, 16)
numpy/core/tests/test_dtype.py:1065:        assert_equal(np.dtype(user_def_subcls).name, 'user_def_subcls')
numpy/core/tests/test_dtype.py:1077:        assert type(dtype) is type(canonical)
numpy/core/tests/test_dtype.py:1080:        assert np.can_cast(dtype, canonical, casting="equiv")
numpy/core/tests/test_dtype.py:1081:        assert np.can_cast(canonical, dtype, casting="equiv")
numpy/core/tests/test_dtype.py:1083:        assert canonical.isnative
numpy/core/tests/test_dtype.py:1086:        assert np.result_type(canonical) == canonical
numpy/core/tests/test_dtype.py:1090:            assert dtype.flags == canonical.flags
numpy/core/tests/test_dtype.py:1094:        assert dtype.flags & 0b10000
numpy/core/tests/test_dtype.py:1097:        assert dtype.fields.keys() == canonical.fields.keys()
numpy/core/tests/test_dtype.py:1112:            assert (canonical.flags & expected) == expected
numpy/core/tests/test_dtype.py:1118:            assert canonical.fields[name][1] == totalsize
numpy/core/tests/test_dtype.py:1120:            assert dtype.fields[name][2:] == canonical.fields[name][2:]
numpy/core/tests/test_dtype.py:1126:        assert canonical.itemsize == totalsize
numpy/core/tests/test_dtype.py:1127:        assert canonical.alignment == max_alignment
numpy/core/tests/test_dtype.py:1131:        assert np.result_type(dt).isnative
numpy/core/tests/test_dtype.py:1132:        assert np.result_type(dt).num == dt.num
numpy/core/tests/test_dtype.py:1137:        assert canonical.itemsize == 4+8
numpy/core/tests/test_dtype.py:1138:        assert canonical.isnative
numpy/core/tests/test_dtype.py:1143:        assert canonical.isalignedstruct
numpy/core/tests/test_dtype.py:1144:        assert canonical.itemsize == np.dtype("i8").alignment + 8
numpy/core/tests/test_dtype.py:1145:        assert canonical.isnative
numpy/core/tests/test_dtype.py:1151:        assert arr.dtype.hasobject
numpy/core/tests/test_dtype.py:1171:        assert dtype_with_empty_space.itemsize == dtype.itemsize
numpy/core/tests/test_dtype.py:1179:        assert dtype_with_empty_space.itemsize == dtype_aligned.itemsize
numpy/core/tests/test_dtype.py:1194:            assert_equal(pickled, dtype)
numpy/core/tests/test_dtype.py:1195:            assert_equal(pickled.descr, dtype.descr)
numpy/core/tests/test_dtype.py:1197:                assert_equal(pickled.metadata, dtype.metadata)
numpy/core/tests/test_dtype.py:1201:            assert_equal(x, y)
numpy/core/tests/test_dtype.py:1202:            assert_equal(x[0], y[0])
numpy/core/tests/test_dtype.py:1256:            assert roundtrip_DType is DType
numpy/core/tests/test_dtype.py:1286:        assert res == expected
numpy/core/tests/test_dtype.py:1289:        assert res == expected
numpy/core/tests/test_dtype.py:1307:        assert res == expected
numpy/core/tests/test_dtype.py:1310:        assert res == expected
numpy/core/tests/test_dtype.py:1331:        assert np.result_type(other, rational(1, 2)) == expected
numpy/core/tests/test_dtype.py:1353:            assert np.result_type(*perm) == expected
numpy/core/tests/test_dtype.py:1359:    assert_raises(OverflowError, a, 'int8')
numpy/core/tests/test_dtype.py:1363:    assert_equal(np.array([x,x]).dtype, np.dtype(rational))
numpy/core/tests/test_dtype.py:1368:    assert bool(np.dtype('f8'))
numpy/core/tests/test_dtype.py:1369:    assert bool(np.dtype('i8'))
numpy/core/tests/test_dtype.py:1370:    assert bool(np.dtype([('a', 'i8'), ('b', 'f4')]))
numpy/core/tests/test_dtype.py:1375:    assert_raises(TypeError, np.dtype, 'f8,i8,[f8,i8]')
numpy/core/tests/test_dtype.py:1376:    assert_raises(TypeError, np.dtype, u'Fl\xfcgel')
numpy/core/tests/test_dtype.py:1381:    assert np.dtype(dtype=np.float64) == np.dtype(np.float64)
numpy/core/tests/test_dtype.py:1386:    assert np.dtype("ulong") == np.dtype(np.uint)
numpy/core/tests/test_dtype.py:1394:        assert np.dtype(dt) == np.float64
numpy/core/tests/test_dtype.py:1395:        assert np.dtype(dt()) == np.float64
numpy/core/tests/test_dtype.py:1441:        assert isinstance(dtype, np.dtype)
numpy/core/tests/test_dtype.py:1442:        assert type(dtype) is not np.dtype
numpy/core/tests/test_dtype.py:1443:        assert type(dtype).__name__ == f"dtype[{dtype.type.__name__}]"
numpy/core/tests/test_dtype.py:1444:        assert type(dtype).__module__ == "numpy"
numpy/core/tests/test_dtype.py:1445:        assert not type(dtype)._abstract
numpy/core/tests/test_dtype.py:1452:            assert not type(dtype)._parametric
numpy/core/tests/test_dtype.py:1453:            assert type(dtype)() is dtype
numpy/core/tests/test_dtype.py:1455:            assert type(dtype)._parametric
numpy/core/tests/test_dtype.py:1460:        assert type(np.dtype) is not type
numpy/core/tests/test_dtype.py:1461:        assert isinstance(np.dtype, type)
numpy/core/tests/test_dtype.py:1463:        assert type(np.dtype).__name__ == "_DTypeMeta"
numpy/core/tests/test_dtype.py:1464:        assert type(np.dtype).__module__ == "numpy"
numpy/core/tests/test_dtype.py:1465:        assert np.dtype._abstract
numpy/core/tests/test_dtype.py:1473:        assert_equal(np.dtype(ctype), dtype)
numpy/core/tests/test_dtype.py:1474:        assert_equal(np.dtype(ctype()), dtype)
numpy/core/tests/test_dtype.py:1502:        assert_raises(TypeError, np.dtype, BitfieldStruct)
numpy/core/tests/test_dtype.py:1503:        assert_raises(TypeError, np.dtype, BitfieldStruct())
numpy/core/tests/test_dtype.py:1507:        assert_raises(TypeError, np.dtype, p_uint8)
numpy/core/tests/test_dtype.py:1666:        assert_equal(pair_type, expected)
numpy/core/tests/test_dtype.py:1677:        assert dt.type == mytype
numpy/core/tests/test_dtype.py:1681:        assert np.dtype(mytype) == np.dtype("O")
numpy/core/tests/test_dtype.py:1705:        assert isinstance(alias, types.GenericAlias)
numpy/core/tests/test_dtype.py:1706:        assert alias.__origin__ is np.dtype
numpy/core/tests/test_dtype.py:1712:        assert isinstance(alias, types.GenericAlias)
numpy/core/tests/test_dtype.py:1713:        assert alias.__origin__ is cls
numpy/core/tests/test_dtype.py:1719:            assert np.dtype[arg_tup]
numpy/core/tests/test_dtype.py:1725:        assert np.dtype[Any]
numpy/core/tests/test_dtype.py:1733:    assert_dtype_equal(result, td.dtype)
numpy/core/tests/test_umath_accuracy.py:61:                        assert_array_max_ulp(npfunc(inval), outval, maxulperr)
numpy/core/tests/test_simd_module.py:29:        assert len(vector) == nlanes
numpy/core/tests/test_simd_module.py:34:        assert vector.__name__ == "npyv_" + sfx
numpy/core/tests/test_simd_module.py:64:        assert lane == maxu
numpy/core/tests/test_simd_module.py:66:        assert lanes == [maxu] * nlanes
numpy/core/tests/test_simd_module.py:68:        assert lane == maxu
numpy/core/tests/test_simd_module.py:70:        assert lanes == [maxu] * nlanes
numpy/core/tests/test_simd_module.py:77:        assert lane == -1
numpy/core/tests/test_simd_module.py:79:        assert lanes == [-1] * nlanes
numpy/core/tests/test_simd_module.py:82:        assert lane == 0
numpy/core/tests/test_simd_module.py:84:        assert lanes == [0] * nlanes
numpy/core/tests/test_simd_module.py:88:        assert f32 != 0.1
numpy/core/tests/test_simd_module.py:89:        assert round(f32, 1) == 0.1
numpy/core/tests/test_simd_module.py:94:        assert vdata == list(data_range)
numpy/core/tests/test_simd_module.py:95:        assert vdata == tuple(data_range)
numpy/core/tests/test_simd_module.py:97:            assert vdata[i] == data_range[i]
numpy/core/tests/test_getlimits.py:17:        assert_equal(id(ftype), id(ftype2))
numpy/core/tests/test_getlimits.py:23:        assert_equal(id(ftype), id(ftype2))
numpy/core/tests/test_getlimits.py:29:        assert_equal(id(ftype), id(ftype2))
numpy/core/tests/test_getlimits.py:35:        assert_equal(id(ftype), id(ftype2))
numpy/core/tests/test_getlimits.py:41:        assert_equal(id(ftype), id(ftype2))
numpy/core/tests/test_getlimits.py:53:                assert_equal(getattr(finfo(dt1), attr),
numpy/core/tests/test_getlimits.py:55:        assert_raises(ValueError, finfo, 'i4')
numpy/core/tests/test_getlimits.py:65:                assert_equal(getattr(iinfo(dt1), attr),
numpy/core/tests/test_getlimits.py:67:        assert_raises(ValueError, iinfo, 'f4')
numpy/core/tests/test_getlimits.py:72:            assert_equal(iinfo(T).max, T(-1))
numpy/core/tests/test_getlimits.py:77:        assert_equal(repr(np.iinfo(np.int16)), expected)
numpy/core/tests/test_getlimits.py:82:        assert_equal(repr(np.finfo(np.float32)), expected)
numpy/core/tests/test_getlimits.py:93:        assert_equal(value, getattr(ma_like, key))
numpy/core/tests/test_getlimits.py:95:            assert_equal(value.shape, getattr(ma_like, key).shape)
numpy/core/tests/test_getlimits.py:96:            assert_equal(value.dtype, getattr(ma_like, key).dtype)
numpy/core/tests/test_getlimits.py:104:        assert_ma_equal(_discovered_machar(ftype), ma_like)
numpy/core/tests/test_getlimits.py:111:        assert_ma_equal(ld_ma, _float_ma[80])
numpy/core/tests/test_getlimits.py:114:        assert_ma_equal(ld_ma, _float_ma[128])
numpy/core/tests/test_getlimits.py:127:            assert len(w) == 0
numpy/core/tests/test_getlimits.py:131:            assert len(w) == 0
numpy/core/tests/test_getlimits.py:136:            assert len(w) == 0
numpy/core/tests/test_getlimits.py:143:        assert_(info.nmant > 1)
numpy/core/tests/test_getlimits.py:144:        assert_(info.minexp < -1)
numpy/core/tests/test_getlimits.py:145:        assert_(info.maxexp > 1)
numpy/core/tests/test_dlpack.py:13:        assert sys.getrefcount(x) == 3
numpy/core/tests/test_dlpack.py:15:        assert sys.getrefcount(x) == 2
numpy/core/tests/test_dlpack.py:36:        assert sys.getrefcount(x) == 3
numpy/core/tests/test_dlpack.py:38:        assert sys.getrefcount(x) == 2
numpy/core/tests/test_dlpack.py:50:        assert y.dtype == x.dtype
numpy/core/tests/test_dlpack.py:51:        assert_array_equal(x, y)
numpy/core/tests/test_dlpack.py:70:        assert_array_equal(y1, np.from_dlpack(y1))
numpy/core/tests/test_dlpack.py:73:        assert_array_equal(y2, np.from_dlpack(y2))
numpy/core/tests/test_dlpack.py:76:        assert_array_equal(y3, np.from_dlpack(y3))
numpy/core/tests/test_dlpack.py:79:        assert_array_equal(y4, np.from_dlpack(y4))
numpy/core/tests/test_dlpack.py:82:        assert_array_equal(y5, np.from_dlpack(y5))
numpy/core/tests/test_dlpack.py:89:        assert shape == np.from_dlpack(x).shape
numpy/core/tests/test_dlpack.py:93:        assert x.__dlpack_device__() == (1, 0)
numpy/core/tests/test_dlpack.py:95:        assert y.__dlpack_device__() == (1, 0)
numpy/core/tests/test_dlpack.py:97:        assert z.__dlpack_device__() == (1, 0)
numpy/core/tests/test_dlpack.py:117:        assert_array_equal(x, y)
numpy/core/tests/test_dlpack.py:123:        assert_array_equal(x, y)
numpy/core/tests/test_einsum.py:21:            assert_raises(ValueError, np.einsum, optimize=do_opt)
numpy/core/tests/test_einsum.py:22:            assert_raises(ValueError, np.einsum, "", optimize=do_opt)
numpy/core/tests/test_einsum.py:25:            assert_raises(TypeError, np.einsum, 0, 0, optimize=do_opt)
numpy/core/tests/test_einsum.py:48:            assert_raises(TypeError, np.einsum, *(None,)*63, optimize=do_opt)
numpy/core/tests/test_einsum.py:51:            assert_raises(ValueError, np.einsum, "", 0, 0, optimize=do_opt)
numpy/core/tests/test_einsum.py:54:            assert_raises(ValueError, np.einsum, ",", [0], optimize=do_opt)
numpy/core/tests/test_einsum.py:57:            assert_raises(ValueError, np.einsum, "i", 0, optimize=do_opt)
numpy/core/tests/test_einsum.py:58:            assert_raises(ValueError, np.einsum, "ij", [0, 0], optimize=do_opt)
numpy/core/tests/test_einsum.py:59:            assert_raises(ValueError, np.einsum, "...i", 0, optimize=do_opt)
numpy/core/tests/test_einsum.py:60:            assert_raises(ValueError, np.einsum, "i...j", [0, 0], optimize=do_opt)
numpy/core/tests/test_einsum.py:61:            assert_raises(ValueError, np.einsum, "i...", 0, optimize=do_opt)
numpy/core/tests/test_einsum.py:62:            assert_raises(ValueError, np.einsum, "ij...", [0, 0], optimize=do_opt)
numpy/core/tests/test_einsum.py:65:            assert_raises(ValueError, np.einsum, "i..", [0, 0], optimize=do_opt)
numpy/core/tests/test_einsum.py:66:            assert_raises(ValueError, np.einsum, ".i...", [0, 0], optimize=do_opt)
numpy/core/tests/test_einsum.py:67:            assert_raises(ValueError, np.einsum, "j->..j", [0, 0], optimize=do_opt)
numpy/core/tests/test_einsum.py:68:            assert_raises(ValueError, np.einsum, "j->.j...", [0, 0], optimize=do_opt)
numpy/core/tests/test_einsum.py:71:            assert_raises(ValueError, np.einsum, "i%...", [0, 0], optimize=do_opt)
numpy/core/tests/test_einsum.py:72:            assert_raises(ValueError, np.einsum, "...j$", [0, 0], optimize=do_opt)
numpy/core/tests/test_einsum.py:73:            assert_raises(ValueError, np.einsum, "i->&", [0, 0], optimize=do_opt)
numpy/core/tests/test_einsum.py:76:            assert_raises(ValueError, np.einsum, "i->ij", [0, 0], optimize=do_opt)
numpy/core/tests/test_einsum.py:79:            assert_raises(ValueError, np.einsum, "ij->jij", [[0, 0], [0, 0]],
numpy/core/tests/test_einsum.py:85:            assert_raises(ValueError, np.einsum, "ii->i",
numpy/core/tests/test_einsum.py:89:            assert_raises(ValueError, np.einsum, "i", np.arange(6).reshape(2, 3),
numpy/core/tests/test_einsum.py:91:            assert_raises(ValueError, np.einsum, "i->i", [[0, 1], [0, 1]],
numpy/core/tests/test_einsum.py:100:            assert_raises(ValueError, np.einsum, "i->i", np.arange(6).reshape(-1, 1),
numpy/core/tests/test_einsum.py:110:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:113:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:116:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:117:            assert_equal(b, a)
numpy/core/tests/test_einsum.py:120:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:121:            assert_equal(b, a)
numpy/core/tests/test_einsum.py:125:            assert_(b.flags['WRITEABLE'])
numpy/core/tests/test_einsum.py:128:            assert_(not b.flags['WRITEABLE'])
numpy/core/tests/test_einsum.py:135:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:136:            assert_equal(b, a.T)
numpy/core/tests/test_einsum.py:139:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:140:            assert_equal(b, a.T)
numpy/core/tests/test_einsum.py:147:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:148:            assert_equal(b, [a[i, i] for i in range(3)])
numpy/core/tests/test_einsum.py:151:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:152:            assert_equal(b, [a[i, i] for i in range(3)])
numpy/core/tests/test_einsum.py:159:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:160:            assert_equal(b, [[x[i, i] for i in range(3)] for x in a])
numpy/core/tests/test_einsum.py:163:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:164:            assert_equal(b, [[x[i, i] for i in range(3)] for x in a])
numpy/core/tests/test_einsum.py:167:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:168:            assert_equal(b, [[x[i, i] for i in range(3)]
numpy/core/tests/test_einsum.py:172:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:173:            assert_equal(b, [[x[i, i] for i in range(3)]
numpy/core/tests/test_einsum.py:177:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:178:            assert_equal(b, [a[:, i, i] for i in range(3)])
numpy/core/tests/test_einsum.py:181:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:182:            assert_equal(b, [a[:, i, i] for i in range(3)])
numpy/core/tests/test_einsum.py:185:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:186:            assert_equal(b, [a[:, i, i] for i in range(3)])
numpy/core/tests/test_einsum.py:189:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:190:            assert_equal(b, [a[:, i, i] for i in range(3)])
numpy/core/tests/test_einsum.py:193:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:194:            assert_equal(b, [a.transpose(2, 0, 1)[:, i, i] for i in range(3)])
numpy/core/tests/test_einsum.py:197:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:198:            assert_equal(b, [a.transpose(2, 0, 1)[:, i, i] for i in range(3)])
numpy/core/tests/test_einsum.py:201:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:202:            assert_equal(b, [a.transpose(1, 0, 2)[:, i, i] for i in range(3)])
numpy/core/tests/test_einsum.py:205:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:206:            assert_equal(b, [a.transpose(1, 0, 2)[:, i, i] for i in range(3)])
numpy/core/tests/test_einsum.py:209:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:210:            assert_equal(b, [[x[i, i] for i in range(3)]
numpy/core/tests/test_einsum.py:214:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:215:            assert_equal(b, [[x[i, i] for i in range(3)]
numpy/core/tests/test_einsum.py:223:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:224:            assert_equal(b, [a[i, i, i] for i in range(3)])
numpy/core/tests/test_einsum.py:227:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:228:            assert_equal(b, [a[i, i, i] for i in range(3)])
numpy/core/tests/test_einsum.py:235:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:236:            assert_equal(b, a.swapaxes(0, 1))
numpy/core/tests/test_einsum.py:239:            assert_(b.base is a)
numpy/core/tests/test_einsum.py:240:            assert_equal(b, a.swapaxes(0, 1))
numpy/core/tests/test_einsum.py:248:            assert_equal(np.einsum("i->", a, optimize=do_opt),
numpy/core/tests/test_einsum.py:250:            assert_equal(np.einsum(a, [0], [], optimize=do_opt),
numpy/core/tests/test_einsum.py:255:            assert_equal(np.einsum("...i->...", a, optimize=do_opt),
numpy/core/tests/test_einsum.py:257:            assert_equal(np.einsum(a, [Ellipsis, 0], [Ellipsis], optimize=do_opt),
numpy/core/tests/test_einsum.py:263:            assert_equal(np.einsum("i...->...", a, optimize=do_opt),
numpy/core/tests/test_einsum.py:265:            assert_equal(np.einsum(a, [0, Ellipsis], [Ellipsis], optimize=do_opt),
numpy/core/tests/test_einsum.py:270:            assert_equal(np.einsum("i...->...", a, optimize=do_opt),
numpy/core/tests/test_einsum.py:272:            assert_equal(np.einsum(a, [0, Ellipsis], [Ellipsis], optimize=do_opt),
numpy/core/tests/test_einsum.py:278:            assert_equal(np.einsum("ii", a, optimize=do_opt),
numpy/core/tests/test_einsum.py:280:            assert_equal(np.einsum(a, [0, 0], optimize=do_opt),
numpy/core/tests/test_einsum.py:285:            assert_equal(np.einsum(a, np_array, optimize=do_opt),
numpy/core/tests/test_einsum.py:287:            assert_equal(np.einsum(a, list(np_array), optimize=do_opt),
numpy/core/tests/test_einsum.py:291:        assert_equal(np.einsum("..., ...", 3, 4), 12)  # scalar case
numpy/core/tests/test_einsum.py:295:            assert_equal(np.einsum("..., ...", a, b, optimize=do_opt),
numpy/core/tests/test_einsum.py:297:            assert_equal(np.einsum(a, [Ellipsis], b, [Ellipsis], optimize=do_opt),
numpy/core/tests/test_einsum.py:304:            assert_equal(np.einsum("...i, ...i", a, b, optimize=do_opt), np.inner(a, b))
numpy/core/tests/test_einsum.py:305:            assert_equal(np.einsum(a, [Ellipsis, 0], b, [Ellipsis, 0], optimize=do_opt),
numpy/core/tests/test_einsum.py:311:            assert_equal(np.einsum("i..., i...", a, b, optimize=do_opt),
numpy/core/tests/test_einsum.py:313:            assert_equal(np.einsum(a, [0, Ellipsis], b, [0, Ellipsis], optimize=do_opt),
numpy/core/tests/test_einsum.py:320:            assert_equal(np.einsum("i,j", a, b, optimize=do_opt),
numpy/core/tests/test_einsum.py:322:            assert_equal(np.einsum(a, [0], b, [1], optimize=do_opt),
numpy/core/tests/test_einsum.py:333:                assert_equal(np.einsum("ij, j", a, b, optimize=do_opt),
numpy/core/tests/test_einsum.py:335:                assert_equal(np.einsum(a, [0, 1], b, [1], optimize=do_opt),
numpy/core/tests/test_einsum.py:354:                assert_equal(np.einsum("ji,j", a.T, b.T, optimize=do_opt),
numpy/core/tests/test_einsum.py:356:                assert_equal(np.einsum(a.T, [1, 0], b.T, [1], optimize=do_opt),
numpy/core/tests/test_einsum.py:377:                    assert_equal(np.einsum("ij,jk", a, b, optimize=do_opt),
numpy/core/tests/test_einsum.py:379:                    assert_equal(np.einsum(a, [0, 1], b, [1, 2], optimize=do_opt),
numpy/core/tests/test_einsum.py:404:                assert_equal(np.einsum("ij,jk,kl", a, b, c, optimize=do_opt),
numpy/core/tests/test_einsum.py:414:            assert_equal(d, tgt)
numpy/core/tests/test_einsum.py:421:            assert_equal(d, tgt)
numpy/core/tests/test_einsum.py:427:                assert_equal(np.einsum("ijk, jil -> kl", a, b),
numpy/core/tests/test_einsum.py:429:                assert_equal(np.einsum(a, [0, 1, 2], b, [1, 0, 3], [2, 3]),
numpy/core/tests/test_einsum.py:435:                assert_equal(c, np.tensordot(a.astype('f8'), b.astype('f8'),
numpy/core/tests/test_einsum.py:440:                assert_equal(c, np.tensordot(a.astype('f8'), b.astype('f8'),
numpy/core/tests/test_einsum.py:447:        assert_equal(np.einsum("i,i,i->i", a, b, c,
numpy/core/tests/test_einsum.py:455:        assert_equal(np.einsum(",i->", 3, a), 3*np.sum(a))
numpy/core/tests/test_einsum.py:456:        assert_equal(np.einsum(3, [], a, [0], []), 3*np.sum(a))
numpy/core/tests/test_einsum.py:457:        assert_equal(np.einsum("i,->", a, 3), 3*np.sum(a))
numpy/core/tests/test_einsum.py:458:        assert_equal(np.einsum(a, [0], 3, [], []), 3*np.sum(a))
numpy/core/tests/test_einsum.py:464:                assert_equal(np.einsum("...,...", a, a, optimize=do_opt),
numpy/core/tests/test_einsum.py:466:                assert_equal(np.einsum("i,i", a, a, optimize=do_opt), np.dot(a, a))
numpy/core/tests/test_einsum.py:467:                assert_equal(np.einsum("i,->i", a, 2, optimize=do_opt), 2*a)
numpy/core/tests/test_einsum.py:468:                assert_equal(np.einsum(",i->i", 2, a, optimize=do_opt), 2*a)
numpy/core/tests/test_einsum.py:469:                assert_equal(np.einsum("i,->", a, 2, optimize=do_opt), 2*np.sum(a))
numpy/core/tests/test_einsum.py:470:                assert_equal(np.einsum(",i->", 2, a, optimize=do_opt), 2*np.sum(a))
numpy/core/tests/test_einsum.py:472:                assert_equal(np.einsum("...,...", a[1:], a[:-1], optimize=do_opt),
numpy/core/tests/test_einsum.py:474:                assert_equal(np.einsum("i,i", a[1:], a[:-1], optimize=do_opt),
numpy/core/tests/test_einsum.py:476:                assert_equal(np.einsum("i,->i", a[1:], 2, optimize=do_opt), 2*a[1:])
numpy/core/tests/test_einsum.py:477:                assert_equal(np.einsum(",i->i", 2, a[1:], optimize=do_opt), 2*a[1:])
numpy/core/tests/test_einsum.py:478:                assert_equal(np.einsum("i,->", a[1:], 2, optimize=do_opt),
numpy/core/tests/test_einsum.py:480:                assert_equal(np.einsum(",i->", 2, a[1:], optimize=do_opt),
numpy/core/tests/test_einsum.py:487:        assert_equal(b, np.sum(a))
numpy/core/tests/test_einsum.py:488:        assert_equal(b.dtype, np.dtype(dtype))
numpy/core/tests/test_einsum.py:491:        assert_equal(b, np.sum(a))
numpy/core/tests/test_einsum.py:492:        assert_equal(b.dtype, np.dtype(dtype))
numpy/core/tests/test_einsum.py:498:        assert_equal(np.einsum('z,mz,zm->', p, q, r), 253)
numpy/core/tests/test_einsum.py:503:        assert_array_equal(np.einsum('ij,ij->j', p, q, optimize=True),
numpy/core/tests/test_einsum.py:505:        assert_array_equal(np.einsum('ij,ij->j', p, q, optimize=True),
numpy/core/tests/test_einsum.py:512:        assert_array_equal(np.einsum("i, i", x, y, optimize=False), 20.)
numpy/core/tests/test_einsum.py:513:        assert_array_equal(np.einsum("i, i", x, y, optimize=True), 20.)
numpy/core/tests/test_einsum.py:519:            assert_array_equal(np.einsum("...ij,...jk->...ik", p, p,
numpy/core/tests/test_einsum.py:523:            assert_array_equal(np.einsum("...ij,...jk->...ik", p, q,
numpy/core/tests/test_einsum.py:530:        assert_array_equal(np.einsum("ji,i->", x, y, optimize=optimize),
numpy/core/tests/test_einsum.py:532:        assert_array_equal(np.einsum("i,ij->", y, x, optimize=optimize),
numpy/core/tests/test_einsum.py:534:        assert_array_equal(np.einsum("ij,i->", x, y, optimize=optimize),
numpy/core/tests/test_einsum.py:591:        assert_equal(np.einsum('ij...,j...->i...', a, b), [[[2], [2]]])
numpy/core/tests/test_einsum.py:592:        assert_equal(np.einsum('ij...,j...->i...', a, b, optimize=True), [[[2], [2]]])
numpy/core/tests/test_einsum.py:595:        assert_equal(np.einsum(u'ij...,j...->i...', a, b), [[[2], [2]]])
numpy/core/tests/test_einsum.py:596:        assert_equal(np.einsum('...i,...i', [1, 2, 3], [2, 3, 4]), 20)
numpy/core/tests/test_einsum.py:597:        assert_equal(np.einsum(u'...i,...i', [1, 2, 3], [2, 3, 4]), 20)
numpy/core/tests/test_einsum.py:604:        assert_equal(np.einsum('ijklm,ijn,ijn->', a, b, b),
numpy/core/tests/test_einsum.py:606:        assert_equal(np.einsum('ijklm,ijn,ijn->', a, b, b, optimize=True),
numpy/core/tests/test_einsum.py:614:        assert_equal(np.einsum('x,yx,zx->xzy', a, b, c),
numpy/core/tests/test_einsum.py:617:        assert_equal(np.einsum('x,yx,zx->xzy', a, b, c, optimize=True),
numpy/core/tests/test_einsum.py:623:        assert_equal(np.einsum('i,j', [1], [2], out=None), [[2]])
numpy/core/tests/test_einsum.py:633:        assert_raises(ValueError, lambda: np.einsum(a, [0, 52], b, [52, 2], [0, 2], optimize=False))
numpy/core/tests/test_einsum.py:634:        assert_raises(ValueError, lambda: np.einsum(a, [-1, 5], b, [5, 2], [-1, 2], optimize=False))
numpy/core/tests/test_einsum.py:648:            assert_equal(np.einsum('ij...,j...->ij...', A, B, optimize=opt), ref)
numpy/core/tests/test_einsum.py:649:            assert_equal(np.einsum('ij...,...j->ij...', A, B, optimize=opt), ref)
numpy/core/tests/test_einsum.py:650:            assert_equal(np.einsum('ij...,j->ij...', A, B, optimize=opt), ref)  # used to raise error
numpy/core/tests/test_einsum.py:656:            assert_equal(np.einsum('ik...,k...->i...', A, B, optimize=opt), ref)
numpy/core/tests/test_einsum.py:657:            assert_equal(np.einsum('ik...,...kj->i...j', A, B, optimize=opt), ref)
numpy/core/tests/test_einsum.py:658:            assert_equal(np.einsum('...k,kj', A, B, optimize=opt), ref)  # used to raise error
numpy/core/tests/test_einsum.py:659:            assert_equal(np.einsum('ik,k...->i...', A, B, optimize=opt), ref)  # used to raise error
numpy/core/tests/test_einsum.py:666:            assert_equal(np.einsum('ijkl,k', a, v, optimize=opt), ref)
numpy/core/tests/test_einsum.py:667:            assert_equal(np.einsum('...kl,k', a, v, optimize=opt), ref)  # used to raise error
numpy/core/tests/test_einsum.py:668:            assert_equal(np.einsum('...kl,k...', a, v, optimize=opt), ref)
numpy/core/tests/test_einsum.py:699:        assert_equal(es,  tp)
numpy/core/tests/test_einsum.py:706:        assert_equal(es, tp)
numpy/core/tests/test_einsum.py:716:        assert_equal(y1, y2)
numpy/core/tests/test_einsum.py:724:        assert_allclose(x, y)
numpy/core/tests/test_einsum.py:735:        assert_array_equal(out.base, correct_base)
numpy/core/tests/test_einsum.py:739:        assert_array_equal(out.base, correct_base)
numpy/core/tests/test_einsum.py:747:        assert_array_equal(out.base, correct_base)
numpy/core/tests/test_einsum.py:763:        assert res == arr.sum()
numpy/core/tests/test_einsum.py:766:        assert_array_equal(res, arr * arr)
numpy/core/tests/test_einsum.py:769:        assert_array_equal(res, arr * arr)
numpy/core/tests/test_einsum.py:771:        assert np.einsum('i,i->', arr, arr) == (arr * arr).sum()
numpy/core/tests/test_einsum.py:775:        assert_array_equal(res, arr * dtype.type(2))
numpy/core/tests/test_einsum.py:778:        assert_array_equal(res, arr * dtype.type(2))
numpy/core/tests/test_einsum.py:782:        assert res == np.einsum('i->', scalar * arr)
numpy/core/tests/test_einsum.py:786:        assert res == np.einsum('i->', scalar * arr)
numpy/core/tests/test_einsum.py:790:        assert_array_equal(res, (arr * arr * arr).sum())
numpy/core/tests/test_einsum.py:793:        assert_array_equal(res, (arr * arr * arr * arr).sum())
numpy/core/tests/test_einsum.py:803:        assert_equal(res, tgt)
numpy/core/tests/test_einsum.py:808:        assert res is a
numpy/core/tests/test_einsum.py:824:        assert_almost_equal(opt, noopt)
numpy/core/tests/test_einsum.py:826:        assert_almost_equal(opt, noopt)
numpy/core/tests/test_einsum.py:909:        assert_equal(b, [12])
numpy/core/tests/test_einsum.py:941:            assert_(tmp.flags.f_contiguous)
numpy/core/tests/test_einsum.py:944:            assert_(tmp.flags.f_contiguous)
numpy/core/tests/test_einsum.py:947:            assert_(tmp.flags.c_contiguous)
numpy/core/tests/test_einsum.py:950:            assert_(tmp.flags.c_contiguous is False)
numpy/core/tests/test_einsum.py:951:            assert_(tmp.flags.f_contiguous is False)
numpy/core/tests/test_einsum.py:954:            assert_(tmp.flags.c_contiguous is False)
numpy/core/tests/test_einsum.py:955:            assert_(tmp.flags.f_contiguous is False)
numpy/core/tests/test_einsum.py:960:            assert_(tmp.flags.c_contiguous)
numpy/core/tests/test_einsum.py:965:            assert_(tmp.flags.c_contiguous)
numpy/core/tests/test_einsum.py:982:        assert_(ret)
numpy/core/tests/test_einsum.py:986:        assert_(ret)
numpy/core/tests/test_einsum.py:1092:        assert_almost_equal(noopt, opt)
numpy/core/tests/test_einsum.py:1107:    assert_equal(c, d)
numpy/core/tests/test_einsum.py:1110:    assert_equal(c, d)
numpy/core/tests/test_api.py:17:    assert_equal(np.array(ones11, dtype=np.float64), ones11)
numpy/core/tests/test_api.py:21:        assert_equal(old_refcount, sys.getrefcount(tndarray))
numpy/core/tests/test_api.py:24:    assert_equal(np.array(None, dtype=np.float64),
numpy/core/tests/test_api.py:29:        assert_equal(old_refcount, sys.getrefcount(tobj))
numpy/core/tests/test_api.py:32:    assert_equal(np.array(1.0, dtype=np.float64),
numpy/core/tests/test_api.py:37:        assert_equal(old_refcount, sys.getrefcount(np.float64))
numpy/core/tests/test_api.py:43:    assert_equal(np.array(b"1.0", dtype=np.float64),
numpy/core/tests/test_api.py:45:    assert_equal(np.array(b"1.0").dtype, S3)
numpy/core/tests/test_api.py:46:    assert_equal(np.array(b"1.0", dtype=bytes).dtype, S3)
numpy/core/tests/test_api.py:47:    assert_equal(np.array(b"1.0", dtype=S2), np.array(b"1."))
numpy/core/tests/test_api.py:48:    assert_equal(np.array(b"1", dtype=S5), np.ones((), dtype=S5))
numpy/core/tests/test_api.py:54:    assert_equal(np.array("1.0", dtype=np.float64),
numpy/core/tests/test_api.py:56:    assert_equal(np.array("1.0").dtype, U3)
numpy/core/tests/test_api.py:57:    assert_equal(np.array("1.0", dtype=str).dtype, U3)
numpy/core/tests/test_api.py:58:    assert_equal(np.array("1.0", dtype=U2), np.array(str("1.")))
numpy/core/tests/test_api.py:59:    assert_equal(np.array("1", dtype=U5), np.ones((), dtype=U5))
numpy/core/tests/test_api.py:62:    assert_(hasattr(builtins, 'get'))
numpy/core/tests/test_api.py:66:    assert_equal(dat, [49.0, 46.0, 48.0])
numpy/core/tests/test_api.py:67:    assert_(dat.dtype.type is np.float64)
numpy/core/tests/test_api.py:70:    assert_equal(dat, [49, 46, 48])
numpy/core/tests/test_api.py:71:    assert_(dat.dtype.type is np.uint8)
numpy/core/tests/test_api.py:77:    assert_equal(np.array(o, dtype=np.float64), a)
numpy/core/tests/test_api.py:86:    assert_equal(bytes(np.array(o).data), bytes(a.data))
numpy/core/tests/test_api.py:91:    assert_equal(np.array(o, dtype=np.float64), np.array(100.0, np.float64))
numpy/core/tests/test_api.py:102:    assert_raises(ValueError, np.array, [nested], dtype=np.float64)
numpy/core/tests/test_api.py:105:    assert_equal(np.array([None] * 10, dtype=np.float64),
numpy/core/tests/test_api.py:107:    assert_equal(np.array([[None]] * 10, dtype=np.float64),
numpy/core/tests/test_api.py:109:    assert_equal(np.array([[None] * 10], dtype=np.float64),
numpy/core/tests/test_api.py:111:    assert_equal(np.array([[None] * 10] * 10, dtype=np.float64),
numpy/core/tests/test_api.py:114:    assert_equal(np.array([1.0] * 10, dtype=np.float64),
numpy/core/tests/test_api.py:116:    assert_equal(np.array([[1.0]] * 10, dtype=np.float64),
numpy/core/tests/test_api.py:118:    assert_equal(np.array([[1.0] * 10], dtype=np.float64),
numpy/core/tests/test_api.py:120:    assert_equal(np.array([[1.0] * 10] * 10, dtype=np.float64),
numpy/core/tests/test_api.py:124:    assert_equal(np.array((None,) * 10, dtype=np.float64),
numpy/core/tests/test_api.py:126:    assert_equal(np.array([(None,)] * 10, dtype=np.float64),
numpy/core/tests/test_api.py:128:    assert_equal(np.array([(None,) * 10], dtype=np.float64),
numpy/core/tests/test_api.py:130:    assert_equal(np.array([(None,) * 10] * 10, dtype=np.float64),
numpy/core/tests/test_api.py:133:    assert_equal(np.array((1.0,) * 10, dtype=np.float64),
numpy/core/tests/test_api.py:135:    assert_equal(np.array([(1.0,)] * 10, dtype=np.float64),
numpy/core/tests/test_api.py:137:    assert_equal(np.array([(1.0,) * 10], dtype=np.float64),
numpy/core/tests/test_api.py:139:    assert_equal(np.array([(1.0,) * 10] * 10, dtype=np.float64),
numpy/core/tests/test_api.py:157:    assert_equal(b, a.T)
numpy/core/tests/test_api.py:158:    assert_(b.flags.owndata)
numpy/core/tests/test_api.py:163:    assert_equal(b, a.T)
numpy/core/tests/test_api.py:164:    assert_(b.flags.owndata)
numpy/core/tests/test_api.py:169:    assert_equal(b, a.T)
numpy/core/tests/test_api.py:170:    assert_(b.flags.owndata)
numpy/core/tests/test_api.py:177:    assert_equal(a, b)
numpy/core/tests/test_api.py:178:    assert_equal(b.dtype, np.dtype('i4'))
numpy/core/tests/test_api.py:179:    assert_equal(a.strides, b.strides)
numpy/core/tests/test_api.py:181:    assert_equal(a.T, b)
numpy/core/tests/test_api.py:182:    assert_equal(b.dtype, np.dtype('i4'))
numpy/core/tests/test_api.py:183:    assert_equal(a.T.strides, b.strides)
numpy/core/tests/test_api.py:185:    assert_equal(a, b)
numpy/core/tests/test_api.py:186:    assert_(not (a is b))
numpy/core/tests/test_api.py:190:    assert_(a is b)
numpy/core/tests/test_api.py:195:    assert_equal(a, b)
numpy/core/tests/test_api.py:196:    assert_(not (a is b))
numpy/core/tests/test_api.py:197:    assert_(b.flags.f_contiguous)
numpy/core/tests/test_api.py:200:    assert_equal(a, b)
numpy/core/tests/test_api.py:201:    assert_(a is b)
numpy/core/tests/test_api.py:202:    assert_(b.flags.c_contiguous)
numpy/core/tests/test_api.py:206:    assert_equal(a, b)
numpy/core/tests/test_api.py:207:    assert_equal(b.dtype, np.dtype('c8'))
numpy/core/tests/test_api.py:209:    assert_raises(TypeError, a.astype, 'i4', casting='safe')
numpy/core/tests/test_api.py:213:    assert_(a is b)
numpy/core/tests/test_api.py:222:    assert_(a is b)
numpy/core/tests/test_api.py:226:    assert_equal(a, b)
numpy/core/tests/test_api.py:227:    assert_equal(type(b), MyNDArray)
numpy/core/tests/test_api.py:231:    assert_equal(a, b)
numpy/core/tests/test_api.py:232:    assert_(not (a is b))
numpy/core/tests/test_api.py:233:    assert_(type(b) is not MyNDArray)
numpy/core/tests/test_api.py:239:    assert_equal(a, b)
numpy/core/tests/test_api.py:240:    assert_equal(b.dtype, np.dtype('S100'))
numpy/core/tests/test_api.py:243:    assert_equal(a, b)
numpy/core/tests/test_api.py:244:    assert_equal(b.dtype, np.dtype('U100'))
numpy/core/tests/test_api.py:249:    assert_equal(a, b)
numpy/core/tests/test_api.py:250:    assert_equal(b.dtype, np.dtype('S10'))
numpy/core/tests/test_api.py:253:    assert_equal(a, b)
numpy/core/tests/test_api.py:254:    assert_equal(b.dtype, np.dtype('U10'))
numpy/core/tests/test_api.py:257:    assert_array_equal(a, np.array(b'1234567890' * 3, dtype='S30'))
numpy/core/tests/test_api.py:259:    assert_array_equal(a, np.array(u'1234567890' * 3, dtype='U30'))
numpy/core/tests/test_api.py:262:    assert_array_equal(a, np.array(b'1234567890' * 3, dtype='S30'))
numpy/core/tests/test_api.py:264:    assert_array_equal(a, np.array(u'1234567890' * 3, dtype='U30'))
numpy/core/tests/test_api.py:267:    assert_array_equal(a, np.array(b'1234567890' * 3, dtype='S30'))
numpy/core/tests/test_api.py:269:    assert_array_equal(a, np.array(u'1234567890' * 3, dtype='U30'))
numpy/core/tests/test_api.py:273:    assert_(b.size == 2)
numpy/core/tests/test_api.py:276:    assert_raises(TypeError, a.astype, 'S1', casting='safe')
numpy/core/tests/test_api.py:279:    assert_raises(TypeError, a.astype, 'U1', casting='safe')
numpy/core/tests/test_api.py:287:    assert arr.astype(dt).dtype.itemsize == np.dtype(f"{dt}1").itemsize
numpy/core/tests/test_api.py:290:    assert np.can_cast(arr, dt, casting="unsafe")
numpy/core/tests/test_api.py:291:    assert not np.can_cast(arr, dt, casting="same_kind")
numpy/core/tests/test_api.py:293:    assert np.can_cast("O", dt, casting="unsafe")
numpy/core/tests/test_api.py:299:    assert arr.astype("V").dtype.itemsize == dt.itemsize
numpy/core/tests/test_api.py:305:    assert arr.dtype == "V8"
numpy/core/tests/test_api.py:313:    assert_warns(np.ComplexWarning, a.astype, t)
numpy/core/tests/test_api.py:327:    assert_array_equal(arr.astype(out_dtype), expected)
numpy/core/tests/test_api.py:348:    assert scalar_type(value) == 1+3j
numpy/core/tests/test_api.py:349:    assert np.array([value], dtype=object).astype(scalar_type)[()] == 1+3j
numpy/core/tests/test_api.py:350:    assert np.array(value).astype(scalar_type)[()] == 1+3j
numpy/core/tests/test_api.py:353:    assert arr[0] == 1+3j
numpy/core/tests/test_api.py:361:    assert np.isnan(arr)[0]
numpy/core/tests/test_api.py:362:    assert np.isnan(np.array(None, dtype=dtype))[()]
numpy/core/tests/test_api.py:363:    assert np.isnan(np.array([None], dtype=dtype))[0]
numpy/core/tests/test_api.py:364:    assert np.isnan(np.array(None).astype(dtype))[()]
numpy/core/tests/test_api.py:371:    assert_equal(a, 1.5)
numpy/core/tests/test_api.py:373:    assert_equal(a, 2.5)
numpy/core/tests/test_api.py:378:    assert_equal(a, [[2.5, 3.5, 2.5], [2.5, 2.5, 3.5]])
numpy/core/tests/test_api.py:381:    assert_equal(a, [[2.5, 4.5, 4.5], [4.5, 4.5, 3.5]])
numpy/core/tests/test_api.py:388:    assert_equal(a, [[3, 1, 5], [6, 2, 1]])
numpy/core/tests/test_api.py:392:    assert_equal(a, [[2, 6, 5], [1, 3, 1]])
numpy/core/tests/test_api.py:395:    assert_raises(TypeError, np.copyto, a, 1.5)
numpy/core/tests/test_api.py:399:    assert_equal(a, 1)
numpy/core/tests/test_api.py:403:    assert_equal(a, [[3, 1, 3], [3, 1, 3]])
numpy/core/tests/test_api.py:406:    assert_raises(TypeError, np.copyto, a, 3.5, where=[True, False, True])
numpy/core/tests/test_api.py:410:    assert_equal(a, [[3, 4, 4], [4, 1, 3]])
numpy/core/tests/test_api.py:414:    assert_equal(a, [[3, 4, 4], [4, 3, 3]])
numpy/core/tests/test_api.py:417:    assert_raises(TypeError, np.copyto, [1, 2, 3], [2, 3, 4])
numpy/core/tests/test_api.py:437:        assert_array_equal(r == 1, l)
numpy/core/tests/test_api.py:438:        assert_equal(r.sum(), sum(l))
numpy/core/tests/test_api.py:442:        assert_array_equal(r == 1, l[::-1])
numpy/core/tests/test_api.py:443:        assert_equal(r.sum(), sum(l))
numpy/core/tests/test_api.py:447:        assert_array_equal(r[::2] == 1, l[::2])
numpy/core/tests/test_api.py:448:        assert_equal(r[::2].sum(), sum(l[::2]))
numpy/core/tests/test_api.py:452:        assert_array_equal(r[::2] == 1, l[::-2])
numpy/core/tests/test_api.py:453:        assert_equal(r[::2].sum(), sum(l[::-2]))
numpy/core/tests/test_api.py:461:            assert_array_equal(r == 1, l)
numpy/core/tests/test_api.py:462:            assert_equal(r.sum(), sum(l))
numpy/core/tests/test_api.py:466:    assert_equal(r.sum(), r.size)
numpy/core/tests/test_api.py:470:    assert_equal(r.sum(), r.size)
numpy/core/tests/test_api.py:478:        assert_(not (x is y))
numpy/core/tests/test_api.py:479:        assert_equal(x, y)
numpy/core/tests/test_api.py:480:        assert_equal(res.flags.c_contiguous, ccontig)
numpy/core/tests/test_api.py:481:        assert_equal(res.flags.f_contiguous, fcontig)
numpy/core/tests/test_api.py:484:    assert_(a.flags.c_contiguous)
numpy/core/tests/test_api.py:485:    assert_(not a.flags.f_contiguous)
numpy/core/tests/test_api.py:486:    assert_(not b.flags.c_contiguous)
numpy/core/tests/test_api.py:487:    assert_(b.flags.f_contiguous)
numpy/core/tests/test_api.py:488:    assert_(not c.flags.c_contiguous)
numpy/core/tests/test_api.py:489:    assert_(not c.flags.f_contiguous)
numpy/core/tests/test_api.py:539:        assert_(a.flags.c_contiguous == ccontig)
numpy/core/tests/test_api.py:540:        assert_(a.flags.f_contiguous == fcontig)
numpy/core/tests/test_api.py:570:    assert_equal(result[0], np.array([(1, 2, 3), (1, 2, 3), (1, 2, 3)], dtype='u4,u4,u4'))
numpy/core/tests/test_api.py:571:    assert_equal(result[1], np.array([(1, 2, 3), (4, 5, 6), (7, 8, 9)], dtype='u4,u4,u4'))
numpy/core/tests/test_api.py:578:    assert_equal(output, expected_output)
numpy/core/tests/test_api.py:585:    assert not np.may_share_memory(arr, res_true)
numpy/core/tests/test_api.py:587:    assert not np.may_share_memory(arr, res_always)
numpy/core/tests/test_api.py:591:    assert np.may_share_memory(arr, res_false)
numpy/core/tests/test_api.py:594:    assert np.may_share_memory(arr, res_if_needed)
numpy/core/tests/test_api.py:597:    assert np.may_share_memory(arr, res_never)
numpy/core/tests/test_api.py:601:    assert_array_equal(res_false, arr)
numpy/core/tests/test_api.py:604:    assert_array_equal(res_if_needed, arr)
numpy/core/tests/test_longdouble.py:25:    assert_equal(a[1], o)
numpy/core/tests/test_longdouble.py:38:    assert_equal(np.longdouble(repr(o)), o, "repr was %s" % repr(o))
numpy/core/tests/test_longdouble.py:44:    assert_equal(np.longdouble(repr(o).encode("ascii")), o)
numpy/core/tests/test_longdouble.py:62:    assert o == np.longdouble(o_str)
numpy/core/tests/test_longdouble.py:66:    assert (o == o_strarr.astype(np.longdouble)).all()
numpy/core/tests/test_longdouble.py:69:    assert (o_strarr == o_str).all()
numpy/core/tests/test_longdouble.py:70:    assert (np.asarray([o] * 3).astype(strtype) == o_str).all()
numpy/core/tests/test_longdouble.py:74:    assert_raises(ValueError, np.longdouble, "spam")
numpy/core/tests/test_longdouble.py:75:    assert_raises(ValueError, np.longdouble, "1.0 flub")
numpy/core/tests/test_longdouble.py:83:    assert_equal(np.fromstring(s, sep=" ", dtype=np.longdouble), a,
numpy/core/tests/test_longdouble.py:90:        assert_equal(np.fromstring("1, 2 ,  3  ,4", sep=",", dtype=ctype),
numpy/core/tests/test_longdouble.py:93:        assert_equal(np.fromstring("1j, -2j,  3j, 4e1j", sep=",", dtype=ctype),
numpy/core/tests/test_longdouble.py:96:        assert_equal(np.fromstring("1+1j,2-2j, -3+3j,  -4e1+4j", sep=",", dtype=ctype),
numpy/core/tests/test_longdouble.py:100:            assert_equal(np.fromstring("1+2 j,3", dtype=ctype, sep=","),
numpy/core/tests/test_longdouble.py:103:            assert_equal(np.fromstring("1+ 2j,3", dtype=ctype, sep=","),
numpy/core/tests/test_longdouble.py:106:            assert_equal(np.fromstring("1 +2j,3", dtype=ctype, sep=","),
numpy/core/tests/test_longdouble.py:109:            assert_equal(np.fromstring("1+j", dtype=ctype, sep=","),
numpy/core/tests/test_longdouble.py:112:            assert_equal(np.fromstring("1+", dtype=ctype, sep=","),
numpy/core/tests/test_longdouble.py:115:            assert_equal(np.fromstring("1j+1", dtype=ctype, sep=","),
numpy/core/tests/test_longdouble.py:121:        assert_equal(np.fromstring("1. 2. 3. flop 4.", dtype=float, sep=" "),
numpy/core/tests/test_longdouble.py:127:        assert_equal(np.fromstring("xxxxx", sep="x"),
numpy/core/tests/test_longdouble.py:133:        assert_equal(np.fromstring("1xx3x4x5x6", sep="x"),
numpy/core/tests/test_longdouble.py:150:        assert_equal(res, np.array([1., 2., 3.]))
numpy/core/tests/test_longdouble.py:160:            assert_equal(res, np.array([1., 2., 3., 4.]))
numpy/core/tests/test_longdouble.py:168:            assert_equal(res, np.array([1.j, -2.j, 3.j, 40.j]))
numpy/core/tests/test_longdouble.py:176:            assert_equal(res, np.array([1. + 1.j, 2. - 2.j, - 3. + 3.j, - 40. + 4j]))
numpy/core/tests/test_longdouble.py:185:            assert_equal(res, np.array([1.]))
numpy/core/tests/test_longdouble.py:194:            assert_equal(res, np.array([1.]))
numpy/core/tests/test_longdouble.py:203:            assert_equal(res, np.array([1.]))
numpy/core/tests/test_longdouble.py:212:            assert_equal(res, np.array([1.]))
numpy/core/tests/test_longdouble.py:221:            assert_equal(res, np.array([1.]))
numpy/core/tests/test_longdouble.py:230:            assert_equal(res, np.array([1.j]))
numpy/core/tests/test_longdouble.py:241:        assert_equal(res, self.tgt)
numpy/core/tests/test_longdouble.py:250:        assert_equal(res, self.tgt)
numpy/core/tests/test_longdouble.py:259:        assert_equal(res, self.tgt)
numpy/core/tests/test_longdouble.py:267:        assert_equal(res, self.tgt)
numpy/core/tests/test_longdouble.py:275:    assert_(repr(o) != '1')
numpy/core/tests/test_longdouble.py:283:    assert_("{0:.40g}".format(o) != '1')
numpy/core/tests/test_longdouble.py:291:    assert_("%.40g" % o != '1')
numpy/core/tests/test_longdouble.py:304:    assert_(repr(a) != repr(b))
numpy/core/tests/test_longdouble.py:314:        assert_equal(o, np.longdouble(repr(o)))
numpy/core/tests/test_longdouble.py:319:        assert_equal(a[0], f)
numpy/core/tests/test_longdouble.py:323:            assert_equal(np.fromstring("1,234", dtype=float, sep=" "),
numpy/core/tests/test_longdouble.py:328:            assert_equal(np.fromstring("1,234", dtype=np.longdouble, sep=" "),
numpy/core/tests/test_longdouble.py:334:        assert_equal(a[0], np.longdouble(s))
numpy/core/tests/test_longdouble.py:339:        assert_array_equal(a, b)
numpy/core/tests/test_longdouble.py:344:            assert_array_equal(b[0], 1)
numpy/core/tests/test_longdouble.py:360:        assert np.longdouble(int_val) == np.longdouble(str_val)
numpy/core/tests/test_longdouble.py:365:            assert w[0].category is RuntimeWarning
numpy/core/tests/test_longdouble.py:370:    assert np.longdouble(bool_val) == np.longdouble(int(bool_val))
numpy/core/tests/test_overrides.py:46:        assert_equal(list(args), [array])
numpy/core/tests/test_overrides.py:49:        assert_equal(list(args), [array])
numpy/core/tests/test_overrides.py:52:        assert_equal(list(args), [array])
numpy/core/tests/test_overrides.py:55:        assert_equal(list(args), [array])
numpy/core/tests/test_overrides.py:70:        assert_equal(list(args), [override_sub, array])
numpy/core/tests/test_overrides.py:73:        assert_equal(list(args), [no_override_sub, array])
numpy/core/tests/test_overrides.py:77:        assert_equal(list(args), [override_sub, no_override_sub])
numpy/core/tests/test_overrides.py:88:        assert_equal(list(args), [other, array])
numpy/core/tests/test_overrides.py:91:        assert_equal(list(args), [array, other])
numpy/core/tests/test_overrides.py:105:        assert_equal(_get_implementing_args([array, subarray, other]),
numpy/core/tests/test_overrides.py:107:        assert_equal(_get_implementing_args([array, other, subarray]),
numpy/core/tests/test_overrides.py:129:        assert_equal(_get_implementing_args([1]), [])
numpy/core/tests/test_overrides.py:130:        assert_equal(_get_implementing_args([a]), [a])
numpy/core/tests/test_overrides.py:131:        assert_equal(_get_implementing_args([a, 1]), [a])
numpy/core/tests/test_overrides.py:132:        assert_equal(_get_implementing_args([a, a, a]), [a])
numpy/core/tests/test_overrides.py:133:        assert_equal(_get_implementing_args([a, d, a]), [a, d])
numpy/core/tests/test_overrides.py:134:        assert_equal(_get_implementing_args([a, b]), [b, a])
numpy/core/tests/test_overrides.py:135:        assert_equal(_get_implementing_args([b, a]), [b, a])
numpy/core/tests/test_overrides.py:136:        assert_equal(_get_implementing_args([a, b, c]), [b, c, a])
numpy/core/tests/test_overrides.py:137:        assert_equal(_get_implementing_args([a, c, b]), [c, b, a])
numpy/core/tests/test_overrides.py:145:        assert_equal(actual, relevant_args[:32])
numpy/core/tests/test_overrides.py:173:        assert_equal(result, 'original')
numpy/core/tests/test_overrides.py:178:        assert_(result is NotImplemented)
numpy/core/tests/test_overrides.py:184:        assert_equal(result, 'original')
numpy/core/tests/test_overrides.py:190:        assert_equal(result, 'original')
numpy/core/tests/test_overrides.py:197:        assert_equal(result, expected.view(NoOverrideSub))
numpy/core/tests/test_overrides.py:199:        assert_equal(result, expected.view(OverrideSub))
numpy/core/tests/test_overrides.py:219:            assert_(roundtripped is dispatched_one_arg)
numpy/core/tests/test_overrides.py:222:        assert_equal(dispatched_one_arg.__name__, 'dispatched_one_arg')
numpy/core/tests/test_overrides.py:224:            assert_equal(dispatched_one_arg.__doc__, 'Docstring.')
numpy/core/tests/test_overrides.py:234:        assert_(obj is original)
numpy/core/tests/test_overrides.py:235:        assert_(func is dispatched_one_arg)
numpy/core/tests/test_overrides.py:236:        assert_equal(set(types), {MyArray})
numpy/core/tests/test_overrides.py:238:        assert_(args == (original,))
numpy/core/tests/test_overrides.py:239:        assert_equal(kwargs, {})
numpy/core/tests/test_overrides.py:315:        assert_equal(dispatched_one_arg(1), 'original')
numpy/core/tests/test_overrides.py:316:        assert_equal(dispatched_one_arg(MyArray()), 'myarray')
numpy/core/tests/test_overrides.py:331:        assert_equal(func_with_option(1), 'default')
numpy/core/tests/test_overrides.py:332:        assert_equal(func_with_option(1, option='extra'), 'extra')
numpy/core/tests/test_overrides.py:333:        assert_equal(func_with_option(MyArray()), 'myarray')
numpy/core/tests/test_overrides.py:339:        assert_equal(result, 'yes')
numpy/core/tests/test_overrides.py:351:        assert_(func(array) is array)
numpy/core/tests/test_overrides.py:352:        assert_equal(func.__module__, 'my')
numpy/core/tests/test_overrides.py:370:        assert_equal(repr(array), 'MyArray(1)')
numpy/core/tests/test_overrides.py:371:        assert_equal(str(array), '1')
numpy/core/tests/test_overrides.py:377:        assert_equal(np.sum.__module__, 'numpy')
numpy/core/tests/test_overrides.py:378:        assert_equal(np.char.equal.__module__, 'numpy.char')
numpy/core/tests/test_overrides.py:379:        assert_equal(np.fft.fft.__module__, 'numpy.fft')
numpy/core/tests/test_overrides.py:380:        assert_equal(np.linalg.solve.__module__, 'numpy.linalg')
numpy/core/tests/test_overrides.py:384:        assert_('axis' in signature.parameters)
numpy/core/tests/test_overrides.py:394:        assert_equal(np.sum(MyArray()), 'yes')
numpy/core/tests/test_overrides.py:412:        assert_equal(result, 1)
numpy/core/tests/test_overrides.py:430:        assert_equal(np.sum(array), 'summed')
numpy/core/tests/test_overrides.py:440:                assert func is getattr(np, func.__name__)
numpy/core/tests/test_overrides.py:518:            assert type(array_like) is np.ndarray
numpy/core/tests/test_overrides.py:528:            assert_equal(array_like, np_arr)
numpy/core/tests/test_overrides.py:530:            assert type(array_like) is self.MyArray
numpy/core/tests/test_overrides.py:531:            assert array_like.function is my_func
numpy/core/tests/test_overrides.py:569:                assert type(array_like) is np.ndarray
numpy/core/tests/test_overrides.py:571:                assert_equal(np_res, data)
numpy/core/tests/test_overrides.py:572:                assert_equal(array_like, np_res)
numpy/core/tests/test_overrides.py:574:                assert type(array_like) is self.MyArray
numpy/core/tests/test_overrides.py:575:                assert array_like.function is self.MyArray.fromfile
numpy/core/tests/test_scalar_ctors.py:17:        assert_almost_equal(fsingle, 1.234)
numpy/core/tests/test_scalar_ctors.py:18:        assert_almost_equal(fdouble, 1.234)
numpy/core/tests/test_scalar_ctors.py:19:        assert_almost_equal(flongdouble, 1.234)
numpy/core/tests/test_scalar_ctors.py:24:        assert_equal(fhalf, np.inf)
numpy/core/tests/test_scalar_ctors.py:26:        assert_equal(fsingle, np.inf)
numpy/core/tests/test_scalar_ctors.py:28:        assert_equal(fdouble, np.inf)
numpy/core/tests/test_scalar_ctors.py:30:        assert_equal(flongdouble, np.inf)
numpy/core/tests/test_scalar_ctors.py:33:        assert_equal(fhalf, -np.inf)
numpy/core/tests/test_scalar_ctors.py:35:        assert_equal(fsingle, -np.inf)
numpy/core/tests/test_scalar_ctors.py:37:        assert_equal(fdouble, -np.inf)
numpy/core/tests/test_scalar_ctors.py:39:        assert_equal(flongdouble, -np.inf)
numpy/core/tests/test_scalar_ctors.py:46:        assert s == 'a'
numpy/core/tests/test_scalar_ctors.py:48:        assert s == 'a'
numpy/core/tests/test_scalar_ctors.py:57:        assert np.bytes_(-2) == b'-2'
numpy/core/tests/test_scalar_ctors.py:61:        assert np.datetime_data(dt) == ('M', 2)
numpy/core/tests/test_scalar_ctors.py:78:        assert_equal(1024, np.intp(1024))
numpy/core/tests/test_scalar_ctors.py:81:        assert_equal(np.uint64(-2), np.uint64(18446744073709551614))
numpy/core/tests/test_scalar_ctors.py:98:            assert arr.dtype.type is t1
numpy/core/tests/test_scalar_ctors.py:100:            assert arr.dtype.type is t2
numpy/core/tests/test_multiarray.py:82:        assert_raises(ValueError, runstring, 'self.a[0] = 3', mydict)
numpy/core/tests/test_multiarray.py:83:        assert_raises(ValueError, runstring, 'self.a[0:1].itemset(3)', mydict)
numpy/core/tests/test_multiarray.py:126:        assert_raises(ValueError, vals.setflags, write=True)
numpy/core/tests/test_multiarray.py:130:        assert_raises(ValueError, vals.setflags, write=True)
numpy/core/tests/test_multiarray.py:135:        assert_(vals.flags.writeable)
numpy/core/tests/test_multiarray.py:137:        assert_(vals.flags.writeable is False)
numpy/core/tests/test_multiarray.py:139:        assert_(vals.flags.writeable)
numpy/core/tests/test_multiarray.py:143:        assert_(vals.flags.writeable)
numpy/core/tests/test_multiarray.py:145:        assert_(vals.flags.writeable is False)
numpy/core/tests/test_multiarray.py:147:        assert_(vals.flags.writeable)
numpy/core/tests/test_multiarray.py:158:            assert_(vals.flags.writeable)
numpy/core/tests/test_multiarray.py:159:            assert_(isinstance(vals.base, bytes))
numpy/core/tests/test_multiarray.py:176:        assert view.flags.writeable
numpy/core/tests/test_multiarray.py:209:            assert_(len(w) == 1)
numpy/core/tests/test_multiarray.py:224:        assert memoryview(a).readonly is not writeable
numpy/core/tests/test_multiarray.py:225:        assert a.__array_interface__['data'][1] is not writeable
numpy/core/tests/test_multiarray.py:226:        assert np.asarray(MyArr()).flags.writeable is writeable
numpy/core/tests/test_multiarray.py:229:        assert_equal(self.a.flags.carray, True)
numpy/core/tests/test_multiarray.py:230:        assert_equal(self.a.flags['C'], True)
numpy/core/tests/test_multiarray.py:231:        assert_equal(self.a.flags.farray, False)
numpy/core/tests/test_multiarray.py:232:        assert_equal(self.a.flags.behaved, True)
numpy/core/tests/test_multiarray.py:233:        assert_equal(self.a.flags.fnc, False)
numpy/core/tests/test_multiarray.py:234:        assert_equal(self.a.flags.forc, True)
numpy/core/tests/test_multiarray.py:235:        assert_equal(self.a.flags.owndata, True)
numpy/core/tests/test_multiarray.py:236:        assert_equal(self.a.flags.writeable, True)
numpy/core/tests/test_multiarray.py:237:        assert_equal(self.a.flags.aligned, True)
numpy/core/tests/test_multiarray.py:238:        assert_equal(self.a.flags.writebackifcopy, False)
numpy/core/tests/test_multiarray.py:239:        assert_equal(self.a.flags['X'], False)
numpy/core/tests/test_multiarray.py:240:        assert_equal(self.a.flags['WRITEBACKIFCOPY'], False)
numpy/core/tests/test_multiarray.py:244:        assert_(a.flags.aligned)
numpy/core/tests/test_multiarray.py:247:        assert_(a.flags.aligned)
numpy/core/tests/test_multiarray.py:251:        assert_(a.flags.aligned)
numpy/core/tests/test_multiarray.py:262:                assert_equal(hash(st(-2**i)), hash(-2**i),
numpy/core/tests/test_multiarray.py:264:                assert_equal(hash(st(2**(i - 1))), hash(2**(i - 1)),
numpy/core/tests/test_multiarray.py:266:                assert_equal(hash(st(2**i - 1)), hash(2**i - 1),
numpy/core/tests/test_multiarray.py:270:                assert_equal(hash(ut(2**(i - 1))), hash(2**(i - 1)),
numpy/core/tests/test_multiarray.py:272:                assert_equal(hash(ut(2**i - 1)), hash(2**i - 1),
numpy/core/tests/test_multiarray.py:283:        assert_equal(self.one.shape, (10,))
numpy/core/tests/test_multiarray.py:284:        assert_equal(self.two.shape, (4, 5))
numpy/core/tests/test_multiarray.py:285:        assert_equal(self.three.shape, (2, 5, 6))
numpy/core/tests/test_multiarray.py:287:        assert_equal(self.three.shape, (10, 3, 2))
numpy/core/tests/test_multiarray.py:289:        assert_equal(self.one.strides, (self.one.itemsize,))
numpy/core/tests/test_multiarray.py:291:        assert_equal(self.two.strides, (5*num, num))
numpy/core/tests/test_multiarray.py:293:        assert_equal(self.three.strides, (30*num, 6*num, num))
numpy/core/tests/test_multiarray.py:294:        assert_equal(self.one.ndim, 1)
numpy/core/tests/test_multiarray.py:295:        assert_equal(self.two.ndim, 2)
numpy/core/tests/test_multiarray.py:296:        assert_equal(self.three.ndim, 3)
numpy/core/tests/test_multiarray.py:298:        assert_equal(self.two.size, 20)
numpy/core/tests/test_multiarray.py:299:        assert_equal(self.two.nbytes, 20*num)
numpy/core/tests/test_multiarray.py:300:        assert_equal(self.two.itemsize, self.two.dtype.itemsize)
numpy/core/tests/test_multiarray.py:301:        assert_equal(self.two.base, np.arange(20))
numpy/core/tests/test_multiarray.py:304:        assert_equal(self.one.dtype, np.dtype(np.int_))
numpy/core/tests/test_multiarray.py:305:        assert_equal(self.three.dtype, np.dtype(np.float_))
numpy/core/tests/test_multiarray.py:306:        assert_equal(self.one.dtype.char, 'l')
numpy/core/tests/test_multiarray.py:307:        assert_equal(self.three.dtype.char, 'd')
numpy/core/tests/test_multiarray.py:308:        assert_(self.three.dtype.str[0] in '<>')
numpy/core/tests/test_multiarray.py:309:        assert_equal(self.one.dtype.str[1], 'i')
numpy/core/tests/test_multiarray.py:310:        assert_equal(self.three.dtype.str[1], 'f')
numpy/core/tests/test_multiarray.py:318:        assert_(not isinstance(numpy_int, int))
numpy/core/tests/test_multiarray.py:328:        assert_equal(make_array(4, 4, -1), np.array([4, 3, 2, 1]))
numpy/core/tests/test_multiarray.py:329:        assert_raises(ValueError, make_array, 4, 4, -2)
numpy/core/tests/test_multiarray.py:330:        assert_raises(ValueError, make_array, 4, 2, -1)
numpy/core/tests/test_multiarray.py:331:        assert_raises(ValueError, make_array, 8, 3, 1)
numpy/core/tests/test_multiarray.py:332:        assert_equal(make_array(8, 3, 0), np.array([3]*8))
numpy/core/tests/test_multiarray.py:334:        assert_raises(ValueError, make_array, (2, 3), 5, np.array([-2, -3]))
numpy/core/tests/test_multiarray.py:349:        assert_equal(make_array(4, 4, -1), np.array([4, 3, 2, 1]))
numpy/core/tests/test_multiarray.py:350:        assert_equal(make_array(7, 3, 1), np.array([3, 4, 5, 6, 7, 8, 9]))
numpy/core/tests/test_multiarray.py:351:        assert_raises(ValueError, make_array, 4, 4, -2)
numpy/core/tests/test_multiarray.py:352:        assert_raises(ValueError, make_array, 4, 2, -1)
numpy/core/tests/test_multiarray.py:353:        assert_raises(RuntimeError, make_array, 8, 3, 1)
numpy/core/tests/test_multiarray.py:361:        assert_raises(ValueError, set_strides, x, (10*x.itemsize, x.itemsize))
numpy/core/tests/test_multiarray.py:366:        assert_raises(ValueError, set_strides, x[::-1], -1)
numpy/core/tests/test_multiarray.py:374:        assert_raises(TypeError, set_strides, arr_0d, None)
numpy/core/tests/test_multiarray.py:382:            assert_equal(x, y)
numpy/core/tests/test_multiarray.py:390:        assert_array_equal(x, y)
numpy/core/tests/test_multiarray.py:396:        assert_equal(x['f1'][1], x['f1'][0])
numpy/core/tests/test_multiarray.py:401:        assert_array_equal(x['a'], [3.5, 3.5])
numpy/core/tests/test_multiarray.py:402:        assert_array_equal(x['b'], [-2, -2])
numpy/core/tests/test_multiarray.py:409:        assert_equal(r, np.ones((2, 6)))
numpy/core/tests/test_multiarray.py:414:        assert_equal(r, tgt)
numpy/core/tests/test_multiarray.py:417:        assert_equal(r, tgt)
numpy/core/tests/test_multiarray.py:421:        assert_equal(r, np.ones((1, 2, 6)))
numpy/core/tests/test_multiarray.py:425:        assert_equal(r, np.ones((2, 2, 6)))
numpy/core/tests/test_multiarray.py:429:        assert_equal(r, np.ones((2, 6, 6)))
numpy/core/tests/test_multiarray.py:433:        assert_equal(len(r), 2)
numpy/core/tests/test_multiarray.py:434:        assert_equal(r[0], [d, d + 1])
numpy/core/tests/test_multiarray.py:435:        assert_equal(r[1], d + 2)
numpy/core/tests/test_multiarray.py:441:        assert_equal(r, tgt)
numpy/core/tests/test_multiarray.py:443:        assert_equal(r, tgt.T)
numpy/core/tests/test_multiarray.py:446:        assert_raises(TypeError, np.array)
numpy/core/tests/test_multiarray.py:452:        assert_array_equal(e, [1, 3, 3])
numpy/core/tests/test_multiarray.py:455:        assert_array_equal(e, [1, 4, 3])
numpy/core/tests/test_multiarray.py:457:        assert_array_equal(d, [1, 4, 7])
numpy/core/tests/test_multiarray.py:464:        assert_array_equal(e, [[1, 2, -7], [1, 2, 3]])
numpy/core/tests/test_multiarray.py:465:        assert_array_equal(d, [[1, 3, 3], [1, 2, 3]])
numpy/core/tests/test_multiarray.py:469:        assert_array_equal(e, [[1, 3, 7], [1, 2, 3]])
numpy/core/tests/test_multiarray.py:470:        assert_array_equal(d, [[1, 5, 3], [1,2,3]])
numpy/core/tests/test_multiarray.py:474:        assert_(np.ascontiguousarray(d).flags.c_contiguous)
numpy/core/tests/test_multiarray.py:475:        assert_(np.ascontiguousarray(d).flags.f_contiguous)
numpy/core/tests/test_multiarray.py:476:        assert_(np.asfortranarray(d).flags.c_contiguous)
numpy/core/tests/test_multiarray.py:477:        assert_(np.asfortranarray(d).flags.f_contiguous)
numpy/core/tests/test_multiarray.py:479:        assert_(np.ascontiguousarray(d).flags.c_contiguous)
numpy/core/tests/test_multiarray.py:480:        assert_(np.asfortranarray(d).flags.f_contiguous)
numpy/core/tests/test_multiarray.py:516:        assert_equal(a, [[0, 1, 2], [0, 1, 2]])
numpy/core/tests/test_multiarray.py:518:        assert_equal(a, [[0, 0, 0], [1, 1, 1]])
numpy/core/tests/test_multiarray.py:529:        assert_equal(a, [[5, 4, 3], [2, 1, 0]])
numpy/core/tests/test_multiarray.py:535:        assert_raises(ValueError, assign, a, np.arange(12).reshape(2, 2, 3))
numpy/core/tests/test_multiarray.py:546:        assert_raises((AttributeError, TypeError), assign, C())
numpy/core/tests/test_multiarray.py:547:        assert_raises(ValueError, assign, [1])
numpy/core/tests/test_multiarray.py:566:        assert_equal(a1d[0], u'done')
numpy/core/tests/test_multiarray.py:580:        assert_raises(ValueError, operator.setitem, u, 0, [])
numpy/core/tests/test_multiarray.py:581:        assert_raises(ValueError, operator.setitem, b, 0, [])
numpy/core/tests/test_multiarray.py:583:        assert_raises(ValueError, operator.setitem, u, 0, bad_sequence())
numpy/core/tests/test_multiarray.py:584:        assert_raises(ValueError, operator.setitem, b, 0, bad_sequence())
numpy/core/tests/test_multiarray.py:597:            assert_equal(tiny1d[0], tinya)
numpy/core/tests/test_multiarray.py:601:            assert_equal(tiny1d[0], tinyb)
numpy/core/tests/test_multiarray.py:605:            assert_equal(tiny1d[0], tinya)
numpy/core/tests/test_multiarray.py:609:            assert_equal(tiny1d[0], tinyb)
numpy/core/tests/test_multiarray.py:613:            assert_equal(tiny1d[0], tinyb)
numpy/core/tests/test_multiarray.py:616:            assert_equal(arr[0], tinya)
numpy/core/tests/test_multiarray.py:624:        assert_equal(a[0], b"1.1234567890123457")
numpy/core/tests/test_multiarray.py:630:        assert_equal(d1, np.dtype(np.int32))
numpy/core/tests/test_multiarray.py:632:        assert_equal(d2, np.dtype(np.float64))
numpy/core/tests/test_multiarray.py:635:        assert_(np.dtype('<i4') != np.dtype('>i4'))
numpy/core/tests/test_multiarray.py:636:        assert_(np.dtype([('a', '<i4')]) != np.dtype([('a', '>i4')]))
numpy/core/tests/test_multiarray.py:641:        assert_equal(str(dt_int), "(numpy.int32, [('a', '<i2'), ('b', '<i2')])")
numpy/core/tests/test_multiarray.py:645:        assert_equal(repr(arr_int),
numpy/core/tests/test_multiarray.py:655:        assert_equal(a[...], 0)
numpy/core/tests/test_multiarray.py:656:        assert_equal(b[...], 'x')
numpy/core/tests/test_multiarray.py:657:        assert_(a[...].base is a)  # `a[...] is a` in numpy <1.9.
numpy/core/tests/test_multiarray.py:658:        assert_(b[...].base is b)  # `b[...] is b` in numpy <1.9.
numpy/core/tests/test_multiarray.py:662:        assert_equal(a[()], 0)
numpy/core/tests/test_multiarray.py:663:        assert_equal(b[()], 'x')
numpy/core/tests/test_multiarray.py:664:        assert_(type(a[()]) is a.dtype.type)
numpy/core/tests/test_multiarray.py:665:        assert_(type(b[()]) is str)
numpy/core/tests/test_multiarray.py:669:        assert_raises(IndexError, lambda x: x[0], a)
numpy/core/tests/test_multiarray.py:670:        assert_raises(IndexError, lambda x: x[0], b)
numpy/core/tests/test_multiarray.py:671:        assert_raises(IndexError, lambda x: x[np.array([], int)], a)
numpy/core/tests/test_multiarray.py:672:        assert_raises(IndexError, lambda x: x[np.array([], int)], b)
numpy/core/tests/test_multiarray.py:677:        assert_equal(a, 42)
numpy/core/tests/test_multiarray.py:679:        assert_equal(b.item(), '')
numpy/core/tests/test_multiarray.py:684:        assert_equal(a, 42)
numpy/core/tests/test_multiarray.py:686:        assert_equal(b.item(), '')
numpy/core/tests/test_multiarray.py:694:        assert_raises(IndexError, assign, a, 0, 42)
numpy/core/tests/test_multiarray.py:695:        assert_raises(IndexError, assign, b, 0, '')
numpy/core/tests/test_multiarray.py:696:        assert_raises(ValueError, assign, a, (), '')
numpy/core/tests/test_multiarray.py:700:        assert_equal(a[np.newaxis].shape, (1,))
numpy/core/tests/test_multiarray.py:701:        assert_equal(a[..., np.newaxis].shape, (1,))
numpy/core/tests/test_multiarray.py:702:        assert_equal(a[np.newaxis, ...].shape, (1,))
numpy/core/tests/test_multiarray.py:703:        assert_equal(a[..., np.newaxis].shape, (1,))
numpy/core/tests/test_multiarray.py:704:        assert_equal(a[np.newaxis, ..., np.newaxis].shape, (1, 1))
numpy/core/tests/test_multiarray.py:705:        assert_equal(a[..., np.newaxis, np.newaxis].shape, (1, 1))
numpy/core/tests/test_multiarray.py:706:        assert_equal(a[np.newaxis, np.newaxis, ...].shape, (1, 1))
numpy/core/tests/test_multiarray.py:707:        assert_equal(a[(np.newaxis,)*10].shape, (1,)*10)
numpy/core/tests/test_multiarray.py:715:        assert_raises(IndexError, subscript, a, (np.newaxis, 0))
numpy/core/tests/test_multiarray.py:716:        assert_raises(IndexError, subscript, a, (np.newaxis,)*50)
numpy/core/tests/test_multiarray.py:721:        assert_equal(x[()], 5)
numpy/core/tests/test_multiarray.py:724:        assert_equal(x[()], 6)
numpy/core/tests/test_multiarray.py:734:        assert_raises(ValueError, np.add, x, [1], x)
numpy/core/tests/test_multiarray.py:742:        assert_equal(xr, np.array(0))
numpy/core/tests/test_multiarray.py:743:        assert_(type(xr) is np.ndarray)
numpy/core/tests/test_multiarray.py:744:        assert_equal(xr.flags.contiguous, True)
numpy/core/tests/test_multiarray.py:745:        assert_equal(xr.flags.f_contiguous, True)
numpy/core/tests/test_multiarray.py:747:        assert_equal(xi, np.array(1))
numpy/core/tests/test_multiarray.py:748:        assert_(type(xi) is np.ndarray)
numpy/core/tests/test_multiarray.py:749:        assert_equal(xi.flags.contiguous, True)
numpy/core/tests/test_multiarray.py:750:        assert_equal(xi.flags.f_contiguous, True)
numpy/core/tests/test_multiarray.py:759:        assert_equal(a[...], 0)
numpy/core/tests/test_multiarray.py:760:        assert_equal(a[...].shape, ())
numpy/core/tests/test_multiarray.py:764:        assert_equal(a[()], 0)
numpy/core/tests/test_multiarray.py:765:        assert_equal(a[()].shape, ())
numpy/core/tests/test_multiarray.py:769:        assert_raises(IndexError, lambda x: x[0], a)
numpy/core/tests/test_multiarray.py:770:        assert_raises(IndexError, lambda x: x[np.array([], int)], a)
numpy/core/tests/test_multiarray.py:778:        assert_raises(TypeError, assign, a, 0, 42)
numpy/core/tests/test_multiarray.py:782:        assert_equal(a[np.newaxis].shape, (1,))
numpy/core/tests/test_multiarray.py:783:        assert_equal(a[..., np.newaxis].shape, (1,))
numpy/core/tests/test_multiarray.py:784:        assert_equal(a[np.newaxis, ...].shape, (1,))
numpy/core/tests/test_multiarray.py:785:        assert_equal(a[..., np.newaxis].shape, (1,))
numpy/core/tests/test_multiarray.py:786:        assert_equal(a[np.newaxis, ..., np.newaxis].shape, (1, 1))
numpy/core/tests/test_multiarray.py:787:        assert_equal(a[..., np.newaxis, np.newaxis].shape, (1, 1))
numpy/core/tests/test_multiarray.py:788:        assert_equal(a[np.newaxis, np.newaxis, ...].shape, (1, 1))
numpy/core/tests/test_multiarray.py:789:        assert_equal(a[(np.newaxis,)*10].shape, (1,)*10)
numpy/core/tests/test_multiarray.py:797:        assert_raises(IndexError, subscript, a, (np.newaxis, 0))
numpy/core/tests/test_multiarray.py:798:        assert_raises(IndexError, subscript, a, (np.newaxis,)*50)
numpy/core/tests/test_multiarray.py:804:        assert_equal(a, [1, 2, 3, 3])
numpy/core/tests/test_multiarray.py:808:        assert_equal(a, [0, 0, 1, 2])
numpy/core/tests/test_multiarray.py:813:        assert_equal(a, [3, 2, 1, 0])
numpy/core/tests/test_multiarray.py:817:        assert_equal(a, [[5, 4, 3], [2, 1, 0]])
numpy/core/tests/test_multiarray.py:821:        assert_equal(a, [[3, 4, 5], [0, 1, 2]])
numpy/core/tests/test_multiarray.py:826:        assert_equal(a, [2, 3, 4, 3, 4])
numpy/core/tests/test_multiarray.py:830:        assert_equal(a, [0, 1, 0, 1, 2])
numpy/core/tests/test_multiarray.py:834:        assert_equal(a, [4, 3, 2, 3, 4])
numpy/core/tests/test_multiarray.py:838:        assert_equal(a, [0, 1, 2, 1, 0])
numpy/core/tests/test_multiarray.py:842:        assert_equal(a, [2, 3, 4, 3, 4])
numpy/core/tests/test_multiarray.py:846:        assert_equal(a, [0, 1, 0, 1, 2])
numpy/core/tests/test_multiarray.py:858:        assert_raises(ValueError, np.array, x())
numpy/core/tests/test_multiarray.py:866:            assert_equal(np.array(nstr, dtype=type), result, err_msg=msg)
numpy/core/tests/test_multiarray.py:870:        assert arr.dtype == 'V8'  # current default
numpy/core/tests/test_multiarray.py:873:        assert arr.dtype == "V4"
numpy/core/tests/test_multiarray.py:884:        assert arr.dtype == "V4"
numpy/core/tests/test_multiarray.py:894:        assert_array_equal(arr, np.array([(1, 1), (2, 2)], dtype="i,i"))
numpy/core/tests/test_multiarray.py:913:        assert_raises(ValueError, np.empty, shape, dtype=np.int8)
numpy/core/tests/test_multiarray.py:914:        assert_raises(ValueError, np.zeros, shape, dtype=np.int8)
numpy/core/tests/test_multiarray.py:915:        assert_raises(ValueError, np.ones, shape, dtype=np.int8)
numpy/core/tests/test_multiarray.py:928:            assert_equal(np.count_nonzero(d), 0)
numpy/core/tests/test_multiarray.py:930:            assert_equal(d.sum(), 0)
numpy/core/tests/test_multiarray.py:931:            assert_(not d.any())
numpy/core/tests/test_multiarray.py:934:            assert_equal(np.count_nonzero(d), 0)
numpy/core/tests/test_multiarray.py:935:            assert_equal(d.sum(), 0)
numpy/core/tests/test_multiarray.py:936:            assert_(not d.any())
numpy/core/tests/test_multiarray.py:939:            assert_equal(np.count_nonzero(d), 0)
numpy/core/tests/test_multiarray.py:940:            assert_equal(d.sum(), 0)
numpy/core/tests/test_multiarray.py:941:            assert_(not d.any())
numpy/core/tests/test_multiarray.py:944:            assert_equal(np.count_nonzero(d), 0)
numpy/core/tests/test_multiarray.py:952:            assert_(not d.any())
numpy/core/tests/test_multiarray.py:961:        assert_array_equal(d, [0] * 13)
numpy/core/tests/test_multiarray.py:962:        assert_equal(np.count_nonzero(d), 0)
numpy/core/tests/test_multiarray.py:966:        assert_array_equal(d['k'], 0)
numpy/core/tests/test_multiarray.py:974:            assert_array_equal(np.zeros_like(d), d)
numpy/core/tests/test_multiarray.py:975:            assert_equal(np.zeros_like(d).dtype, d.dtype)
numpy/core/tests/test_multiarray.py:978:        assert_array_equal(np.zeros_like(d), d)
numpy/core/tests/test_multiarray.py:979:        assert_equal(np.zeros_like(d).dtype, d.dtype)
numpy/core/tests/test_multiarray.py:981:        assert_array_equal(np.zeros_like(d), d)
numpy/core/tests/test_multiarray.py:982:        assert_equal(np.zeros_like(d).dtype, d.dtype)
numpy/core/tests/test_multiarray.py:985:        assert_array_equal(np.zeros_like(d), d)
numpy/core/tests/test_multiarray.py:986:        assert_equal(np.zeros_like(d).dtype, d.dtype)
numpy/core/tests/test_multiarray.py:988:        assert_array_equal(np.zeros_like(d), d)
numpy/core/tests/test_multiarray.py:989:        assert_equal(np.zeros_like(d).dtype, d.dtype)
numpy/core/tests/test_multiarray.py:992:        assert_array_equal(np.zeros_like(d), d)
numpy/core/tests/test_multiarray.py:993:        assert_equal(np.zeros_like(d).dtype, d.dtype)
numpy/core/tests/test_multiarray.py:995:        assert_array_equal(np.zeros_like(d), d)
numpy/core/tests/test_multiarray.py:996:        assert_equal(np.zeros_like(d).dtype, d.dtype)
numpy/core/tests/test_multiarray.py:999:        assert_array_equal(np.zeros_like(d), d)
numpy/core/tests/test_multiarray.py:1000:        assert_equal(np.zeros_like(d).dtype, d.dtype)
numpy/core/tests/test_multiarray.py:1009:        assert_equal(np.array([4, 2**80]).dtype, object)
numpy/core/tests/test_multiarray.py:1010:        assert_equal(np.array([4, 2**80, 4]).dtype, object)
numpy/core/tests/test_multiarray.py:1011:        assert_equal(np.array([2**80, 4]).dtype, object)
numpy/core/tests/test_multiarray.py:1012:        assert_equal(np.array([2**80] * 3).dtype, object)
numpy/core/tests/test_multiarray.py:1013:        assert_equal(np.array([[1, 1],[1j, 1j]]).dtype, complex)
numpy/core/tests/test_multiarray.py:1014:        assert_equal(np.array([[1j, 1j],[1, 1]]).dtype, complex)
numpy/core/tests/test_multiarray.py:1015:        assert_equal(np.array([[1, 1, 1],[1, 1j, 1.], [1, 1, 1]]).dtype, complex)
numpy/core/tests/test_multiarray.py:1041:        assert_(a.shape == (1,))
numpy/core/tests/test_multiarray.py:1042:        assert_(a.dtype == np.dtype(object))
numpy/core/tests/test_multiarray.py:1043:        assert_raises(ValueError, np.array, [Fail()])
numpy/core/tests/test_multiarray.py:1057:        assert_equal(d.dtype, np.dtype(object))
numpy/core/tests/test_multiarray.py:1068:        assert_equal(len(a), 0)
numpy/core/tests/test_multiarray.py:1098:        assert_equal(len(np.array(d)), 3)
numpy/core/tests/test_multiarray.py:1112:            assert_raises(ValueError, np.ndarray, buffer=buf, strides=(0,),
numpy/core/tests/test_multiarray.py:1120:        assert_equal(a, b)
numpy/core/tests/test_multiarray.py:1126:        assert_equal(a.shape, (3,))
numpy/core/tests/test_multiarray.py:1127:        assert_equal(a.dtype, object)
numpy/core/tests/test_multiarray.py:1130:        assert_equal(a.shape, (3,))
numpy/core/tests/test_multiarray.py:1131:        assert_equal(a.dtype, object)
numpy/core/tests/test_multiarray.py:1134:        assert_equal(a.shape, (3,))
numpy/core/tests/test_multiarray.py:1135:        assert_equal(a.dtype, object)
numpy/core/tests/test_multiarray.py:1140:        assert_equal(a.shape, (3,))
numpy/core/tests/test_multiarray.py:1141:        assert_equal(a.dtype, object)
numpy/core/tests/test_multiarray.py:1144:        assert_equal(a.shape, (3,))
numpy/core/tests/test_multiarray.py:1145:        assert_equal(a.dtype, object)
numpy/core/tests/test_multiarray.py:1148:        assert a.shape == (3,)
numpy/core/tests/test_multiarray.py:1149:        assert a.dtype == object
numpy/core/tests/test_multiarray.py:1154:        assert np.array(outer).shape == (2,)
numpy/core/tests/test_multiarray.py:1155:        assert np.array([outer]).shape == (1, 2)
numpy/core/tests/test_multiarray.py:1161:        assert np.array(outer_ragged).shape == (2,)
numpy/core/tests/test_multiarray.py:1162:        assert np.array([outer_ragged]).shape == (1, 2,)
numpy/core/tests/test_multiarray.py:1177:        assert_array_equal(a.T['a'], a['a'].transpose(1, 0, 2, 3))
numpy/core/tests/test_multiarray.py:1182:        assert_equal(a['a'].shape, b['a'].shape)
numpy/core/tests/test_multiarray.py:1183:        assert_equal(a.T['a'].shape, a.T.copy()['a'].shape)
numpy/core/tests/test_multiarray.py:1192:        assert_equal(a == b, [True, True])
numpy/core/tests/test_multiarray.py:1193:        assert_equal(a != b, [False, False])
numpy/core/tests/test_multiarray.py:1195:        assert_equal(a == b, [True, False])
numpy/core/tests/test_multiarray.py:1196:        assert_equal(a != b, [False, True])
numpy/core/tests/test_multiarray.py:1200:            assert_equal(a == b, [False, False])
numpy/core/tests/test_multiarray.py:1201:            assert_equal(a != b, [True, True])
numpy/core/tests/test_multiarray.py:1206:                assert_equal(a == b, [False, True])
numpy/core/tests/test_multiarray.py:1207:                assert_equal(a != b, [True, False])
numpy/core/tests/test_multiarray.py:1212:        assert_equal(a == b, [[True, True, False], [False, False, True]])
numpy/core/tests/test_multiarray.py:1213:        assert_equal(b == a, [[True, True, False], [False, False, True]])
numpy/core/tests/test_multiarray.py:1216:        assert_equal(a == b, [[True, True, False], [False, False, True]])
numpy/core/tests/test_multiarray.py:1217:        assert_equal(b == a, [[True, True, False], [False, False, True]])
numpy/core/tests/test_multiarray.py:1220:        assert_equal(a == b, [[True, False, False], [False, False, True]])
numpy/core/tests/test_multiarray.py:1221:        assert_equal(b == a, [[True, False, False], [False, False, True]])
numpy/core/tests/test_multiarray.py:1226:        assert_equal(a == b, [[True, False, False], [False, False, True]])
numpy/core/tests/test_multiarray.py:1227:        assert_equal(b == a, [[True, False, False], [False, False, True]])
numpy/core/tests/test_multiarray.py:1237:            assert_equal(x == y, False)
numpy/core/tests/test_multiarray.py:1246:            assert_equal(x == y, False)
numpy/core/tests/test_multiarray.py:1252:        assert_equal(a == b, [False, True])
numpy/core/tests/test_multiarray.py:1258:        assert_(np.can_cast(a.dtype, [('a', '>i4')], casting='unsafe'))
numpy/core/tests/test_multiarray.py:1260:        assert_equal(b, a.byteswap().newbyteorder())
numpy/core/tests/test_multiarray.py:1261:        assert_equal(a['a'][0], b['a'][0])
numpy/core/tests/test_multiarray.py:1267:        assert_(np.can_cast(a.dtype, b.dtype, casting='equiv'))
numpy/core/tests/test_multiarray.py:1268:        assert_equal(a == b, [True, True])
numpy/core/tests/test_multiarray.py:1271:        assert_(np.can_cast(a.dtype, b.dtype, casting='equiv'))
numpy/core/tests/test_multiarray.py:1273:        assert_equal(a == c, [True, True])
numpy/core/tests/test_multiarray.py:1278:        assert_(np.can_cast(a.dtype, t, casting='safe'))
numpy/core/tests/test_multiarray.py:1280:        assert_equal((c == np.array([(5, 42), (10, 1)], dtype=t)),
numpy/core/tests/test_multiarray.py:1286:        assert_(np.can_cast(a.dtype, t, casting='same_kind'))
numpy/core/tests/test_multiarray.py:1288:        assert_equal((c == np.array([(5, 42), (10, 1)], dtype=t)),
numpy/core/tests/test_multiarray.py:1294:        assert_(not np.can_cast(a.dtype, t, casting='safe'))
numpy/core/tests/test_multiarray.py:1295:        assert_raises(TypeError, a.astype, t, casting='safe')
numpy/core/tests/test_multiarray.py:1297:        assert_(not np.can_cast(a.dtype, t, casting='equiv'))
numpy/core/tests/test_multiarray.py:1298:        assert_raises(TypeError, a.astype, t, casting='equiv')
numpy/core/tests/test_multiarray.py:1300:        assert_(not np.can_cast(a.dtype, t, casting='same_kind'))
numpy/core/tests/test_multiarray.py:1301:        assert_raises(TypeError, a.astype, t, casting='same_kind')
numpy/core/tests/test_multiarray.py:1302:        assert_(not np.can_cast(a.dtype, b.dtype, casting='no'))
numpy/core/tests/test_multiarray.py:1303:        assert_raises(TypeError, a.astype, b.dtype, casting='no')
numpy/core/tests/test_multiarray.py:1308:            assert_(not np.can_cast(a.dtype, t, casting=casting))
numpy/core/tests/test_multiarray.py:1310:            assert_(not np.can_cast(a.dtype, t, casting=casting))
numpy/core/tests/test_multiarray.py:1328:        assert_equal(x[0]['field'], np.ones(10, dtype='i4'))
numpy/core/tests/test_multiarray.py:1336:        assert_equal(b[0]['x'], np.arange(3))
numpy/core/tests/test_multiarray.py:1344:        assert_raises(ValueError, testassign)
numpy/core/tests/test_multiarray.py:1353:        assert_equal(x['S'], [b'', b'', b'', b''])
numpy/core/tests/test_multiarray.py:1354:        assert_equal(x['S'].itemsize, 0)
numpy/core/tests/test_multiarray.py:1357:        assert_equal(x['S'], [b'', b'', b'', b''])
numpy/core/tests/test_multiarray.py:1358:        assert_equal(x['I'], [0, 0, 0, 0])
numpy/core/tests/test_multiarray.py:1362:        assert_equal(x['S'], [b'', b'', b'', b''])
numpy/core/tests/test_multiarray.py:1363:        assert_equal(x['I'], [0, 0, 0, 0])
numpy/core/tests/test_multiarray.py:1367:        assert_equal(x['S'], [b'', b'', b'', b''])
numpy/core/tests/test_multiarray.py:1368:        assert_equal(x['I'], [0, 0, 0, 0])
numpy/core/tests/test_multiarray.py:1372:        assert_equal(y.itemsize, 0)
numpy/core/tests/test_multiarray.py:1373:        assert_equal(x['S'], y)
numpy/core/tests/test_multiarray.py:1376:        assert_equal(np.zeros(4, dtype=[('a', 'S0,S0'),
numpy/core/tests/test_multiarray.py:1378:        assert_equal(np.empty(3, dtype='S0,S0').itemsize, 0)
numpy/core/tests/test_multiarray.py:1379:        assert_equal(np.zeros(4, dtype='S0,u1')['f0'].itemsize, 0)
numpy/core/tests/test_multiarray.py:1382:        assert_equal(xx.itemsize, 0)
numpy/core/tests/test_multiarray.py:1383:        assert_equal(xx, [[b'', b''], [b'', b'']])
numpy/core/tests/test_multiarray.py:1385:        assert_equal(xx[:].dtype, xx.dtype)
numpy/core/tests/test_multiarray.py:1386:        assert_array_equal(eval(repr(xx), dict(array=np.array)), xx)
numpy/core/tests/test_multiarray.py:1393:        assert_equal(yy.itemsize, 0)
numpy/core/tests/test_multiarray.py:1394:        assert_equal(xx, yy)
numpy/core/tests/test_multiarray.py:1399:            assert_equal(yy.itemsize, 0)
numpy/core/tests/test_multiarray.py:1400:            assert_equal(xx, yy)
numpy/core/tests/test_multiarray.py:1405:        assert_(b.base is a)
numpy/core/tests/test_multiarray.py:1424:        assert_equal(testassign(arr, v1), ans)
numpy/core/tests/test_multiarray.py:1425:        assert_equal(testassign(arr, v2), ans)
numpy/core/tests/test_multiarray.py:1426:        assert_equal(testassign(arr, v3), ans)
numpy/core/tests/test_multiarray.py:1427:        assert_raises(ValueError, lambda: testassign(arr, v4))
numpy/core/tests/test_multiarray.py:1428:        assert_equal(testassign(arr, v5), ans)
numpy/core/tests/test_multiarray.py:1430:        assert_equal(arr, np.array([(1,4),(1,4)], dtype=dt))
numpy/core/tests/test_multiarray.py:1436:        assert_equal(a[0].item(), (2,1,3))
numpy/core/tests/test_multiarray.py:1442:        assert_equal(a[0].item(), (2,1))
numpy/core/tests/test_multiarray.py:1452:        assert_equal(x[["f0","f1"]][0], x[0][["f0","f1"]])
numpy/core/tests/test_multiarray.py:1453:        assert_equal(x[0], x[0][()])
numpy/core/tests/test_multiarray.py:1457:        assert_raises(KeyError, lambda : a[['a','c']])
numpy/core/tests/test_multiarray.py:1458:        assert_raises(KeyError, lambda : a[['a','a']])
numpy/core/tests/test_multiarray.py:1459:        assert_raises(ValueError, lambda : a[['b','b']])  # field exists, but repeated
numpy/core/tests/test_multiarray.py:1469:        assert np.asarray(scalar).base is scalar
numpy/core/tests/test_multiarray.py:1471:        assert np.asarray(scalar, dtype=scalar.dtype).base is None
numpy/core/tests/test_multiarray.py:1475:        assert scalar.flags.owndata
numpy/core/tests/test_multiarray.py:1476:        assert np.asarray(scalar).base is None
numpy/core/tests/test_multiarray.py:1482:        assert_(a0 is b0)
numpy/core/tests/test_multiarray.py:1485:        assert_(a1 is b1)
numpy/core/tests/test_multiarray.py:1486:        assert_(np.array([True])[0] is a1)
numpy/core/tests/test_multiarray.py:1487:        assert_(np.array(True)[()] is a1)
numpy/core/tests/test_multiarray.py:1491:        assert_equal(d.sum(), d.size)
numpy/core/tests/test_multiarray.py:1492:        assert_equal(d[::2].sum(), d[::2].size)
numpy/core/tests/test_multiarray.py:1493:        assert_equal(d[::-2].sum(), d[::-2].size)
numpy/core/tests/test_multiarray.py:1496:        assert_equal(d.sum(), d.size)
numpy/core/tests/test_multiarray.py:1497:        assert_equal(d[::2].sum(), d[::2].size)
numpy/core/tests/test_multiarray.py:1498:        assert_equal(d[::-2].sum(), d[::-2].size)
numpy/core/tests/test_multiarray.py:1506:            assert_equal(np.count_nonzero(a), c)
numpy/core/tests/test_multiarray.py:1509:            assert_equal(np.count_nonzero(a), c)
numpy/core/tests/test_multiarray.py:1511:            assert_equal(np.count_nonzero(a), c)
numpy/core/tests/test_multiarray.py:1513:            assert_equal(np.count_nonzero(a), c)
numpy/core/tests/test_multiarray.py:1531:            assert_equal(np.count_nonzero(a), builtins.sum(a.tolist()))
numpy/core/tests/test_multiarray.py:1534:            assert_equal(np.count_nonzero(a), builtins.sum(a.tolist()))
numpy/core/tests/test_multiarray.py:1540:            assert_equal(bool(v), False)
numpy/core/tests/test_multiarray.py:1541:            assert_equal(bool(v[()]), False)
numpy/core/tests/test_multiarray.py:1542:            assert_equal(v.astype(bool), False)
numpy/core/tests/test_multiarray.py:1543:            assert_(isinstance(v.astype(bool), np.ndarray))
numpy/core/tests/test_multiarray.py:1544:            assert_(v[()].astype(bool) is np.False_)
numpy/core/tests/test_multiarray.py:1550:                assert_equal(bool(v), True)
numpy/core/tests/test_multiarray.py:1551:                assert_equal(bool(v[()]), True)
numpy/core/tests/test_multiarray.py:1552:                assert_equal(v.astype(bool), True)
numpy/core/tests/test_multiarray.py:1553:                assert_(isinstance(v.astype(bool), np.ndarray))
numpy/core/tests/test_multiarray.py:1554:                assert_(v[()].astype(bool) is np.True_)
numpy/core/tests/test_multiarray.py:1581:        assert_equal(zs.itemsize, 0)
numpy/core/tests/test_multiarray.py:1583:        assert_equal(zs.itemsize, 0)
numpy/core/tests/test_multiarray.py:1585:        assert_equal(zs.itemsize, 0)
numpy/core/tests/test_multiarray.py:1621:            assert_equal(zs.view(dt).dtype, np.dtype(dt))
numpy/core/tests/test_multiarray.py:1624:            assert_equal(zs.view((dt, 1)).shape, (0,))
numpy/core/tests/test_multiarray.py:1628:        assert_equal(zs, pickle.loads(zs.dumps()))
numpy/core/tests/test_multiarray.py:1637:                assert_equal(zs.dtype, zs2.dtype)
numpy/core/tests/test_multiarray.py:1646:        assert pk_load.size == 0
numpy/core/tests/test_multiarray.py:1661:        assert array_from_buffer[0] == -1, array_from_buffer[0]
numpy/core/tests/test_multiarray.py:1679:            assert_equal(a.all(axis=_ax, where=wh_lower),
numpy/core/tests/test_multiarray.py:1681:            assert_equal(np.all(a, axis=_ax, where=wh_lower),
numpy/core/tests/test_multiarray.py:1684:        assert_equal(a.all(where=wh_full), True)
numpy/core/tests/test_multiarray.py:1685:        assert_equal(np.all(a, where=wh_full), True)
numpy/core/tests/test_multiarray.py:1686:        assert_equal(a.all(where=False), True)
numpy/core/tests/test_multiarray.py:1687:        assert_equal(np.all(a, where=False), True)
numpy/core/tests/test_multiarray.py:1700:            assert_equal(a.any(axis=_ax, where=wh_middle),
numpy/core/tests/test_multiarray.py:1702:            assert_equal(np.any(a, axis=_ax, where=wh_middle),
numpy/core/tests/test_multiarray.py:1704:        assert_equal(a.any(where=wh_full), False)
numpy/core/tests/test_multiarray.py:1705:        assert_equal(np.any(a, where=wh_full), False)
numpy/core/tests/test_multiarray.py:1706:        assert_equal(a.any(where=False), False)
numpy/core/tests/test_multiarray.py:1707:        assert_equal(np.any(a, where=False), False)
numpy/core/tests/test_multiarray.py:1713:        assert_equal(out, tgt)
numpy/core/tests/test_multiarray.py:1717:        assert_equal(out, tgt)
numpy/core/tests/test_multiarray.py:1722:        assert_equal(out, tgt)
numpy/core/tests/test_multiarray.py:1726:        assert_equal(out, 1)
numpy/core/tests/test_multiarray.py:1736:        assert_equal(A, [2, 2, 3])
numpy/core/tests/test_multiarray.py:1739:        assert_equal(A, [[2, 2, 3], [2, 2, 3]])
numpy/core/tests/test_multiarray.py:1742:        assert_equal(A, [[2, 2, 3], [2, 2, 3]])
numpy/core/tests/test_multiarray.py:1746:        assert_raises(TypeError, oned.choose,np.void(0), [oned])
numpy/core/tests/test_multiarray.py:1750:        assert out is ret
numpy/core/tests/test_multiarray.py:1751:        assert_equal(out[()], 20)
numpy/core/tests/test_multiarray.py:1756:        assert_equal(y, np.array([0, 1, 2]))
numpy/core/tests/test_multiarray.py:1767:                assert_raises(ArithmeticError, a.prod)
numpy/core/tests/test_multiarray.py:1768:                assert_raises(ArithmeticError, a2.prod, axis=1)
numpy/core/tests/test_multiarray.py:1770:                assert_equal(a.prod(axis=0), 26400)
numpy/core/tests/test_multiarray.py:1771:                assert_array_equal(a2.prod(axis=0),
numpy/core/tests/test_multiarray.py:1773:                assert_array_equal(a2.prod(axis=-1),
numpy/core/tests/test_multiarray.py:1811:        assert_equal(arr.reshape(2, 6), tgt)
numpy/core/tests/test_multiarray.py:1814:        assert_equal(arr.reshape(3, 4), tgt)
numpy/core/tests/test_multiarray.py:1817:        assert_equal(arr.reshape((3, 4), order='F'), tgt)
numpy/core/tests/test_multiarray.py:1820:        assert_equal(arr.T.reshape((3, 4), order='C'), tgt)
numpy/core/tests/test_multiarray.py:1824:            assert_equal(arr.round(*round_args), expected)
numpy/core/tests/test_multiarray.py:1828:            assert_equal(out, expected)
numpy/core/tests/test_multiarray.py:1829:            assert out is res
numpy/core/tests/test_multiarray.py:1841:        assert_equal(a.squeeze(), [1, 2, 3])
numpy/core/tests/test_multiarray.py:1842:        assert_equal(a.squeeze(axis=(0,)), [[1], [2], [3]])
numpy/core/tests/test_multiarray.py:1843:        assert_raises(ValueError, a.squeeze, axis=(1,))
numpy/core/tests/test_multiarray.py:1844:        assert_equal(a.squeeze(axis=(2,)), [[1, 2, 3]])
numpy/core/tests/test_multiarray.py:1848:        assert_equal(a.transpose(), [[1, 3], [2, 4]])
numpy/core/tests/test_multiarray.py:1849:        assert_raises(ValueError, lambda: a.transpose(0))
numpy/core/tests/test_multiarray.py:1850:        assert_raises(ValueError, lambda: a.transpose(0, 0))
numpy/core/tests/test_multiarray.py:1851:        assert_raises(ValueError, lambda: a.transpose(0, 1, 2))
numpy/core/tests/test_multiarray.py:1863:        assert_equal(b, a[::-1], msg)
numpy/core/tests/test_multiarray.py:1870:        assert_equal(b, a[::-1], msg)
numpy/core/tests/test_multiarray.py:1888:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:1891:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:1903:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:1906:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:1928:            assert_equal(c, ai, msg)
numpy/core/tests/test_multiarray.py:1931:            assert_equal(c, ai, msg)
numpy/core/tests/test_multiarray.py:1941:                assert_equal(c, arr, msg)
numpy/core/tests/test_multiarray.py:1952:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:1955:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:1966:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:1969:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:1980:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:1983:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:1994:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:1997:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:2007:        assert_equal(d, b, "test sort with axis=0")
numpy/core/tests/test_multiarray.py:2010:        assert_equal(d, c, "test sort with axis=1")
numpy/core/tests/test_multiarray.py:2013:        assert_equal(d, c, "test sort with default axis")
numpy/core/tests/test_multiarray.py:2021:            assert_equal(np.sort(a, axis=axis), a, msg)
numpy/core/tests/test_multiarray.py:2023:        assert_equal(np.sort(a, axis=None), a.ravel(), msg)
numpy/core/tests/test_multiarray.py:2037:            assert_equal(c, a, msg)
numpy/core/tests/test_multiarray.py:2056:            assert_raises(TypeError, arr.sort, kind=kind)
numpy/core/tests/test_multiarray.py:2065:            assert_raises(TypeError, arr.sort, kind=kind)
numpy/core/tests/test_multiarray.py:2079:        assert_equal(np.sort(d), do)
numpy/core/tests/test_multiarray.py:2080:        assert_equal(d[np.argsort(d)], do)
numpy/core/tests/test_multiarray.py:2084:            assert_(arr.flags.fortran)
numpy/core/tests/test_multiarray.py:2085:            assert_(arr.flags.f_contiguous)
numpy/core/tests/test_multiarray.py:2086:            assert_(not arr.flags.c_contiguous)
numpy/core/tests/test_multiarray.py:2089:            assert_(not arr.flags.fortran)
numpy/core/tests/test_multiarray.py:2090:            assert_(not arr.flags.f_contiguous)
numpy/core/tests/test_multiarray.py:2091:            assert_(arr.flags.c_contiguous)
numpy/core/tests/test_multiarray.py:2095:        assert_c(a.copy())
numpy/core/tests/test_multiarray.py:2096:        assert_c(a.copy('C'))
numpy/core/tests/test_multiarray.py:2097:        assert_fortran(a.copy('F'))
numpy/core/tests/test_multiarray.py:2098:        assert_fortran(a.copy('A'))
numpy/core/tests/test_multiarray.py:2102:        assert_c(a.copy())
numpy/core/tests/test_multiarray.py:2103:        assert_c(a.copy('C'))
numpy/core/tests/test_multiarray.py:2104:        assert_fortran(a.copy('F'))
numpy/core/tests/test_multiarray.py:2105:        assert_c(a.copy('A'))
numpy/core/tests/test_multiarray.py:2115:        assert_equal(r.id, np.array([14, 21, 32]))
numpy/core/tests/test_multiarray.py:2116:        assert_equal(r.word, np.array(['name', 'my', 'first']))
numpy/core/tests/test_multiarray.py:2117:        assert_equal(r.number, np.array([6.2, 3.1, 4.5]))
numpy/core/tests/test_multiarray.py:2120:        assert_equal(r.id, np.array([32, 21, 14]))
numpy/core/tests/test_multiarray.py:2121:        assert_equal(r.word, np.array(['first', 'my', 'name']))
numpy/core/tests/test_multiarray.py:2122:        assert_equal(r.number, np.array([4.5, 3.1, 6.2]))
numpy/core/tests/test_multiarray.py:2125:        assert_equal(r.id, np.array([21, 32, 14]))
numpy/core/tests/test_multiarray.py:2126:        assert_equal(r.word, np.array(['my', 'first', 'name']))
numpy/core/tests/test_multiarray.py:2127:        assert_equal(r.number, np.array([3.1, 4.5, 6.2]))
numpy/core/tests/test_multiarray.py:2129:        assert_raises_regex(ValueError, 'duplicate',
numpy/core/tests/test_multiarray.py:2140:        assert_equal(r['col2'], [1, 3, 255, 258])
numpy/core/tests/test_multiarray.py:2141:        assert_equal(r, np.array([('a', 1), ('c', 3), ('b', 255), ('d', 258)],
numpy/core/tests/test_multiarray.py:2156:                assert_equal(a.copy().argsort(kind=kind), a, msg)
numpy/core/tests/test_multiarray.py:2157:                assert_equal(b.copy().argsort(kind=kind), b, msg)
numpy/core/tests/test_multiarray.py:2165:            assert_equal(ai.copy().argsort(kind=kind), a, msg)
numpy/core/tests/test_multiarray.py:2166:            assert_equal(bi.copy().argsort(kind=kind), b, msg)
numpy/core/tests/test_multiarray.py:2171:            assert_equal(ai.copy().argsort(kind=kind), a, msg)
numpy/core/tests/test_multiarray.py:2172:            assert_equal(bi.copy().argsort(kind=kind), b, msg)
numpy/core/tests/test_multiarray.py:2179:                assert_equal(arr.argsort(),
numpy/core/tests/test_multiarray.py:2190:            assert_equal(a.copy().argsort(kind=kind), r, msg)
numpy/core/tests/test_multiarray.py:2191:            assert_equal(b.copy().argsort(kind=kind), rr, msg)
numpy/core/tests/test_multiarray.py:2201:            assert_equal(a.copy().argsort(kind=kind), r, msg)
numpy/core/tests/test_multiarray.py:2202:            assert_equal(b.copy().argsort(kind=kind), rr, msg)
numpy/core/tests/test_multiarray.py:2212:            assert_equal(a.copy().argsort(kind=kind), r, msg)
numpy/core/tests/test_multiarray.py:2213:            assert_equal(b.copy().argsort(kind=kind), rr, msg)
numpy/core/tests/test_multiarray.py:2223:            assert_equal(a.copy().argsort(kind=kind), r, msg)
numpy/core/tests/test_multiarray.py:2224:            assert_equal(b.copy().argsort(kind=kind), rr, msg)
numpy/core/tests/test_multiarray.py:2233:            assert_equal(a.copy().argsort(kind=kind), r, msg)
numpy/core/tests/test_multiarray.py:2234:            assert_equal(b.copy().argsort(kind=kind), rr, msg)
numpy/core/tests/test_multiarray.py:2243:            assert_equal(a.copy().argsort(kind=kind), r, msg)
numpy/core/tests/test_multiarray.py:2244:            assert_equal(b.copy().argsort(kind=kind), rr, msg)
numpy/core/tests/test_multiarray.py:2251:        assert_equal(a.copy().argsort(axis=0), b)
numpy/core/tests/test_multiarray.py:2252:        assert_equal(a.copy().argsort(axis=1), c)
numpy/core/tests/test_multiarray.py:2253:        assert_equal(a.copy().argsort(), c)
numpy/core/tests/test_multiarray.py:2260:            assert_equal(np.argsort(a, axis=axis),
numpy/core/tests/test_multiarray.py:2263:        assert_equal(np.argsort(a, axis=None),
numpy/core/tests/test_multiarray.py:2270:        assert_equal(a.argsort(kind='m'), r)
numpy/core/tests/test_multiarray.py:2273:        assert_equal(a.argsort(kind='m'), r)
numpy/core/tests/test_multiarray.py:2276:        assert_equal(a.argsort(kind='m'), r)
numpy/core/tests/test_multiarray.py:2279:        assert_equal(a.argsort(kind='m'), r)
numpy/core/tests/test_multiarray.py:2284:        assert_raises(ValueError, d.sort, kind=k)
numpy/core/tests/test_multiarray.py:2285:        assert_raises(ValueError, d.argsort, kind=k)
numpy/core/tests/test_multiarray.py:2298:        assert_equal(b, np.arange(3), msg)
numpy/core/tests/test_multiarray.py:2301:        assert_equal(b, np.arange(1, 4), msg)
numpy/core/tests/test_multiarray.py:2310:        assert_equal(b, np.arange(9), msg)
numpy/core/tests/test_multiarray.py:2313:        assert_equal(b, np.arange(1, 10), msg)
numpy/core/tests/test_multiarray.py:2317:        assert_equal(b, 1, msg)
numpy/core/tests/test_multiarray.py:2321:        assert_equal(b, 1, msg)
numpy/core/tests/test_multiarray.py:2326:        assert_equal(b, [0, 0, 0])
numpy/core/tests/test_multiarray.py:2328:        assert_equal(b, [0, 0, 0])
numpy/core/tests/test_multiarray.py:2332:        assert_equal(b, [0, 0, 1])
numpy/core/tests/test_multiarray.py:2334:        assert_equal(b, [0, 1, 1])
numpy/core/tests/test_multiarray.py:2338:        assert_equal(b, [0, 0, 2])
numpy/core/tests/test_multiarray.py:2340:        assert_equal(b, [0, 2, 2])
numpy/core/tests/test_multiarray.py:2349:        assert_equal(b, a)
numpy/core/tests/test_multiarray.py:2351:        assert_equal(b, a + 1)
numpy/core/tests/test_multiarray.py:2354:        assert_equal(b, a)
numpy/core/tests/test_multiarray.py:2356:        assert_equal(b, a + 1)
numpy/core/tests/test_multiarray.py:2361:        assert_equal(b, [5, 5, 4])
numpy/core/tests/test_multiarray.py:2363:        assert_equal(b, [5, 5, 5])
numpy/core/tests/test_multiarray.py:2378:            assert_equal(b, out)
numpy/core/tests/test_multiarray.py:2380:            assert_equal(b, out + 1)
numpy/core/tests/test_multiarray.py:2385:            assert_array_equal(b, np.zeros(len(a), dtype=np.intp))
numpy/core/tests/test_multiarray.py:2387:            assert_array_equal(b, np.zeros(0, dtype=np.intp))
numpy/core/tests/test_multiarray.py:2411:        assert_equal([a.searchsorted(v, 'left') for v in a], ind)
numpy/core/tests/test_multiarray.py:2412:        assert_equal([a.searchsorted(v, 'right') for v in a], ind + 1)
numpy/core/tests/test_multiarray.py:2413:        assert_equal([a.searchsorted(a[i], 'left') for i in ind], ind)
numpy/core/tests/test_multiarray.py:2414:        assert_equal([a.searchsorted(a[i], 'right') for i in ind], ind + 1)
numpy/core/tests/test_multiarray.py:2421:        assert_raises(TypeError, np.searchsorted, a, 0, sorter=[1.1])
numpy/core/tests/test_multiarray.py:2422:        assert_raises(ValueError, np.searchsorted, a, 0, sorter=[1, 2, 3, 4])
numpy/core/tests/test_multiarray.py:2423:        assert_raises(ValueError, np.searchsorted, a, 0, sorter=[1, 2, 3, 4, 5, 6])
numpy/core/tests/test_multiarray.py:2426:        assert_raises(ValueError, np.searchsorted, a, 4, sorter=[0, 1, 2, 3, 5])
numpy/core/tests/test_multiarray.py:2427:        assert_raises(ValueError, np.searchsorted, a, 0, sorter=[-1, 0, 1, 2, 3])
numpy/core/tests/test_multiarray.py:2428:        assert_raises(ValueError, np.searchsorted, a, 0, sorter=[4, 0, -1, 2, 3])
numpy/core/tests/test_multiarray.py:2435:        assert_equal(b.searchsorted(k), a.searchsorted(k, sorter=s))
numpy/core/tests/test_multiarray.py:2441:        assert_equal(a.searchsorted(k, side='left', sorter=s), expected)
numpy/core/tests/test_multiarray.py:2443:        assert_equal(a.searchsorted(k, side='right', sorter=s), expected)
numpy/core/tests/test_multiarray.py:2455:        assert_equal(b, keys)
numpy/core/tests/test_multiarray.py:2457:        assert_equal(b, keys + 1)
numpy/core/tests/test_multiarray.py:2461:        assert_equal(b, keys)
numpy/core/tests/test_multiarray.py:2463:        assert_equal(b, keys + 1)
numpy/core/tests/test_multiarray.py:2484:            assert_equal(b, out)
numpy/core/tests/test_multiarray.py:2486:            assert_equal(b, out + 1)
numpy/core/tests/test_multiarray.py:2491:            assert_array_equal(b, np.zeros(len(a), dtype=np.intp))
numpy/core/tests/test_multiarray.py:2493:            assert_array_equal(b, np.zeros(0, dtype=np.intp))
numpy/core/tests/test_multiarray.py:2503:        assert_equal(b, out)
numpy/core/tests/test_multiarray.py:2505:        assert_equal(b, out + 1)
numpy/core/tests/test_multiarray.py:2514:        assert_(not isinstance(a.searchsorted(b, 'left'), A))
numpy/core/tests/test_multiarray.py:2515:        assert_(not isinstance(a.searchsorted(b, 'right'), A))
numpy/core/tests/test_multiarray.py:2516:        assert_(not isinstance(a.searchsorted(b, 'left', s), A))
numpy/core/tests/test_multiarray.py:2517:        assert_(not isinstance(a.searchsorted(b, 'right', s), A))
numpy/core/tests/test_multiarray.py:2523:        assert_raises(ValueError, d.argpartition, 10)
numpy/core/tests/test_multiarray.py:2524:        assert_raises(ValueError, d.argpartition, -11)
numpy/core/tests/test_multiarray.py:2530:        assert_raises(ValueError, d.partition, 10)
numpy/core/tests/test_multiarray.py:2531:        assert_raises(ValueError, d.partition, -11)
numpy/core/tests/test_multiarray.py:2536:        assert_raises(TypeError, d.argpartition, 9.)
numpy/core/tests/test_multiarray.py:2540:        assert_raises(TypeError, d_obj.argpartition, 9.)
numpy/core/tests/test_multiarray.py:2545:        assert_raises(TypeError, d.partition, 9.)
numpy/core/tests/test_multiarray.py:2549:        assert_raises(TypeError, d_obj.partition, 9.)
numpy/core/tests/test_multiarray.py:2559:            assert_equal(np.partition(a, kth, axis=axis), a, msg)
numpy/core/tests/test_multiarray.py:2561:        assert_equal(np.partition(a, kth, axis=None), a.ravel(), msg)
numpy/core/tests/test_multiarray.py:2571:            assert_equal(np.partition(a, kth, axis=axis),
numpy/core/tests/test_multiarray.py:2574:        assert_equal(np.partition(a, kth, axis=None),
numpy/core/tests/test_multiarray.py:2579:        assert_raises(TypeError, np.partition, d, 2, kind=1)
numpy/core/tests/test_multiarray.py:2580:        assert_raises(ValueError, np.partition, d, 2, kind="nonsense")
numpy/core/tests/test_multiarray.py:2581:        assert_raises(ValueError, np.argpartition, d, 2, kind="nonsense")
numpy/core/tests/test_multiarray.py:2582:        assert_raises(ValueError, d.partition, 2, axis=0, kind="nonsense")
numpy/core/tests/test_multiarray.py:2583:        assert_raises(ValueError, d.argpartition, 2, axis=0, kind="nonsense")
numpy/core/tests/test_multiarray.py:2586:            assert_array_equal(np.partition(d, 0, kind=k), d)
numpy/core/tests/test_multiarray.py:2587:            assert_array_equal(np.argpartition(d, 0, kind=k), d)
numpy/core/tests/test_multiarray.py:2589:            assert_array_equal(np.partition(d, 0, kind=k)[0], d)
numpy/core/tests/test_multiarray.py:2590:            assert_array_equal(d[np.argpartition(d, 0, kind=k)],
numpy/core/tests/test_multiarray.py:2597:            assert_array_equal(kth, okth)
numpy/core/tests/test_multiarray.py:2602:                assert_array_equal(np.partition(d, 0, kind=k)[0], tgt[0])
numpy/core/tests/test_multiarray.py:2603:                assert_array_equal(np.partition(d, 1, kind=k)[1], tgt[1])
numpy/core/tests/test_multiarray.py:2604:                assert_array_equal(d[np.argpartition(d, 0, kind=k)],
numpy/core/tests/test_multiarray.py:2606:                assert_array_equal(d[np.argpartition(d, 1, kind=k)],
numpy/core/tests/test_multiarray.py:2610:                assert_array_equal(d, tgt)
numpy/core/tests/test_multiarray.py:2616:                assert_array_equal(np.partition(d, 0, kind=k)[0], tgt[0])
numpy/core/tests/test_multiarray.py:2617:                assert_array_equal(np.partition(d, 1, kind=k)[1], tgt[1])
numpy/core/tests/test_multiarray.py:2618:                assert_array_equal(np.partition(d, 2, kind=k)[2], tgt[2])
numpy/core/tests/test_multiarray.py:2619:                assert_array_equal(d[np.argpartition(d, 0, kind=k)],
numpy/core/tests/test_multiarray.py:2621:                assert_array_equal(d[np.argpartition(d, 1, kind=k)],
numpy/core/tests/test_multiarray.py:2623:                assert_array_equal(d[np.argpartition(d, 2, kind=k)],
numpy/core/tests/test_multiarray.py:2627:                assert_array_equal(d, tgt)
numpy/core/tests/test_multiarray.py:2630:            assert_array_equal(np.partition(d, 0, kind=k), d)
numpy/core/tests/test_multiarray.py:2631:            assert_array_equal(d[np.argpartition(d, 0, kind=k)],
numpy/core/tests/test_multiarray.py:2636:            assert_equal(np.partition(d, 5, kind=k)[5], 5)
numpy/core/tests/test_multiarray.py:2637:            assert_equal(np.partition(d, 15, kind=k)[15], 15)
numpy/core/tests/test_multiarray.py:2638:            assert_array_equal(d[np.argpartition(d, 5, kind=k)],
numpy/core/tests/test_multiarray.py:2640:            assert_array_equal(d[np.argpartition(d, 15, kind=k)],
numpy/core/tests/test_multiarray.py:2645:            assert_equal(np.partition(d, 6, kind=k)[6], 6)
numpy/core/tests/test_multiarray.py:2646:            assert_equal(np.partition(d, 16, kind=k)[16], 16)
numpy/core/tests/test_multiarray.py:2647:            assert_array_equal(d[np.argpartition(d, 6, kind=k)],
numpy/core/tests/test_multiarray.py:2649:            assert_array_equal(d[np.argpartition(d, 16, kind=k)],
numpy/core/tests/test_multiarray.py:2652:            assert_array_equal(np.partition(d, -6, kind=k),
numpy/core/tests/test_multiarray.py:2654:            assert_array_equal(np.partition(d, -16, kind=k),
numpy/core/tests/test_multiarray.py:2656:            assert_array_equal(d[np.argpartition(d, -6, kind=k)],
numpy/core/tests/test_multiarray.py:2664:            assert_equal(np.partition(x, mid)[mid], mid)
numpy/core/tests/test_multiarray.py:2668:            assert_equal(np.partition(x, mid)[mid], mid)
numpy/core/tests/test_multiarray.py:2673:            assert_equal(np.partition(d, (2, -1))[-1], 4)
numpy/core/tests/test_multiarray.py:2674:            assert_equal(np.partition(d, (2, -1))[2], 1)
numpy/core/tests/test_multiarray.py:2675:            assert_equal(d[np.argpartition(d, (2, -1))][-1], 4)
numpy/core/tests/test_multiarray.py:2676:            assert_equal(d[np.argpartition(d, (2, -1))][2], 1)
numpy/core/tests/test_multiarray.py:2678:            assert_(np.isnan(d[np.argpartition(d, (2, -1))][-1]))
numpy/core/tests/test_multiarray.py:2679:            assert_(np.isnan(np.partition(d, (2, -1))[-1]))
numpy/core/tests/test_multiarray.py:2686:                assert_equal(np.partition(d, i, kind=k)[i], tgt[i])
numpy/core/tests/test_multiarray.py:2687:            assert_array_equal(d[np.argpartition(d, 6, kind=k)],
numpy/core/tests/test_multiarray.py:2689:            assert_array_equal(d[np.argpartition(d, 16, kind=k)],
numpy/core/tests/test_multiarray.py:2693:            assert_array_equal(d, tgt)
numpy/core/tests/test_multiarray.py:2698:            assert_equal(np.partition(d, kth, kind=k)[kth], (0, 3, 7, 7))
numpy/core/tests/test_multiarray.py:2699:            assert_equal(d[np.argpartition(d, kth, kind=k)][kth], (0, 3, 7, 7))
numpy/core/tests/test_multiarray.py:2703:            assert_raises(ValueError, d.partition, 2)
numpy/core/tests/test_multiarray.py:2704:            assert_raises(np.AxisError, d.partition, 3, axis=1)
numpy/core/tests/test_multiarray.py:2705:            assert_raises(ValueError, np.partition, d, 2)
numpy/core/tests/test_multiarray.py:2706:            assert_raises(np.AxisError, np.partition, d, 2, axis=1)
numpy/core/tests/test_multiarray.py:2707:            assert_raises(ValueError, d.argpartition, 2)
numpy/core/tests/test_multiarray.py:2708:            assert_raises(np.AxisError, d.argpartition, 3, axis=1)
numpy/core/tests/test_multiarray.py:2709:            assert_raises(ValueError, np.argpartition, d, 2)
numpy/core/tests/test_multiarray.py:2710:            assert_raises(np.AxisError, np.argpartition, d, 2, axis=1)
numpy/core/tests/test_multiarray.py:2724:            assert_raises(ValueError, d.partition, 2, axis=0)
numpy/core/tests/test_multiarray.py:2725:            assert_raises(ValueError, d.partition, 11, axis=1)
numpy/core/tests/test_multiarray.py:2726:            assert_raises(TypeError, d.partition, 2, axis=None)
numpy/core/tests/test_multiarray.py:2727:            assert_raises(ValueError, np.partition, d, 9, axis=1)
numpy/core/tests/test_multiarray.py:2728:            assert_raises(ValueError, np.partition, d, 11, axis=None)
numpy/core/tests/test_multiarray.py:2729:            assert_raises(ValueError, d.argpartition, 2, axis=0)
numpy/core/tests/test_multiarray.py:2730:            assert_raises(ValueError, d.argpartition, 11, axis=1)
numpy/core/tests/test_multiarray.py:2731:            assert_raises(ValueError, np.argpartition, d, 9, axis=1)
numpy/core/tests/test_multiarray.py:2732:            assert_raises(ValueError, np.argpartition, d, 11, axis=None)
numpy/core/tests/test_multiarray.py:2747:                    assert_equal(p[i], i)
numpy/core/tests/test_multiarray.py:2749:                    assert_array_less(p[:i], p[i])
numpy/core/tests/test_multiarray.py:2751:                    assert_array_less(p[i], p[i + 1:])
numpy/core/tests/test_multiarray.py:2777:                    assert_equal(dc, np.partition(d, i, kind=k))
numpy/core/tests/test_multiarray.py:2780:                    assert_equal(dc, np.partition(d0, i, axis=0, kind=k))
numpy/core/tests/test_multiarray.py:2783:                    assert_equal(dc, np.partition(d1, i, axis=1, kind=k))
numpy/core/tests/test_multiarray.py:2788:            assert_array_less(d[prev:k], d[k], err_msg='kth %d' % k)
numpy/core/tests/test_multiarray.py:2789:            assert_((d[k:] >= d[k]).all(),
numpy/core/tests/test_multiarray.py:2796:            assert_raises(ValueError, d.partition, kth)
numpy/core/tests/test_multiarray.py:2797:            assert_raises(ValueError, d.argpartition, kth)
numpy/core/tests/test_multiarray.py:2799:            assert_raises(ValueError, d.partition, kth, axis=0)
numpy/core/tests/test_multiarray.py:2800:            assert_raises(ValueError, d.partition, kth, axis=1)
numpy/core/tests/test_multiarray.py:2801:            assert_raises(ValueError, np.partition, d, kth, axis=1)
numpy/core/tests/test_multiarray.py:2802:            assert_raises(ValueError, np.partition, d, kth, axis=None)
numpy/core/tests/test_multiarray.py:2809:            assert_array_equal(p, np.partition(d, (-3, -1)))
numpy/core/tests/test_multiarray.py:2810:            assert_array_equal(p, d[np.argpartition(d, (-3, -1))])
numpy/core/tests/test_multiarray.py:2815:            assert_array_equal(np.arange(17), d)
numpy/core/tests/test_multiarray.py:2817:            assert_array_equal(np.arange(17), d[d.argpartition(range(d.size))])
numpy/core/tests/test_multiarray.py:2829:            assert_array_equal(np.partition(d, keys), p)
numpy/core/tests/test_multiarray.py:2830:            assert_array_equal(d[np.argpartition(d, keys)], p)
numpy/core/tests/test_multiarray.py:2851:            assert_array_equal(p, pa)
numpy/core/tests/test_multiarray.py:2857:            assert_array_equal(p, pa)
numpy/core/tests/test_multiarray.py:2867:        assert_array_equal(np.partition(d, range(d.size),
numpy/core/tests/test_multiarray.py:2870:        assert_array_equal(d[np.argpartition(d, range(d.size),
numpy/core/tests/test_multiarray.py:2874:            assert_equal(np.partition(d, k, order=['age', 'height'])[k],
numpy/core/tests/test_multiarray.py:2876:            assert_equal(d[np.argpartition(d, k, order=['age', 'height'])][k],
numpy/core/tests/test_multiarray.py:2881:        assert_array_equal(np.partition(d, range(d.size)), tgt)
numpy/core/tests/test_multiarray.py:2883:            assert_equal(np.partition(d, k)[k], tgt[k])
numpy/core/tests/test_multiarray.py:2884:            assert_equal(d[np.argpartition(d, k)][k], tgt[k])
numpy/core/tests/test_multiarray.py:2889:        assert_raises(ValueError, d.partition, 2, kind=k)
numpy/core/tests/test_multiarray.py:2890:        assert_raises(ValueError, d.argpartition, 2, kind=k)
numpy/core/tests/test_multiarray.py:2902:                assert_array_equal(np.partition(d, kth)[kth], tgt,
numpy/core/tests/test_multiarray.py:2920:        assert_equal(x0.flatten(), y0)
numpy/core/tests/test_multiarray.py:2921:        assert_equal(x0.flatten('F'), y0f)
numpy/core/tests/test_multiarray.py:2922:        assert_equal(x0.flatten('F'), x0.T.flatten())
numpy/core/tests/test_multiarray.py:2923:        assert_equal(x1.flatten(), y1)
numpy/core/tests/test_multiarray.py:2924:        assert_equal(x1.flatten('F'), y1f)
numpy/core/tests/test_multiarray.py:2925:        assert_equal(x1.flatten('F'), x1.T.flatten())
numpy/core/tests/test_multiarray.py:2953:            assert_equal(func(eaf, eaf), eaf)
numpy/core/tests/test_multiarray.py:2954:            assert_equal(func(eaf.T, eaf), eaf)
numpy/core/tests/test_multiarray.py:2955:            assert_equal(func(eaf, eaf.T), eaf)
numpy/core/tests/test_multiarray.py:2956:            assert_equal(func(eaf.T, eaf.T), eaf)
numpy/core/tests/test_multiarray.py:2957:            assert_equal(func(eaf.T.copy(), eaf), eaf)
numpy/core/tests/test_multiarray.py:2958:            assert_equal(func(eaf, eaf.T.copy()), eaf)
numpy/core/tests/test_multiarray.py:2959:            assert_equal(func(eaf.T.copy(), eaf.T.copy()), eaf)
numpy/core/tests/test_multiarray.py:2965:            assert_equal(func(ebf, ebf), eaf)
numpy/core/tests/test_multiarray.py:2966:            assert_equal(func(ebf.T, ebf), eaf)
numpy/core/tests/test_multiarray.py:2967:            assert_equal(func(ebf, ebf.T), eaf)
numpy/core/tests/test_multiarray.py:2968:            assert_equal(func(ebf.T, ebf.T), eaf)
numpy/core/tests/test_multiarray.py:3003:            assert_equal(func(edf, edf.T), eddtf)
numpy/core/tests/test_multiarray.py:3004:            assert_equal(func(edf.T, edf), edtdf)
numpy/core/tests/test_multiarray.py:3015:        assert_equal(ret1, ret2)
numpy/core/tests/test_multiarray.py:3019:        assert_equal(ret1, ret2)
numpy/core/tests/test_multiarray.py:3027:        assert_(a.__array_interface__['data'][0] % dt.itemsize != 0)
numpy/core/tests/test_multiarray.py:3030:        assert_equal(ret1, ret2)
numpy/core/tests/test_multiarray.py:3034:        assert_equal(ret1, ret2)
numpy/core/tests/test_multiarray.py:3041:        assert_equal(np.dot(a, b), a.dot(b))
numpy/core/tests/test_multiarray.py:3042:        assert_equal(np.dot(np.dot(a, b), c), a.dot(b).dot(c))
numpy/core/tests/test_multiarray.py:3047:        assert_equal(c, np.dot(a, b))
numpy/core/tests/test_multiarray.py:3052:        assert_equal(c, np.dot(a, b))
numpy/core/tests/test_multiarray.py:3058:        assert_raises(TypeError, np.dot, c, A)
numpy/core/tests/test_multiarray.py:3059:        assert_raises(TypeError, np.dot, A, c)
numpy/core/tests/test_multiarray.py:3077:            assert_equal(x, y, err_msg=repr(dtype))
numpy/core/tests/test_multiarray.py:3080:            assert_raises(ValueError, np.dot, a, b, out=b[::2])
numpy/core/tests/test_multiarray.py:3081:            assert_raises(ValueError, np.dot, a, b, out=b.T)
numpy/core/tests/test_multiarray.py:3102:        assert_raises(NotImplementedError, np.dot, A(), A())
numpy/core/tests/test_multiarray.py:3103:        assert_raises(NotImplementedError, np.matmul, A(), A())
numpy/core/tests/test_multiarray.py:3104:        assert_raises(NotImplementedError, np.inner, A(), A())
numpy/core/tests/test_multiarray.py:3111:        assert_(c is a)
numpy/core/tests/test_multiarray.py:3112:        assert_equal(c, b)
numpy/core/tests/test_multiarray.py:3115:        assert_(c.base is a.base)
numpy/core/tests/test_multiarray.py:3116:        assert_equal(c, b)
numpy/core/tests/test_multiarray.py:3120:        assert_equal(a.diagonal(), [0, 5, 10])
numpy/core/tests/test_multiarray.py:3121:        assert_equal(a.diagonal(0), [0, 5, 10])
numpy/core/tests/test_multiarray.py:3122:        assert_equal(a.diagonal(1), [1, 6, 11])
numpy/core/tests/test_multiarray.py:3123:        assert_equal(a.diagonal(-1), [4, 9])
numpy/core/tests/test_multiarray.py:3124:        assert_raises(np.AxisError, a.diagonal, axis1=0, axis2=5)
numpy/core/tests/test_multiarray.py:3125:        assert_raises(np.AxisError, a.diagonal, axis1=5, axis2=0)
numpy/core/tests/test_multiarray.py:3126:        assert_raises(np.AxisError, a.diagonal, axis1=5, axis2=5)
numpy/core/tests/test_multiarray.py:3127:        assert_raises(ValueError, a.diagonal, axis1=1, axis2=1)
numpy/core/tests/test_multiarray.py:3130:        assert_equal(b.diagonal(), [[0, 6], [1, 7]])
numpy/core/tests/test_multiarray.py:3131:        assert_equal(b.diagonal(0), [[0, 6], [1, 7]])
numpy/core/tests/test_multiarray.py:3132:        assert_equal(b.diagonal(1), [[2], [3]])
numpy/core/tests/test_multiarray.py:3133:        assert_equal(b.diagonal(-1), [[4], [5]])
numpy/core/tests/test_multiarray.py:3134:        assert_raises(ValueError, b.diagonal, axis1=0, axis2=0)
numpy/core/tests/test_multiarray.py:3135:        assert_equal(b.diagonal(0, 1, 2), [[0, 3], [4, 7]])
numpy/core/tests/test_multiarray.py:3136:        assert_equal(b.diagonal(0, 0, 1), [[0, 6], [1, 7]])
numpy/core/tests/test_multiarray.py:3137:        assert_equal(b.diagonal(offset=1, axis1=0, axis2=2), [[1], [3]])
numpy/core/tests/test_multiarray.py:3139:        assert_equal(b.diagonal(0, 2, 1), [[0, 3], [4, 7]])
numpy/core/tests/test_multiarray.py:3143:        assert_(not a.flags.writeable)
numpy/core/tests/test_multiarray.py:3144:        assert_(not a.flags.owndata)
numpy/core/tests/test_multiarray.py:3147:        assert_(not a.flags.writeable)
numpy/core/tests/test_multiarray.py:3148:        assert_(not a.flags.owndata)
numpy/core/tests/test_multiarray.py:3151:        assert_(not a.flags.writeable)
numpy/core/tests/test_multiarray.py:3152:        assert_(not a.flags.owndata)
numpy/core/tests/test_multiarray.py:3158:            assert_(sys.getrefcount(a) < 50)
numpy/core/tests/test_multiarray.py:3162:            assert_(sys.getrefcount(a) < 50)
numpy/core/tests/test_multiarray.py:3173:            assert_(sys.getrefcount(x) < 50)
numpy/core/tests/test_multiarray.py:3177:        assert_equal(a.trace(), 15)
numpy/core/tests/test_multiarray.py:3178:        assert_equal(a.trace(0), 15)
numpy/core/tests/test_multiarray.py:3179:        assert_equal(a.trace(1), 18)
numpy/core/tests/test_multiarray.py:3180:        assert_equal(a.trace(-1), 13)
numpy/core/tests/test_multiarray.py:3183:        assert_equal(b.trace(), [6, 8])
numpy/core/tests/test_multiarray.py:3184:        assert_equal(b.trace(0), [6, 8])
numpy/core/tests/test_multiarray.py:3185:        assert_equal(b.trace(1), [2, 3])
numpy/core/tests/test_multiarray.py:3186:        assert_equal(b.trace(-1), [4, 5])
numpy/core/tests/test_multiarray.py:3187:        assert_equal(b.trace(0, 0, 1), [6, 8])
numpy/core/tests/test_multiarray.py:3188:        assert_equal(b.trace(0, 0, 2), [5, 9])
numpy/core/tests/test_multiarray.py:3189:        assert_equal(b.trace(0, 1, 2), [3, 11])
numpy/core/tests/test_multiarray.py:3190:        assert_equal(b.trace(offset=1, axis1=0, axis2=2), [1, 3])
numpy/core/tests/test_multiarray.py:3194:        assert ret is out
numpy/core/tests/test_multiarray.py:3204:        assert_(isinstance(t, MyArray))
numpy/core/tests/test_multiarray.py:3215:            assert_equal(a, tgt)
numpy/core/tests/test_multiarray.py:3220:            assert_equal(a, tgt.reshape(2, 3))
numpy/core/tests/test_multiarray.py:3228:            assert_equal(a, tgt)
numpy/core/tests/test_multiarray.py:3233:            assert_equal(a, tgt.reshape(2, 3))
numpy/core/tests/test_multiarray.py:3238:        assert_raises(ValueError, a.put, [1, 3, 5], [1, 3, 5])
numpy/core/tests/test_multiarray.py:3244:        assert_raises(TypeError, np.put, bad_array, [0, 2], 5)
numpy/core/tests/test_multiarray.py:3248:        assert_equal(a.ravel(), [0, 1, 2, 3])
numpy/core/tests/test_multiarray.py:3249:        assert_(not a.ravel().flags.owndata)
numpy/core/tests/test_multiarray.py:3250:        assert_equal(a.ravel('F'), [0, 2, 1, 3])
numpy/core/tests/test_multiarray.py:3251:        assert_equal(a.ravel(order='C'), [0, 1, 2, 3])
numpy/core/tests/test_multiarray.py:3252:        assert_equal(a.ravel(order='F'), [0, 2, 1, 3])
numpy/core/tests/test_multiarray.py:3253:        assert_equal(a.ravel(order='A'), [0, 1, 2, 3])
numpy/core/tests/test_multiarray.py:3254:        assert_(not a.ravel(order='A').flags.owndata)
numpy/core/tests/test_multiarray.py:3255:        assert_equal(a.ravel(order='K'), [0, 1, 2, 3])
numpy/core/tests/test_multiarray.py:3256:        assert_(not a.ravel(order='K').flags.owndata)
numpy/core/tests/test_multiarray.py:3257:        assert_equal(a.ravel(), a.reshape(-1))
numpy/core/tests/test_multiarray.py:3260:        assert_equal(a.ravel(), [0, 1, 2, 3])
numpy/core/tests/test_multiarray.py:3261:        assert_equal(a.ravel(order='A'), [0, 2, 1, 3])
numpy/core/tests/test_multiarray.py:3262:        assert_equal(a.ravel(order='K'), [0, 2, 1, 3])
numpy/core/tests/test_multiarray.py:3263:        assert_(not a.ravel(order='A').flags.owndata)
numpy/core/tests/test_multiarray.py:3264:        assert_(not a.ravel(order='K').flags.owndata)
numpy/core/tests/test_multiarray.py:3265:        assert_equal(a.ravel(), a.reshape(-1))
numpy/core/tests/test_multiarray.py:3266:        assert_equal(a.ravel(order='A'), a.reshape(-1, order='A'))
numpy/core/tests/test_multiarray.py:3269:        assert_equal(a.ravel(), [2, 3, 0, 1])
numpy/core/tests/test_multiarray.py:3270:        assert_equal(a.ravel(order='C'), [2, 3, 0, 1])
numpy/core/tests/test_multiarray.py:3271:        assert_equal(a.ravel(order='F'), [2, 0, 3, 1])
numpy/core/tests/test_multiarray.py:3272:        assert_equal(a.ravel(order='A'), [2, 3, 0, 1])
numpy/core/tests/test_multiarray.py:3274:        assert_equal(a.ravel(order='K'), [2, 3, 0, 1])
numpy/core/tests/test_multiarray.py:3275:        assert_(a.ravel(order='K').flags.owndata)
numpy/core/tests/test_multiarray.py:3279:        assert_(a.ravel('K').flags.owndata)
numpy/core/tests/test_multiarray.py:3280:        assert_(a.ravel('C').flags.owndata)
numpy/core/tests/test_multiarray.py:3281:        assert_(a.ravel('F').flags.owndata)
numpy/core/tests/test_multiarray.py:3289:        assert_(a.ravel(order='K').flags.owndata)
numpy/core/tests/test_multiarray.py:3290:        assert_equal(a.ravel('K'), np.arange(0, 15, 2))
numpy/core/tests/test_multiarray.py:3298:        assert_(np.may_share_memory(a.ravel(order='K'), a))
numpy/core/tests/test_multiarray.py:3299:        assert_equal(a.ravel(order='K'), np.arange(2**3))
numpy/core/tests/test_multiarray.py:3303:        assert_(a.ravel(order='C').flags.owndata)
numpy/core/tests/test_multiarray.py:3304:        assert_(a.ravel(order='K').flags.owndata)
numpy/core/tests/test_multiarray.py:3305:        assert_equal(a.ravel('C'), [3, 2, 1, 0])
numpy/core/tests/test_multiarray.py:3306:        assert_equal(a.ravel('K'), [3, 2, 1, 0])
numpy/core/tests/test_multiarray.py:3314:            assert_(np.may_share_memory(a.ravel('K'), a))
numpy/core/tests/test_multiarray.py:3315:            assert_equal(a.ravel('K').strides, (a.dtype.itemsize,))
numpy/core/tests/test_multiarray.py:3320:            assert_equal(a.ravel(order), [0])
numpy/core/tests/test_multiarray.py:3321:            assert_(np.may_share_memory(a.ravel(order), a))
numpy/core/tests/test_multiarray.py:3326:        assert_equal(a.ravel('K'), [0, 4, 8, 12, 16, 20, 24, 28])
numpy/core/tests/test_multiarray.py:3327:        assert_equal(a.ravel('C'), [0, 4, 8, 12, 16, 20, 24, 28])
numpy/core/tests/test_multiarray.py:3328:        assert_equal(a.ravel('A'), [0, 4, 8, 12, 16, 20, 24, 28])
numpy/core/tests/test_multiarray.py:3329:        assert_equal(a.ravel('F'), [0, 16, 8, 24, 4, 20, 12, 28])
numpy/core/tests/test_multiarray.py:3332:        assert_equal(a.ravel('K'), [0, 2, 4, 6, 8, 10, 12, 14])
numpy/core/tests/test_multiarray.py:3333:        assert_equal(a.ravel('C'), [0, 2, 4, 6, 8, 10, 12, 14])
numpy/core/tests/test_multiarray.py:3334:        assert_equal(a.ravel('A'), [0, 2, 4, 6, 8, 10, 12, 14])
numpy/core/tests/test_multiarray.py:3335:        assert_equal(a.ravel('F'), [0, 8, 4, 12, 2, 10, 6, 14])
numpy/core/tests/test_multiarray.py:3342:        assert_(isinstance(a.ravel('C'), ArraySubclass))
numpy/core/tests/test_multiarray.py:3343:        assert_(isinstance(a.ravel('F'), ArraySubclass))
numpy/core/tests/test_multiarray.py:3344:        assert_(isinstance(a.ravel('A'), ArraySubclass))
numpy/core/tests/test_multiarray.py:3345:        assert_(isinstance(a.ravel('K'), ArraySubclass))
numpy/core/tests/test_multiarray.py:3348:        assert_(isinstance(a.ravel('C'), ArraySubclass))
numpy/core/tests/test_multiarray.py:3349:        assert_(isinstance(a.ravel('F'), ArraySubclass))
numpy/core/tests/test_multiarray.py:3350:        assert_(isinstance(a.ravel('A'), ArraySubclass))
numpy/core/tests/test_multiarray.py:3351:        assert_(isinstance(a.ravel('K'), ArraySubclass))
numpy/core/tests/test_multiarray.py:3356:        assert_(a.flags['OWNDATA'])
numpy/core/tests/test_multiarray.py:3359:        assert_raises(np.AxisError, a.swapaxes, -5, 0)
numpy/core/tests/test_multiarray.py:3360:        assert_raises(np.AxisError, a.swapaxes, 4, 0)
numpy/core/tests/test_multiarray.py:3361:        assert_raises(np.AxisError, a.swapaxes, 0, -5)
numpy/core/tests/test_multiarray.py:3362:        assert_raises(np.AxisError, a.swapaxes, 0, 4)
numpy/core/tests/test_multiarray.py:3372:                    assert_equal(c.shape, shape, str((i, j, k)))
numpy/core/tests/test_multiarray.py:3380:                    assert_(not c.flags['OWNDATA'], str((i, j, k)))
numpy/core/tests/test_multiarray.py:3388:        assert_equal(a.real, ac.real)
numpy/core/tests/test_multiarray.py:3389:        assert_equal(a.imag, -ac.imag)
numpy/core/tests/test_multiarray.py:3390:        assert_equal(ac, a.conjugate())
numpy/core/tests/test_multiarray.py:3391:        assert_equal(ac, np.conjugate(a))
numpy/core/tests/test_multiarray.py:3395:        assert_equal(a.real, ac.real)
numpy/core/tests/test_multiarray.py:3396:        assert_equal(a.imag, -ac.imag)
numpy/core/tests/test_multiarray.py:3397:        assert_equal(ac, a.conjugate())
numpy/core/tests/test_multiarray.py:3398:        assert_equal(ac, np.conjugate(a))
numpy/core/tests/test_multiarray.py:3402:        assert_equal(a, ac)
numpy/core/tests/test_multiarray.py:3403:        assert_equal(ac, a.conjugate())
numpy/core/tests/test_multiarray.py:3404:        assert_equal(ac, np.conjugate(a))
numpy/core/tests/test_multiarray.py:3408:        assert_equal(a, ac)
numpy/core/tests/test_multiarray.py:3409:        assert_equal(ac, a.conjugate())
numpy/core/tests/test_multiarray.py:3410:        assert_equal(ac, np.conjugate(a))
numpy/core/tests/test_multiarray.py:3414:        assert_equal(ac, [k.conjugate() for k in a])
numpy/core/tests/test_multiarray.py:3415:        assert_equal(ac, a.conjugate())
numpy/core/tests/test_multiarray.py:3416:        assert_equal(ac, np.conjugate(a))
numpy/core/tests/test_multiarray.py:3419:        assert_raises(TypeError, lambda: a.conj())
numpy/core/tests/test_multiarray.py:3420:        assert_raises(TypeError, lambda: a.conjugate())
numpy/core/tests/test_multiarray.py:3428:        assert res is out
numpy/core/tests/test_multiarray.py:3429:        assert_array_equal(out, a.conjugate())
numpy/core/tests/test_multiarray.py:3443:            assert_equal(ap, a, msg)
numpy/core/tests/test_multiarray.py:3445:            assert_equal(bp, b, msg)
numpy/core/tests/test_multiarray.py:3447:            assert_equal(cp, c, msg)
numpy/core/tests/test_multiarray.py:3456:            assert_raises(TypeError, complex, a)
numpy/core/tests/test_multiarray.py:3460:        assert_raises(TypeError, complex, b)
numpy/core/tests/test_multiarray.py:3463:        assert_raises(TypeError, complex, c)
numpy/core/tests/test_multiarray.py:3466:        assert_raises(TypeError, complex, d)
numpy/core/tests/test_multiarray.py:3469:        assert_raises(TypeError, complex, e)
numpy/core/tests/test_multiarray.py:3473:        assert_(4.0 in np.arange(16.).reshape(4,4))
numpy/core/tests/test_multiarray.py:3474:        assert_(20.0 not in np.arange(16.).reshape(4,4))
numpy/core/tests/test_multiarray.py:3479:        assert_array_almost_equal(np.array([0.5]) * np.array([1.0, 2.0]),
numpy/core/tests/test_multiarray.py:3483:        assert_array_almost_equal(d * (d * np.array([1.0, 2.0])),
numpy/core/tests/test_multiarray.py:3492:        assert_equal(a, b)
numpy/core/tests/test_multiarray.py:3493:        assert_almost_equal(c, 1.)
numpy/core/tests/test_multiarray.py:3496:        assert_equal(a, b)
numpy/core/tests/test_multiarray.py:3497:        assert_equal(c, 0.5)
numpy/core/tests/test_multiarray.py:3504:        assert_almost_equal(c, 25 / 3)
numpy/core/tests/test_multiarray.py:3505:        assert_equal(a, 5)
numpy/core/tests/test_multiarray.py:3506:        assert_equal(b, 3)
numpy/core/tests/test_multiarray.py:3598:                            assert_(isinstance(result, tuple))
numpy/core/tests/test_multiarray.py:3605:                        assert_equal(arr_method(obj), NotImplemented, err_msg)
numpy/core/tests/test_multiarray.py:3607:                        assert_equal(arr_method(obj)[0], "__array_ufunc__",
numpy/core/tests/test_multiarray.py:3615:                            assert_(res.__class__ is obj.__class__, err_msg)
numpy/core/tests/test_multiarray.py:3617:                            assert_raises((TypeError, Coerced),
numpy/core/tests/test_multiarray.py:3625:                        assert_equal(res[1], ufunc, err_msg=err_msg)
numpy/core/tests/test_multiarray.py:3632:                            assert_(res.__class__ is obj.__class__, err_msg)
numpy/core/tests/test_multiarray.py:3635:                            assert_raises((TypeError, Coerced),
numpy/core/tests/test_multiarray.py:3643:                            assert_equal(arr_method(obj), NotImplemented,
numpy/core/tests/test_multiarray.py:3647:                            assert_equal(res[0], "__array_ufunc__", err_msg)
numpy/core/tests/test_multiarray.py:3648:                            assert_equal(res[1], ufunc, err_msg)
numpy/core/tests/test_multiarray.py:3649:                            assert_(type(res[-1]["out"]) is tuple, err_msg)
numpy/core/tests/test_multiarray.py:3650:                            assert_(res[-1]["out"][0] is arr, err_msg)
numpy/core/tests/test_multiarray.py:3656:                                assert_(arr_imethod(obj) is arr, err_msg)
numpy/core/tests/test_multiarray.py:3658:                                assert_raises((TypeError, Coerced),
numpy/core/tests/test_multiarray.py:3667:                    assert_equal(op_fn(obj, arr), "forward", err_msg)
numpy/core/tests/test_multiarray.py:3670:                            assert_equal(op_fn(arr, obj), "reverse", err_msg)
numpy/core/tests/test_multiarray.py:3672:                            assert_equal(op_fn(arr, obj)[0], "__array_ufunc__",
numpy/core/tests/test_multiarray.py:3675:                        assert_equal(ufunc(obj, arr)[0], "__array_ufunc__",
numpy/core/tests/test_multiarray.py:3720:        assert res.shape == (3,)
numpy/core/tests/test_multiarray.py:3721:        assert res[0] == 'result'
numpy/core/tests/test_multiarray.py:3732:        assert_('sig' not in kw and 'signature' not in kw)
numpy/core/tests/test_multiarray.py:3734:        assert_('sig' not in kw and 'signature' in kw)
numpy/core/tests/test_multiarray.py:3735:        assert_equal(kw['signature'], 'ii->i')
numpy/core/tests/test_multiarray.py:3737:        assert_('sig' not in kw and 'signature' in kw)
numpy/core/tests/test_multiarray.py:3738:        assert_equal(kw['signature'], 'ii->i')
numpy/core/tests/test_multiarray.py:3757:        assert_equal(np.sin(a), 0)
numpy/core/tests/test_multiarray.py:3758:        assert_equal(np.sin(dummy, a), (0,))
numpy/core/tests/test_multiarray.py:3759:        assert_equal(np.sin(dummy, out=a), (0,))
numpy/core/tests/test_multiarray.py:3760:        assert_equal(np.sin(dummy, out=(a,)), (0,))
numpy/core/tests/test_multiarray.py:3761:        assert_equal(np.sin(a, a), 0)
numpy/core/tests/test_multiarray.py:3762:        assert_equal(np.sin(a, out=a), 0)
numpy/core/tests/test_multiarray.py:3763:        assert_equal(np.sin(a, out=(a,)), 0)
numpy/core/tests/test_multiarray.py:3765:        assert_equal(np.modf(dummy, a), (0,))
numpy/core/tests/test_multiarray.py:3766:        assert_equal(np.modf(dummy, None, a), (1,))
numpy/core/tests/test_multiarray.py:3767:        assert_equal(np.modf(dummy, dummy, a), (1,))
numpy/core/tests/test_multiarray.py:3768:        assert_equal(np.modf(dummy, out=(a, None)), (0,))
numpy/core/tests/test_multiarray.py:3769:        assert_equal(np.modf(dummy, out=(a, dummy)), (0,))
numpy/core/tests/test_multiarray.py:3770:        assert_equal(np.modf(dummy, out=(None, a)), (1,))
numpy/core/tests/test_multiarray.py:3771:        assert_equal(np.modf(dummy, out=(dummy, a)), (1,))
numpy/core/tests/test_multiarray.py:3772:        assert_equal(np.modf(a, out=(dummy, a)), 0)
numpy/core/tests/test_multiarray.py:3777:        assert_raises(ValueError, np.modf, dummy, out=(a,))
numpy/core/tests/test_multiarray.py:3780:        assert_equal(np.add(a, dummy), 0)
numpy/core/tests/test_multiarray.py:3781:        assert_equal(np.add(dummy, a), 1)
numpy/core/tests/test_multiarray.py:3782:        assert_equal(np.add(dummy, dummy, a), (0,))
numpy/core/tests/test_multiarray.py:3783:        assert_equal(np.add(dummy, a, a), 1)
numpy/core/tests/test_multiarray.py:3784:        assert_equal(np.add(dummy, dummy, out=a), (0,))
numpy/core/tests/test_multiarray.py:3785:        assert_equal(np.add(dummy, dummy, out=(a,)), (0,))
numpy/core/tests/test_multiarray.py:3786:        assert_equal(np.add(a, dummy, out=a), 0)
numpy/core/tests/test_multiarray.py:3802:        assert_equal(A[0], 30)
numpy/core/tests/test_multiarray.py:3803:        assert_(isinstance(A, OutClass))
numpy/core/tests/test_multiarray.py:3806:        assert_equal(A[0], 30)
numpy/core/tests/test_multiarray.py:3807:        assert_(isinstance(A, OutClass))
numpy/core/tests/test_multiarray.py:3818:        assert_equal(a ** 2.5, "POWER!")
numpy/core/tests/test_multiarray.py:3857:        assert_equal(obj_arr ** 0.5, pow_for(0.5, obj_arr))
numpy/core/tests/test_multiarray.py:3858:        assert_equal(obj_arr ** 0, pow_for(0, obj_arr))
numpy/core/tests/test_multiarray.py:3859:        assert_equal(obj_arr ** 1, pow_for(1, obj_arr))
numpy/core/tests/test_multiarray.py:3860:        assert_equal(obj_arr ** -1, pow_for(-1, obj_arr))
numpy/core/tests/test_multiarray.py:3861:        assert_equal(obj_arr ** 2, pow_for(2, obj_arr))
numpy/core/tests/test_multiarray.py:3888:        assert_array_equal(orig, d)
numpy/core/tests/test_multiarray.py:3889:        assert_array_equal(res, d + d)
numpy/core/tests/test_multiarray.py:3903:        assert_array_equal(l[4], np.ones(100000))
numpy/core/tests/test_multiarray.py:3904:        assert_array_equal(res, l[4] + l[4])
numpy/core/tests/test_multiarray.py:3909:        assert_equal(((d + d) + 2**222).dtype, np.dtype('O'))
numpy/core/tests/test_multiarray.py:3912:        assert_equal(r.dtype, np.dtype('f8'))
numpy/core/tests/test_multiarray.py:3915:        assert_equal(r.dtype, np.dtype('f8'))
numpy/core/tests/test_multiarray.py:3918:        assert_equal(r.dtype, np.dtype('f8'))
numpy/core/tests/test_multiarray.py:3921:        assert_equal(r.dtype, np.dtype(np.int64))
numpy/core/tests/test_multiarray.py:3925:        assert_equal(((f + f) + f.astype(np.float64)).dtype, np.dtype('f8'))
numpy/core/tests/test_multiarray.py:3929:        assert_equal(((f + f) + d).dtype, d.dtype)
numpy/core/tests/test_multiarray.py:3931:        assert_equal(((d + d) + l).dtype, l.dtype)
numpy/core/tests/test_multiarray.py:3937:            assert_equal(r.dtype, np.dtype('f%d' % (c.itemsize // 2)))
numpy/core/tests/test_multiarray.py:3946:        assert_equal(r, 1)
numpy/core/tests/test_multiarray.py:3947:        assert_equal(r.shape, (2000, 2000))
numpy/core/tests/test_multiarray.py:3952:        assert_(type(~(a & a)) is np.bool_)
numpy/core/tests/test_multiarray.py:3966:        assert_equal(r, 0)
numpy/core/tests/test_multiarray.py:3972:        assert_equal(a, 1)
numpy/core/tests/test_multiarray.py:3978:        assert_(IsPythonScalar(b'foobar'))
numpy/core/tests/test_multiarray.py:3979:        assert_(IsPythonScalar(1))
numpy/core/tests/test_multiarray.py:3980:        assert_(IsPythonScalar(2**80))
numpy/core/tests/test_multiarray.py:3981:        assert_(IsPythonScalar(2.))
numpy/core/tests/test_multiarray.py:3982:        assert_(IsPythonScalar("a"))
numpy/core/tests/test_multiarray.py:3988:        assert_(isinstance(x[0], np.int_))
numpy/core/tests/test_multiarray.py:3989:        assert_(type(x[0, ...]) is np.ndarray)
numpy/core/tests/test_multiarray.py:4038:        assert len(buffers) > 0
numpy/core/tests/test_multiarray.py:4043:        assert_equal(f_contiguous_array, depickled_f_contiguous_array)
numpy/core/tests/test_multiarray.py:4056:            assert_equal(non_contiguous_array, depickled_non_contiguous_array)
numpy/core/tests/test_multiarray.py:4077:                assert ref() is None
numpy/core/tests/test_multiarray.py:4088:        assert_equal(a, p)
numpy/core/tests/test_multiarray.py:4094:        assert_equal(a, p)
numpy/core/tests/test_multiarray.py:4100:        assert_equal(a, p)
numpy/core/tests/test_multiarray.py:4107:        assert_equal(a, p)
numpy/core/tests/test_multiarray.py:4113:        assert_equal(a, p)
numpy/core/tests/test_multiarray.py:4119:        assert_equal(a, p)
numpy/core/tests/test_multiarray.py:4125:        assert_equal(a, p)
numpy/core/tests/test_multiarray.py:4136:        assert_equal(original.dtype, new.dtype)
numpy/core/tests/test_multiarray.py:4143:        assert_array_equal(x, np.array([[2.0]]))
numpy/core/tests/test_multiarray.py:4147:        assert_array_equal(x, np.array([[[2.0]]]))
numpy/core/tests/test_multiarray.py:4152:        assert_array_equal(x, np.array([[2.0]]))
numpy/core/tests/test_multiarray.py:4155:        assert_array_equal(x, np.array([[[2.0]]]))
numpy/core/tests/test_multiarray.py:4160:        assert_array_equal(x[m], np.array([2]))
numpy/core/tests/test_multiarray.py:4167:        assert_array_equal(x[m], np.array([[5, 6, 7, 8]]))
numpy/core/tests/test_multiarray.py:4168:        assert_array_equal(x[m2], np.array([2, 5]))
numpy/core/tests/test_multiarray.py:4169:        assert_array_equal(x[m3], np.array([2]))
numpy/core/tests/test_multiarray.py:4175:        assert_array_equal(x, np.array([1, 5, 3, 4]))
numpy/core/tests/test_multiarray.py:4184:        assert_array_equal(x, np.array([[1, 2, 3, 4], [10, 10, 10, 10]]))
numpy/core/tests/test_multiarray.py:4187:        assert_array_equal(x, np.array([[1, 10, 3, 4], [10, 6, 7, 8]]))
numpy/core/tests/test_multiarray.py:4190:        assert_array_equal(x, np.array([[1, 10, 3, 4], [5, 6, 7, 8]]))
numpy/core/tests/test_multiarray.py:4197:        assert_array_equal(g1 == g2, [g1[i] == g2[i] for i in [0, 1, 2]])
numpy/core/tests/test_multiarray.py:4198:        assert_array_equal(g1 != g2, [g1[i] != g2[i] for i in [0, 1, 2]])
numpy/core/tests/test_multiarray.py:4199:        assert_array_equal(g1 <= g2, [g1[i] <= g2[i] for i in [0, 1, 2]])
numpy/core/tests/test_multiarray.py:4200:        assert_array_equal(g1 >= g2, [g1[i] >= g2[i] for i in [0, 1, 2]])
numpy/core/tests/test_multiarray.py:4201:        assert_array_equal(g1 < g2, [g1[i] < g2[i] for i in [0, 1, 2]])
numpy/core/tests/test_multiarray.py:4202:        assert_array_equal(g1 > g2, [g1[i] > g2[i] for i in [0, 1, 2]])
numpy/core/tests/test_multiarray.py:4207:        assert_array_equal(g1 == g2, [x == g2 for x in g1])
numpy/core/tests/test_multiarray.py:4208:        assert_array_equal(g1 != g2, [x != g2 for x in g1])
numpy/core/tests/test_multiarray.py:4209:        assert_array_equal(g1 < g2, [x < g2 for x in g1])
numpy/core/tests/test_multiarray.py:4210:        assert_array_equal(g1 > g2, [x > g2 for x in g1])
numpy/core/tests/test_multiarray.py:4211:        assert_array_equal(g1 <= g2, [x <= g2 for x in g1])
numpy/core/tests/test_multiarray.py:4212:        assert_array_equal(g1 >= g2, [x >= g2 for x in g1])
numpy/core/tests/test_multiarray.py:4217:        assert_array_equal(g1 == g2, [g1[i] == g2[i] for i in [0, 1, 2]])
numpy/core/tests/test_multiarray.py:4218:        assert_array_equal(g1 != g2, [g1[i] != g2[i] for i in [0, 1, 2]])
numpy/core/tests/test_multiarray.py:4219:        assert_array_equal(g1 <= g2, [g1[i] <= g2[i] for i in [0, 1, 2]])
numpy/core/tests/test_multiarray.py:4220:        assert_array_equal(g1 >= g2, [g1[i] >= g2[i] for i in [0, 1, 2]])
numpy/core/tests/test_multiarray.py:4221:        assert_array_equal(g1 < g2,  [g1[i] < g2[i] for i in [0, 1, 2]])
numpy/core/tests/test_multiarray.py:4222:        assert_array_equal(g1 > g2,  [g1[i] > g2[i] for i in [0, 1, 2]])
numpy/core/tests/test_multiarray.py:4251:        assert_equal(res, res_orig)
numpy/core/tests/test_multiarray.py:4252:        assert_(res.shape == new_shape)
numpy/core/tests/test_multiarray.py:4256:        assert_(res1 is outarray)
numpy/core/tests/test_multiarray.py:4257:        assert_equal(res, outarray)
numpy/core/tests/test_multiarray.py:4281:        assert_equal(res, res_orig)
numpy/core/tests/test_multiarray.py:4282:        assert_(res.shape == new_shape)
numpy/core/tests/test_multiarray.py:4287:        assert_(res1 is outarray)
numpy/core/tests/test_multiarray.py:4288:        assert_equal(res, outarray)
numpy/core/tests/test_multiarray.py:4318:            assert_(np.all(a_maxmin == aarg_maxmin.choose(
numpy/core/tests/test_multiarray.py:4328:        assert_raises(ValueError, arg_method, -1, out)
numpy/core/tests/test_multiarray.py:4331:        assert_raises(ValueError, arg_method, -1, out)
numpy/core/tests/test_multiarray.py:4335:        assert_raises(ValueError, arg_method, -1, out)
numpy/core/tests/test_multiarray.py:4339:        assert_equal(out, arg_method(-1))
numpy/core/tests/test_multiarray.py:4348:        assert ret is out
numpy/core/tests/test_multiarray.py:4357:        assert_equal(arg_method(), idx)
numpy/core/tests/test_multiarray.py:4371:        assert_equal(arg_method(1, out1), np_method(a, 1, out2))
numpy/core/tests/test_multiarray.py:4372:        assert_equal(out1, out2)
numpy/core/tests/test_multiarray.py:4377:        assert_equal(arg_method(out=out1, axis=0),
numpy/core/tests/test_multiarray.py:4379:        assert_equal(out1, out2)
numpy/core/tests/test_multiarray.py:4390:        assert_equal(arg_method(), 0)
numpy/core/tests/test_multiarray.py:4392:        assert_equal(arg_method(), 3)
numpy/core/tests/test_multiarray.py:4394:        assert_equal(arg_method(), 1)
numpy/core/tests/test_multiarray.py:4501:        assert_equal(np.argmax(arr), pos, err_msg="%r" % arr)
numpy/core/tests/test_multiarray.py:4502:        assert_equal(arr[np.argmax(arr)], val, err_msg="%r" % arr)
numpy/core/tests/test_multiarray.py:4507:        assert_equal(np.argmax(rarr), rpos, err_msg="%r" % rarr)
numpy/core/tests/test_multiarray.py:4508:        assert_equal(rarr[np.argmax(rarr)], val, err_msg="%r" % rarr)
numpy/core/tests/test_multiarray.py:4513:        assert_equal(np.argmax(rarr), rpos, err_msg="%r" % rarr)
numpy/core/tests/test_multiarray.py:4514:        assert_equal(rarr[np.argmax(rarr)], val, err_msg="%r" % rarr)
numpy/core/tests/test_multiarray.py:4520:        assert_equal(np.argmax(a), 1)
numpy/core/tests/test_multiarray.py:4522:        assert_equal(np.argmax(a), 1)
numpy/core/tests/test_multiarray.py:4525:        assert_equal(np.argmax(a), 1)
numpy/core/tests/test_multiarray.py:4527:        assert_equal(np.argmax(a), 1)
numpy/core/tests/test_multiarray.py:4530:        assert_equal(np.argmax(a), 1)
numpy/core/tests/test_multiarray.py:4532:        assert_equal(np.argmax(a), 1)
numpy/core/tests/test_multiarray.py:4535:        assert_equal(np.argmax(a), 1)
numpy/core/tests/test_multiarray.py:4537:        assert_equal(np.argmax(a), 1)
numpy/core/tests/test_multiarray.py:4644:        assert_equal(np.argmin(arr), pos, err_msg="%r" % arr)
numpy/core/tests/test_multiarray.py:4645:        assert_equal(arr[np.argmin(arr)], min_val, err_msg="%r" % arr)
numpy/core/tests/test_multiarray.py:4650:        assert_equal(np.argmin(rarr), rpos, err_msg="%r" % rarr)
numpy/core/tests/test_multiarray.py:4651:        assert_equal(rarr[np.argmin(rarr)], min_val, err_msg="%r" % rarr)
numpy/core/tests/test_multiarray.py:4656:        assert_equal(np.argmin(rarr), rpos, err_msg="%r" % rarr)
numpy/core/tests/test_multiarray.py:4657:        assert_equal(rarr[np.argmin(rarr)], min_val, err_msg="%r" % rarr)
numpy/core/tests/test_multiarray.py:4662:        assert_equal(np.argmin(a), 1)
numpy/core/tests/test_multiarray.py:4664:        assert_equal(np.argmin(a), 1)
numpy/core/tests/test_multiarray.py:4667:        assert_equal(np.argmin(a), 1)
numpy/core/tests/test_multiarray.py:4669:        assert_equal(np.argmin(a), 1)
numpy/core/tests/test_multiarray.py:4672:        assert_equal(np.argmin(a), 1)
numpy/core/tests/test_multiarray.py:4674:        assert_equal(np.argmin(a), 1)
numpy/core/tests/test_multiarray.py:4677:        assert_equal(np.argmin(a), 1)
numpy/core/tests/test_multiarray.py:4679:        assert_equal(np.argmin(a), 1)
numpy/core/tests/test_multiarray.py:4684:        assert_raises(np.AxisError, np.amax, 1, 1)
numpy/core/tests/test_multiarray.py:4685:        assert_raises(np.AxisError, np.amin, 1, 1)
numpy/core/tests/test_multiarray.py:4687:        assert_equal(np.amax(1, axis=0), 1)
numpy/core/tests/test_multiarray.py:4688:        assert_equal(np.amin(1, axis=0), 1)
numpy/core/tests/test_multiarray.py:4689:        assert_equal(np.amax(1, axis=None), 1)
numpy/core/tests/test_multiarray.py:4690:        assert_equal(np.amin(1, axis=None), 1)
numpy/core/tests/test_multiarray.py:4693:        assert_raises(np.AxisError, np.amax, [1, 2, 3], 1000)
numpy/core/tests/test_multiarray.py:4694:        assert_equal(np.amax([[1, 2, 3]], axis=1), 3)
numpy/core/tests/test_multiarray.py:4700:            assert_equal(np.amin(a), a[0])
numpy/core/tests/test_multiarray.py:4701:            assert_equal(np.amax(a), a[9])
numpy/core/tests/test_multiarray.py:4703:            assert_equal(np.amin(a), a[3])
numpy/core/tests/test_multiarray.py:4704:            assert_equal(np.amax(a), a[3])
numpy/core/tests/test_multiarray.py:4711:        assert_almost_equal(res.ravel(), 250*sk)
numpy/core/tests/test_multiarray.py:4716:        assert_(np.all(x >= cmin))
numpy/core/tests/test_multiarray.py:4717:        assert_(np.all(x <= cmax))
numpy/core/tests/test_multiarray.py:4749:                assert_equal(x.dtype.byteorder, byteorder)
numpy/core/tests/test_multiarray.py:4779:        assert_(np.all(x >= 3))
numpy/core/tests/test_multiarray.py:4781:        assert_(np.all(x >= 3))
numpy/core/tests/test_multiarray.py:4783:        assert_(np.all(x <= 4))
numpy/core/tests/test_multiarray.py:4789:        assert_array_equal(result, expected)
numpy/core/tests/test_multiarray.py:4797:        assert_equal(out, tgt)
numpy/core/tests/test_multiarray.py:4801:        assert_equal(out, tgt)
numpy/core/tests/test_multiarray.py:4807:        assert_equal(out, tgt)
numpy/core/tests/test_multiarray.py:4812:        assert_equal(out, 1)
numpy/core/tests/test_multiarray.py:4818:        assert_equal(x[mask], np.array(val, T))
numpy/core/tests/test_multiarray.py:4837:        assert_raises(ValueError, np.putmask, np.array([1, 2, 3]), [True], 5)
numpy/core/tests/test_multiarray.py:4843:        assert_array_equal(x, [-1, 2, -1])
numpy/core/tests/test_multiarray.py:4850:        assert_array_equal(rec['x'], [10, 5])
numpy/core/tests/test_multiarray.py:4851:        assert_array_equal(rec['y'], [2, 4])
numpy/core/tests/test_multiarray.py:4852:        assert_array_equal(rec['z'], [3, 3])
numpy/core/tests/test_multiarray.py:4854:        assert_array_equal(rec['x'], [10, 5])
numpy/core/tests/test_multiarray.py:4855:        assert_array_equal(rec['y'], [11, 4])
numpy/core/tests/test_multiarray.py:4856:        assert_array_equal(rec['z'], [3, 3])
numpy/core/tests/test_multiarray.py:4862:        assert_equal(x, np.array([True, True, False, True]))
numpy/core/tests/test_multiarray.py:4866:        assert_equal(x, np.array([True, True, True, True]))
numpy/core/tests/test_multiarray.py:4879:        assert_array_equal(x.take(ind, axis=0), x)
numpy/core/tests/test_multiarray.py:4897:        assert_raises(IndexError, x.take, [0, 1, 2], axis=0)
numpy/core/tests/test_multiarray.py:4898:        assert_raises(IndexError, x.take, [-3], axis=0)
numpy/core/tests/test_multiarray.py:4899:        assert_array_equal(x.take([-1], axis=0)[0], x[1])
numpy/core/tests/test_multiarray.py:4904:        assert_array_equal(x.take([-1], axis=0, mode='clip')[0], x[0])
numpy/core/tests/test_multiarray.py:4905:        assert_array_equal(x.take([2], axis=0, mode='clip')[0], x[1])
numpy/core/tests/test_multiarray.py:4910:        assert_array_equal(x.take([-1], axis=0, mode='wrap')[0], x[1])
numpy/core/tests/test_multiarray.py:4911:        assert_array_equal(x.take([2], axis=0, mode='wrap')[0], x[0])
numpy/core/tests/test_multiarray.py:4912:        assert_array_equal(x.take([3], axis=0, mode='wrap')[0], x[1])
numpy/core/tests/test_multiarray.py:4917:        assert_array_equal(x.take([0, 2, 1]), [1, 3, 2])
numpy/core/tests/test_multiarray.py:4924:        assert_(rec1['x'] == 5.0 and rec1['y'] == 4.0)
numpy/core/tests/test_multiarray.py:4930:        assert_equal(y, np.array([1, 2, 3]))
numpy/core/tests/test_multiarray.py:4939:        assert ret is out
numpy/core/tests/test_multiarray.py:4953:        assert_array_equal(idx, expected_idx)
numpy/core/tests/test_multiarray.py:4954:        assert_array_equal(a[idx], np.sort(a))
numpy/core/tests/test_multiarray.py:4962:        assert_array_equal(idx, expected_idx)
numpy/core/tests/test_multiarray.py:4969:        assert_array_equal(idx, expected_idx)
numpy/core/tests/test_multiarray.py:4975:        assert_array_equal(idx, expected_idx)
numpy/core/tests/test_multiarray.py:4984:            assert_array_equal(left, right)
numpy/core/tests/test_multiarray.py:4988:            assert_array_equal(idx, np.lexsort((u.astype('O'), v)))
numpy/core/tests/test_multiarray.py:4989:            assert_array_equal(idx, np.lexsort((u, v.astype('O'))))
numpy/core/tests/test_multiarray.py:4991:            assert_array_equal(idx, np.lexsort((u, v)))
numpy/core/tests/test_multiarray.py:4995:        assert_raises(np.AxisError, np.lexsort, x, axis=2)
numpy/core/tests/test_multiarray.py:5022:        assert_raises(OSError, np.fromfile, b, np.uint8, 80)
numpy/core/tests/test_multiarray.py:5024:        assert_raises(OSError, lambda x: x.tofile(b), d)
numpy/core/tests/test_multiarray.py:5029:        assert_array_equal(v, y)
numpy/core/tests/test_multiarray.py:5035:        assert_array_equal(d, e)
numpy/core/tests/test_multiarray.py:5041:        assert_array_equal(d, e)
numpy/core/tests/test_multiarray.py:5045:        assert d.shape == (0,)
numpy/core/tests/test_multiarray.py:5051:        assert_(y.size == 0, "Array not empty")
numpy/core/tests/test_multiarray.py:5057:        assert_(y.size == 0, "Array not empty")
numpy/core/tests/test_multiarray.py:5065:        assert_array_equal(y, x.flat)
numpy/core/tests/test_multiarray.py:5070:        assert_array_equal(y, x.flat)
numpy/core/tests/test_multiarray.py:5076:        assert_array_equal(y, x)
numpy/core/tests/test_multiarray.py:5081:        assert_array_equal(y, x.flat)
numpy/core/tests/test_multiarray.py:5085:        assert_array_equal(y, x.flatten('F'))
numpy/core/tests/test_multiarray.py:5093:        assert_array_equal(x[nan_mask], y[nan_mask])
numpy/core/tests/test_multiarray.py:5094:        assert_array_almost_equal(x[~nan_mask], y[~nan_mask], decimal=5)
numpy/core/tests/test_multiarray.py:5100:        assert_array_equal(x, y)
numpy/core/tests/test_multiarray.py:5112:            assert_raises(OSError, np.fromfile, f, dtype=x.dtype)
numpy/core/tests/test_multiarray.py:5119:            assert_array_equal(y, x.flat)
numpy/core/tests/test_multiarray.py:5125:        assert_equal(os.path.getsize(tmp_filename), d.nbytes)
numpy/core/tests/test_multiarray.py:5126:        assert_array_equal(d, np.fromfile(tmp_filename))
numpy/core/tests/test_multiarray.py:5131:            assert_equal(os.path.getsize(tmp_filename), d.nbytes * 2)
numpy/core/tests/test_multiarray.py:5136:        assert_array_equal(d, np.fromfile(tmp_filename))
numpy/core/tests/test_multiarray.py:5139:        assert_equal(os.path.getsize(tmp_filename), d.nbytes * 2)
numpy/core/tests/test_multiarray.py:5146:        assert_array_equal(y, x.flat)
numpy/core/tests/test_multiarray.py:5166:                assert_equal(pos, 10, err_msg=err_msg)
numpy/core/tests/test_multiarray.py:5184:            assert_equal(pos, 10 + 2 + 8, err_msg=err_msg)
numpy/core/tests/test_multiarray.py:5191:            assert_equal(pos, 10, err_msg=err_msg)
numpy/core/tests/test_multiarray.py:5200:            assert_raises_regex(ValueError, "Cannot read into object array",
numpy/core/tests/test_multiarray.py:5203:        assert_raises_regex(ValueError, "Cannot read into object array",
numpy/core/tests/test_multiarray.py:5212:            assert_array_equal(y, x.flat)
numpy/core/tests/test_multiarray.py:5221:            assert_array_equal(
numpy/core/tests/test_multiarray.py:5228:            assert_array_equal(z, x.flat[offset_items+count_items+1:])
numpy/core/tests/test_multiarray.py:5234:            assert_raises_regex(
numpy/core/tests/test_multiarray.py:5254:                    assert_raises(exc, np.fromfile, f)
numpy/core/tests/test_multiarray.py:5263:        assert_array_equal(y, value)
numpy/core/tests/test_multiarray.py:5268:        assert_array_equal(y, value)
numpy/core/tests/test_multiarray.py:5344:            assert_(len(a) == fourgbplus)
numpy/core/tests/test_multiarray.py:5346:            assert_((a[:n] == testbytes).all())
numpy/core/tests/test_multiarray.py:5347:            assert_((a[-n:] == testbytes).all())
numpy/core/tests/test_multiarray.py:5397:        assert_(y.dtype == '?')
numpy/core/tests/test_multiarray.py:5398:        assert_array_equal(y, v)
numpy/core/tests/test_multiarray.py:5408:        assert_array_equal(x,y)
numpy/core/tests/test_multiarray.py:5416:        assert_equal(s, '1.51,2.00,3.51,4.00')
numpy/core/tests/test_multiarray.py:5421:            assert_raises(OSError, lambda: x.tofile(f, sep=''))
numpy/core/tests/test_multiarray.py:5426:        assert_raises(OSError, lambda: x.tofile(tmp_filename))
numpy/core/tests/test_multiarray.py:5434:        assert_array_equal(x, res)
numpy/core/tests/test_multiarray.py:5440:            assert_array_equal(x, res)
numpy/core/tests/test_multiarray.py:5467:        assert_array_equal(res, expected)
numpy/core/tests/test_multiarray.py:5477:        assert_array_equal(np.frombuffer(buf, dtype=dt), x.flat)
numpy/core/tests/test_multiarray.py:5484:        assert new.base is arr
numpy/core/tests/test_multiarray.py:5487:        assert_array_equal(np.frombuffer(b''), np.array([]))
numpy/core/tests/test_multiarray.py:5523:        assert_(testpassed)
numpy/core/tests/test_multiarray.py:5524:        assert_(self.a.flat[12] == 12.0)
numpy/core/tests/test_multiarray.py:5532:        assert_(testpassed)
numpy/core/tests/test_multiarray.py:5533:        assert_(self.b.flat[4] == 12.0)
numpy/core/tests/test_multiarray.py:5541:        assert_(c.flags.writeable is False)
numpy/core/tests/test_multiarray.py:5542:        assert_(d.flags.writeable is False)
numpy/core/tests/test_multiarray.py:5543:        assert_(e.flags.writeable is True)
numpy/core/tests/test_multiarray.py:5544:        assert_(f.flags.writeable is False)
numpy/core/tests/test_multiarray.py:5545:        assert_(c.flags.writebackifcopy is False)
numpy/core/tests/test_multiarray.py:5546:        assert_(d.flags.writebackifcopy is False)
numpy/core/tests/test_multiarray.py:5547:        assert_(e.flags.writebackifcopy is False)
numpy/core/tests/test_multiarray.py:5548:        assert_(f.flags.writebackifcopy is False)
numpy/core/tests/test_multiarray.py:5563:            assert_(abs(sys.getrefcount(ind) - rc_ind) < 50)
numpy/core/tests/test_multiarray.py:5564:            assert_(abs(sys.getrefcount(indtype) - rc_indtype) < 50)
numpy/core/tests/test_multiarray.py:5575:        assert it.index == it.base.size
numpy/core/tests/test_multiarray.py:5587:        assert_array_equal(x.flat[:9],
numpy/core/tests/test_multiarray.py:5589:        assert_array_equal(x[9:].flat, 0)
numpy/core/tests/test_multiarray.py:5594:        assert_raises(ValueError, x.resize, (5, 1))
numpy/core/tests/test_multiarray.py:5604:        assert_array_equal(x, np.eye(3)[0,:])
numpy/core/tests/test_multiarray.py:5609:        assert_array_equal(x, np.eye(3))
numpy/core/tests/test_multiarray.py:5611:        assert_array_equal(x, np.eye(3))
numpy/core/tests/test_multiarray.py:5618:            assert_equal(x.shape, ())
numpy/core/tests/test_multiarray.py:5619:            assert_equal(x.size, 1)
numpy/core/tests/test_multiarray.py:5622:            assert_equal(x.shape, (1,))
numpy/core/tests/test_multiarray.py:5623:            assert_equal(x.size, 1)
numpy/core/tests/test_multiarray.py:5626:        assert_raises(TypeError, np.eye(3).resize, 'hi')
numpy/core/tests/test_multiarray.py:5627:        assert_raises(ValueError, np.eye(3).resize, -1)
numpy/core/tests/test_multiarray.py:5628:        assert_raises(TypeError, np.eye(3).resize, order=1)
numpy/core/tests/test_multiarray.py:5629:        assert_raises(TypeError, np.eye(3).resize, refcheck='hi')
numpy/core/tests/test_multiarray.py:5638:        assert_(x.shape == (3, 2, 1))
numpy/core/tests/test_multiarray.py:5647:        assert_array_equal(x[0], np.eye(3))
numpy/core/tests/test_multiarray.py:5648:        assert_array_equal(x[1], np.zeros((3, 3)))
numpy/core/tests/test_multiarray.py:5658:        assert_equal(a.shape, (15,))
numpy/core/tests/test_multiarray.py:5659:        assert_array_equal(a['k'][-5:], 0)
numpy/core/tests/test_multiarray.py:5660:        assert_array_equal(a['k'][:-5], 1)
numpy/core/tests/test_multiarray.py:5673:        assert_raises(ValueError, x.resize, (5, 1))
numpy/core/tests/test_multiarray.py:5681:        assert_equal(dt.names, ['p', 'q'])
numpy/core/tests/test_multiarray.py:5688:        assert_raises(ValueError, test_dtype_init)
numpy/core/tests/test_multiarray.py:5693:        assert_raises(TypeError, np.dtype, [(b'a', int)])
numpy/core/tests/test_multiarray.py:5694:        assert_raises(TypeError, np.dtype, [(('b', b'a'), int)])
numpy/core/tests/test_multiarray.py:5697:        assert_raises(TypeError, dt.__getitem__, b'a')
numpy/core/tests/test_multiarray.py:5700:        assert_raises(IndexError, x.__getitem__, b'a')
numpy/core/tests/test_multiarray.py:5703:        assert_raises(IndexError, y.__getitem__, b'a')
numpy/core/tests/test_multiarray.py:5710:        assert_raises(ValueError, test_dtype_unicode)
numpy/core/tests/test_multiarray.py:5716:        assert_equal(x['a'][0], 0)
numpy/core/tests/test_multiarray.py:5717:        assert_equal(x['b'][0], 1)
numpy/core/tests/test_multiarray.py:5725:        assert_equal(x[u'b'], np.array([1, 2, 3]))
numpy/core/tests/test_multiarray.py:5733:        assert_raises(IndexError, a.__setitem__, b'f1', 1)
numpy/core/tests/test_multiarray.py:5734:        assert_raises(IndexError, a.__getitem__, b'f1')
numpy/core/tests/test_multiarray.py:5735:        assert_raises(IndexError, a['f1'].__setitem__, b'sf1', 1)
numpy/core/tests/test_multiarray.py:5736:        assert_raises(IndexError, a['f1'].__getitem__, b'sf1')
numpy/core/tests/test_multiarray.py:5740:        assert_equal(b[fn1], 1)
numpy/core/tests/test_multiarray.py:5742:        assert_raises(ValueError, b.__setitem__, fnn, 1)
numpy/core/tests/test_multiarray.py:5743:        assert_raises(ValueError, b.__getitem__, fnn)
numpy/core/tests/test_multiarray.py:5745:        assert_equal(b[fn1], 2)
numpy/core/tests/test_multiarray.py:5747:        assert_raises(ValueError, b[0].__setitem__, fnn, 1)
numpy/core/tests/test_multiarray.py:5748:        assert_raises(ValueError, b[0].__getitem__, fnn)
numpy/core/tests/test_multiarray.py:5753:        assert_equal(b[fn3][sfn1], 1)
numpy/core/tests/test_multiarray.py:5754:        assert_raises(ValueError, b[fn3].__setitem__, fnn, 1)
numpy/core/tests/test_multiarray.py:5755:        assert_raises(ValueError, b[fn3].__getitem__, fnn)
numpy/core/tests/test_multiarray.py:5760:        assert_equal(b[['f1', 'f2']][0].tolist(), (2, 3))
numpy/core/tests/test_multiarray.py:5761:        assert_equal(b[['f2', 'f1']][0].tolist(), (3, 2))
numpy/core/tests/test_multiarray.py:5762:        assert_equal(b[['f1', 'f3']][0].tolist(), (2, (1,)))
numpy/core/tests/test_multiarray.py:5765:        assert_raises(ValueError, a.__setitem__, u'\u03e0', 1)
numpy/core/tests/test_multiarray.py:5766:        assert_raises(ValueError, a.__getitem__, u'\u03e0')
numpy/core/tests/test_multiarray.py:5775:        assert_(hash(a[0]) == hash(a[1]))
numpy/core/tests/test_multiarray.py:5776:        assert_(hash(a[0]) == hash(b[0]))
numpy/core/tests/test_multiarray.py:5777:        assert_(hash(a[0]) != hash(b[1]))
numpy/core/tests/test_multiarray.py:5778:        assert_(hash(c[0]) == hash(a[0]) and c[0] == a[0])
numpy/core/tests/test_multiarray.py:5782:        assert_raises(TypeError, hash, a[0])
numpy/core/tests/test_multiarray.py:5794:        assert_(v.base is a)
numpy/core/tests/test_multiarray.py:5795:        assert_(v.dtype == np.dtype({'names': ['a', 'c'],
numpy/core/tests/test_multiarray.py:5799:        assert_equal(a[0].item(), (4, 1, 5))
numpy/core/tests/test_multiarray.py:5810:        assert_array_equal(y, z)
numpy/core/tests/test_multiarray.py:5811:        assert_array_equal(y, [67305985, 134678021])
numpy/core/tests/test_multiarray.py:5839:            assert_equal(np.mean([x]), 1.)
numpy/core/tests/test_multiarray.py:5840:            assert_equal(np.std([x]), 0.)
numpy/core/tests/test_multiarray.py:5841:            assert_equal(np.var([x]), 0.)
numpy/core/tests/test_multiarray.py:5848:                assert_(res.ndim == mat.ndim)
numpy/core/tests/test_multiarray.py:5849:                assert_(res.shape[axis] == 1)
numpy/core/tests/test_multiarray.py:5852:                assert_(res.shape == (1, 1))
numpy/core/tests/test_multiarray.py:5860:            assert_almost_equal(res, out)
numpy/core/tests/test_multiarray.py:5861:            assert_almost_equal(res, tgt)
numpy/core/tests/test_multiarray.py:5863:        assert_raises(ValueError, f, mat, axis=1, out=out)
numpy/core/tests/test_multiarray.py:5865:        assert_raises(ValueError, f, mat, axis=1, out=out)
numpy/core/tests/test_multiarray.py:5877:            assert_(res is tgt)
numpy/core/tests/test_multiarray.py:5880:            assert_(res is Decimal)
numpy/core/tests/test_multiarray.py:5888:                assert_(res is tgt)
numpy/core/tests/test_multiarray.py:5891:                assert_(res is tgt)
numpy/core/tests/test_multiarray.py:5899:                assert_(res is tgt)
numpy/core/tests/test_multiarray.py:5902:                assert_(res is tgt)
numpy/core/tests/test_multiarray.py:5911:                assert_(res is tgt)
numpy/core/tests/test_multiarray.py:5914:                assert_(res is tgt)
numpy/core/tests/test_multiarray.py:5928:        #        assert_(res is tgt)
numpy/core/tests/test_multiarray.py:5931:        #        assert_(res is tgt)
numpy/core/tests/test_multiarray.py:5938:                assert_(res is tgt)
numpy/core/tests/test_multiarray.py:5941:                assert_(res is tgt)
numpy/core/tests/test_multiarray.py:5954:                assert_almost_equal(res, tgt)
numpy/core/tests/test_multiarray.py:5955:                assert_almost_equal(res, tgt)
numpy/core/tests/test_multiarray.py:5964:                    assert_(not (res < 0).any())
numpy/core/tests/test_multiarray.py:5965:                    assert_(len(w) > 0)
numpy/core/tests/test_multiarray.py:5966:                    assert_(issubclass(w[0].category, RuntimeWarning))
numpy/core/tests/test_multiarray.py:5974:                    assert_(np.isnan(f(A, axis=axis)).all())
numpy/core/tests/test_multiarray.py:5975:                    assert_(len(w) > 0)
numpy/core/tests/test_multiarray.py:5976:                    assert_(issubclass(w[0].category, RuntimeWarning))
numpy/core/tests/test_multiarray.py:5980:                    assert_equal(f(A, axis=axis), np.zeros([]))
numpy/core/tests/test_multiarray.py:5987:                assert_almost_equal(res, tgt)
numpy/core/tests/test_multiarray.py:5991:                assert_almost_equal(res, tgt)
numpy/core/tests/test_multiarray.py:5996:        assert_(_mean(np.ones(100000, dtype='float16')) == 1)
numpy/core/tests/test_multiarray.py:6019:            assert_allclose(a.mean(axis=_ax, where=_wh),
numpy/core/tests/test_multiarray.py:6021:            assert_allclose(np.mean(a, axis=_ax, where=_wh),
numpy/core/tests/test_multiarray.py:6027:        assert_allclose(a3d.mean(axis=2, where=_wh_partial),
numpy/core/tests/test_multiarray.py:6029:        assert_allclose(np.mean(a3d, axis=2, where=_wh_partial),
numpy/core/tests/test_multiarray.py:6033:            assert_allclose(a.mean(axis=1, where=wh_partial),
numpy/core/tests/test_multiarray.py:6036:            assert_equal(a.mean(where=False), np.nan)
numpy/core/tests/test_multiarray.py:6038:            assert_equal(np.mean(a, where=False), np.nan)
numpy/core/tests/test_multiarray.py:6047:                assert_almost_equal(res, tgt)
numpy/core/tests/test_multiarray.py:6062:            assert_almost_equal(res, tgt, decimal=ndec)
numpy/core/tests/test_multiarray.py:6073:            assert_almost_equal(res, tgt)
numpy/core/tests/test_multiarray.py:6080:        assert_almost_equal(cmat.var(), cmat_swapped.var())
numpy/core/tests/test_multiarray.py:6103:            assert_allclose(a.var(axis=_ax, where=_wh),
numpy/core/tests/test_multiarray.py:6105:            assert_allclose(np.var(a, axis=_ax, where=_wh),
numpy/core/tests/test_multiarray.py:6111:        assert_allclose(a3d.var(axis=2, where=_wh_partial),
numpy/core/tests/test_multiarray.py:6113:        assert_allclose(np.var(a3d, axis=2, where=_wh_partial),
numpy/core/tests/test_multiarray.py:6116:        assert_allclose(np.var(a, axis=1, where=wh_full),
numpy/core/tests/test_multiarray.py:6118:        assert_allclose(np.var(a, axis=0, where=wh_partial),
numpy/core/tests/test_multiarray.py:6121:            assert_equal(a.var(where=False), np.nan)
numpy/core/tests/test_multiarray.py:6123:            assert_equal(np.var(a, where=False), np.nan)
numpy/core/tests/test_multiarray.py:6130:                assert_almost_equal(res, tgt)
numpy/core/tests/test_multiarray.py:6152:            assert_allclose(a.std(axis=_ax, where=_wh), _res)
numpy/core/tests/test_multiarray.py:6153:            assert_allclose(np.std(a, axis=_ax, where=_wh), _res)
numpy/core/tests/test_multiarray.py:6158:        assert_allclose(a3d.std(axis=2, where=_wh_partial),
numpy/core/tests/test_multiarray.py:6160:        assert_allclose(np.std(a3d, axis=2, where=_wh_partial),
numpy/core/tests/test_multiarray.py:6163:        assert_allclose(a.std(axis=1, where=whf),
numpy/core/tests/test_multiarray.py:6165:        assert_allclose(np.std(a, axis=1, where=whf),
numpy/core/tests/test_multiarray.py:6167:        assert_allclose(a.std(axis=0, where=whp),
numpy/core/tests/test_multiarray.py:6169:        assert_allclose(np.std(a, axis=0, where=whp),
numpy/core/tests/test_multiarray.py:6172:            assert_equal(a.std(where=False), np.nan)
numpy/core/tests/test_multiarray.py:6174:            assert_equal(np.std(a, where=False), np.nan)
numpy/core/tests/test_multiarray.py:6189:        assert_(res.info == dat.info)
numpy/core/tests/test_multiarray.py:6191:        assert_(res.info == dat.info)
numpy/core/tests/test_multiarray.py:6193:        assert_(res.info == dat.info)
numpy/core/tests/test_multiarray.py:6206:            assert_(np.isscalar(res))
numpy/core/tests/test_multiarray.py:6207:            assert_equal(np.vdot(b, b), 3)
numpy/core/tests/test_multiarray.py:6214:            assert_(np.isscalar(res))
numpy/core/tests/test_multiarray.py:6215:            assert_equal(np.vdot(b, b), 3)
numpy/core/tests/test_multiarray.py:6220:        assert_(np.isscalar(res))
numpy/core/tests/test_multiarray.py:6221:        assert_equal(np.vdot(b, b), True)
numpy/core/tests/test_multiarray.py:6229:        assert_equal(np.vdot(a, b), res)
numpy/core/tests/test_multiarray.py:6230:        assert_equal(np.vdot(b, a), res)
numpy/core/tests/test_multiarray.py:6231:        assert_equal(np.vdot(b, b), res)
numpy/core/tests/test_multiarray.py:6244:            assert_equal(np.vdot(a, b),
numpy/core/tests/test_multiarray.py:6246:            assert_equal(np.vdot(a, b.copy()),
numpy/core/tests/test_multiarray.py:6248:            assert_equal(np.vdot(a.copy(), b),
numpy/core/tests/test_multiarray.py:6250:            assert_equal(np.vdot(a.copy('F'), b),
numpy/core/tests/test_multiarray.py:6252:            assert_equal(np.vdot(a, b.copy('F')),
numpy/core/tests/test_multiarray.py:6271:        assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6278:        assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6284:        assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6290:        assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6296:        assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6302:        assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6308:        assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6314:        assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6321:        assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6328:        assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6336:        assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6344:        assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6354:            assert_(res.shape == tgt.shape)
numpy/core/tests/test_multiarray.py:6355:            assert_almost_equal(res, tgt, decimal=self.N)
numpy/core/tests/test_multiarray.py:6387:        assert_equal(zeros[0].array, zeros_test[0].array)
numpy/core/tests/test_multiarray.py:6388:        assert_equal(zeros[1].array, zeros_test[1].array)
numpy/core/tests/test_multiarray.py:6398:        assert_allclose(c, d)
numpy/core/tests/test_multiarray.py:6411:            assert_equal(sys.getrefcount(r), 2)
numpy/core/tests/test_multiarray.py:6413:        assert_array_equal(r2, r)
numpy/core/tests/test_multiarray.py:6414:        assert_(r is dot(f, v, out=r))
numpy/core/tests/test_multiarray.py:6419:        assert_(r is dot(f, v, r))
numpy/core/tests/test_multiarray.py:6420:        assert_array_equal(r2, r)
numpy/core/tests/test_multiarray.py:6430:        assert_raises(ValueError, dot, f, v, r)
numpy/core/tests/test_multiarray.py:6433:        assert_raises(ValueError, dot, f, v, r)
numpy/core/tests/test_multiarray.py:6436:        assert_raises(ValueError, dot, f, v, r)
numpy/core/tests/test_multiarray.py:6439:        assert_raises(ValueError, dot, f, v, r)
numpy/core/tests/test_multiarray.py:6440:        assert_raises(ValueError, dot, f, v, r.T)
numpy/core/tests/test_multiarray.py:6443:        assert_raises(ValueError, dot, f, v, r[:, ::2])
numpy/core/tests/test_multiarray.py:6444:        assert_raises(ValueError, dot, f, v, r[:, :32])
numpy/core/tests/test_multiarray.py:6447:        assert_raises(ValueError, dot, f, v, r)
numpy/core/tests/test_multiarray.py:6450:        assert_raises(ValueError, dot, f, v, r)
numpy/core/tests/test_multiarray.py:6458:        assert_equal(np.dot(a, b), res)
numpy/core/tests/test_multiarray.py:6459:        assert_equal(np.dot(b, a), res)
numpy/core/tests/test_multiarray.py:6460:        assert_equal(np.dot(b, b), res)
numpy/core/tests/test_multiarray.py:6481:            assert_allclose(np.dot(A, X), desired, rtol=1e-5, atol=1e-7)
numpy/core/tests/test_multiarray.py:6496:            assert_dot_close(A_f, X_f, desired)
numpy/core/tests/test_multiarray.py:6501:            assert_dot_close(A_f_2, X_f, desired)
numpy/core/tests/test_multiarray.py:6508:            assert_dot_close(A_f_22, X_f_2, desired)
numpy/core/tests/test_multiarray.py:6511:                assert_equal(A_f_22.strides, (8, 8 * m))
numpy/core/tests/test_multiarray.py:6513:                assert_equal(A_f_22.strides, (8 * n, 8))
numpy/core/tests/test_multiarray.py:6514:            assert_equal(X_f_2.strides, (8,))
numpy/core/tests/test_multiarray.py:6517:            assert_dot_close(A_f_22, X_f_2c, desired)
numpy/core/tests/test_multiarray.py:6522:            assert_dot_close(A_f_12, X_f_2c, desired)
numpy/core/tests/test_multiarray.py:6524:            assert_dot_close(A_f_12, X_f_2, desired)
numpy/core/tests/test_multiarray.py:6552:            assert_raises(ValueError, self.matmul, a, b)
numpy/core/tests/test_multiarray.py:6565:            assert_(res.shape == (2, 1, 1))
numpy/core/tests/test_multiarray.py:6572:            assert_(np.array(c).shape == ())
numpy/core/tests/test_multiarray.py:6582:                assert_(res.dtype == dt)
numpy/core/tests/test_multiarray.py:6587:                assert_(type(res) is np.dtype(dt).type)
numpy/core/tests/test_multiarray.py:6597:            assert_equal(res, tgt)
numpy/core/tests/test_multiarray.py:6599:            assert_equal(res, tgt)
numpy/core/tests/test_multiarray.py:6604:        assert_equal(res, True)
numpy/core/tests/test_multiarray.py:6615:            assert_equal(res, tgt1)
numpy/core/tests/test_multiarray.py:6618:            assert_equal(res, tgt2)
numpy/core/tests/test_multiarray.py:6623:        assert_equal(res, True)
numpy/core/tests/test_multiarray.py:6636:            assert_equal(res, tgt1)
numpy/core/tests/test_multiarray.py:6638:            assert_equal(res, tgt2)
numpy/core/tests/test_multiarray.py:6648:        assert_equal(res, tgt1)
numpy/core/tests/test_multiarray.py:6650:        assert_equal(res, tgt2)
numpy/core/tests/test_multiarray.py:6663:            assert_equal(res, tgt1)
numpy/core/tests/test_multiarray.py:6665:            assert_equal(res, tgt2)
numpy/core/tests/test_multiarray.py:6675:        assert_equal(res, tgt1)
numpy/core/tests/test_multiarray.py:6677:        assert_equal(res, tgt2)
numpy/core/tests/test_multiarray.py:6698:            assert_equal(res, tgt12)
numpy/core/tests/test_multiarray.py:6700:            assert_equal(res, tgt21)
numpy/core/tests/test_multiarray.py:6704:            assert_equal(res, tgt11_21)
numpy/core/tests/test_multiarray.py:6708:            assert_equal(res, tgt11_12)
numpy/core/tests/test_multiarray.py:6712:            assert_equal(res, tgt12_21)
numpy/core/tests/test_multiarray.py:6728:        assert_equal(res, tgt12)
numpy/core/tests/test_multiarray.py:6730:        assert_equal(res, tgt21)
numpy/core/tests/test_multiarray.py:6734:        assert_equal(res, tgt11_21)
numpy/core/tests/test_multiarray.py:6738:        assert_equal(res, tgt11_12)
numpy/core/tests/test_multiarray.py:6742:        assert_equal(res, tgt12_21)
numpy/core/tests/test_multiarray.py:6757:        assert_array_equal(out, tgt, err_msg=msg)
numpy/core/tests/test_multiarray.py:6763:        assert_array_equal(out, tgt, err_msg=msg)
numpy/core/tests/test_multiarray.py:6768:        assert_raises_regex(TypeError, msg, self.matmul, a, b, out=out)
numpy/core/tests/test_multiarray.py:6773:        assert_(c is out)
numpy/core/tests/test_multiarray.py:6777:        assert_array_equal(c, tgt)
numpy/core/tests/test_multiarray.py:6784:        assert self.matmul(arr, arr).shape == (0, 1, 1)
numpy/core/tests/test_multiarray.py:6799:        assert c.base is out
numpy/core/tests/test_multiarray.py:6800:        assert_array_equal(c, tgt)
numpy/core/tests/test_multiarray.py:6802:        assert_array_equal(c, tgt_mv)
numpy/core/tests/test_multiarray.py:6804:        assert_array_equal(c, tgt_mv)
numpy/core/tests/test_multiarray.py:6809:        assert_array_equal(c, tgt)
numpy/core/tests/test_multiarray.py:6814:        assert_array_equal(out, tgt)
numpy/core/tests/test_multiarray.py:6844:        assert_equal(r1, r2)
numpy/core/tests/test_multiarray.py:6847:        assert_equal(r1, r3)
numpy/core/tests/test_multiarray.py:6862:        assert_allclose(N3, self.matmul(N1, N2))
numpy/core/tests/test_multiarray.py:6868:        assert_(type(res) is F)
numpy/core/tests/test_multiarray.py:6874:        assert_array_equal(np.matmul(a, b), c)
numpy/core/tests/test_multiarray.py:6897:        assert np.max(a.view(np.uint8)) == 1
numpy/core/tests/test_multiarray.py:6900:        assert np.max(b.view(np.uint8)) == 1
numpy/core/tests/test_multiarray.py:6907:        assert_equal(out1, out2)
numpy/core/tests/test_multiarray.py:6910:        assert not np.any(c)
numpy/core/tests/test_multiarray.py:6930:        assert_equal(self.matmul(a, b), "A")
numpy/core/tests/test_multiarray.py:6931:        assert_equal(self.matmul(b, a), "A")
numpy/core/tests/test_multiarray.py:6934:        assert_raises(TypeError, self.matmul, np.int8(5), np.int8(5))
numpy/core/tests/test_multiarray.py:6935:        assert_raises(TypeError, self.matmul, np.void(b'abc'), np.void(b'abc'))
numpy/core/tests/test_multiarray.py:6936:        assert_raises(TypeError, self.matmul, np.arange(10), np.void(b'abc'))
numpy/core/tests/test_multiarray.py:6944:    assert_raises(TypeError, a.__imatmul__, b)
numpy/core/tests/test_multiarray.py:6946:    assert_raises(TypeError, operator.imatmul, a, b)
numpy/core/tests/test_multiarray.py:6947:    assert_raises(TypeError, exec, "a @= b", globals(), locals())
numpy/core/tests/test_multiarray.py:6952:    assert c.shape == (3, 4, 4)
numpy/core/tests/test_multiarray.py:6954:    assert d.shape == (4, 4, 3)
numpy/core/tests/test_multiarray.py:6956:    assert_array_equal(e, c)
numpy/core/tests/test_multiarray.py:6958:    assert f.shape == (4, 5)
numpy/core/tests/test_multiarray.py:6967:        assert_raises(TypeError, np.inner, c, A)
numpy/core/tests/test_multiarray.py:6968:        assert_raises(TypeError, np.inner, A, c)
numpy/core/tests/test_multiarray.py:6975:            assert_equal(np.inner(vec, sca), desired)
numpy/core/tests/test_multiarray.py:6976:            assert_equal(np.inner(sca, vec), desired)
numpy/core/tests/test_multiarray.py:6984:        assert_almost_equal(p, 0, decimal=14)
numpy/core/tests/test_multiarray.py:6994:            assert_equal(np.inner(A.T, C), desired)
numpy/core/tests/test_multiarray.py:6995:            assert_equal(np.inner(C, A.T), desired)
numpy/core/tests/test_multiarray.py:6996:            assert_equal(np.inner(B, C), desired)
numpy/core/tests/test_multiarray.py:6997:            assert_equal(np.inner(C, B), desired)
numpy/core/tests/test_multiarray.py:7000:            assert_equal(np.inner(A, B), desired)
numpy/core/tests/test_multiarray.py:7003:            assert_equal(np.inner(A, A), desired)
numpy/core/tests/test_multiarray.py:7004:            assert_equal(np.inner(A, A.copy()), desired)
numpy/core/tests/test_multiarray.py:7009:            assert_equal(np.inner(b, a), desired)
numpy/core/tests/test_multiarray.py:7035:            assert_equal(np.inner(a, b), desired)
numpy/core/tests/test_multiarray.py:7036:            assert_equal(np.inner(b, a).transpose(2,3,0,1), desired)
numpy/core/tests/test_multiarray.py:7049:        assert_equal(A, [2, 2, 3])
numpy/core/tests/test_multiarray.py:7053:        assert_equal(A, [[2, 2, 3], [2, 2, 3]])
numpy/core/tests/test_multiarray.py:7057:        assert_equal(A, [[2, 2, 3], [2, 2, 3]])
numpy/core/tests/test_multiarray.py:7066:        assert(np.choose([0], ops).dtype == expected_dt)
numpy/core/tests/test_multiarray.py:7122:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7130:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7138:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7145:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7155:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7164:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7169:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7174:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7183:        assert_([i.dtype == dt for i in l])
numpy/core/tests/test_multiarray.py:7184:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7193:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7212:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7221:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7236:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7247:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7258:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7269:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7284:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7295:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7306:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7317:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7329:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7337:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7345:        assert_array_equal(l, r)
numpy/core/tests/test_multiarray.py:7355:            assert_raises(np.ComplexWarning, x.__setitem__, slice(None), y)
numpy/core/tests/test_multiarray.py:7356:            assert_equal(x, [1, 2])
numpy/core/tests/test_multiarray.py:7364:        assert_equal(wanted, dt)
numpy/core/tests/test_multiarray.py:7369:        assert_equal(wanted, dt)
numpy/core/tests/test_multiarray.py:7374:        assert_equal(wanted, dt)
numpy/core/tests/test_multiarray.py:7379:        assert_equal(wanted, dt)
numpy/core/tests/test_multiarray.py:7384:        assert_equal(wanted, dt)
numpy/core/tests/test_multiarray.py:7505:        assert_(not y.flags.owndata)
numpy/core/tests/test_multiarray.py:7506:        assert_(y2.flags.owndata)
numpy/core/tests/test_multiarray.py:7508:        assert_equal(y.dtype, obj.dtype)
numpy/core/tests/test_multiarray.py:7509:        assert_equal(y.shape, obj.shape)
numpy/core/tests/test_multiarray.py:7510:        assert_array_equal(obj, y)
numpy/core/tests/test_multiarray.py:7512:        assert_equal(y2.dtype, obj.dtype)
numpy/core/tests/test_multiarray.py:7513:        assert_equal(y2.shape, obj.shape)
numpy/core/tests/test_multiarray.py:7514:        assert_array_equal(obj, y2)
numpy/core/tests/test_multiarray.py:7577:            assert_raises(ValueError, self._check_roundtrip, x)
numpy/core/tests/test_multiarray.py:7584:            assert_raises(ValueError, self._check_roundtrip, x)
numpy/core/tests/test_multiarray.py:7637:        assert_raises((ValueError, BufferError), memoryview, a)
numpy/core/tests/test_multiarray.py:7638:        assert_raises((ValueError, BufferError), memoryview, np.array((3), 'M8[D]'))
numpy/core/tests/test_multiarray.py:7643:        assert_equal(y.format, 'i')
numpy/core/tests/test_multiarray.py:7644:        assert_equal(y.shape, (5,))
numpy/core/tests/test_multiarray.py:7645:        assert_equal(y.ndim, 1)
numpy/core/tests/test_multiarray.py:7646:        assert_equal(y.strides, (4,))
numpy/core/tests/test_multiarray.py:7647:        assert_equal(y.suboffsets, ())
numpy/core/tests/test_multiarray.py:7648:        assert_equal(y.itemsize, 4)
numpy/core/tests/test_multiarray.py:7653:        assert_equal(y.format, 'd')
numpy/core/tests/test_multiarray.py:7654:        assert_equal(y.shape, (2, 2))
numpy/core/tests/test_multiarray.py:7655:        assert_equal(y.ndim, 2)
numpy/core/tests/test_multiarray.py:7656:        assert_equal(y.strides, (16, 8))
numpy/core/tests/test_multiarray.py:7657:        assert_equal(y.suboffsets, ())
numpy/core/tests/test_multiarray.py:7658:        assert_equal(y.itemsize, 8)
numpy/core/tests/test_multiarray.py:7663:        assert_equal(y.format, 'f')
numpy/core/tests/test_multiarray.py:7664:        assert_equal(y.shape, (3, 3))
numpy/core/tests/test_multiarray.py:7665:        assert_equal(y.ndim, 2)
numpy/core/tests/test_multiarray.py:7666:        assert_equal(y.strides, (36, 4))
numpy/core/tests/test_multiarray.py:7667:        assert_equal(y.suboffsets, ())
numpy/core/tests/test_multiarray.py:7668:        assert_equal(y.itemsize, 4)
numpy/core/tests/test_multiarray.py:7698:        assert_equal(y.shape, (1,))
numpy/core/tests/test_multiarray.py:7699:        assert_equal(y.ndim, 1)
numpy/core/tests/test_multiarray.py:7700:        assert_equal(y.suboffsets, ())
numpy/core/tests/test_multiarray.py:7704:            assert_equal(y.format, 'T{b:a:=h:b:i:c:l:d:q:dx:B:e:@H:f:=I:g:L:h:Q:hx:f:i:d:j:^g:k:=Zf:ix:Zd:jx:^Zg:kx:4s:l:=4w:m:3x:n:?:o:@e:p:}')
numpy/core/tests/test_multiarray.py:7706:            assert_equal(y.format, 'T{b:a:=h:b:i:c:q:d:q:dx:B:e:@H:f:=I:g:Q:h:Q:hx:f:i:d:j:^g:k:=Zf:ix:Zd:jx:^Zg:kx:4s:l:=4w:m:3x:n:?:o:@e:p:}')
numpy/core/tests/test_multiarray.py:7709:            assert_equal(y.strides, (sz,))
numpy/core/tests/test_multiarray.py:7710:        assert_equal(y.itemsize, sz)
numpy/core/tests/test_multiarray.py:7715:        assert_equal(y.format, 'T{(2,2)i:a:}')
numpy/core/tests/test_multiarray.py:7716:        assert_equal(y.shape, ())
numpy/core/tests/test_multiarray.py:7717:        assert_equal(y.ndim, 0)
numpy/core/tests/test_multiarray.py:7718:        assert_equal(y.strides, ())
numpy/core/tests/test_multiarray.py:7719:        assert_equal(y.suboffsets, ())
numpy/core/tests/test_multiarray.py:7720:        assert_equal(y.itemsize, 16)
numpy/core/tests/test_multiarray.py:7726:            assert_equal(y.format, '>i')
numpy/core/tests/test_multiarray.py:7728:            assert_equal(y.format, 'i')
numpy/core/tests/test_multiarray.py:7733:            assert_equal(y.format, 'i')
numpy/core/tests/test_multiarray.py:7735:            assert_equal(y.format, '<i')
numpy/core/tests/test_multiarray.py:7756:        assert_array_equal(res, obj)
numpy/core/tests/test_multiarray.py:7771:            assert_equal(count_1, count_2)
numpy/core/tests/test_multiarray.py:7799:        assert_(memoryview(c).strides == (800, 80, 8))
numpy/core/tests/test_multiarray.py:7806:        assert_(memoryview(fortran).strides == (8, 80, 800))
numpy/core/tests/test_multiarray.py:7812:            assert_(strides[0] == 8)
numpy/core/tests/test_multiarray.py:7816:            assert_(strides[-1] == 8)
numpy/core/tests/test_multiarray.py:7831:            assert s == (8, 8)
numpy/core/tests/test_multiarray.py:7833:            assert s == (80, 8)
numpy/core/tests/test_multiarray.py:7863:        assert_equal(m.ndim, 33)
numpy/core/tests/test_multiarray.py:7865:        assert_raises_regex(
numpy/core/tests/test_multiarray.py:7879:        assert_('&' in m.format)
numpy/core/tests/test_multiarray.py:7881:        assert_raises_regex(
numpy/core/tests/test_multiarray.py:7917:        assert_equal(arr['a'], 1)
numpy/core/tests/test_multiarray.py:7918:        assert_equal(arr['b'], 2)
numpy/core/tests/test_multiarray.py:7920:        assert_equal(arr['a'], 3)
numpy/core/tests/test_multiarray.py:8010:                    assert res is not arr and res.flags.owndata
numpy/core/tests/test_multiarray.py:8011:                    assert_array_equal(res, arr)
numpy/core/tests/test_multiarray.py:8017:                        assert res is arr or res.base is arr
numpy/core/tests/test_multiarray.py:8022:                    assert res is arr or res.base is arr
numpy/core/tests/test_multiarray.py:8028:                        assert res is not arr and res.flags.owndata
numpy/core/tests/test_multiarray.py:8029:                        assert_array_equal(res, arr)
numpy/core/tests/test_multiarray.py:8048:            assert not np.may_share_memory(arr, res)
numpy/core/tests/test_multiarray.py:8051:            assert np.may_share_memory(arr, res)
numpy/core/tests/test_multiarray.py:8053:        assert np.may_share_memory(arr, res)
numpy/core/tests/test_multiarray.py:8068:            assert res.base is val
numpy/core/tests/test_multiarray.py:8083:            assert_array_equal(res, base_arr)
numpy/core/tests/test_multiarray.py:8087:            assert res is not base_arr
numpy/core/tests/test_multiarray.py:8091:            assert_array_equal(res, base_arr)
numpy/core/tests/test_multiarray.py:8092:            assert res is base_arr  # numpy trusts the ArrayLike
numpy/core/tests/test_multiarray.py:8107:            assert arr.flags.c_contiguous
numpy/core/tests/test_multiarray.py:8109:            assert arr.flags.f_contiguous
numpy/core/tests/test_multiarray.py:8131:                assert res is not arr and res.flags.owndata
numpy/core/tests/test_multiarray.py:8132:                assert_array_equal(arr, res)
numpy/core/tests/test_multiarray.py:8139:                        assert res is arr or res.base.obj is arr
numpy/core/tests/test_multiarray.py:8144:                    assert res is arr or res.base.obj is arr
numpy/core/tests/test_multiarray.py:8148:                    assert_array_equal(arr, res)
numpy/core/tests/test_multiarray.py:8181:                assert_raises(AttributeError, delattr, a, s)
numpy/core/tests/test_multiarray.py:8189:            assert_raises(AttributeError, delattr, a, s)
numpy/core/tests/test_multiarray.py:8195:            assert_raises(AttributeError, delattr, a, s)
numpy/core/tests/test_multiarray.py:8203:            assert_raises(AttributeError, delattr, a, s)
numpy/core/tests/test_multiarray.py:8241:            assert_raises(expected, np.array, val)
numpy/core/tests/test_multiarray.py:8244:            assert_equal(np.array(val), expected)
numpy/core/tests/test_multiarray.py:8245:            assert result.dtype == 'f8'
numpy/core/tests/test_multiarray.py:8249:            assert_equal(pre_cnt, post_cnt)
numpy/core/tests/test_multiarray.py:8255:    assert_equal(np.array(ArrayLike()), 1)
numpy/core/tests/test_multiarray.py:8265:    assert_equal(descr_t.itemsize, typestr_t.itemsize)
numpy/core/tests/test_multiarray.py:8290:    assert_equal(arr1, arr2)
numpy/core/tests/test_multiarray.py:8291:    assert_equal(arr1, arr3)
numpy/core/tests/test_multiarray.py:8305:    assert_equal(arr1, arr[1:])
numpy/core/tests/test_multiarray.py:8332:    assert_raises(ValueError, a[0].__delitem__, 'x')
numpy/core/tests/test_multiarray.py:8354:        assert_equal(b, [100.1,  51.,   6.,   3.,   4.,   5.])
numpy/core/tests/test_multiarray.py:8361:        assert_equal(array[3], from_c)
numpy/core/tests/test_multiarray.py:8366:        assert_equal(array[2, 4], from_c)
numpy/core/tests/test_multiarray.py:8371:        assert_equal(array[1, 2, 3], from_c)
numpy/core/tests/test_multiarray.py:8378:            assert_(1 > np.array(0, dtype=dt1), "type %s failed" % (dt1,))
numpy/core/tests/test_multiarray.py:8379:            assert_(not 1 < np.array(0, dtype=dt1), "type %s failed" % (dt1,))
numpy/core/tests/test_multiarray.py:8382:                assert_(np.array(1, dtype=dt1) > np.array(0, dtype=dt2),
numpy/core/tests/test_multiarray.py:8384:                assert_(not np.array(1, dtype=dt1) < np.array(0, dtype=dt2),
numpy/core/tests/test_multiarray.py:8389:            assert_(-1 < np.array(1, dtype=dt1), "type %s failed" % (dt1,))
numpy/core/tests/test_multiarray.py:8390:            assert_(not -1 > np.array(1, dtype=dt1), "type %s failed" % (dt1,))
numpy/core/tests/test_multiarray.py:8391:            assert_(-1 != np.array(1, dtype=dt1), "type %s failed" % (dt1,))
numpy/core/tests/test_multiarray.py:8395:                assert_(np.array(1, dtype=dt1) > np.array(-1, dtype=dt2),
numpy/core/tests/test_multiarray.py:8397:                assert_(not np.array(1, dtype=dt1) < np.array(-1, dtype=dt2),
numpy/core/tests/test_multiarray.py:8399:                assert_(np.array(1, dtype=dt1) != np.array(-1, dtype=dt2),
numpy/core/tests/test_multiarray.py:8404:            assert_(1 > np.array(-1, dtype=dt1), "type %s failed" % (dt1,))
numpy/core/tests/test_multiarray.py:8405:            assert_(not 1 < np.array(-1, dtype=dt1), "type %s failed" % (dt1,))
numpy/core/tests/test_multiarray.py:8406:            assert_(-1 == np.array(-1, dtype=dt1), "type %s failed" % (dt1,))
numpy/core/tests/test_multiarray.py:8409:                assert_(np.array(1, dtype=dt1) > np.array(-1, dtype=dt2),
numpy/core/tests/test_multiarray.py:8411:                assert_(not np.array(1, dtype=dt1) < np.array(-1, dtype=dt2),
numpy/core/tests/test_multiarray.py:8413:                assert_(np.array(-1, dtype=dt1) == np.array(-1, dtype=dt2),
numpy/core/tests/test_multiarray.py:8417:        assert_equal(bool(np.array([False])), False)
numpy/core/tests/test_multiarray.py:8418:        assert_equal(bool(np.array([True])), True)
numpy/core/tests/test_multiarray.py:8419:        assert_equal(bool(np.array([[42]])), True)
numpy/core/tests/test_multiarray.py:8420:        assert_raises(ValueError, bool, np.array([1, 2]))
numpy/core/tests/test_multiarray.py:8426:        assert_raises(NotImplementedError, bool, np.array(NotConvertible()))
numpy/core/tests/test_multiarray.py:8427:        assert_raises(NotImplementedError, bool, np.array([NotConvertible()]))
numpy/core/tests/test_multiarray.py:8437:        assert_raises(Error, bool, self_containing)  # previously stack overflow
numpy/core/tests/test_multiarray.py:8444:            assert_equal(int_func(np.array(0)), 0)
numpy/core/tests/test_multiarray.py:8445:            assert_equal(int_func(np.array([1])), 1)
numpy/core/tests/test_multiarray.py:8446:            assert_equal(int_func(np.array([[42]])), 42)
numpy/core/tests/test_multiarray.py:8447:            assert_raises(TypeError, int_func, np.array([1, 2]))
numpy/core/tests/test_multiarray.py:8450:            assert_equal(4, int_func(np.array('4')))
numpy/core/tests/test_multiarray.py:8451:            assert_equal(5, int_func(np.bytes_(b'5')))
numpy/core/tests/test_multiarray.py:8452:            assert_equal(6, int_func(np.unicode_(u'6')))
numpy/core/tests/test_multiarray.py:8457:            assert_equal(3, int_func(np.array(HasTrunc())))
numpy/core/tests/test_multiarray.py:8458:            assert_equal(3, int_func(np.array([HasTrunc()])))
numpy/core/tests/test_multiarray.py:8475:            assert_equal(np.where( c, dt(0), dt(1)), dt(0))
numpy/core/tests/test_multiarray.py:8476:            assert_equal(np.where(~c, dt(0), dt(1)), dt(1))
numpy/core/tests/test_multiarray.py:8477:            assert_equal(np.where(True, dt(0), dt(1)), dt(0))
numpy/core/tests/test_multiarray.py:8478:            assert_equal(np.where(False, dt(0), dt(1)), dt(1))
numpy/core/tests/test_multiarray.py:8484:            assert_equal(np.where(c, e, e), e)
numpy/core/tests/test_multiarray.py:8485:            assert_equal(np.where(c, d, e), r)
numpy/core/tests/test_multiarray.py:8486:            assert_equal(np.where(c, d, e[0]), r)
numpy/core/tests/test_multiarray.py:8487:            assert_equal(np.where(c, d[0], e), r)
numpy/core/tests/test_multiarray.py:8488:            assert_equal(np.where(c[::2], d[::2], e[::2]), r[::2])
numpy/core/tests/test_multiarray.py:8489:            assert_equal(np.where(c[1::2], d[1::2], e[1::2]), r[1::2])
numpy/core/tests/test_multiarray.py:8490:            assert_equal(np.where(c[::3], d[::3], e[::3]), r[::3])
numpy/core/tests/test_multiarray.py:8491:            assert_equal(np.where(c[1::3], d[1::3], e[1::3]), r[1::3])
numpy/core/tests/test_multiarray.py:8492:            assert_equal(np.where(c[::-2], d[::-2], e[::-2]), r[::-2])
numpy/core/tests/test_multiarray.py:8493:            assert_equal(np.where(c[::-3], d[::-3], e[::-3]), r[::-3])
numpy/core/tests/test_multiarray.py:8494:            assert_equal(np.where(c[1::-3], d[1::-3], e[1::-3]), r[1::-3])
numpy/core/tests/test_multiarray.py:8498:        assert_array_equal(np.where(True, None, None), np.array(None))
numpy/core/tests/test_multiarray.py:8502:        assert_array_equal(np.where(m, 0, b), np.array([]).reshape(0, 3))
numpy/core/tests/test_multiarray.py:8517:        assert_array_equal(np.where(m, d, e), r)
numpy/core/tests/test_multiarray.py:8521:        assert_array_equal(np.where(m, e, d), r)
numpy/core/tests/test_multiarray.py:8523:        assert_array_equal(np.where(m, e, e), e)
numpy/core/tests/test_multiarray.py:8528:        assert_equal(np.where(True, d, e).dtype, np.float32)
numpy/core/tests/test_multiarray.py:8530:        assert_equal(np.where(True, d, e).dtype, np.float32)
numpy/core/tests/test_multiarray.py:8532:        assert_equal(np.where(True, d, e).dtype, np.float32)
numpy/core/tests/test_multiarray.py:8535:        assert_equal(np.where(True, d, e).dtype, np.float64)
numpy/core/tests/test_multiarray.py:8542:        assert_array_equal(r[0], a[0])
numpy/core/tests/test_multiarray.py:8543:        assert_array_equal(r[1], b[0])
numpy/core/tests/test_multiarray.py:8548:        assert_array_equal(r[:,0], a[:,0])
numpy/core/tests/test_multiarray.py:8549:        assert_array_equal(r[:,1], b[:,0])
numpy/core/tests/test_multiarray.py:8559:        assert_equal(np.where(c, a, b), r)
numpy/core/tests/test_multiarray.py:8563:        assert_equal(np.where(c, a, b), r)
numpy/core/tests/test_multiarray.py:8568:        assert_equal(np.where(c, a, b), r)
numpy/core/tests/test_multiarray.py:8573:        assert_equal(np.where(c, b, a), r)
numpy/core/tests/test_multiarray.py:8583:        assert_equal(np.where(c, a, b), r)
numpy/core/tests/test_multiarray.py:8586:        assert_equal(np.where(c, a, b), r)
numpy/core/tests/test_multiarray.py:8589:        assert_equal(np.where(c, a, b), r)
numpy/core/tests/test_multiarray.py:8592:        assert_equal(np.where(c, a, b), r)
numpy/core/tests/test_multiarray.py:8598:        assert_raises(ValueError, np.where, c, a, a)
numpy/core/tests/test_multiarray.py:8599:        assert_raises(ValueError, np.where, c[0], a, b)
numpy/core/tests/test_multiarray.py:8605:        assert_equal(np.where(True, a, b), "abc")
numpy/core/tests/test_multiarray.py:8606:        assert_equal(np.where(False, b, a), "abc")
numpy/core/tests/test_multiarray.py:8611:        assert_equal(np.where(True, a, b), "abcd")
numpy/core/tests/test_multiarray.py:8612:        assert_equal(np.where(False, b, a), "abcd")
numpy/core/tests/test_multiarray.py:8619:        assert_array_equal(ibad,
numpy/core/tests/test_multiarray.py:8631:            assert_array_equal(benchmark, result)
numpy/core/tests/test_multiarray.py:8640:            assert_(sys.getsizeof(x) > 0)
numpy/core/tests/test_multiarray.py:8647:                assert_(sys.getsizeof(x) > length * elem_size)
numpy/core/tests/test_multiarray.py:8663:            assert_(sys.getsizeof(d[...]) < sys.getsizeof(d))
numpy/core/tests/test_multiarray.py:8667:            assert_(sys.getsizeof(d) < sys.getsizeof(d.reshape(100, 1, 1).copy()))
numpy/core/tests/test_multiarray.py:8674:            assert_(old > sys.getsizeof(d))
numpy/core/tests/test_multiarray.py:8676:            assert_(old < sys.getsizeof(d))
numpy/core/tests/test_multiarray.py:8680:            assert_raises(TypeError, d.__sizeof__, "a")
numpy/core/tests/test_multiarray.py:8687:        assert_raises(TypeError, hash, x)
numpy/core/tests/test_multiarray.py:8691:        assert_(not isinstance(x, collections.abc.Hashable))
numpy/core/tests/test_multiarray.py:8747:            assert_(isinstance(f(a, b), self.Bar), msg)
numpy/core/tests/test_multiarray.py:8748:            assert_(isinstance(f(b, a), self.Bar), msg)
numpy/core/tests/test_multiarray.py:8755:            assert_(isinstance(f(a, b), self.Other), msg)
numpy/core/tests/test_multiarray.py:8756:            assert_(isinstance(f(b, a), self.Other), msg)
numpy/core/tests/test_multiarray.py:8763:            assert_(isinstance(f(a, b), self.Bar), msg)
numpy/core/tests/test_multiarray.py:8764:            assert_(isinstance(f(b, a), self.Bar), msg)
numpy/core/tests/test_multiarray.py:8771:            assert_(isinstance(f(a, b), self.Other), msg)
numpy/core/tests/test_multiarray.py:8772:            assert_(isinstance(f(b, a), self.Other), msg)
numpy/core/tests/test_multiarray.py:8778:        assert_(not np.array([''], dtype=str))
numpy/core/tests/test_multiarray.py:8783:        assert_(not a)
numpy/core/tests/test_multiarray.py:8788:        assert_(not a)
numpy/core/tests/test_multiarray.py:8793:        assert_(a)
numpy/core/tests/test_multiarray.py:8808:            assert arr[()] == expected
numpy/core/tests/test_multiarray.py:8809:            assert arr.item() == expected
numpy/core/tests/test_multiarray.py:8815:        assert_equal(l, ['cc', 'cc'])
numpy/core/tests/test_multiarray.py:8821:        assert_equal(l, ['cc', 'cc'])
numpy/core/tests/test_multiarray.py:8827:        assert_(not np.array([''], dtype=np.unicode_))
numpy/core/tests/test_multiarray.py:8832:        assert_(not a)
numpy/core/tests/test_multiarray.py:8837:        assert_(not a)
numpy/core/tests/test_multiarray.py:8842:        assert_(a)
numpy/core/tests/test_multiarray.py:8849:        assert_equal('{:0.3g}'.format(a), '3.14')
numpy/core/tests/test_multiarray.py:8850:        assert_equal('{:0.3g}'.format(a[()]), '3.14')
numpy/core/tests/test_multiarray.py:8854:        assert_equal('{}'.format(a), str(a))
numpy/core/tests/test_multiarray.py:8859:        assert_raises(TypeError, '{:30}'.format, a)
numpy/core/tests/test_multiarray.py:8868:        assert_equal(ctypes, test_arr.ctypes._ctypes)
numpy/core/tests/test_multiarray.py:8869:        assert_equal(tuple(test_arr.ctypes.shape), (2, 3))
numpy/core/tests/test_multiarray.py:8879:            assert_equal(tuple(test_arr.ctypes.shape), (2, 3))
numpy/core/tests/test_multiarray.py:8925:        assert_(arr_ref() is not None, "ctypes pointer did not hold onto a reference")
numpy/core/tests/test_multiarray.py:8934:        assert_(arr_ref() is None, "unknowable whether ctypes pointer holds a reference")
numpy/core/tests/test_multiarray.py:8946:        assert_(arr_ref() is not None, "ctypes pointer did not hold onto a reference")
numpy/core/tests/test_multiarray.py:8952:        assert_(arr_ref() is None, "unknowable whether ctypes pointer holds a reference")
numpy/core/tests/test_multiarray.py:8961:        assert_equal(res, range(5))
numpy/core/tests/test_multiarray.py:8967:        assert_equal(res, range(5))
numpy/core/tests/test_multiarray.py:8973:        assert_equal(a, np.array([[0, 44], [1, 55], [2, 44]]))
numpy/core/tests/test_multiarray.py:8975:        assert_raises(ValueError, np.place, a, a>20, [])
numpy/core/tests/test_multiarray.py:8980:        assert_equal(a, np.array([[44, 3], [55, 4], [2, 5]]))
numpy/core/tests/test_multiarray.py:8986:        assert_equal(a, np.array([[0, 9], [1, 16], [2, 25]]))
numpy/core/tests/test_multiarray.py:8992:        assert_equal(out, np.array([0, 2]))
numpy/core/tests/test_multiarray.py:9014:        assert_equal(b, np.array([[15, 18, 21], [42, 54, 66], [69, 90, 111]]))
numpy/core/tests/test_multiarray.py:9021:        assert_(arr_wb.flags.writebackifcopy)
numpy/core/tests/test_multiarray.py:9022:        assert_(arr_wb.base is arr)
numpy/core/tests/test_multiarray.py:9026:        assert_equal(arr, -100)
numpy/core/tests/test_multiarray.py:9028:        assert_(arr_wb.ctypes.data != 0)
numpy/core/tests/test_multiarray.py:9029:        assert_equal(arr_wb.base, None)
numpy/core/tests/test_multiarray.py:9032:        assert_equal(arr, -100)
numpy/core/tests/test_multiarray.py:9042:            assert len(sup.log) == 1
numpy/core/tests/test_multiarray.py:9052:        assert_(arr_wb.flags.writebackifcopy)
numpy/core/tests/test_multiarray.py:9053:        assert_(arr_wb.base is arr)
numpy/core/tests/test_multiarray.py:9057:        assert_equal(arr, orig)
numpy/core/tests/test_multiarray.py:9059:        assert_(arr_wb.ctypes.data != 0)
numpy/core/tests/test_multiarray.py:9060:        assert_equal(arr_wb.base, None)
numpy/core/tests/test_multiarray.py:9062:            assert_equal(arr_cnt, sys.getrefcount(arr))
numpy/core/tests/test_multiarray.py:9065:        assert_equal(arr, orig)
numpy/core/tests/test_multiarray.py:9070:        assert_raises_regex(
numpy/core/tests/test_multiarray.py:9076:        assert_raises_regex(
numpy/core/tests/test_multiarray.py:9082:        assert_raises(ZeroDivisionError, np.arange, 0, 10, 0)
numpy/core/tests/test_multiarray.py:9083:        assert_raises(ZeroDivisionError, np.arange, 0.0, 10.0, 0.0)
numpy/core/tests/test_multiarray.py:9086:        assert_raises(ZeroDivisionError, np.arange, 0, 0, 0)
numpy/core/tests/test_multiarray.py:9087:        assert_raises(ZeroDivisionError, np.arange, 0.0, 0.0, 0.0)
numpy/core/tests/test_multiarray.py:9090:        assert_raises(TypeError, np.arange)
numpy/core/tests/test_multiarray.py:9091:        assert_raises(TypeError, np.arange, step=3)
numpy/core/tests/test_multiarray.py:9092:        assert_raises(TypeError, np.arange, dtype='int64')
numpy/core/tests/test_multiarray.py:9093:        assert_raises(TypeError, np.arange, start=4)
numpy/core/tests/test_multiarray.py:9100:        assert len(keyword_stop) == 3
numpy/core/tests/test_multiarray.py:9101:        assert len(keyword_zerotostop) == 3
numpy/core/tests/test_multiarray.py:9102:        assert len(keyword_start_stop) == 6
numpy/core/tests/test_multiarray.py:9103:        assert_array_equal(keyword_stop, keyword_zerotostop)
numpy/core/tests/test_multiarray.py:9116:        assert_(a.saved_base is a.base)
numpy/core/tests/test_multiarray.py:9163:        assert_(isinstance(obj_subarray, RaisesInFinalize))
numpy/core/tests/test_multiarray.py:9167:        assert_(obj_ref() is not None, "object should not already be dead")
numpy/core/tests/test_multiarray.py:9171:        assert_(obj_ref() is not None, "obj_arr should not hold the last reference")
numpy/core/tests/test_multiarray.py:9175:        assert_(obj_ref() is None, "no references should remain")
numpy/core/tests/test_multiarray.py:9183:        assert_(a.saved_result is None)
numpy/core/tests/test_multiarray.py:9189:    assert_raises(ValueError, a.flatten, order=u'\xe2')
numpy/core/tests/test_multiarray.py:9212:        assert_equal(my_always_equal == array, 'eq')
numpy/core/tests/test_multiarray.py:9213:        assert_equal(array == my_always_equal, 'eq')
numpy/core/tests/test_multiarray.py:9214:        assert_equal(my_always_equal != array, 'ne')
numpy/core/tests/test_multiarray.py:9215:        assert_equal(array != my_always_equal, 'ne')
numpy/core/tests/test_multiarray.py:9233:    assert_allclose(got, expected)
numpy/core/tests/test_multiarray.py:9255:                assert_allclose(got, expected)
numpy/core/tests/test_multiarray.py:9274:    assert_equal(np.zeros(1, dtype=d1)['f1'].flags['ALIGNED'], True)
numpy/core/tests/test_multiarray.py:9275:    assert_equal(np.zeros(1, dtype=d2)['f1'].flags['ALIGNED'], True)
numpy/core/tests/test_multiarray.py:9276:    assert_equal(np.zeros(1, dtype='u1,c8')['f1'].flags['ALIGNED'], False)
numpy/core/tests/test_multiarray.py:9281:        assert_equal(d.alignment, alignment)
numpy/core/tests/test_multiarray.py:9282:        assert_equal(d.itemsize, size)
numpy/core/tests/test_multiarray.py:9304:        assert_equal(x.__array_interface__['data'][0] % align, 0)
numpy/core/tests/test_multiarray.py:9306:            assert_equal(x.shape, shape, err_msg)
numpy/core/tests/test_multiarray.py:9308:            assert_equal(x.shape, (shape,), err_msg)
numpy/core/tests/test_multiarray.py:9309:        assert_equal(x.dtype, dtype)
numpy/core/tests/test_multiarray.py:9311:            assert_(x.flags.c_contiguous, err_msg)
numpy/core/tests/test_multiarray.py:9314:                assert_(x.flags.f_contiguous, err_msg)
numpy/core/tests/test_multiarray.py:9316:            assert_(x.flags.c_contiguous, err_msg)
numpy/core/tests/test_multiarray.py:9373:    assert_equal(b, a)
numpy/core/tests/test_multiarray.py:9375:    assert_equal(b, 0)
numpy/core/tests/test_multiarray.py:9392:        assert_array_equal(x[:, np.newaxis].view('<i2'), expected)
numpy/core/tests/test_multiarray.py:9407:        assert_array_equal(x[:, np.newaxis].view('S4'), expected)
numpy/core/tests/test_multiarray.py:9414:        assert_array_equal(x.view('<i4'), expected)
numpy/core/tests/test_multiarray.py:9425:        assert_array_equal(x.view('S4'), expected)
numpy/core/tests/test_multiarray.py:9441:        assert_array_equal(x.view('<i2'), expected)
numpy/core/tests/test_multiarray.py:9452:    assert_equal(np.sort(arr, kind='quick'), np.sort(arr, kind='heap'))
numpy/core/tests/test_multiarray.py:9457:    assert_equal(np.sort(infarr, kind='quick'), np.sort(infarr, kind='heap'))
numpy/core/tests/test_multiarray.py:9462:    assert_equal(np.sort(neginfarr, kind='quick'),
numpy/core/tests/test_multiarray.py:9468:    assert_equal(np.sort(infarr, kind='quick'), np.sort(infarr, kind='heap'))
numpy/core/tests/test_multiarray.py:9480:    assert_equal(np.sort(arr, kind='quick'), np.sort(arr, kind='heap'))
numpy/core/tests/test_multiarray.py:9490:    assert_equal(np.sort(arr, kind='quick'), np.sort(arr, kind='heap'))
numpy/core/tests/test_memmap.py:42:        assert_(allclose(self.data, newfp))
numpy/core/tests/test_memmap.py:43:        assert_array_equal(self.data, newfp)
numpy/core/tests/test_memmap.py:44:        assert_equal(newfp.flags.writeable, False)
numpy/core/tests/test_memmap.py:63:        assert_equal(offset, fp.offset)
numpy/core/tests/test_memmap.py:64:        assert_equal(mode, fp.mode)
numpy/core/tests/test_memmap.py:73:        assert_equal(abspath, fp.filename)
numpy/core/tests/test_memmap.py:75:        assert_equal(abspath, b.filename)
numpy/core/tests/test_memmap.py:88:        assert_equal(abspath, str(fp.filename.resolve()))
numpy/core/tests/test_memmap.py:90:        assert_equal(abspath, str(b.filename.resolve()))
numpy/core/tests/test_memmap.py:97:        assert_equal(fp.filename, self.tmpfp.name)
numpy/core/tests/test_memmap.py:105:        assert_equal(fp[0], self.data[0])
numpy/core/tests/test_memmap.py:114:        assert_equal(fp_view[0], 5)
numpy/core/tests/test_memmap.py:118:        assert_equal(fp_base[0], 5)
numpy/core/tests/test_memmap.py:120:        assert_equal(fp_base[0], 6)
numpy/core/tests/test_memmap.py:127:            assert_(tmp._mmap is not fp._mmap)
numpy/core/tests/test_memmap.py:134:            assert_(tmp._mmap is not fp._mmap)
numpy/core/tests/test_memmap.py:139:        assert_(fp[:2, :2]._mmap is fp._mmap)
numpy/core/tests/test_memmap.py:145:        assert_(new1.base is fp)
numpy/core/tests/test_memmap.py:146:        assert_(new2.base is fp)
numpy/core/tests/test_memmap.py:148:        assert_(new_array.base is fp)
numpy/core/tests/test_memmap.py:158:                assert_(isscalar(result))
numpy/core/tests/test_memmap.py:159:                assert_(result.__class__ is self.data[0, 0].__class__)
numpy/core/tests/test_memmap.py:161:                assert_(unary_op(fp, axis=0).__class__ is ndarray)
numpy/core/tests/test_memmap.py:162:                assert_(unary_op(fp, axis=1).__class__ is ndarray)
numpy/core/tests/test_memmap.py:165:            assert_(binary_op(fp, self.data).__class__ is ndarray)
numpy/core/tests/test_memmap.py:166:            assert_(binary_op(self.data, fp).__class__ is ndarray)
numpy/core/tests/test_memmap.py:167:            assert_(binary_op(fp, fp).__class__ is ndarray)
numpy/core/tests/test_memmap.py:170:        assert(fp.__class__ is memmap)
numpy/core/tests/test_memmap.py:172:        assert(fp.__class__ is memmap)
numpy/core/tests/test_memmap.py:178:        assert_(fp[1:, :-1].__class__ is memmap)
numpy/core/tests/test_memmap.py:180:        assert_(fp[[0, 1]].__class__ is ndarray)
numpy/core/tests/test_memmap.py:191:        assert_(sum(fp, axis=0).__class__ is MemmapSubClass)
numpy/core/tests/test_memmap.py:192:        assert_(sum(fp).__class__ is MemmapSubClass)
numpy/core/tests/test_memmap.py:193:        assert_(fp[1:, :-1].__class__ is MemmapSubClass)
numpy/core/tests/test_memmap.py:194:        assert(fp[[0, 1]].__class__ is MemmapSubClass)
numpy/core/tests/test_memmap.py:200:        assert_(fp.offset == offset)
numpy/core/tests/test_memmap.py:205:        assert_equal(mm.shape, (2,))
numpy/core/tests/test_nditer.py:50:        assert_(not it.iterationneedsapi)
numpy/core/tests/test_nditer.py:51:        assert_(sys.getrefcount(a) > rc_a)
numpy/core/tests/test_nditer.py:52:        assert_(sys.getrefcount(dt) > rc_dt)
numpy/core/tests/test_nditer.py:55:    assert_equal(sys.getrefcount(a), rc_a)
numpy/core/tests/test_nditer.py:56:    assert_equal(sys.getrefcount(dt), rc_dt)
numpy/core/tests/test_nditer.py:69:    assert_(sys.getrefcount(a) > rc2_a)
numpy/core/tests/test_nditer.py:70:    assert_(sys.getrefcount(dt) > rc2_dt)
numpy/core/tests/test_nditer.py:72:    assert_equal(sys.getrefcount(a), rc2_a)
numpy/core/tests/test_nditer.py:73:    assert_equal(sys.getrefcount(dt), rc2_dt)
numpy/core/tests/test_nditer.py:75:    assert_equal(sys.getrefcount(a), rc_a)
numpy/core/tests/test_nditer.py:76:    assert_equal(sys.getrefcount(dt), rc_dt)
numpy/core/tests/test_nditer.py:98:            assert_equal([x for x in i], a)
numpy/core/tests/test_nditer.py:101:            assert_equal([x for x in i], a)
numpy/core/tests/test_nditer.py:105:                assert_equal([x for x in i], a)
numpy/core/tests/test_nditer.py:124:            assert_equal([x for x in i], aview.ravel(order='C'))
numpy/core/tests/test_nditer.py:127:            assert_equal([x for x in i], aview.T.ravel(order='C'))
numpy/core/tests/test_nditer.py:151:            assert_equal([x for x in i], aview.ravel(order='F'))
numpy/core/tests/test_nditer.py:154:            assert_equal([x for x in i], aview.T.ravel(order='F'))
numpy/core/tests/test_nditer.py:178:            assert_equal([x for x in i], aview.ravel(order='A'))
numpy/core/tests/test_nditer.py:181:            assert_equal([x for x in i], aview.T.ravel(order='A'))
numpy/core/tests/test_nditer.py:196:    assert_equal([i for i in it], [2, 3, 4, 5])
numpy/core/tests/test_nditer.py:209:    assert_equal(start_count, end_count)
numpy/core/tests/test_nditer.py:217:    assert_equal(iter_multi_index(i), [(0,), (1,), (2,), (3,)])
numpy/core/tests/test_nditer.py:220:    assert_equal(iter_multi_index(i), [(3,), (2,), (1,), (0,)])
numpy/core/tests/test_nditer.py:228:    assert_equal(iter_multi_index(i), [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2)])
numpy/core/tests/test_nditer.py:231:    assert_equal(iter_multi_index(i), [(0, 0), (1, 0), (0, 1), (1, 1), (0, 2), (1, 2)])
numpy/core/tests/test_nditer.py:234:    assert_equal(iter_multi_index(i), [(1, 0), (1, 1), (1, 2), (0, 0), (0, 1), (0, 2)])
numpy/core/tests/test_nditer.py:236:    assert_equal(iter_multi_index(i), [(0, 2), (0, 1), (0, 0), (1, 2), (1, 1), (1, 0)])
numpy/core/tests/test_nditer.py:238:    assert_equal(iter_multi_index(i), [(1, 2), (1, 1), (1, 0), (0, 2), (0, 1), (0, 0)])
numpy/core/tests/test_nditer.py:241:    assert_equal(iter_multi_index(i), [(1, 0), (0, 0), (1, 1), (0, 1), (1, 2), (0, 2)])
numpy/core/tests/test_nditer.py:244:    assert_equal(iter_multi_index(i), [(0, 2), (1, 2), (0, 1), (1, 1), (0, 0), (1, 0)])
numpy/core/tests/test_nditer.py:247:    assert_equal(iter_multi_index(i), [(1, 2), (0, 2), (1, 1), (0, 1), (1, 0), (0, 0)])
numpy/core/tests/test_nditer.py:255:    assert_equal(iter_multi_index(i),
numpy/core/tests/test_nditer.py:260:    assert_equal(iter_multi_index(i),
numpy/core/tests/test_nditer.py:265:    assert_equal(iter_multi_index(i),
numpy/core/tests/test_nditer.py:269:    assert_equal(iter_multi_index(i),
numpy/core/tests/test_nditer.py:273:    assert_equal(iter_multi_index(i),
numpy/core/tests/test_nditer.py:279:    assert_equal(iter_multi_index(i),
numpy/core/tests/test_nditer.py:284:    assert_equal(iter_multi_index(i),
numpy/core/tests/test_nditer.py:289:    assert_equal(iter_multi_index(i),
numpy/core/tests/test_nditer.py:299:    assert_equal(iter_indices(i), [0, 1, 2, 3])
numpy/core/tests/test_nditer.py:302:    assert_equal(iter_indices(i), [3, 2, 1, 0])
numpy/core/tests/test_nditer.py:310:    assert_equal(iter_indices(i), [0, 1, 2, 3, 4, 5])
numpy/core/tests/test_nditer.py:314:    assert_equal(iter_indices(i), [0, 3, 1, 4, 2, 5])
numpy/core/tests/test_nditer.py:317:    assert_equal(iter_indices(i), [3, 4, 5, 0, 1, 2])
numpy/core/tests/test_nditer.py:319:    assert_equal(iter_indices(i), [2, 1, 0, 5, 4, 3])
numpy/core/tests/test_nditer.py:321:    assert_equal(iter_indices(i), [5, 4, 3, 2, 1, 0])
numpy/core/tests/test_nditer.py:325:    assert_equal(iter_indices(i), [3, 0, 4, 1, 5, 2])
numpy/core/tests/test_nditer.py:328:    assert_equal(iter_indices(i), [2, 5, 1, 4, 0, 3])
numpy/core/tests/test_nditer.py:331:    assert_equal(iter_indices(i), [5, 2, 4, 1, 3, 0])
numpy/core/tests/test_nditer.py:339:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:344:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:348:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:351:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:354:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:359:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:363:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:367:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:376:    assert_equal(iter_indices(i), [0, 1, 2, 3])
numpy/core/tests/test_nditer.py:379:    assert_equal(iter_indices(i), [3, 2, 1, 0])
numpy/core/tests/test_nditer.py:387:    assert_equal(iter_indices(i), [0, 2, 4, 1, 3, 5])
numpy/core/tests/test_nditer.py:391:    assert_equal(iter_indices(i), [0, 1, 2, 3, 4, 5])
numpy/core/tests/test_nditer.py:394:    assert_equal(iter_indices(i), [1, 3, 5, 0, 2, 4])
numpy/core/tests/test_nditer.py:396:    assert_equal(iter_indices(i), [4, 2, 0, 5, 3, 1])
numpy/core/tests/test_nditer.py:398:    assert_equal(iter_indices(i), [5, 3, 1, 4, 2, 0])
numpy/core/tests/test_nditer.py:402:    assert_equal(iter_indices(i), [1, 0, 3, 2, 5, 4])
numpy/core/tests/test_nditer.py:405:    assert_equal(iter_indices(i), [4, 5, 2, 3, 0, 1])
numpy/core/tests/test_nditer.py:408:    assert_equal(iter_indices(i), [5, 4, 3, 2, 1, 0])
numpy/core/tests/test_nditer.py:416:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:421:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:425:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:428:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:431:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:436:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:440:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:444:    assert_equal(iter_indices(i),
numpy/core/tests/test_nditer.py:464:            assert_equal(i.ndim, 1)
numpy/core/tests/test_nditer.py:465:            assert_equal(i[0].shape, (size,))
numpy/core/tests/test_nditer.py:468:            assert_equal(i.ndim, 1)
numpy/core/tests/test_nditer.py:469:            assert_equal(i[0].shape, (size,))
numpy/core/tests/test_nditer.py:474:                assert_equal(i.ndim, 1)
numpy/core/tests/test_nditer.py:475:                assert_equal(i[0].shape, (size,))
numpy/core/tests/test_nditer.py:484:    assert_equal(i.ndim, 2)
numpy/core/tests/test_nditer.py:485:    assert_equal(i[0].shape, (3,))
numpy/core/tests/test_nditer.py:488:    assert_equal(i.ndim, 2)
numpy/core/tests/test_nditer.py:489:    assert_equal(i[0].shape, (8,))
numpy/core/tests/test_nditer.py:492:    assert_equal(i.ndim, 1)
numpy/core/tests/test_nditer.py:493:    assert_equal(i[0].shape, (12,))
numpy/core/tests/test_nditer.py:498:    assert_equal(i.ndim, 1)
numpy/core/tests/test_nditer.py:499:    assert_equal(i[0].shape, (24,))
numpy/core/tests/test_nditer.py:507:    assert_equal(i.ndim, 3)
numpy/core/tests/test_nditer.py:512:    assert_equal(i.ndim, 1)
numpy/core/tests/test_nditer.py:514:    assert_equal(i.ndim, 3)
numpy/core/tests/test_nditer.py:516:    assert_equal(i.ndim, 3)
numpy/core/tests/test_nditer.py:518:    assert_equal(i.ndim, 1)
numpy/core/tests/test_nditer.py:520:    assert_equal(i.ndim, 3)
numpy/core/tests/test_nditer.py:525:    assert_equal(i.ndim, 1)
numpy/core/tests/test_nditer.py:527:    assert_equal(i.ndim, 3)
numpy/core/tests/test_nditer.py:529:    assert_equal(i.ndim, 3)
numpy/core/tests/test_nditer.py:531:    assert_equal(i.ndim, 1)
numpy/core/tests/test_nditer.py:533:    assert_equal(i.ndim, 1)
numpy/core/tests/test_nditer.py:535:    assert_equal(i.ndim, 1)
numpy/core/tests/test_nditer.py:542:    assert_equal(i.itersize, 6)
numpy/core/tests/test_nditer.py:543:    assert_equal(i.shape, (6,))
numpy/core/tests/test_nditer.py:548:    assert_equal(i.itersize, 6)
numpy/core/tests/test_nditer.py:549:    assert_equal(i.shape, (2, 3))
numpy/core/tests/test_nditer.py:553:    assert_equal(i.itersize, 6)
numpy/core/tests/test_nditer.py:554:    assert_equal(i.shape, (2, 3))
numpy/core/tests/test_nditer.py:557:    assert_equal(i.itersize, 6)
numpy/core/tests/test_nditer.py:558:    assert_equal(i.shape, (2, 3))
numpy/core/tests/test_nditer.py:562:    assert_equal(i.itersize, 6)
numpy/core/tests/test_nditer.py:563:    assert_equal(i.shape, (2, 3))
numpy/core/tests/test_nditer.py:568:    assert_equal(i.itersize, 24)
numpy/core/tests/test_nditer.py:569:    assert_equal(i.shape, (4, 2, 3))
numpy/core/tests/test_nditer.py:573:    assert_equal(i.itersize, 24)
numpy/core/tests/test_nditer.py:574:    assert_equal(i.shape, (4, 2, 3))
numpy/core/tests/test_nditer.py:577:    assert_equal(i.itersize, 24)
numpy/core/tests/test_nditer.py:578:    assert_equal(i.shape, (4, 2, 3))
numpy/core/tests/test_nditer.py:582:    assert_equal(i.itersize, 24)
numpy/core/tests/test_nditer.py:583:    assert_equal(i.shape, (4, 2, 3))
numpy/core/tests/test_nditer.py:586:    assert_equal(i.itersize, 24)
numpy/core/tests/test_nditer.py:587:    assert_equal(i.shape, (4, 2, 3))
numpy/core/tests/test_nditer.py:590:    assert_equal(i.itersize, 24)
numpy/core/tests/test_nditer.py:591:    assert_equal(i.shape, (4, 2, 3))
numpy/core/tests/test_nditer.py:596:    assert_equal(i.itersize, 24)
numpy/core/tests/test_nditer.py:597:    assert_equal(i.shape, (4, 2, 3))
numpy/core/tests/test_nditer.py:600:    assert_equal(i.itersize, 24)
numpy/core/tests/test_nditer.py:601:    assert_equal(i.shape, (4, 2, 3))
numpy/core/tests/test_nditer.py:604:    assert_equal(i.itersize, 24)
numpy/core/tests/test_nditer.py:605:    assert_equal(i.shape, (4, 2, 3))
numpy/core/tests/test_nditer.py:613:    assert_equal(i.operands[1].shape, (2, 3, 4))
numpy/core/tests/test_nditer.py:614:    assert_equal(i.operands[1].strides, (24, 8, 2))
numpy/core/tests/test_nditer.py:619:    assert_equal(i.operands[1].shape, (3, 2, 4))
numpy/core/tests/test_nditer.py:620:    assert_equal(i.operands[1].strides, (8, 24, 2))
numpy/core/tests/test_nditer.py:626:    assert_equal(i.operands[1].shape, (3, 2, 4))
numpy/core/tests/test_nditer.py:627:    assert_equal(i.operands[1].strides, (2, 6, 12))
numpy/core/tests/test_nditer.py:642:    assert_raises(ValueError, nditer, [arange(2), arange(3)],
numpy/core/tests/test_nditer.py:674:        assert_(msg.find('(2,3)') >= 0,
numpy/core/tests/test_nditer.py:677:        assert_(msg.find('(1,2,3)') >= 0,
numpy/core/tests/test_nditer.py:690:        assert_(msg.find('(2,3)->(2,3)') >= 0,
numpy/core/tests/test_nditer.py:692:        assert_(msg.find('(2,)->(2,newaxis)') >= 0,
numpy/core/tests/test_nditer.py:696:        assert_(msg.find('(4,3)') >= 0,
numpy/core/tests/test_nditer.py:707:        assert_(msg.find('(2,1,1)') >= 0,
numpy/core/tests/test_nditer.py:710:        assert_(msg.find('(2,1,2)') >= 0,
numpy/core/tests/test_nditer.py:719:    assert_raises(ValueError, nditer, [], [], [])
numpy/core/tests/test_nditer.py:721:    assert_raises(ValueError, nditer, [a]*100, [], [['readonly']]*100)
numpy/core/tests/test_nditer.py:723:    assert_raises(ValueError, nditer, [a], ['bad flag'], [['readonly']])
numpy/core/tests/test_nditer.py:725:    assert_raises(ValueError, nditer, [a], [], [['readonly', 'bad flag']])
numpy/core/tests/test_nditer.py:727:    assert_raises(ValueError, nditer, [a], [], [['readonly']], order='G')
numpy/core/tests/test_nditer.py:729:    assert_raises(ValueError, nditer, [a], [], [['readonly']], casting='noon')
numpy/core/tests/test_nditer.py:731:    assert_raises(ValueError, nditer, [a]*3, [], [['readonly']]*2)
numpy/core/tests/test_nditer.py:743:    assert_raises(ValueError, nditer, a, [], [[]])
numpy/core/tests/test_nditer.py:744:    assert_raises(ValueError, nditer, a, [], [['readonly', 'writeonly']])
numpy/core/tests/test_nditer.py:745:    assert_raises(ValueError, nditer, a, [], [['readonly', 'readwrite']])
numpy/core/tests/test_nditer.py:746:    assert_raises(ValueError, nditer, a, [], [['writeonly', 'readwrite']])
numpy/core/tests/test_nditer.py:750:    assert_raises(TypeError, nditer, 1.5, [], [['writeonly']])
numpy/core/tests/test_nditer.py:751:    assert_raises(TypeError, nditer, 1.5, [], [['readwrite']])
numpy/core/tests/test_nditer.py:753:    assert_raises(TypeError, nditer, np.int32(1), [], [['writeonly']])
numpy/core/tests/test_nditer.py:754:    assert_raises(TypeError, nditer, np.int32(1), [], [['readwrite']])
numpy/core/tests/test_nditer.py:757:    assert_raises(ValueError, nditer, a, [], [['writeonly']])
numpy/core/tests/test_nditer.py:758:    assert_raises(ValueError, nditer, a, [], [['readwrite']])
numpy/core/tests/test_nditer.py:762:    assert_raises(ValueError, lambda i:i.multi_index, i)
numpy/core/tests/test_nditer.py:764:    assert_raises(ValueError, lambda i:i.index, i)
numpy/core/tests/test_nditer.py:779:    assert_raises(ValueError, assign_multi_index, i)
numpy/core/tests/test_nditer.py:780:    assert_raises(ValueError, assign_index, i)
numpy/core/tests/test_nditer.py:781:    assert_raises(ValueError, assign_iterindex, i)
numpy/core/tests/test_nditer.py:782:    assert_raises(ValueError, assign_iterrange, i)
numpy/core/tests/test_nditer.py:784:    assert_raises(ValueError, assign_multi_index, i)
numpy/core/tests/test_nditer.py:785:    assert_raises(ValueError, assign_index, i)
numpy/core/tests/test_nditer.py:786:    assert_raises(ValueError, assign_iterrange, i)
numpy/core/tests/test_nditer.py:788:    assert_raises(ValueError, nditer, np.array([]))
numpy/core/tests/test_nditer.py:795:        assert_equal(a, [3, 1, 2])
numpy/core/tests/test_nditer.py:796:        assert_equal(b, [3, 1, 2])
numpy/core/tests/test_nditer.py:797:        assert_equal(c, [0, 1, 2])
numpy/core/tests/test_nditer.py:799:        assert_equal(i[0:2], [3, 12])
numpy/core/tests/test_nditer.py:808:    assert_equal(a, 14)
numpy/core/tests/test_nditer.py:815:    assert_equal(a, -1234)
numpy/core/tests/test_nditer.py:826:    assert_(a.dtype.byteorder != au.dtype.byteorder)
numpy/core/tests/test_nditer.py:832:        assert_equal(i.dtypes[0].byteorder, a.dtype.byteorder)
numpy/core/tests/test_nditer.py:833:        assert_equal(i.operands[0].dtype.byteorder, a.dtype.byteorder)
numpy/core/tests/test_nditer.py:834:        assert_equal(i.operands[0], a)
numpy/core/tests/test_nditer.py:836:    assert_equal(au, [2]*6)
numpy/core/tests/test_nditer.py:841:    assert_(a.dtype.byteorder != au.dtype.byteorder)
numpy/core/tests/test_nditer.py:845:        assert_equal(i.dtypes[0].byteorder, a.dtype.byteorder)
numpy/core/tests/test_nditer.py:846:        assert_equal(i.operands[0].dtype.byteorder, a.dtype.byteorder)
numpy/core/tests/test_nditer.py:847:        assert_equal(i.operands[0], a)
numpy/core/tests/test_nditer.py:850:    assert_equal(au, [2]*6)
numpy/core/tests/test_nditer.py:856:    assert_(not a.flags.aligned)
numpy/core/tests/test_nditer.py:859:    assert_(not i.operands[0].flags.aligned)
numpy/core/tests/test_nditer.py:860:    assert_equal(i.operands[0], a)
numpy/core/tests/test_nditer.py:863:        assert_(i.operands[0].flags.aligned)
numpy/core/tests/test_nditer.py:865:        assert_equal(i.operands[0], a)
numpy/core/tests/test_nditer.py:867:    assert_equal(a, [3]*6)
numpy/core/tests/test_nditer.py:873:    assert_(i.operands[0].flags.contiguous)
numpy/core/tests/test_nditer.py:874:    assert_equal(i.operands[0], a[:6])
numpy/core/tests/test_nditer.py:879:    assert_(i[0].flags.contiguous)
numpy/core/tests/test_nditer.py:880:    assert_equal(i[0], a[::2])
numpy/core/tests/test_nditer.py:889:        assert_equal(i.operands[0], a)
numpy/core/tests/test_nditer.py:890:        assert_equal(i.operands[0].dtype, np.dtype('f4'))
numpy/core/tests/test_nditer.py:897:        assert_equal(i.operands[0], a)
numpy/core/tests/test_nditer.py:898:        assert_equal(i.operands[0].dtype, np.dtype('>f4'))
numpy/core/tests/test_nditer.py:905:    assert_equal(i.operands[0], a)
numpy/core/tests/test_nditer.py:906:    assert_equal(i.operands[0].dtype, np.dtype('f8'))
numpy/core/tests/test_nditer.py:909:    assert_equal(i.operands[0].strides, (96, 8, 32))
numpy/core/tests/test_nditer.py:914:    assert_equal(i.operands[0], a)
numpy/core/tests/test_nditer.py:915:    assert_equal(i.operands[0].dtype, np.dtype('f8'))
numpy/core/tests/test_nditer.py:916:    assert_equal(i.operands[0].strides, (96, 8, 32))
numpy/core/tests/test_nditer.py:924:        assert_equal(i.operands[0], a)
numpy/core/tests/test_nditer.py:925:        assert_equal(i.operands[0].dtype, np.dtype('f4'))
numpy/core/tests/test_nditer.py:926:        assert_equal(i.operands[0].strides, (4, 16, 48))
numpy/core/tests/test_nditer.py:929:        assert_(a[2, 1, 1] != -12.5)
numpy/core/tests/test_nditer.py:930:    assert_equal(a[2, 1, 1], -12.5)
numpy/core/tests/test_nditer.py:937:        assert_equal(i.operands[0].dtype, np.dtype('f4'))
numpy/core/tests/test_nditer.py:940:        assert_equal(i.operands[0].strides, (4,))
numpy/core/tests/test_nditer.py:942:    assert_equal(a, [1, 2, 3])
numpy/core/tests/test_nditer.py:948:    assert_raises(TypeError, nditer, arange(2, dtype='f4'), [],
numpy/core/tests/test_nditer.py:951:    assert_raises(TypeError, nditer, arange(2, dtype='f4'), [],
numpy/core/tests/test_nditer.py:954:    assert_raises(TypeError, nditer, arange(2, dtype='f4'), [],
numpy/core/tests/test_nditer.py:957:    assert_raises(TypeError, nditer, arange(2, dtype='f8'), [],
numpy/core/tests/test_nditer.py:961:    assert_raises(TypeError, nditer, arange(2, dtype='f8'), [],
numpy/core/tests/test_nditer.py:966:    assert_raises(TypeError, nditer, arange(2, dtype='<f4'), [],
numpy/core/tests/test_nditer.py:970:    assert_raises(TypeError, nditer, arange(2, dtype='f4'), [],
numpy/core/tests/test_nditer.py:974:    assert_raises(TypeError, nditer, arange(2, dtype='f8'), [],
numpy/core/tests/test_nditer.py:979:    assert_raises(TypeError, nditer, arange(2, dtype='f4'), [],
numpy/core/tests/test_nditer.py:983:    assert_raises(TypeError, nditer, arange(2, dtype='i4'), [],
numpy/core/tests/test_nditer.py:994:    assert_equal(i.dtypes[0], np.dtype('f4'))
numpy/core/tests/test_nditer.py:995:    assert_equal(i.value.dtype, np.dtype('f4'))
numpy/core/tests/test_nditer.py:996:    assert_equal(i.value, 2.5)
numpy/core/tests/test_nditer.py:1002:    assert_equal(i.dtypes[0], np.dtype('f8'))
numpy/core/tests/test_nditer.py:1003:    assert_equal(i.value.dtype, np.dtype('f8'))
numpy/core/tests/test_nditer.py:1004:    assert_equal(i.value, 2.5)
numpy/core/tests/test_nditer.py:1010:    assert_equal(i.dtypes[0], np.dtype('f4'))
numpy/core/tests/test_nditer.py:1011:    assert_equal(i.value.dtype, np.dtype('f4'))
numpy/core/tests/test_nditer.py:1012:    assert_equal(i.value, 2.5)
numpy/core/tests/test_nditer.py:1018:    assert_equal(i.dtypes[0], np.dtype('i4'))
numpy/core/tests/test_nditer.py:1019:    assert_equal(i.value.dtype, np.dtype('i4'))
numpy/core/tests/test_nditer.py:1020:    assert_equal(i.value, 3)
numpy/core/tests/test_nditer.py:1023:    assert_equal(i[0].dtype, np.dtype('f8'))
numpy/core/tests/test_nditer.py:1024:    assert_equal(i[0], 3.)
numpy/core/tests/test_nditer.py:1030:    assert_raises(TypeError, nditer, np.float32(2), [],
numpy/core/tests/test_nditer.py:1035:    assert_raises(TypeError, nditer, np.float64(1e60), [],
numpy/core/tests/test_nditer.py:1040:    assert_raises(TypeError, nditer, np.float32(2), [],
numpy/core/tests/test_nditer.py:1054:    assert_raises(TypeError, nditer, a)
numpy/core/tests/test_nditer.py:1056:        assert_equal(sys.getrefcount(obj), rc)
numpy/core/tests/test_nditer.py:1060:    assert_equal(np.array(vals, dtype='O'), a)
numpy/core/tests/test_nditer.py:1063:        assert_equal(sys.getrefcount(obj), rc)
numpy/core/tests/test_nditer.py:1067:    assert_(i.iterationneedsapi)
numpy/core/tests/test_nditer.py:1069:    assert_equal(np.array(vals, dtype='O'), a.reshape(2, 2).ravel(order='F'))
numpy/core/tests/test_nditer.py:1072:        assert_equal(sys.getrefcount(obj), rc)
numpy/core/tests/test_nditer.py:1081:        assert_(sys.getrefcount(obj) == rc-1)
numpy/core/tests/test_nditer.py:1082:    assert_equal(a, np.array([None]*4, dtype='O'))
numpy/core/tests/test_nditer.py:1092:    assert_equal(a, np.arange(6)+1)
numpy/core/tests/test_nditer.py:1100:    assert_equal(a, np.arange(6)+1)
numpy/core/tests/test_nditer.py:1111:    assert_equal(a, np.arange(6)+1)
numpy/core/tests/test_nditer.py:1126:        assert_(sys.getrefcount(ob) == rc-1)
numpy/core/tests/test_nditer.py:1127:    assert_equal(a, np.arange(6)+98172489)
numpy/core/tests/test_nditer.py:1136:    assert_equal(i.dtypes[0], np.dtype('f8'))
numpy/core/tests/test_nditer.py:1137:    assert_equal(i.dtypes[1], np.dtype('f8'))
numpy/core/tests/test_nditer.py:1142:    assert_equal(i.dtypes[0], np.dtype('f8'))
numpy/core/tests/test_nditer.py:1143:    assert_equal(i.dtypes[1], np.dtype('f8'))
numpy/core/tests/test_nditer.py:1148:    assert_equal(i.dtypes[0], np.dtype('f4'))
numpy/core/tests/test_nditer.py:1149:    assert_equal(i.dtypes[1], np.dtype('f4'))
numpy/core/tests/test_nditer.py:1154:    assert_equal(i.dtypes[0], np.dtype('u4'))
numpy/core/tests/test_nditer.py:1155:    assert_equal(i.dtypes[1], np.dtype('u4'))
numpy/core/tests/test_nditer.py:1160:    assert_equal(i.dtypes[0], np.dtype('i8'))
numpy/core/tests/test_nditer.py:1161:    assert_equal(i.dtypes[1], np.dtype('i8'))
numpy/core/tests/test_nditer.py:1167:    assert_equal(i.dtypes[0], np.dtype('c16'))
numpy/core/tests/test_nditer.py:1168:    assert_equal(i.dtypes[1], np.dtype('c16'))
numpy/core/tests/test_nditer.py:1169:    assert_equal(i.dtypes[2], np.dtype('c16'))
numpy/core/tests/test_nditer.py:1170:    assert_equal(i.dtypes[3], np.dtype('c16'))
numpy/core/tests/test_nditer.py:1171:    assert_equal(i.value, (3, -12, 2j, 9))
numpy/core/tests/test_nditer.py:1179:    assert_equal(i.dtypes[0], np.dtype('i4'))
numpy/core/tests/test_nditer.py:1180:    assert_equal(i.dtypes[1], np.dtype('i4'))
numpy/core/tests/test_nditer.py:1181:    assert_equal(i.dtypes[2], np.dtype('c16'))
numpy/core/tests/test_nditer.py:1189:    assert_equal(i.dtypes[0], np.dtype('c16'))
numpy/core/tests/test_nditer.py:1190:    assert_equal(i.dtypes[1], np.dtype('c16'))
numpy/core/tests/test_nditer.py:1191:    assert_equal(i.dtypes[2], np.dtype('c16'))
numpy/core/tests/test_nditer.py:1201:            assert_(i.operands[0] is a)
numpy/core/tests/test_nditer.py:1208:        assert_(not np.shares_memory(*i.operands))
numpy/core/tests/test_nditer.py:1217:        assert_(i.operands[0] is a and i.operands[1] is b)
numpy/core/tests/test_nditer.py:1219:        assert_(i.operands[0] is a and not np.shares_memory(i.operands[1], b))
numpy/core/tests/test_nditer.py:1226:    assert_(i.operands[0] is a and i.operands[1] is b)
numpy/core/tests/test_nditer.py:1233:        assert_(not np.shares_memory(*i.operands))
numpy/core/tests/test_nditer.py:1244:            assert_(not np.shares_memory(a2, c2))
numpy/core/tests/test_nditer.py:1245:            assert_(not np.shares_memory(b2, c2))
numpy/core/tests/test_nditer.py:1255:    assert_(a is a2)
numpy/core/tests/test_nditer.py:1256:    assert_(b is b2)
numpy/core/tests/test_nditer.py:1257:    assert_(c is c2)
numpy/core/tests/test_nditer.py:1267:    assert_(a is a2)
numpy/core/tests/test_nditer.py:1268:    assert_(b is b2)
numpy/core/tests/test_nditer.py:1269:    assert_(c is c2)
numpy/core/tests/test_nditer.py:1279:    assert_(a is a2)
numpy/core/tests/test_nditer.py:1280:    assert_(b is b2)
numpy/core/tests/test_nditer.py:1281:    assert_(c is c2)
numpy/core/tests/test_nditer.py:1289:    assert_(all([x == y for (x, y) in i]))
numpy/core/tests/test_nditer.py:1292:    assert_(all([x == y for (x, y) in i]))
numpy/core/tests/test_nditer.py:1298:    assert_equal([x*y for (x, y) in i], (a*b.reshape(2, 1, 1)).ravel())
numpy/core/tests/test_nditer.py:1301:    assert_equal([x*y for (x, y) in i], (a*b.reshape(1, 3, 1)).ravel())
numpy/core/tests/test_nditer.py:1305:    assert_equal([x*y for (x, y) in i], (a*b.reshape(1, 1, 5)).ravel())
numpy/core/tests/test_nditer.py:1312:    assert_equal(i.shape, (2, 3, 5, 2))
numpy/core/tests/test_nditer.py:1319:    assert_equal(i.shape, (3, 5))
numpy/core/tests/test_nditer.py:1354:    assert_equal([x[()] for x in i], [x[()] for x in j])
numpy/core/tests/test_nditer.py:1358:    assert_equal([x[()] for x in i], [x[()] for x in j])
numpy/core/tests/test_nditer.py:1363:    assert_equal([x[()] for x in i], [x[()] for x in j])
numpy/core/tests/test_nditer.py:1367:    assert_equal([x[()] for x in i], [x[()] for x in j])
numpy/core/tests/test_nditer.py:1371:    assert_equal([x[()] for x in i], [x[()] for x in j])
numpy/core/tests/test_nditer.py:1377:    assert_equal([x[()] for x in i], [x[()] for x in j])
numpy/core/tests/test_nditer.py:1383:    assert_equal([x[()] for x in j], a.ravel(order='F'))
numpy/core/tests/test_nditer.py:1389:    assert_equal([x[()] for x in j], a.ravel(order='F'))
numpy/core/tests/test_nditer.py:1416:        assert_array_equal(expected, np.ones(1000, dtype=loop_dtype))
numpy/core/tests/test_nditer.py:1424:    assert_array_equal(res, expected)
numpy/core/tests/test_nditer.py:1425:    assert_array_equal(res_copy, expected)
numpy/core/tests/test_nditer.py:1450:    assert_array_equal(res1["a"], expected)
numpy/core/tests/test_nditer.py:1451:    assert_array_equal(res2["a"], expected)
numpy/core/tests/test_nditer.py:1456:        assert_array_equal(res1["b"][field], expected)
numpy/core/tests/test_nditer.py:1457:        assert_array_equal(res2["b"][field], expected)
numpy/core/tests/test_nditer.py:1467:    assert_equal(i.operands[1].shape, a.shape)
numpy/core/tests/test_nditer.py:1468:    assert_equal(i.operands[1].dtype, np.dtype('f4'))
numpy/core/tests/test_nditer.py:1481:        assert_equal(i.operands[1], a+1)
numpy/core/tests/test_nditer.py:1490:    assert_equal(i.operands[1].shape, a.shape)
numpy/core/tests/test_nditer.py:1491:    assert_equal(i.operands[1].strides, a.strides)
numpy/core/tests/test_nditer.py:1492:    assert_equal(i.operands[1].dtype, np.dtype('f4'))
numpy/core/tests/test_nditer.py:1497:    assert_equal(i.operands[1].shape, a.shape)
numpy/core/tests/test_nditer.py:1498:    assert_equal(i.operands[1].strides, a.strides)
numpy/core/tests/test_nditer.py:1499:    assert_equal(i.operands[1].dtype, np.dtype('f4'))
numpy/core/tests/test_nditer.py:1506:    assert_equal(i.operands[1].shape, a.shape)
numpy/core/tests/test_nditer.py:1507:    assert_equal(i.operands[1].strides, (32, 16, 4))
numpy/core/tests/test_nditer.py:1508:    assert_equal(i.operands[1].dtype, np.dtype('f4'))
numpy/core/tests/test_nditer.py:1517:    assert_equal(i.operands[0].shape, (4, 2, 3))
numpy/core/tests/test_nditer.py:1518:    assert_equal(i.operands[0].strides, (4, 48, 16))
numpy/core/tests/test_nditer.py:1519:    assert_equal(i.operands[0].dtype, np.dtype('u4'))
numpy/core/tests/test_nditer.py:1526:    assert_equal(i.dtypes[2], np.dtype('f8'))
numpy/core/tests/test_nditer.py:1529:    assert_equal(i.dtypes[2], np.dtype('f8'))
numpy/core/tests/test_nditer.py:1532:    assert_equal(i.dtypes[2], np.dtype('f4'))
numpy/core/tests/test_nditer.py:1535:    assert_equal(i.dtypes[2], np.dtype('u4'))
numpy/core/tests/test_nditer.py:1538:    assert_equal(i.dtypes[2], np.dtype('i8'))
numpy/core/tests/test_nditer.py:1547:    assert_equal(i.dtypes[0], i.dtypes[1])
numpy/core/tests/test_nditer.py:1551:    assert_(i.dtypes[0] != i.dtypes[2])
numpy/core/tests/test_nditer.py:1552:    assert_equal(i.dtypes[0].newbyteorder('='), i.dtypes[2])
numpy/core/tests/test_nditer.py:1559:    assert_equal(i.operands[0].dtype, np.dtype('complex128'))
numpy/core/tests/test_nditer.py:1560:    assert_equal(i.operands[0].ndim, 0)
numpy/core/tests/test_nditer.py:1572:    assert_equal(type(a), type(i.operands[2]))
numpy/core/tests/test_nditer.py:1573:    assert_(type(b) is not type(i.operands[2]))
numpy/core/tests/test_nditer.py:1574:    assert_equal(i.operands[2].shape, (2, 2))
numpy/core/tests/test_nditer.py:1580:    assert_equal(type(b), type(i.operands[2]))
numpy/core/tests/test_nditer.py:1581:    assert_(type(a) is not type(i.operands[2]))
numpy/core/tests/test_nditer.py:1582:    assert_equal(i.operands[2].shape, (2, 2))
numpy/core/tests/test_nditer.py:1631:    assert_equal([x for x in i], a[:, 0,:].ravel())
numpy/core/tests/test_nditer.py:1636:    assert_equal([x for x in i], a[0,:,:].ravel())
numpy/core/tests/test_nditer.py:1644:    assert_equal(i.ndim, 3)
numpy/core/tests/test_nditer.py:1645:    assert_equal(i.shape, (2, 3, 4))
numpy/core/tests/test_nditer.py:1646:    assert_equal(i.itviews[0].shape, (2, 3, 4))
numpy/core/tests/test_nditer.py:1653:    assert_equal(before, after)
numpy/core/tests/test_nditer.py:1654:    assert_equal(i.ndim, 1)
numpy/core/tests/test_nditer.py:1655:    assert_raises(ValueError, lambda i:i.shape, i)
numpy/core/tests/test_nditer.py:1656:    assert_equal(i.itviews[0].shape, (24,))
numpy/core/tests/test_nditer.py:1660:    assert_equal(i.itersize, 24)
numpy/core/tests/test_nditer.py:1661:    assert_equal(i[0].shape, tuple())
numpy/core/tests/test_nditer.py:1663:    assert_equal(i.itersize, 24)
numpy/core/tests/test_nditer.py:1664:    assert_equal(i[0].shape, (24,))
numpy/core/tests/test_nditer.py:1665:    assert_equal(i.value, arange(24))
numpy/core/tests/test_nditer.py:1674:        assert_equal(iter_iterindices(i), list(range(24)))
numpy/core/tests/test_nditer.py:1676:        assert_equal(iter_iterindices(i), list(range(2, 24)))
numpy/core/tests/test_nditer.py:1679:        assert_equal(iter_iterindices(i), list(range(24)))
numpy/core/tests/test_nditer.py:1681:        assert_equal(iter_iterindices(i), list(range(5, 24)))
numpy/core/tests/test_nditer.py:1684:        assert_equal(iter_iterindices(i), list(range(24)))
numpy/core/tests/test_nditer.py:1686:        assert_equal(iter_iterindices(i), list(range(9, 24)))
numpy/core/tests/test_nditer.py:1689:        assert_equal(iter_iterindices(i), list(range(24)))
numpy/core/tests/test_nditer.py:1691:        assert_equal(iter_iterindices(i), list(range(13, 24)))
numpy/core/tests/test_nditer.py:1694:        assert_equal(iter_iterindices(i), list(range(24)))
numpy/core/tests/test_nditer.py:1696:        assert_equal(iter_iterindices(i), list(range(23, 24)))
numpy/core/tests/test_nditer.py:1699:        assert_equal(iter_iterindices(i), list(range(2, 24)))
numpy/core/tests/test_nditer.py:1710:    assert_equal(i.iterrange, (0, 24))
numpy/core/tests/test_nditer.py:1711:    assert_equal([x[()] for x in i], a_fort)
numpy/core/tests/test_nditer.py:1714:        assert_equal(i.iterrange, r)
numpy/core/tests/test_nditer.py:1715:        assert_equal([x[()] for x in i], a_fort[r[0]:r[1]])
numpy/core/tests/test_nditer.py:1719:    assert_equal(i.iterrange, (0, 24))
numpy/core/tests/test_nditer.py:1720:    assert_equal([x[()] for x in i], a_fort)
numpy/core/tests/test_nditer.py:1723:        assert_equal(i.iterrange, r)
numpy/core/tests/test_nditer.py:1724:        assert_equal([x[()] for x in i], a_fort[r[0]:r[1]])
numpy/core/tests/test_nditer.py:1735:    assert_equal(i.iterrange, (0, 24))
numpy/core/tests/test_nditer.py:1736:    assert_equal(get_array(i), a_fort)
numpy/core/tests/test_nditer.py:1739:        assert_equal(i.iterrange, r)
numpy/core/tests/test_nditer.py:1740:        assert_equal(get_array(i), a_fort[r[0]:r[1]])
numpy/core/tests/test_nditer.py:1766:                assert_(i[0].size <= buffersize)
numpy/core/tests/test_nditer.py:1769:            assert_equal(np.concatenate(vals), a.ravel(order='C'))
numpy/core/tests/test_nditer.py:1787:    assert_equal(a.ravel(order='C'), np.arange(24))
numpy/core/tests/test_nditer.py:1798:    assert_(i.has_delayed_bufalloc)
numpy/core/tests/test_nditer.py:1799:    assert_raises(ValueError, lambda i:i.multi_index, i)
numpy/core/tests/test_nditer.py:1800:    assert_raises(ValueError, lambda i:i[0], i)
numpy/core/tests/test_nditer.py:1801:    assert_raises(ValueError, lambda i:i[0:2], i)
numpy/core/tests/test_nditer.py:1805:    assert_raises(ValueError, assign_iter, i)
numpy/core/tests/test_nditer.py:1808:    assert_(not i.has_delayed_bufalloc)
numpy/core/tests/test_nditer.py:1809:    assert_equal(i.multi_index, (0,))
numpy/core/tests/test_nditer.py:1811:        assert_equal(i[0], 0)
numpy/core/tests/test_nditer.py:1813:        assert_equal(i[0:2], [0, 1])
numpy/core/tests/test_nditer.py:1814:        assert_equal([[x[0][()], x[1][()]] for x in i], list(zip(range(6), [1]*6)))
numpy/core/tests/test_nditer.py:1829:    assert_equal(a, 2*np.arange(10, dtype='f4'))
numpy/core/tests/test_nditer.py:1844:    assert_equal(a, 2*np.arange(10, dtype='f4'))
numpy/core/tests/test_nditer.py:1859:        assert_equal(a, 2*np.arange(10, dtype='f8'))
numpy/core/tests/test_nditer.py:1874:    assert_equal(a, 2*np.arange(10, dtype='c8') + 4j)
numpy/core/tests/test_nditer.py:1886:    assert_equal(a, 2*np.arange(10, dtype='c8') + 4j)
numpy/core/tests/test_nditer.py:1898:    assert_equal(a, 2*np.arange(10, dtype=np.clongdouble) + 4j)
numpy/core/tests/test_nditer.py:1909:    assert_equal(a, 2*np.arange(10, dtype=np.longdouble))
numpy/core/tests/test_nditer.py:1921:    assert_equal(vals[0]['a'], 0.5)
numpy/core/tests/test_nditer.py:1922:    assert_equal(vals[0]['b'], 0)
numpy/core/tests/test_nditer.py:1923:    assert_equal(vals[0]['c'], [[(0.5)]*3]*2)
numpy/core/tests/test_nditer.py:1924:    assert_equal(vals[0]['d'], 0.5)
numpy/core/tests/test_nditer.py:1925:    assert_equal(vals[1]['a'], 1.5)
numpy/core/tests/test_nditer.py:1926:    assert_equal(vals[1]['b'], 1)
numpy/core/tests/test_nditer.py:1927:    assert_equal(vals[1]['c'], [[(1.5)]*3]*2)
numpy/core/tests/test_nditer.py:1928:    assert_equal(vals[1]['d'], 1.5)
numpy/core/tests/test_nditer.py:1929:    assert_equal(vals[0].dtype, np.dtype(sdt))
numpy/core/tests/test_nditer.py:1943:    assert_equal(vals[0]['a'], 0.5)
numpy/core/tests/test_nditer.py:1944:    assert_equal(vals[0]['b'], 0)
numpy/core/tests/test_nditer.py:1945:    assert_equal(vals[0]['c'], [[(0.5)]*3]*2)
numpy/core/tests/test_nditer.py:1946:    assert_equal(vals[0]['d'], 0.5)
numpy/core/tests/test_nditer.py:1947:    assert_equal(vals[1]['a'], 1.5)
numpy/core/tests/test_nditer.py:1948:    assert_equal(vals[1]['b'], 1)
numpy/core/tests/test_nditer.py:1949:    assert_equal(vals[1]['c'], [[(1.5)]*3]*2)
numpy/core/tests/test_nditer.py:1950:    assert_equal(vals[1]['d'], 1.5)
numpy/core/tests/test_nditer.py:1951:    assert_equal(vals[0].dtype, np.dtype(sdt))
numpy/core/tests/test_nditer.py:1954:        assert_equal(sys.getrefcount(a[0]), rc)
numpy/core/tests/test_nditer.py:1962:    assert_equal([x_[()] for x_ in i], [5, 8])
numpy/core/tests/test_nditer.py:1979:    assert_equal(i[0].dtype, np.dtype(sdt2))
numpy/core/tests/test_nditer.py:1980:    assert_equal([np.array(x_) for x_ in i],
numpy/core/tests/test_nditer.py:1993:        # If the following assert fails, the place where the error is raised
numpy/core/tests/test_nditer.py:1997:        assert np.can_cast(a.dtype, sdt2, casting="unsafe")
numpy/core/tests/test_nditer.py:2049:    assert_equal(i[0].dtype, np.dtype(sdt2))
numpy/core/tests/test_nditer.py:2051:        assert_(np.all(x['a'] == count))
numpy/core/tests/test_nditer.py:2062:        assert_equal(i[0].dtype, np.dtype(sdt2))
numpy/core/tests/test_nditer.py:2065:            assert_(np.all(x['a'] == count))
numpy/core/tests/test_nditer.py:2068:    assert_equal(a['a'], np.arange(6).reshape(6, 1, 1)+2)
numpy/core/tests/test_nditer.py:2079:        assert_equal(i[0].dtype, np.dtype(sdt2))
numpy/core/tests/test_nditer.py:2082:            assert_equal(x['a'], count)
numpy/core/tests/test_nditer.py:2085:    assert_equal(a['a'], np.arange(6).reshape(6, 1, 1, 1)*np.ones((1, 3, 2, 2))+2)
numpy/core/tests/test_nditer.py:2095:    assert_equal(i[0].dtype, np.dtype(sdt2))
numpy/core/tests/test_nditer.py:2098:        assert_equal(x['a'], count)
numpy/core/tests/test_nditer.py:2109:    assert_equal(i[0].dtype, np.dtype(sdt2))
numpy/core/tests/test_nditer.py:2112:        assert_equal(x['a'], count)
numpy/core/tests/test_nditer.py:2123:    assert_equal(i[0].dtype, np.dtype(sdt2))
numpy/core/tests/test_nditer.py:2126:        assert_equal(x['a'], a[count]['a'])
numpy/core/tests/test_nditer.py:2137:    assert_equal(i[0].dtype, np.dtype(sdt2))
numpy/core/tests/test_nditer.py:2140:        assert_equal(x['a'], a[count]['a'][:2])
numpy/core/tests/test_nditer.py:2151:    assert_equal(i[0].dtype, np.dtype(sdt2))
numpy/core/tests/test_nditer.py:2154:        assert_equal(x['a'][:2], a[count]['a'])
numpy/core/tests/test_nditer.py:2155:        assert_equal(x['a'][2:], [0, 0, 0, 0])
numpy/core/tests/test_nditer.py:2166:    assert_equal(i[0].dtype, np.dtype(sdt2))
numpy/core/tests/test_nditer.py:2169:        assert_equal(x['a'][0], a[count]['a'])
numpy/core/tests/test_nditer.py:2170:        assert_equal(x['a'][1], a[count]['a'])
numpy/core/tests/test_nditer.py:2181:    assert_equal(i[0].dtype, np.dtype(sdt2))
numpy/core/tests/test_nditer.py:2184:        assert_equal(x['a'][:2, 0], a[count]['a'][:, 0])
numpy/core/tests/test_nditer.py:2185:        assert_equal(x['a'][:2, 1], a[count]['a'][:, 0])
numpy/core/tests/test_nditer.py:2186:        assert_equal(x['a'][2,:], [0, 0])
numpy/core/tests/test_nditer.py:2197:    assert_equal(i[0].dtype, np.dtype(sdt2))
numpy/core/tests/test_nditer.py:2200:        assert_equal(x['a'][:2, 0], a[count]['a'][:, 0])
numpy/core/tests/test_nditer.py:2201:        assert_equal(x['a'][:2, 1], a[count]['a'][:, 1])
numpy/core/tests/test_nditer.py:2202:        assert_equal(x['a'][2,:], [0, 0])
numpy/core/tests/test_nditer.py:2242:    assert_equal(a.dtype, np.dtype('S4'))
numpy/core/tests/test_nditer.py:2246:    assert_equal(i[0], b'abc')
numpy/core/tests/test_nditer.py:2247:    assert_equal(i[0].dtype, np.dtype('S6'))
numpy/core/tests/test_nditer.py:2250:    assert_equal(a.dtype, np.dtype('U4'))
numpy/core/tests/test_nditer.py:2254:    assert_equal(i[0], u'abc')
numpy/core/tests/test_nditer.py:2255:    assert_equal(i[0].dtype, np.dtype('U6'))
numpy/core/tests/test_nditer.py:2263:    assert_equal(i[0].size, a.size)
numpy/core/tests/test_nditer.py:2315:            assert_array_equal(res, comp_res)
numpy/core/tests/test_nditer.py:2341:        assert_equal(vals, [[0, 1, 2, 3, 4, 5], [6, 7, 8, 9, 10, 11]])
numpy/core/tests/test_nditer.py:2345:        assert_equal(vals, [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11]])
numpy/core/tests/test_nditer.py:2349:        assert_equal(vals, [[0, 2, 4], [1, 3, 5], [6, 8, 10], [7, 9, 11]])
numpy/core/tests/test_nditer.py:2358:        assert_equal(vals, [[0, 1, 2, 3, 4, 5], [6, 7, 8, 9, 10, 11]])
numpy/core/tests/test_nditer.py:2362:        assert_equal(vals, [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11]])
numpy/core/tests/test_nditer.py:2366:        assert_equal(vals, [[0, 2, 4], [1, 3, 5], [6, 8, 10], [7, 9, 11]])
numpy/core/tests/test_nditer.py:2371:        assert_equal(vals, [[0, 2, 4, 1, 3, 5], [6, 8, 10, 7, 9, 11]])
numpy/core/tests/test_nditer.py:2375:        assert_equal(vals, [[0, 1], [6, 7], [2, 3], [8, 9], [4, 5], [10, 11]])
numpy/core/tests/test_nditer.py:2379:        assert_equal(vals, [[0, 2, 4], [6, 8, 10], [1, 3, 5], [7, 9, 11]])
numpy/core/tests/test_nditer.py:2388:        assert_equal(vals, [[0, 1, 2, 3, 4, 5], [6, 7, 8, 9, 10, 11]])
numpy/core/tests/test_nditer.py:2392:        assert_equal(vals, [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11]])
numpy/core/tests/test_nditer.py:2396:        assert_equal(vals, [[0, 2, 4], [1, 3, 5], [6, 8, 10], [7, 9, 11]])
numpy/core/tests/test_nditer.py:2401:        assert_equal(vals, [[11, 10, 9, 8, 7, 6], [5, 4, 3, 2, 1, 0]])
numpy/core/tests/test_nditer.py:2405:        assert_equal(vals, [[11, 10], [9, 8], [7, 6], [5, 4], [3, 2], [1, 0]])
numpy/core/tests/test_nditer.py:2409:        assert_equal(vals, [[11, 9, 7], [10, 8, 6], [5, 3, 1], [4, 2, 0]])
numpy/core/tests/test_nditer.py:2418:        assert_equal(vals, [[[0, 0], [0, 1], [0, 2]], [[1, 0], [1, 1], [1, 2]]])
numpy/core/tests/test_nditer.py:2422:        assert_equal(vals, [[[0, 0], [1, 0]], [[0, 1], [1, 1]], [[0, 2], [1, 2]]])
numpy/core/tests/test_nditer.py:2432:        assert_equal(j[0].dtype, np.dtype('f8'))
numpy/core/tests/test_nditer.py:2434:        assert_equal(vals, [[0, 1, 2], [3, 4, 5]])
numpy/core/tests/test_nditer.py:2444:            assert_equal(j[0].dtype, np.dtype('f8'))
numpy/core/tests/test_nditer.py:2448:            assert_equal(a, [[0, 1, 2], [3, 4, 5]])
numpy/core/tests/test_nditer.py:2449:        assert_equal(a, [[1, 2, 3], [4, 5, 6]])
numpy/core/tests/test_nditer.py:2457:        assert_equal(j[0].dtype, np.dtype('f8'))
numpy/core/tests/test_nditer.py:2461:        assert_equal(a, [[0, 1, 2], [3, 4, 5]])
numpy/core/tests/test_nditer.py:2464:        assert_equal(a, [[1, 2, 3], [4, 5, 6]])
numpy/core/tests/test_nditer.py:2475:        assert_equal(j[0].dtype, np.dtype('f8'))
numpy/core/tests/test_nditer.py:2479:        assert_equal(a, [[1, 2, 3], [4, 5, 6]])
numpy/core/tests/test_nditer.py:2485:        assert_equal(vals, [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]])
numpy/core/tests/test_nditer.py:2489:        assert_equal(vals, [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11]])
numpy/core/tests/test_nditer.py:2496:        assert_equal(vals, [[0, 2, 4], [1, 3, 5], [6, 8, 10], [7, 9, 11]])
numpy/core/tests/test_nditer.py:2508:            assert_equal(j[0].dtype, np.dtype('f8'))
numpy/core/tests/test_nditer.py:2512:        assert_equal(a, [[1, 2, 3], [4, 5, 6]])
numpy/core/tests/test_nditer.py:2540:        assert_equal(i.operands[1].ndim, 0)
numpy/core/tests/test_nditer.py:2541:        assert_equal(i.operands[1], np.sum(a))
numpy/core/tests/test_nditer.py:2551:        assert_equal(i[1].shape, (6,))
numpy/core/tests/test_nditer.py:2552:        assert_equal(i[1].strides, (0,))
numpy/core/tests/test_nditer.py:2561:        assert_equal(i.operands[1].ndim, 0)
numpy/core/tests/test_nditer.py:2562:        assert_equal(i.operands[1], np.sum(a))
numpy/core/tests/test_nditer.py:2582:        assert_equal(it1.operands[1], it2.operands[1])
numpy/core/tests/test_nditer.py:2583:        assert_equal(it2.operands[1].sum(), a.size)
numpy/core/tests/test_nditer.py:2594:        assert_equal(i[1].dtype, np.dtype('f8'))
numpy/core/tests/test_nditer.py:2595:        assert_(i[1].dtype != b.dtype)
numpy/core/tests/test_nditer.py:2600:    assert_equal(b, np.sum(a))
numpy/core/tests/test_nditer.py:2609:        assert_equal(i[1].shape, (3,))
numpy/core/tests/test_nditer.py:2610:        assert_equal(i[1].strides, (0,))
numpy/core/tests/test_nditer.py:2618:    assert_equal(b, np.sum(a, axis=1))
numpy/core/tests/test_nditer.py:2630:        assert_equal(it[0], [1, 2, 1, 2])
numpy/core/tests/test_nditer.py:2646:    assert_equal(y_base[1::2], y_base_copy[1::2])
numpy/core/tests/test_nditer.py:2647:    assert_equal(y_base[::2], 2)
numpy/core/tests/test_nditer.py:2662:    assert_equal(bufsizes, [5, 2, 5, 2])
numpy/core/tests/test_nditer.py:2663:    assert_equal(sum(bufsizes), a.size)
numpy/core/tests/test_nditer.py:2765:    assert_equal(a, np.broadcast_to([1, 1, 1] * reps, shape))
numpy/core/tests/test_nditer.py:2785:        assert_equal(a, np.broadcast_to([2.5, 2.5, 2.5] * reps, shape))
numpy/core/tests/test_nditer.py:2788:        assert_equal(a, np.broadcast_to([2.5, 2.5, 1] * reps, shape))
numpy/core/tests/test_nditer.py:2804:    assert_equal(a, np.broadcast_to([3, 3, 2.5] * reps, shape))
numpy/core/tests/test_nditer.py:2827:        assert sys.getrefcount(singleton) - count == np.count_nonzero(mask)
numpy/core/tests/test_nditer.py:2829:    assert_array_equal(arr[~mask], original[~mask])
numpy/core/tests/test_nditer.py:2830:    assert (arr[mask] == np.array((3, singleton), arr.dtype)).all()
numpy/core/tests/test_nditer.py:2834:        assert sys.getrefcount(singleton) == count
numpy/core/tests/test_nditer.py:2844:        assert_raises(AttributeError, delattr, it, s)
numpy/core/tests/test_nditer.py:2851:        assert_raises(AttributeError, delattr, it, s)
numpy/core/tests/test_nditer.py:2871:    assert_equal(it.operands[1], [[0, 2], [2, 4], [19, 21]])
numpy/core/tests/test_nditer.py:2879:    assert_equal(it.operands[1], [[0, 2], [2, 4], [19, 21]])
numpy/core/tests/test_nditer.py:2888:    assert_equal(it.operands[2], [[8, 12], [20, 5]])
numpy/core/tests/test_nditer.py:2894:    assert_equal(i.ndim, 0)
numpy/core/tests/test_nditer.py:2895:    assert_equal(next(i), (2, 3))
numpy/core/tests/test_nditer.py:2896:    assert_equal(i.multi_index, ())
numpy/core/tests/test_nditer.py:2897:    assert_equal(i.iterindex, 0)
numpy/core/tests/test_nditer.py:2898:    assert_raises(StopIteration, next, i)
numpy/core/tests/test_nditer.py:2901:    assert_equal(next(i), (2, 3))
numpy/core/tests/test_nditer.py:2902:    assert_raises(StopIteration, next, i)
numpy/core/tests/test_nditer.py:2906:    assert_equal(i.ndim, 0)
numpy/core/tests/test_nditer.py:2907:    assert_equal(len(i), 1)
numpy/core/tests/test_nditer.py:2911:    assert_equal(i.ndim, 0)
numpy/core/tests/test_nditer.py:2912:    assert_equal(len(i), 1)
numpy/core/tests/test_nditer.py:2924:    assert_equal(vals['a'], 0.5)
numpy/core/tests/test_nditer.py:2925:    assert_equal(vals['b'], 0)
numpy/core/tests/test_nditer.py:2926:    assert_equal(vals['c'], [[(0.5)]*3]*2)
numpy/core/tests/test_nditer.py:2927:    assert_equal(vals['d'], 0.5)
numpy/core/tests/test_nditer.py:2935:    assert_raises(TypeError, lambda: np.zeros((17000, 2), dtype='f4') * None)
numpy/core/tests/test_nditer.py:2941:    assert_raises(TypeError, lambda: np.add(oarr[:, ::-1], arr[:, ::-1]))
numpy/core/tests/test_nditer.py:2968:    assert_array_equal(res, np.full(8000, 4, dtype=object))
numpy/core/tests/test_nditer.py:2976:    assert_raises(ValueError, nditer, (arr, arr[:, None]))
numpy/core/tests/test_nditer.py:3020:    assert_(a.dtype.byteorder != au.dtype.byteorder)
numpy/core/tests/test_nditer.py:3025:    assert_equal(au, 100)
numpy/core/tests/test_nditer.py:3031:            assert_equal(au.flags.writeable, False)
numpy/core/tests/test_nditer.py:3036:    assert_equal(au, 0)
numpy/core/tests/test_nditer.py:3037:    assert_equal(au.flags.writeable, True)
numpy/core/tests/test_nditer.py:3039:    assert_raises(ValueError, getattr, it, 'operands')
numpy/core/tests/test_nditer.py:3046:        assert_(x.flags.writebackifcopy)
numpy/core/tests/test_nditer.py:3047:    assert_equal(au, 6)
numpy/core/tests/test_nditer.py:3048:    assert_(not x.flags.writebackifcopy)
numpy/core/tests/test_nditer.py:3050:    assert_equal(au, 6) # but not connected to au
numpy/core/tests/test_nditer.py:3069:        assert_raises(ValueError, getattr, it, 'operands')
numpy/core/tests/test_nditer.py:3080:    assert_raises(RuntimeError, enter)
numpy/core/tests/test_nditer.py:3104:    assert_equal(z, range(0, 10, 2))
numpy/core/tests/test_nditer.py:3106:    assert_equal(z, range(0, 10, 2))
numpy/core/tests/test_nditer.py:3112:    assert_raises(StopIteration, next, it)
numpy/core/tests/test_nditer.py:3113:    assert_raises(ValueError, getattr, it, 'operands')
numpy/core/tests/test_nditer.py:3117:    assert_raises(TypeError, it.close, 1)
numpy/core/tests/test_nditer.py:3128:        assert len(sup.log) == 1
numpy/core/tests/test_nditer.py:3155:    assert count == sys.getrefcount(value)
numpy/core/tests/test_nditer.py:3166:    assert count == sys.getrefcount(value)
numpy/core/tests/test_nditer.py:3199:    assert count == sys.getrefcount(value)
numpy/core/tests/test_nditer.py:3276:    assert len(res) == len(expected)
numpy/core/tests/test_nditer.py:3280:        assert res_line.startswith(expected_line.strip())
numpy/core/tests/test_cpu_features.py:64:            assert_features_equal(__cpu_features__.get(gname), all(test_features), gname)
numpy/core/tests/test_cpu_features.py:69:            assert_features_equal(npy_have, cpu_have, feature_name)
numpy/core/tests/test_protocols.py:43:    assert arr.dtype == 'U100'
numpy/core/tests/test_protocols.py:44:    assert arr[0] == Wrapper.val
numpy/core/tests/test_regression.py:31:        assert_array_equal(np.array([v]), np.array(v))
numpy/core/tests/test_regression.py:45:            assert_array_equal(a, b)
numpy/core/tests/test_regression.py:54:        assert_almost_equal(np.add.reduce([1., .5], dtype=None), 1.5)
numpy/core/tests/test_regression.py:65:        assert_(a is np.asarray(a, order='F'))
numpy/core/tests/test_regression.py:70:        assert_(not a.ravel('F').flags.owndata)
numpy/core/tests/test_regression.py:77:        assert_array_almost_equal(c, a)
numpy/core/tests/test_regression.py:85:        assert_array_equal(idx, origidx)
numpy/core/tests/test_regression.py:104:        assert_raises(AttributeError, rs)
numpy/core/tests/test_regression.py:127:        assert_almost_equal(x**(-1), [1/(1+2j)])
numpy/core/tests/test_regression.py:133:        assert_array_equal(a == 'auto', np.array([False, True]))
numpy/core/tests/test_regression.py:134:        assert_(a[1] == 'auto')
numpy/core/tests/test_regression.py:135:        assert_(a[0] != 'auto')
numpy/core/tests/test_regression.py:140:            assert_(b != 'auto')
numpy/core/tests/test_regression.py:141:        assert_(b[0] != 'auto')
numpy/core/tests/test_regression.py:168:        assert_array_almost_equal(xa, ya.nonzero())
numpy/core/tests/test_regression.py:169:        assert_array_almost_equal(xb, yb.nonzero())
numpy/core/tests/test_regression.py:170:        assert_(np.all(a[ya] > 0.5))
numpy/core/tests/test_regression.py:171:        assert_(np.all(b[yb] > 0.5))
numpy/core/tests/test_regression.py:181:        assert_array_almost_equal(test, correct)
numpy/core/tests/test_regression.py:197:        assert_(buf[0]['head'] == 1)
numpy/core/tests/test_regression.py:208:        assert_equal(_z, np.ones(10))
numpy/core/tests/test_regression.py:211:        assert_equal(_z, np.ones(10))
numpy/core/tests/test_regression.py:217:        assert_array_equal(ref, x)
numpy/core/tests/test_regression.py:219:        assert_array_equal(ref, x)
numpy/core/tests/test_regression.py:224:        assert_array_equal(ref, x)
numpy/core/tests/test_regression.py:228:        assert_array_equal(ref, x)
numpy/core/tests/test_regression.py:232:        assert_array_equal(ref, x)
numpy/core/tests/test_regression.py:236:        assert_array_equal(ref, x)
numpy/core/tests/test_regression.py:243:        assert_array_equal(ref, x)
numpy/core/tests/test_regression.py:247:        assert_array_equal(ref, x)
numpy/core/tests/test_regression.py:251:        assert_array_equal(ref, x)
numpy/core/tests/test_regression.py:255:        assert_array_equal(ref, x)
numpy/core/tests/test_regression.py:272:        assert_raises(ValueError, np.hstack, (x, y))
numpy/core/tests/test_regression.py:278:        assert_(type(a.squeeze()) is np.ndarray)
numpy/core/tests/test_regression.py:279:        assert_(type(b.squeeze()) is np.ndarray)
numpy/core/tests/test_regression.py:283:        assert_equal(0, np.add.identity)
numpy/core/tests/test_regression.py:288:        assert_equal(a, 23. + 2**135)
numpy/core/tests/test_regression.py:292:        assert_equal('0', np.binary_repr(0))
numpy/core/tests/test_regression.py:312:        assert_array_almost_equal(x.ravel(), np.frombuffer(x.tobytes()))
numpy/core/tests/test_regression.py:318:        assert_array_almost_equal(x, [[0], [1], [2]])
numpy/core/tests/test_regression.py:320:        assert_array_almost_equal(x, [[0], [1], [2]])
numpy/core/tests/test_regression.py:332:        assert_raises(ValueError, bfa)
numpy/core/tests/test_regression.py:333:        assert_raises(ValueError, bfb)
numpy/core/tests/test_regression.py:345:        assert_raises(ValueError, assign, a, b, np.nan)
numpy/core/tests/test_regression.py:347:        assert_raises(ValueError, assign, a, r, np.nan)
numpy/core/tests/test_regression.py:358:            assert_equal(dt, dt_)
numpy/core/tests/test_regression.py:364:        assert_raises(ValueError, np.array, [1, 'object'], dt)
numpy/core/tests/test_regression.py:373:        assert_array_equal(a, b)
numpy/core/tests/test_regression.py:374:        assert_equal(a, r[0][0])
numpy/core/tests/test_regression.py:383:        assert_raises(IndexError, index_tmp)
numpy/core/tests/test_regression.py:390:        assert_equal(x[0], b'a')
numpy/core/tests/test_regression.py:394:        assert_equal(np.array([[1, 2], 3, 4], dtype=object).shape, (3,))
numpy/core/tests/test_regression.py:395:        assert_equal(np.array([[1, 2], [3, 4]], dtype=object).shape, (2, 2))
numpy/core/tests/test_regression.py:396:        assert_equal(np.array([(1, 2), (3, 4)], dtype=object).shape, (2, 2))
numpy/core/tests/test_regression.py:397:        assert_equal(np.array([], dtype=object).shape, (0,))
numpy/core/tests/test_regression.py:398:        assert_equal(np.array([[], [], []], dtype=object).shape, (3, 0))
numpy/core/tests/test_regression.py:399:        assert_equal(np.array([[3, 4], [5, 6], None], dtype=object).shape, (3,))
numpy/core/tests/test_regression.py:412:            assert_equal(c, "x")
numpy/core/tests/test_regression.py:417:        assert_equal(np.lexsort(v), 0)
numpy/core/tests/test_regression.py:428:        assert_raises(KeyError, np.lexsort, BuggySequence())
numpy/core/tests/test_regression.py:433:        assert xs.strides == (8,)
numpy/core/tests/test_regression.py:434:        assert np.lexsort((xs,)).shape[0] == 0 # Works
numpy/core/tests/test_regression.py:437:        assert np.lexsort((xs,)).shape[0] == 0 # Was: MemoryError
numpy/core/tests/test_regression.py:444:        assert np.lexsort((xs,), axis=0).shape[0] == 0
numpy/core/tests/test_regression.py:448:        assert np.lexsort((xs,), axis=0).shape[0] == 2
numpy/core/tests/test_regression.py:451:        assert_raises(np.AxisError, np.lexsort, (np.arange(1),), axis=2)
numpy/core/tests/test_regression.py:452:        assert_raises(np.AxisError, np.lexsort, (np.array([]),), axis=1)
numpy/core/tests/test_regression.py:453:        assert_raises(np.AxisError, np.lexsort, (np.array(1),), axis=10)
numpy/core/tests/test_regression.py:459:        assert np.lexsort((xs,)).shape[0] == xs.shape[0]
numpy/core/tests/test_regression.py:489:            assert_equal(result, original)
numpy/core/tests/test_regression.py:493:                    assert_(isinstance(name, str))
numpy/core/tests/test_regression.py:502:        assert_equal(np.arange(4, dtype='>c8').imag.max(), 0.0)
numpy/core/tests/test_regression.py:503:        assert_equal(np.arange(4, dtype='<c8').imag.max(), 0.0)
numpy/core/tests/test_regression.py:504:        assert_equal(np.arange(4, dtype='>c8').real.max(), 3.0)
numpy/core/tests/test_regression.py:505:        assert_equal(np.arange(4, dtype='<c8').real.max(), 3.0)
numpy/core/tests/test_regression.py:509:        assert_(np.array([1, None, 'A']).shape == (3,))
numpy/core/tests/test_regression.py:517:        assert_equal(np.array([]).dtype, np.zeros(0).dtype)
numpy/core/tests/test_regression.py:523:        assert_(x['one'] > 1 and x['two'] > 2)
numpy/core/tests/test_regression.py:549:                assert_((res1 == res2).all(), func)
numpy/core/tests/test_regression.py:551:                assert_(abs(res1-res2).max() < 1e-8, func)
numpy/core/tests/test_regression.py:565:            assert_(abs(res1-res2).max() < 1e-8, func)
numpy/core/tests/test_regression.py:575:        assert_equal(x.shape, (1,))
numpy/core/tests/test_regression.py:583:        assert_(ra['x'] != rb['x'])
numpy/core/tests/test_regression.py:595:        assert_equal(x.flat[2], (1, 2, 3))
numpy/core/tests/test_regression.py:600:        assert_equal(np.array(x, dtype=np.float32, ndmin=2).ndim, 2)
numpy/core/tests/test_regression.py:601:        assert_equal(np.array(x, dtype=np.float64, ndmin=2).ndim, 2)
numpy/core/tests/test_regression.py:605:        assert_(np.array([1, 2], order='C', ndmin=3).flags.c_contiguous)
numpy/core/tests/test_regression.py:606:        assert_(np.array([1, 2], order='F', ndmin=3).flags.f_contiguous)
numpy/core/tests/test_regression.py:607:        assert_(np.array(np.ones((2, 2), order='F'), ndmin=3).flags.f_contiguous)
numpy/core/tests/test_regression.py:608:        assert_(np.array(np.ones((2, 2), order='C'), ndmin=3).flags.c_contiguous)
numpy/core/tests/test_regression.py:621:        assert_(np.dtype('i4') == np.dtype(('i4', ())))
numpy/core/tests/test_regression.py:629:        assert_equal(np.array(['X'], 'c'), b'X')
numpy/core/tests/test_regression.py:640:        assert_equal(dt1.__repr__(), dt2.__repr__())
numpy/core/tests/test_regression.py:645:        assert_equal(a, [[0, 2, 4], [1, 3, 5]])
numpy/core/tests/test_regression.py:648:        assert_equal(b.reshape(2, 2, order='F'), [[2, 6], [4, 8]])
numpy/core/tests/test_regression.py:654:        assert_(a.reshape(5, 1).strides[0] == 0)
numpy/core/tests/test_regression.py:670:        assert_equal(a.reshape(3, 2, 1, 1).strides, strides_c)
numpy/core/tests/test_regression.py:671:        assert_equal(a.reshape(3, 2, 1, 1, order='F').strides, strides_f)
numpy/core/tests/test_regression.py:672:        assert_equal(np.array(0, dtype=np.int32).reshape(1, 1).strides, (4, 4))
numpy/core/tests/test_regression.py:677:        assert_equal(a.repeat(3), [2, 2, 2, 5, 5, 5, 8, 8, 8, 11, 11, 11])
numpy/core/tests/test_regression.py:683:        assert_equal(a[np.where(a == 3)], a2[np.where(a2 == 3)])
numpy/core/tests/test_regression.py:687:        assert_(a.argmax() == 2)
numpy/core/tests/test_regression.py:698:            assert_(a.dtype in [dt0, dt1])
numpy/core/tests/test_regression.py:705:        assert_equal(np.sort(b, axis=0), a)
numpy/core/tests/test_regression.py:713:        assert_equal(ca.startswith('H'), [True, False])
numpy/core/tests/test_regression.py:719:        assert_equal(np.subtract.reduce(tosubtract), -10)
numpy/core/tests/test_regression.py:720:        assert_equal(np.divide.reduce(todivide), 16.0)
numpy/core/tests/test_regression.py:721:        assert_array_equal(np.subtract.accumulate(tosubtract),
numpy/core/tests/test_regression.py:723:        assert_array_equal(np.divide.accumulate(todivide),
numpy/core/tests/test_regression.py:728:        assert_raises(ValueError, np.convolve, [], [1])
numpy/core/tests/test_regression.py:729:        assert_raises(ValueError, np.convolve, [1], [])
numpy/core/tests/test_regression.py:734:        assert_array_equal(r.byteswap(),
numpy/core/tests/test_regression.py:739:        assert_equal(np.array("a\x00\x0b\x0c\x00").item(),
numpy/core/tests/test_regression.py:745:        assert_(asbytes(r['var1'][0][0]) == b'abc')
numpy/core/tests/test_regression.py:753:        assert_array_equal(a, b)
numpy/core/tests/test_regression.py:766:            assert_(ref_d == sys.getrefcount(d))
numpy/core/tests/test_regression.py:780:        assert_almost_equal(uradians(big_endian).astype(float),
numpy/core/tests/test_regression.py:797:        assert_array_equal(x.argsort(kind='m'), np.arange(32))
numpy/core/tests/test_regression.py:802:        assert_(a[a.argmax()] == a.max())
numpy/core/tests/test_regression.py:817:        assert_raises(ValueError, np.fromiter, [['12', ''], ['13', '']], str)
numpy/core/tests/test_regression.py:825:        assert_equal(np.dot(x, z), np.dot(x, y2))
numpy/core/tests/test_regression.py:836:        assert_raises(TypeError, rs)
numpy/core/tests/test_regression.py:844:            assert_equal(new, el)
numpy/core/tests/test_regression.py:850:            assert_equal(np.arange(0, dtype=dt).dtype, dt)
numpy/core/tests/test_regression.py:851:            assert_equal(np.arange(0.5, dtype=dt).dtype, dt)
numpy/core/tests/test_regression.py:852:            assert_equal(np.arange(5, dtype=dt).dtype, dt)
numpy/core/tests/test_regression.py:861:        assert_raises(IndexError, ia, x, s, np.zeros(9, dtype=float))
numpy/core/tests/test_regression.py:862:        assert_raises(IndexError, ia, x, s, np.zeros(11, dtype=float))
numpy/core/tests/test_regression.py:865:        assert_raises(ValueError, ia, x.flat, s, np.zeros(9, dtype=float))
numpy/core/tests/test_regression.py:866:        assert_raises(ValueError, ia, x.flat, s, np.zeros(11, dtype=float))
numpy/core/tests/test_regression.py:875:        assert_equal(np.binary_repr(0, width=3), '000')
numpy/core/tests/test_regression.py:878:        assert_equal(np.fromstring("12:09:09", dtype=int, sep=":"),
numpy/core/tests/test_regression.py:884:        assert_equal(x.searchsorted(y), [3, 3])
numpy/core/tests/test_regression.py:889:        assert_array_equal(x.argsort(kind='m'), np.array([1, 0]))
numpy/core/tests/test_regression.py:890:        assert_array_equal(x.argsort(kind='q'), np.array([1, 0]))
numpy/core/tests/test_regression.py:896:        assert_array_equal(np.sort(x, kind="q"), y)
numpy/core/tests/test_regression.py:905:        assert_array_equal(x.astype('>i4'), x.astype('<i4').flat[:])
numpy/core/tests/test_regression.py:906:        assert_array_equal(x.astype('>i4').flat[:], x.astype('<i4'))
numpy/core/tests/test_regression.py:910:        assert_equal(str(np.abs(x)), '[0. 0. 0.]')
numpy/core/tests/test_regression.py:915:            assert_equal(x.flat[0].dtype, x[0].dtype)
numpy/core/tests/test_regression.py:930:        assert_equal(b.strides, (3 * b.itemsize, b.itemsize))
numpy/core/tests/test_regression.py:954:        assert_equal(cnt(a), cnt0_a + 5)
numpy/core/tests/test_regression.py:957:        assert_equal(cnt(a), cnt0_a)
numpy/core/tests/test_regression.py:958:        assert_equal(cnt(b), cnt0_b + 5)
numpy/core/tests/test_regression.py:961:        assert_equal(cnt(b), cnt0_b + 3)
numpy/core/tests/test_regression.py:962:        assert_equal(cnt(c), cnt0_c + 2)
numpy/core/tests/test_regression.py:972:        assert_(cnt(a) == cnt0_a + 1)
numpy/core/tests/test_regression.py:974:        assert_(cnt(b) == cnt0_b + 1)
numpy/core/tests/test_regression.py:977:        assert_(cnt(a) == cnt0_a + 6)
numpy/core/tests/test_regression.py:978:        assert_(cnt(b) == cnt0_b + 6)
numpy/core/tests/test_regression.py:981:        assert_(cnt(a) == cnt0_a + 1)
numpy/core/tests/test_regression.py:991:        assert_(cnt(a) == cnt0_a + 5)
numpy/core/tests/test_regression.py:992:        assert_(cnt(b) == cnt0_b + 5)
numpy/core/tests/test_regression.py:995:        assert_(cnt(a) == cnt0_a + 10)
numpy/core/tests/test_regression.py:996:        assert_(cnt(b) == cnt0_b + 10)
numpy/core/tests/test_regression.py:999:        assert_(cnt(a) == cnt0_a + 10)
numpy/core/tests/test_regression.py:1000:        assert_(cnt(b) == cnt0_b + 5)
numpy/core/tests/test_regression.py:1003:        assert_(cnt(a) == cnt0_a + 10)
numpy/core/tests/test_regression.py:1004:        assert_(cnt(b) == cnt0_b + 10)
numpy/core/tests/test_regression.py:1015:        assert_(cnt(a) == cnt0_a + 5)
numpy/core/tests/test_regression.py:1016:        assert_(cnt(b) == cnt0_b + 5)
numpy/core/tests/test_regression.py:1019:        assert_(cnt(a) == cnt0_a + 5 + 5)
numpy/core/tests/test_regression.py:1020:        assert_(cnt(b) == cnt0_b + 5 + 5)
numpy/core/tests/test_regression.py:1023:        assert_(cnt(a) == cnt0_a + 5 + 3*5)
numpy/core/tests/test_regression.py:1026:        assert_(cnt(a) == cnt0_a + 5 + 3)
numpy/core/tests/test_regression.py:1030:        assert_(cnt(a) == cnt0_a + 5 + 2)
numpy/core/tests/test_regression.py:1031:        assert_(cnt(b) == cnt0_b + 5 + 3)
numpy/core/tests/test_regression.py:1057:        assert_(not arr[0].deleted)
numpy/core/tests/test_regression.py:1059:        assert_(not arr[0].deleted)
numpy/core/tests/test_regression.py:1070:        assert_(not np.any(a))
numpy/core/tests/test_regression.py:1086:        assert_equal(x, np.array([1], dtype=dtype))
numpy/core/tests/test_regression.py:1107:        assert_((xp.__array_interface__['data'][0] !=
numpy/core/tests/test_regression.py:1137:        assert_(dat.info == 'jubba')
numpy/core/tests/test_regression.py:1139:        assert_(dat.info == 'jubba')
numpy/core/tests/test_regression.py:1141:        assert_(dat.info == 'jubba')
numpy/core/tests/test_regression.py:1143:        assert_(dat.info == 'jubba')
numpy/core/tests/test_regression.py:1145:        assert_(dat.info == 'jubba')
numpy/core/tests/test_regression.py:1147:        assert_(dat.info == 'jubba')
numpy/core/tests/test_regression.py:1149:        assert_(dat.info == 'jubba')
numpy/core/tests/test_regression.py:1150:        assert_(dat.all(1).info == 'jubba')
numpy/core/tests/test_regression.py:1151:        assert_(dat.any(1).info == 'jubba')
numpy/core/tests/test_regression.py:1152:        assert_(dat.argmax(1).info == 'jubba')
numpy/core/tests/test_regression.py:1153:        assert_(dat.argmin(1).info == 'jubba')
numpy/core/tests/test_regression.py:1154:        assert_(dat.argsort(1).info == 'jubba')
numpy/core/tests/test_regression.py:1155:        assert_(dat.astype(TestArray).info == 'jubba')
numpy/core/tests/test_regression.py:1156:        assert_(dat.byteswap().info == 'jubba')
numpy/core/tests/test_regression.py:1157:        assert_(dat.clip(2, 7).info == 'jubba')
numpy/core/tests/test_regression.py:1158:        assert_(dat.compress([0, 1, 1]).info == 'jubba')
numpy/core/tests/test_regression.py:1159:        assert_(dat.conj().info == 'jubba')
numpy/core/tests/test_regression.py:1160:        assert_(dat.conjugate().info == 'jubba')
numpy/core/tests/test_regression.py:1161:        assert_(dat.copy().info == 'jubba')
numpy/core/tests/test_regression.py:1165:        assert_(dat2.choose(choices).info == 'jubba')
numpy/core/tests/test_regression.py:1166:        assert_(dat.cumprod(1).info == 'jubba')
numpy/core/tests/test_regression.py:1167:        assert_(dat.cumsum(1).info == 'jubba')
numpy/core/tests/test_regression.py:1168:        assert_(dat.diagonal().info == 'jubba')
numpy/core/tests/test_regression.py:1169:        assert_(dat.flatten().info == 'jubba')
numpy/core/tests/test_regression.py:1170:        assert_(dat.getfield(np.int32, 0).info == 'jubba')
numpy/core/tests/test_regression.py:1171:        assert_(dat.imag.info == 'jubba')
numpy/core/tests/test_regression.py:1172:        assert_(dat.max(1).info == 'jubba')
numpy/core/tests/test_regression.py:1173:        assert_(dat.mean(1).info == 'jubba')
numpy/core/tests/test_regression.py:1174:        assert_(dat.min(1).info == 'jubba')
numpy/core/tests/test_regression.py:1175:        assert_(dat.newbyteorder().info == 'jubba')
numpy/core/tests/test_regression.py:1176:        assert_(dat.prod(1).info == 'jubba')
numpy/core/tests/test_regression.py:1177:        assert_(dat.ptp(1).info == 'jubba')
numpy/core/tests/test_regression.py:1178:        assert_(dat.ravel().info == 'jubba')
numpy/core/tests/test_regression.py:1179:        assert_(dat.real.info == 'jubba')
numpy/core/tests/test_regression.py:1180:        assert_(dat.repeat(2).info == 'jubba')
numpy/core/tests/test_regression.py:1181:        assert_(dat.reshape((2, 4)).info == 'jubba')
numpy/core/tests/test_regression.py:1182:        assert_(dat.round().info == 'jubba')
numpy/core/tests/test_regression.py:1183:        assert_(dat.squeeze().info == 'jubba')
numpy/core/tests/test_regression.py:1184:        assert_(dat.std(1).info == 'jubba')
numpy/core/tests/test_regression.py:1185:        assert_(dat.sum(1).info == 'jubba')
numpy/core/tests/test_regression.py:1186:        assert_(dat.swapaxes(0, 1).info == 'jubba')
numpy/core/tests/test_regression.py:1187:        assert_(dat.take([2, 3, 5]).info == 'jubba')
numpy/core/tests/test_regression.py:1188:        assert_(dat.transpose().info == 'jubba')
numpy/core/tests/test_regression.py:1189:        assert_(dat.T.info == 'jubba')
numpy/core/tests/test_regression.py:1190:        assert_(dat.var(1).info == 'jubba')
numpy/core/tests/test_regression.py:1191:        assert_(dat.view(TestArray).info == 'jubba')
numpy/core/tests/test_regression.py:1193:        assert_(type(dat.nonzero()[0]) is np.ndarray)
numpy/core/tests/test_regression.py:1194:        assert_(type(dat.nonzero()[1]) is np.ndarray)
numpy/core/tests/test_regression.py:1203:        assert_( a[0].tolist() == b[0])
numpy/core/tests/test_regression.py:1204:        assert_( a[1].tolist() == b[1])
numpy/core/tests/test_regression.py:1209:        assert_raises(ValueError, a.item)
numpy/core/tests/test_regression.py:1214:        assert_equal(a, b)
numpy/core/tests/test_regression.py:1222:            assert_equal(str(x), "[(b'a', 'b')]", err_msg=msg)
numpy/core/tests/test_regression.py:1230:            assert_equal(have, want)
numpy/core/tests/test_regression.py:1239:        assert_(a.dtype.names[0] == "notfoo")
numpy/core/tests/test_regression.py:1240:        assert_(a.dtype.names[1] == "bar")
numpy/core/tests/test_regression.py:1249:        assert_(a is None)
numpy/core/tests/test_regression.py:1250:        assert_(type(b) is int)
numpy/core/tests/test_regression.py:1251:        assert_(type(b2) is float)
numpy/core/tests/test_regression.py:1252:        assert_(type(c) is np.ndarray)
numpy/core/tests/test_regression.py:1253:        assert_(c.dtype == object)
numpy/core/tests/test_regression.py:1254:        assert_(d.dtype == object)
numpy/core/tests/test_regression.py:1259:        assert_raises(TypeError, x.resize, (2, 2), order='C')
numpy/core/tests/test_regression.py:1264:        assert_raises(ValueError, lambda x: x.choose([]), a)
numpy/core/tests/test_regression.py:1268:        assert_raises(ValueError, lambda: np.array([1], ndmin=33))
numpy/core/tests/test_regression.py:1275:        assert_(arr[0][0] == 'john')
numpy/core/tests/test_regression.py:1276:        assert_(arr[0][1] == 4)
numpy/core/tests/test_regression.py:1287:        assert_(test_string_void_scalar.view(test_string.dtype) == test_string)
numpy/core/tests/test_regression.py:1295:        assert_(test_record_void_scalar == test_record)
numpy/core/tests/test_regression.py:1324:                    assert_(np.all(z == 0))
numpy/core/tests/test_regression.py:1325:                    assert_(z.shape == (m, n))
numpy/core/tests/test_regression.py:1342:            assert_(np.size == sz)
numpy/core/tests/test_regression.py:1348:        assert_(np.alltrue(a == np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])))
numpy/core/tests/test_regression.py:1349:        assert_(np.alltrue(b == np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])))
numpy/core/tests/test_regression.py:1355:        assert_equal(a.shape, (2,))
numpy/core/tests/test_regression.py:1356:        assert_equal(a.dtype, np.dtype(object))
numpy/core/tests/test_regression.py:1357:        assert_equal(a[0], np.ones(2))
numpy/core/tests/test_regression.py:1358:        assert_equal(a[1], np.array(2))
numpy/core/tests/test_regression.py:1361:        assert_equal(a.shape, (2,))
numpy/core/tests/test_regression.py:1362:        assert_equal(a.dtype, np.dtype(object))
numpy/core/tests/test_regression.py:1363:        assert_equal(a[0], (1,))
numpy/core/tests/test_regression.py:1364:        assert_equal(a[1], np.array(1))
numpy/core/tests/test_regression.py:1369:        assert_equal(t.shape, (2,))
numpy/core/tests/test_regression.py:1370:        assert_equal(t.dtype, np.dtype(object))
numpy/core/tests/test_regression.py:1374:        assert_raises(ValueError, np.zeros, [975]*7, np.int8)
numpy/core/tests/test_regression.py:1375:        assert_raises(ValueError, np.zeros, [26244]*5, np.int8)
numpy/core/tests/test_regression.py:1380:        assert_raises(KeyError, dt.__getitem__, "f2")
numpy/core/tests/test_regression.py:1381:        assert_raises(IndexError, dt.__getitem__, 1)
numpy/core/tests/test_regression.py:1382:        assert_raises(TypeError, dt.__getitem__, 0.0)
numpy/core/tests/test_regression.py:1389:        assert_equal(i, np.arange(100, dtype=int))
numpy/core/tests/test_regression.py:1395:        assert_equal(a, b)
numpy/core/tests/test_regression.py:1397:        assert_equal(c, np.array(['abcde', 'ijklm']))
numpy/core/tests/test_regression.py:1399:        assert_equal(a, d)
numpy/core/tests/test_regression.py:1402:        assert_equal(a, e)
numpy/core/tests/test_regression.py:1409:        assert_raises(UnicodeEncodeError, np.array, a, 'S4')
numpy/core/tests/test_regression.py:1414:        assert_raises(UnicodeEncodeError, np.array, a, 'S')
numpy/core/tests/test_regression.py:1416:        assert_raises(UnicodeEncodeError, np.array, b, 'S')
numpy/core/tests/test_regression.py:1420:        assert_(a.itemsize == 16)
numpy/core/tests/test_regression.py:1422:        assert_(a.itemsize == 16)
numpy/core/tests/test_regression.py:1424:        assert_(a.itemsize == 20)
numpy/core/tests/test_regression.py:1426:        assert_(a.itemsize == 20)
numpy/core/tests/test_regression.py:1428:        assert_(a.itemsize == 16)
numpy/core/tests/test_regression.py:1467:                assert_equal(x, np.frombuffer(y.tobytes(), dtype=dtype.newbyteorder()))
numpy/core/tests/test_regression.py:1470:                assert_equal(x, np.frombuffer(y.tobytes(), dtype=dtype))
numpy/core/tests/test_regression.py:1472:            assert_equal(x.real, y.real.byteswap())
numpy/core/tests/test_regression.py:1473:            assert_equal(x.imag, y.imag.byteswap())
numpy/core/tests/test_regression.py:1481:        assert_(x[0, 1] == x[0, 0])
numpy/core/tests/test_regression.py:1492:        assert_(sys.getrefcount(strb) == numb)
numpy/core/tests/test_regression.py:1493:        assert_(sys.getrefcount(stra) == numa + 2)
numpy/core/tests/test_regression.py:1498:        assert_raises(ValueError, np.dtype, dtspec)
numpy/core/tests/test_regression.py:1514:        assert_equal(sha256(x).hexdigest(), '4636993d3e1da4e9d6b8f87b79e8f7c6d018580d52661950eabc3845c5897a4d')
numpy/core/tests/test_regression.py:1522:        assert_(np.isfinite(np.log1p(np.exp2(-53))))
numpy/core/tests/test_regression.py:1527:        assert_(np.alltrue(a == np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])))
numpy/core/tests/test_regression.py:1528:        assert_(np.alltrue(b == np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])))
numpy/core/tests/test_regression.py:1556:            assert_equal(type(getattr(x, name)), np.float32,
numpy/core/tests/test_regression.py:1565:        assert_(ret is out)
numpy/core/tests/test_regression.py:1566:        assert_array_equal(ret, data.var(axis=1))
numpy/core/tests/test_regression.py:1569:        assert_(ret is out)
numpy/core/tests/test_regression.py:1570:        assert_array_equal(ret, data.std(axis=1))
numpy/core/tests/test_regression.py:1574:        assert_equal(np.maximum(1, cnan), cnan)
numpy/core/tests/test_regression.py:1584:        assert_equal(x[0], 2)
numpy/core/tests/test_regression.py:1592:        assert_equal(id(x), id(y))
numpy/core/tests/test_regression.py:1607:        assert_equal(c1, c2)
numpy/core/tests/test_regression.py:1618:        assert_equal(ret, np.array([20, 21, 22, 23], dtype='u1'))
numpy/core/tests/test_regression.py:1619:        assert_equal(f.tell(), 24)
numpy/core/tests/test_regression.py:1623:        assert_equal(f.tell(), 43)
numpy/core/tests/test_regression.py:1627:        assert_equal(data, b"\x01\x02\x03")
numpy/core/tests/test_regression.py:1632:        assert_equal(data, np.array([84, 85, 86, 87], dtype='u1'))
numpy/core/tests/test_regression.py:1639:            assert_warns(np.ComplexWarning, float, x)
numpy/core/tests/test_regression.py:1642:                assert_equal(float(x), float(x.real))
numpy/core/tests/test_regression.py:1647:            assert_equal(complex(x), 1+2j)
numpy/core/tests/test_regression.py:1653:            assert_equal(x.astype(bool), np.array([0, 1, 1], dtype=bool))
numpy/core/tests/test_regression.py:1654:            assert_(np.any(x))
numpy/core/tests/test_regression.py:1655:            assert_(np.all(x[1:]))
numpy/core/tests/test_regression.py:1659:        assert_equal(int(np.uint64(x)), x)
numpy/core/tests/test_regression.py:1665:        assert_raises(ValueError, setattr, ra.dtype, 'names', ('f1', 'f1'))
numpy/core/tests/test_regression.py:1671:        assert_array_equal(a1 == a2, [True, False])
numpy/core/tests/test_regression.py:1672:        assert_array_equal(a2 == a1, [True, False])
numpy/core/tests/test_regression.py:1677:        assert_equal(a.nonzero()[0], [1])
numpy/core/tests/test_regression.py:1679:        assert_equal(a.nonzero()[0], [1])  # [0] if nonzero() ignores swap
numpy/core/tests/test_regression.py:1683:        assert_(np.find_common_type([], ['?', '?']) == '?')
numpy/core/tests/test_regression.py:1688:        assert_equal(a, [1.])
numpy/core/tests/test_regression.py:1696:        assert_equal(np.dtype('S10').itemsize, 10)
numpy/core/tests/test_regression.py:1698:        assert_equal(np.dtype('S10').itemsize, 10)
numpy/core/tests/test_regression.py:1703:        assert_(np.any(a))
numpy/core/tests/test_regression.py:1704:        assert_(np.all(a))
numpy/core/tests/test_regression.py:1708:        assert_equal(a.sum(dtype='d'), a.astype('d').sum())
numpy/core/tests/test_regression.py:1715:        assert_equal(c, 2.0)
numpy/core/tests/test_regression.py:1719:        assert_(np.array(1.0).flags.c_contiguous)
numpy/core/tests/test_regression.py:1720:        assert_(np.array(1.0).flags.f_contiguous)
numpy/core/tests/test_regression.py:1721:        assert_(np.array(np.float32(1.0)).flags.c_contiguous)
numpy/core/tests/test_regression.py:1722:        assert_(np.array(np.float32(1.0)).flags.f_contiguous)
numpy/core/tests/test_regression.py:1728:        assert_(a.flags.c_contiguous)
numpy/core/tests/test_regression.py:1729:        assert_(a.flags.f_contiguous)
numpy/core/tests/test_regression.py:1730:        assert_(b.flags.f_contiguous)
numpy/core/tests/test_regression.py:1759:        assert_equal(np.squeeze(oldsqueeze),
numpy/core/tests/test_regression.py:1764:        assert_equal(np.squeeze(oldsqueeze, axis=None),
numpy/core/tests/test_regression.py:1797:        assert_(a.flags.c_contiguous)
numpy/core/tests/test_regression.py:1798:        assert_(a.flags.f_contiguous)
numpy/core/tests/test_regression.py:1799:        assert_(b.flags.c_contiguous)
numpy/core/tests/test_regression.py:1806:        assert_raises(RecursionError, int, a)
numpy/core/tests/test_regression.py:1807:        assert_raises(RecursionError, float, a)
numpy/core/tests/test_regression.py:1817:        assert_raises(RecursionError, int, a)
numpy/core/tests/test_regression.py:1825:        assert_equal(a, 1)
numpy/core/tests/test_regression.py:1832:        assert_equal(int(a), int(0))
numpy/core/tests/test_regression.py:1833:        assert_equal(float(a), float(0))
numpy/core/tests/test_regression.py:1841:            assert_(sys.getrefcount(a[()]) == 2)
numpy/core/tests/test_regression.py:1847:        assert_equal(np.add.accumulate(x[:-1, 0]), [])
numpy/core/tests/test_regression.py:1852:        assert_raises(TypeError, x.setfield, 4, np.int32, 0)
numpy/core/tests/test_regression.py:1860:        assert_equal(a, np.array(s1))
numpy/core/tests/test_regression.py:1862:        assert_equal(a, np.array(s2))
numpy/core/tests/test_regression.py:1866:        assert_equal(a, np.array(3))
numpy/core/tests/test_regression.py:1868:        assert_equal(a, np.array(4))
numpy/core/tests/test_regression.py:1876:        assert_equal(a.dtype, np.dtype('S5'))
numpy/core/tests/test_regression.py:1878:        assert_equal(b.dtype, np.dtype('S5'))
numpy/core/tests/test_regression.py:1887:            assert_equal(a1, a2)
numpy/core/tests/test_regression.py:1892:        assert_equal(r[0:3:2]['f1'], r['f1'][0:3:2])
numpy/core/tests/test_regression.py:1893:        assert_equal(r[0:3:2]['f1'][0], r[0:3:2][0]['f1'])
numpy/core/tests/test_regression.py:1894:        assert_equal(r[0:3:2]['f1'][0][()], r[0:3:2][0]['f1'][()])
numpy/core/tests/test_regression.py:1895:        assert_equal(r[0:3:2]['f1'][0].strides, r[0:3:2][0]['f1'].strides)
numpy/core/tests/test_regression.py:1900:        assert_(a.flags.aligned)
numpy/core/tests/test_regression.py:1902:        assert_(not a.flags.aligned)
numpy/core/tests/test_regression.py:1920:        assert_equal(x, [[1, 3], [2, 4]])
numpy/core/tests/test_regression.py:1931:        assert_equal(s[0], "\x01")
numpy/core/tests/test_regression.py:1934:        assert_equal(s[0], "\x01")
numpy/core/tests/test_regression.py:1942:            assert_equal(bytestring[0:1], '\x01'.encode('ascii'))
numpy/core/tests/test_regression.py:1955:        assert_array_equal(result, np.array([129], dtype='b'))
numpy/core/tests/test_regression.py:1957:        assert_raises(Exception, pickle.loads, data, encoding='koi8-r')
numpy/core/tests/test_regression.py:1986:            assert_equal(result, original)
numpy/core/tests/test_regression.py:1995:                assert_(result != original)
numpy/core/tests/test_regression.py:1999:                assert_raises(ValueError, pickle.loads, data, encoding='koi8-r')
numpy/core/tests/test_regression.py:2009:        assert_equal(a_rec.astype(object), a_obj)
numpy/core/tests/test_regression.py:2013:        assert_equal(b, a_obj)
numpy/core/tests/test_regression.py:2017:        assert_equal(b, a_rec)
numpy/core/tests/test_regression.py:2029:        assert_equal(a, b)
numpy/core/tests/test_regression.py:2033:        assert_equal(a, [[1, 2], [1, 2]])
numpy/core/tests/test_regression.py:2048:        assert_equal(sys.getrefcount(a), acnt)
numpy/core/tests/test_regression.py:2053:        assert_raises(TypeError, x.searchsorted, 1)
numpy/core/tests/test_regression.py:2061:                assert_equal(tostr(b[0]), tostr(val))
numpy/core/tests/test_regression.py:2063:                assert_equal(tostr(b[1]), tostr(val))
numpy/core/tests/test_regression.py:2067:                assert_equal(tostr(b[0]), tostr(val))
numpy/core/tests/test_regression.py:2069:                assert_equal(tostr(b[1]), tostr(val))
numpy/core/tests/test_regression.py:2076:        assert_equal(a.dtype.itemsize, 16)
numpy/core/tests/test_regression.py:2084:        assert_equal(res, tgt)
numpy/core/tests/test_regression.py:2100:        assert_(y == "[0 0]")
numpy/core/tests/test_regression.py:2106:        assert_raises(TypeError, np.searchsorted, a, 1.2)
numpy/core/tests/test_regression.py:2111:        assert_raises(TypeError, np.searchsorted, a, 1)
numpy/core/tests/test_regression.py:2125:        assert_array_equal(arr2, data_back)
numpy/core/tests/test_regression.py:2130:        assert_equal(count, 0)
numpy/core/tests/test_regression.py:2136:        assert_(b.flags.fortran)
numpy/core/tests/test_regression.py:2137:        assert_(b.flags.f_contiguous)
numpy/core/tests/test_regression.py:2138:        assert_(c.flags.fortran)
numpy/core/tests/test_regression.py:2139:        assert_(c.flags.f_contiguous)
numpy/core/tests/test_regression.py:2147:        assert_array_equal(arr, arr2)
numpy/core/tests/test_regression.py:2152:        assert_raises(ValueError, arr.__setitem__, slice(None), [9, 9])
numpy/core/tests/test_regression.py:2154:        assert_equal(arr, [9, 9, 9])
numpy/core/tests/test_regression.py:2161:        assert_equal(formatted, str(arr[0]))
numpy/core/tests/test_regression.py:2168:        assert_equal(arr, arr_cp)
numpy/core/tests/test_regression.py:2169:        assert_equal(arr.shape, arr_cp.shape)
numpy/core/tests/test_regression.py:2170:        assert_equal(int(arr), int(arr_cp))
numpy/core/tests/test_regression.py:2171:        assert_(arr is not arr_cp)
numpy/core/tests/test_regression.py:2172:        assert_(isinstance(arr_cp, type(arr)))
numpy/core/tests/test_regression.py:2181:        assert_equal(arr, arr_cp)
numpy/core/tests/test_regression.py:2182:        assert_(arr is not arr_cp)
numpy/core/tests/test_regression.py:2184:        assert_(arr[0, 1] is not arr_cp[1, 1])
numpy/core/tests/test_regression.py:2186:        assert_(arr[0, 1] is arr[1, 1])
numpy/core/tests/test_regression.py:2188:        assert_(arr_cp[0, 1] is arr_cp[1, 1])
numpy/core/tests/test_regression.py:2195:        assert_(a.shape == b.shape)
numpy/core/tests/test_regression.py:2219:            assert_raises(TypeError, f, lhs, rhs)
numpy/core/tests/test_regression.py:2220:        assert_(not op.eq(lhs, rhs))
numpy/core/tests/test_regression.py:2221:        assert_(op.ne(lhs, rhs))
numpy/core/tests/test_regression.py:2230:        assert_equal(10 == x, "OK")
numpy/core/tests/test_regression.py:2231:        assert_equal(np.int32(10) == x, "OK")
numpy/core/tests/test_regression.py:2232:        assert_equal(np.array([10]) == x, "OK")
numpy/core/tests/test_regression.py:2247:        assert_raises(ValueError, np.frompyfunc, passer, 32, 1)
numpy/core/tests/test_regression.py:2253:            assert_equal(a.repeat(2, axis=axis), a.repeat([2], axis=axis))
numpy/core/tests/test_regression.py:2263:        assert_equal(uf(a), ())
numpy/core/tests/test_regression.py:2265:        assert_array_equal(a, expected)
numpy/core/tests/test_regression.py:2278:        assert_(sys.getrefcount(a) < 10)
numpy/core/tests/test_regression.py:2287:        assert_equal(before, after)
numpy/core/tests/test_regression.py:2291:        assert_array_equal(np.percentile(np.arange(10), []), np.array([]))
numpy/core/tests/test_regression.py:2311:        assert_raises(ValueError, a.reshape, new_shape)
numpy/core/tests/test_regression.py:2316:        assert_raises(ValueError, np.dtype, ('O', [('name', 'i8')]))
numpy/core/tests/test_regression.py:2317:        assert_raises(ValueError, np.dtype, ('i8', [('name', 'O')]))
numpy/core/tests/test_regression.py:2320:        assert_raises(ValueError, np.dtype, ([('a', 'i4'), ('b', 'i4')], 'O'))
numpy/core/tests/test_regression.py:2321:        assert_raises(ValueError, np.dtype, ('i8', 'O'))
numpy/core/tests/test_regression.py:2332:        assert_equal(a[0], 1)
numpy/core/tests/test_regression.py:2335:        assert a[0] is a.item()
numpy/core/tests/test_regression.py:2336:        assert type(a[0]) is int
numpy/core/tests/test_regression.py:2347:                assert_equal(t.__hash__, None)
numpy/core/tests/test_regression.py:2349:                assert_(t.__hash__ != None)
numpy/core/tests/test_regression.py:2362:            assert_equal(item, item2)
numpy/core/tests/test_regression.py:2369:        assert_equal(x, b'\x00\x00\x00\x00')
numpy/core/tests/test_regression.py:2373:        assert_(np.array([b'a'], 'V1').astype('O') == b'a')
numpy/core/tests/test_regression.py:2374:        assert_(np.array([b'ab'], 'V2').astype('O') == b'ab')
numpy/core/tests/test_regression.py:2375:        assert_(np.array([b'abc'], 'V3').astype('O') == b'abc')
numpy/core/tests/test_regression.py:2376:        assert_(np.array([b'abcd'], 'V4').astype('O') == b'abcd')
numpy/core/tests/test_regression.py:2401:                assert_equal(squeezed, scvalue)
numpy/core/tests/test_regression.py:2402:                assert_equal(type(squeezed), type(scvalue))
numpy/core/tests/test_regression.py:2414:                assert_(base <= sys.getrefcount(s))
numpy/core/tests/test_regression.py:2438:        assert_raises(ValueError, arr.astype, 'c8')
numpy/core/tests/test_regression.py:2444:        assert_equal(res, [-99,   1,   2,   3,  -7,  88,  99])
numpy/core/tests/test_regression.py:2449:        assert_equal(res, [0,   1,   2,   3,  -7,  0])
numpy/core/tests/test_regression.py:2457:            assert_equal(pickle.loads(dumped), arr)
numpy/core/tests/test_regression.py:2485:        assert arr.shape == (1, 0, 0)
numpy/core/tests/test_regression.py:2493:        assert arr.size * arr.itemsize > 2 ** 31
numpy/core/tests/test_regression.py:2495:        assert_equal(c_arr._length_, arr.size)
numpy/core/tests/test_regression.py:2508:        assert descr == [('', '|V8')]  # instead of [(b'', '|V8')]
numpy/core/tests/test_regression.py:2520:        assert b.strides[0] > int32_max * b.dtype.itemsize
numpy/core/tests/test_regression.py:2521:        assert np.dot(b, b) == 2.0
numpy/core/tests/test_regression.py:2531:        assert str(f) == "<ufunc 'cassé (vectorized)'>"
numpy/core/tests/test_regression.py:2561:        assert get_idx(order[0], types) < get_idx(order[1], types), (
numpy/linalg/tests/test_linalg.py:75:        assert_(isinstance(name, str))
numpy/linalg/tests/test_linalg.py:295:        assert_(np.all(xi == x))
numpy/linalg/tests/test_linalg.py:460:        assert_almost_equal(b, dot_generalized(a, x))
numpy/linalg/tests/test_linalg.py:461:        assert_(consistent_subclass(x, b))
numpy/linalg/tests/test_linalg.py:468:        assert_equal(linalg.solve(x, x).dtype, dtype)
numpy/linalg/tests/test_linalg.py:479:        assert_array_equal(result, expected)
numpy/linalg/tests/test_linalg.py:480:        assert_(isinstance(result, ArraySubclass))
numpy/linalg/tests/test_linalg.py:483:        assert_raises(linalg.LinAlgError, linalg.solve, a[:, 0:0, 0:1], b)
numpy/linalg/tests/test_linalg.py:484:        assert_raises(ValueError, linalg.solve, a, b[:, 0:0, :])
numpy/linalg/tests/test_linalg.py:488:        assert_raises(ValueError, linalg.solve, a, b)
numpy/linalg/tests/test_linalg.py:489:        assert_raises(ValueError, linalg.solve, a[0:0], b[0:0])
numpy/linalg/tests/test_linalg.py:495:        assert_array_equal(result, expected)
numpy/linalg/tests/test_linalg.py:496:        assert_(isinstance(result, ArraySubclass))
numpy/linalg/tests/test_linalg.py:499:        assert_raises(ValueError, linalg.solve, a, b)
numpy/linalg/tests/test_linalg.py:500:        assert_raises(ValueError, linalg.solve, a[0:0], b[0:0])
numpy/linalg/tests/test_linalg.py:501:        assert_raises(ValueError, linalg.solve, a[:, 0:0, 0:0], b)
numpy/linalg/tests/test_linalg.py:512:        assert_array_equal(result, expected)
numpy/linalg/tests/test_linalg.py:513:        assert_(isinstance(result, ArraySubclass))
numpy/linalg/tests/test_linalg.py:518:        assert_array_equal(result, expected)
numpy/linalg/tests/test_linalg.py:519:        assert_(isinstance(result, ArraySubclass))
numpy/linalg/tests/test_linalg.py:526:        assert_almost_equal(dot_generalized(a, a_inv),
numpy/linalg/tests/test_linalg.py:528:        assert_(consistent_subclass(a_inv, a))
numpy/linalg/tests/test_linalg.py:535:        assert_equal(linalg.inv(x).dtype, dtype)
numpy/linalg/tests/test_linalg.py:543:        assert_(res.dtype.type is np.float64)
numpy/linalg/tests/test_linalg.py:544:        assert_equal(a.shape, res.shape)
numpy/linalg/tests/test_linalg.py:545:        assert_(isinstance(res, ArraySubclass))
numpy/linalg/tests/test_linalg.py:549:        assert_(res.dtype.type is np.complex64)
numpy/linalg/tests/test_linalg.py:550:        assert_equal(a.shape, res.shape)
numpy/linalg/tests/test_linalg.py:551:        assert_(isinstance(res, ArraySubclass))
numpy/linalg/tests/test_linalg.py:559:        assert_almost_equal(ev, evalues)
numpy/linalg/tests/test_linalg.py:566:        assert_equal(linalg.eigvals(x).dtype, dtype)
numpy/linalg/tests/test_linalg.py:568:        assert_equal(linalg.eigvals(x).dtype, get_complex_dtype(dtype))
numpy/linalg/tests/test_linalg.py:576:        assert_(res.dtype.type is np.float64)
numpy/linalg/tests/test_linalg.py:577:        assert_equal((0, 1), res.shape)
numpy/linalg/tests/test_linalg.py:579:        assert_(isinstance(res, np.ndarray))
numpy/linalg/tests/test_linalg.py:583:        assert_(res.dtype.type is np.complex64)
numpy/linalg/tests/test_linalg.py:584:        assert_equal((0,), res.shape)
numpy/linalg/tests/test_linalg.py:586:        assert_(isinstance(res, np.ndarray))
numpy/linalg/tests/test_linalg.py:593:        assert_allclose(dot_generalized(a, evectors),
numpy/linalg/tests/test_linalg.py:596:        assert_(consistent_subclass(evectors, a))
numpy/linalg/tests/test_linalg.py:604:        assert_equal(w.dtype, dtype)
numpy/linalg/tests/test_linalg.py:605:        assert_equal(v.dtype, dtype)
numpy/linalg/tests/test_linalg.py:609:        assert_equal(w.dtype, get_complex_dtype(dtype))
numpy/linalg/tests/test_linalg.py:610:        assert_equal(v.dtype, get_complex_dtype(dtype))
numpy/linalg/tests/test_linalg.py:618:        assert_(res_v.dtype.type is np.float64)
numpy/linalg/tests/test_linalg.py:619:        assert_(res.dtype.type is np.float64)
numpy/linalg/tests/test_linalg.py:620:        assert_equal(a.shape, res_v.shape)
numpy/linalg/tests/test_linalg.py:621:        assert_equal((0, 1), res.shape)
numpy/linalg/tests/test_linalg.py:623:        assert_(isinstance(a, np.ndarray))
numpy/linalg/tests/test_linalg.py:627:        assert_(res_v.dtype.type is np.complex64)
numpy/linalg/tests/test_linalg.py:628:        assert_(res.dtype.type is np.complex64)
numpy/linalg/tests/test_linalg.py:629:        assert_equal(a.shape, res_v.shape)
numpy/linalg/tests/test_linalg.py:630:        assert_equal((0,), res.shape)
numpy/linalg/tests/test_linalg.py:632:        assert_(isinstance(a, np.ndarray))
numpy/linalg/tests/test_linalg.py:642:        assert_equal(u.dtype, dtype)
numpy/linalg/tests/test_linalg.py:643:        assert_equal(s.dtype, get_real_dtype(dtype))
numpy/linalg/tests/test_linalg.py:644:        assert_equal(vh.dtype, dtype)
numpy/linalg/tests/test_linalg.py:646:        assert_equal(s.dtype, get_real_dtype(dtype))
numpy/linalg/tests/test_linalg.py:653:        assert_allclose(a, dot_generalized(np.asarray(u) * np.asarray(s)[..., None, :],
numpy/linalg/tests/test_linalg.py:656:        assert_(consistent_subclass(u, a))
numpy/linalg/tests/test_linalg.py:657:        assert_(consistent_subclass(vt, a))
numpy/linalg/tests/test_linalg.py:665:        assert_equal(u.shape, (4, 4))
numpy/linalg/tests/test_linalg.py:666:        assert_equal(vh.shape, (0, 0))
numpy/linalg/tests/test_linalg.py:667:        assert_equal(u, np.eye(4))
numpy/linalg/tests/test_linalg.py:671:        assert_equal(u.shape, (0, 0))
numpy/linalg/tests/test_linalg.py:672:        assert_equal(vh.shape, (4, 4))
numpy/linalg/tests/test_linalg.py:673:        assert_equal(vh, np.eye(4))
numpy/linalg/tests/test_linalg.py:680:        assert_allclose(a, dot_generalized(np.asarray(u) * np.asarray(s)[..., None, :],
numpy/linalg/tests/test_linalg.py:688:        assert_almost_equal(np.matmul(u, hermitian(u)), np.broadcast_to(np.eye(u.shape[-1]), u.shape))
numpy/linalg/tests/test_linalg.py:689:        assert_almost_equal(np.matmul(vt, hermitian(vt)), np.broadcast_to(np.eye(vt.shape[-1]), vt.shape))
numpy/linalg/tests/test_linalg.py:690:        assert_equal(np.sort(s)[..., ::-1], s)
numpy/linalg/tests/test_linalg.py:691:        assert_(consistent_subclass(u, a))
numpy/linalg/tests/test_linalg.py:692:        assert_(consistent_subclass(vt, a))
numpy/linalg/tests/test_linalg.py:705:            assert_raises(LinAlgError, linalg.cond, c)
numpy/linalg/tests/test_linalg.py:710:        assert_almost_equal(
numpy/linalg/tests/test_linalg.py:713:        assert_almost_equal(
numpy/linalg/tests/test_linalg.py:716:        assert_almost_equal(
numpy/linalg/tests/test_linalg.py:722:        assert_almost_equal(
numpy/linalg/tests/test_linalg.py:726:        assert_almost_equal(
numpy/linalg/tests/test_linalg.py:730:        assert_almost_equal(
numpy/linalg/tests/test_linalg.py:734:        assert_almost_equal(
numpy/linalg/tests/test_linalg.py:738:        assert_almost_equal(
numpy/linalg/tests/test_linalg.py:749:        assert_almost_equal(linalg.cond(A, inf), 4)
numpy/linalg/tests/test_linalg.py:750:        assert_almost_equal(linalg.cond(A, -inf), 2/3)
numpy/linalg/tests/test_linalg.py:751:        assert_almost_equal(linalg.cond(A, 1), 4)
numpy/linalg/tests/test_linalg.py:752:        assert_almost_equal(linalg.cond(A, -1), 0.5)
numpy/linalg/tests/test_linalg.py:753:        assert_almost_equal(linalg.cond(A, 'fro'), np.sqrt(265 / 12))
numpy/linalg/tests/test_linalg.py:765:            assert_(linalg.cond(A, p) > 1e15)
numpy/linalg/tests/test_linalg.py:781:            assert_(isinstance(c, np.float_))
numpy/linalg/tests/test_linalg.py:782:            assert_(np.isnan(c))
numpy/linalg/tests/test_linalg.py:788:            assert_(np.isnan(c[1]))
numpy/linalg/tests/test_linalg.py:790:                assert_(c[0] > 1e15)
numpy/linalg/tests/test_linalg.py:791:                assert_(c[2] > 1e15)
numpy/linalg/tests/test_linalg.py:793:                assert_(not np.isnan(c[0]))
numpy/linalg/tests/test_linalg.py:794:                assert_(not np.isnan(c[2]))
numpy/linalg/tests/test_linalg.py:806:            assert_equal(c[0,0], np.inf)
numpy/linalg/tests/test_linalg.py:807:            assert_equal(c[1,1], np.inf)
numpy/linalg/tests/test_linalg.py:808:            assert_(np.isfinite(c[0,1]))
numpy/linalg/tests/test_linalg.py:809:            assert_(np.isfinite(c[1,0]))
numpy/linalg/tests/test_linalg.py:821:        assert_almost_equal(dot(dot(a, a_ginv), a), a, single_decimal=5, double_decimal=11)
numpy/linalg/tests/test_linalg.py:822:        assert_(consistent_subclass(a_ginv, a))
numpy/linalg/tests/test_linalg.py:835:        assert_almost_equal(dot(dot(a, a_ginv), a), a, single_decimal=5, double_decimal=11)
numpy/linalg/tests/test_linalg.py:836:        assert_(consistent_subclass(a_ginv, a))
numpy/linalg/tests/test_linalg.py:853:        assert_almost_equal(d, multiply.reduce(ev, axis=-1))
numpy/linalg/tests/test_linalg.py:854:        assert_almost_equal(s * np.exp(ld), multiply.reduce(ev, axis=-1))
numpy/linalg/tests/test_linalg.py:859:        assert_almost_equal(np.abs(s[m]), 1)
numpy/linalg/tests/test_linalg.py:860:        assert_equal(ld[~m], -inf)
numpy/linalg/tests/test_linalg.py:865:        assert_equal(linalg.det([[0.0]]), 0.0)
numpy/linalg/tests/test_linalg.py:866:        assert_equal(type(linalg.det([[0.0]])), double)
numpy/linalg/tests/test_linalg.py:867:        assert_equal(linalg.det([[0.0j]]), 0.0)
numpy/linalg/tests/test_linalg.py:868:        assert_equal(type(linalg.det([[0.0j]])), cdouble)
numpy/linalg/tests/test_linalg.py:870:        assert_equal(linalg.slogdet([[0.0]]), (0.0, -inf))
numpy/linalg/tests/test_linalg.py:871:        assert_equal(type(linalg.slogdet([[0.0]])[0]), double)
numpy/linalg/tests/test_linalg.py:872:        assert_equal(type(linalg.slogdet([[0.0]])[1]), double)
numpy/linalg/tests/test_linalg.py:873:        assert_equal(linalg.slogdet([[0.0j]]), (0.0j, -inf))
numpy/linalg/tests/test_linalg.py:874:        assert_equal(type(linalg.slogdet([[0.0j]])[0]), cdouble)
numpy/linalg/tests/test_linalg.py:875:        assert_equal(type(linalg.slogdet([[0.0j]])[1]), double)
numpy/linalg/tests/test_linalg.py:880:        assert_equal(np.linalg.det(x).dtype, dtype)
numpy/linalg/tests/test_linalg.py:882:        assert_equal(s.dtype, get_real_dtype(dtype))
numpy/linalg/tests/test_linalg.py:883:        assert_equal(ph.dtype, dtype)
numpy/linalg/tests/test_linalg.py:888:        assert_equal(res, 1.)
numpy/linalg/tests/test_linalg.py:889:        assert_(res.dtype.type is np.complex64)
numpy/linalg/tests/test_linalg.py:891:        assert_equal(res, (1, 0))
numpy/linalg/tests/test_linalg.py:892:        assert_(res[0].dtype.type is np.complex64)
numpy/linalg/tests/test_linalg.py:893:        assert_(res[1].dtype.type is np.float32)
numpy/linalg/tests/test_linalg.py:897:        assert_equal(res, 1.)
numpy/linalg/tests/test_linalg.py:898:        assert_(res.dtype.type is np.float64)
numpy/linalg/tests/test_linalg.py:900:        assert_equal(res, (1, 0))
numpy/linalg/tests/test_linalg.py:901:        assert_(res[0].dtype.type is np.float64)
numpy/linalg/tests/test_linalg.py:902:        assert_(res[1].dtype.type is np.float64)
numpy/linalg/tests/test_linalg.py:913:            assert_((x == 0).all())
numpy/linalg/tests/test_linalg.py:915:            assert_almost_equal(b, dot(a, x))
numpy/linalg/tests/test_linalg.py:916:            assert_equal(rank, m)
numpy/linalg/tests/test_linalg.py:918:            assert_equal(rank, n)
numpy/linalg/tests/test_linalg.py:919:        assert_almost_equal(sv, sv.__array_wrap__(s))
numpy/linalg/tests/test_linalg.py:926:                assert_equal(residuals.shape, expect_resids.shape)
numpy/linalg/tests/test_linalg.py:929:        assert_almost_equal(residuals, expect_resids)
numpy/linalg/tests/test_linalg.py:930:        assert_(np.issubdtype(residuals.dtype, np.floating))
numpy/linalg/tests/test_linalg.py:931:        assert_(consistent_subclass(x, b))
numpy/linalg/tests/test_linalg.py:932:        assert_(consistent_subclass(residuals, b))
numpy/linalg/tests/test_linalg.py:946:            assert_(rank == 4)
numpy/linalg/tests/test_linalg.py:948:            assert_(rank == 4)
numpy/linalg/tests/test_linalg.py:950:            assert_(rank == 3)
numpy/linalg/tests/test_linalg.py:952:            assert_(len(w) == 1)
numpy/linalg/tests/test_linalg.py:968:            assert_((x == 0).all())
numpy/linalg/tests/test_linalg.py:969:        assert_equal(x.shape, (n, n_rhs))
numpy/linalg/tests/test_linalg.py:970:        assert_equal(residuals.shape, ((n_rhs,) if m > n else (0,)))
numpy/linalg/tests/test_linalg.py:974:            assert_almost_equal(residuals, (r * r).sum(axis=-2))
numpy/linalg/tests/test_linalg.py:975:        assert_equal(rank, min(m, n))
numpy/linalg/tests/test_linalg.py:976:        assert_equal(s.shape, (min(m, n),))
numpy/linalg/tests/test_linalg.py:1014:            assert_equal(mz, identity_like_generalized(M))
numpy/linalg/tests/test_linalg.py:1015:            assert_equal(mz.dtype, M.dtype)
numpy/linalg/tests/test_linalg.py:1025:            assert_equal(mz, mat)
numpy/linalg/tests/test_linalg.py:1026:            assert_equal(mz.dtype, mat.dtype)
numpy/linalg/tests/test_linalg.py:1037:            assert_equal(mz, mmul(mat, mat))
numpy/linalg/tests/test_linalg.py:1038:            assert_equal(mz.dtype, mat.dtype)
numpy/linalg/tests/test_linalg.py:1049:            assert_almost_equal(
numpy/linalg/tests/test_linalg.py:1058:        assert_raises(TypeError, matrix_power, mat, 1.5)
numpy/linalg/tests/test_linalg.py:1059:        assert_raises(TypeError, matrix_power, mat, [1])
numpy/linalg/tests/test_linalg.py:1062:        assert_raises(LinAlgError, matrix_power, np.array([1], dt), 1)
numpy/linalg/tests/test_linalg.py:1063:        assert_raises(LinAlgError, matrix_power, np.array([[1], [2]], dt), 1)
numpy/linalg/tests/test_linalg.py:1064:        assert_raises(LinAlgError, matrix_power, np.ones((4, 3, 2), dt), 1)
numpy/linalg/tests/test_linalg.py:1070:        assert_raises(LinAlgError, matrix_power, mat, -1)
numpy/linalg/tests/test_linalg.py:1081:        assert_allclose(ev, evalues, rtol=get_rtol(ev.dtype))
numpy/linalg/tests/test_linalg.py:1084:        assert_allclose(ev2, evalues, rtol=get_rtol(ev.dtype))
numpy/linalg/tests/test_linalg.py:1092:        assert_equal(w.dtype, get_real_dtype(dtype))
numpy/linalg/tests/test_linalg.py:1096:        assert_raises(ValueError, np.linalg.eigvalsh, x, UPLO="lrong")
numpy/linalg/tests/test_linalg.py:1097:        assert_raises(ValueError, np.linalg.eigvalsh, x, "lower")
numpy/linalg/tests/test_linalg.py:1098:        assert_raises(ValueError, np.linalg.eigvalsh, x, "upper")
numpy/linalg/tests/test_linalg.py:1108:        assert_allclose(w, tgt, rtol=rtol)
numpy/linalg/tests/test_linalg.py:1111:        assert_allclose(w, tgt, rtol=rtol)
numpy/linalg/tests/test_linalg.py:1114:        assert_allclose(w, tgt, rtol=rtol)
numpy/linalg/tests/test_linalg.py:1117:        assert_allclose(w, tgt, rtol=rtol)
numpy/linalg/tests/test_linalg.py:1120:        assert_allclose(w, tgt, rtol=rtol)
numpy/linalg/tests/test_linalg.py:1128:        assert_(res.dtype.type is np.float64)
numpy/linalg/tests/test_linalg.py:1129:        assert_equal((0, 1), res.shape)
numpy/linalg/tests/test_linalg.py:1131:        assert_(isinstance(res, np.ndarray))
numpy/linalg/tests/test_linalg.py:1135:        assert_(res.dtype.type is np.float32)
numpy/linalg/tests/test_linalg.py:1136:        assert_equal((0,), res.shape)
numpy/linalg/tests/test_linalg.py:1138:        assert_(isinstance(res, np.ndarray))
numpy/linalg/tests/test_linalg.py:1149:        assert_almost_equal(ev, evalues)
numpy/linalg/tests/test_linalg.py:1151:        assert_allclose(dot_generalized(a, evc),
numpy/linalg/tests/test_linalg.py:1156:        assert_almost_equal(ev2, evalues)
numpy/linalg/tests/test_linalg.py:1158:        assert_allclose(dot_generalized(a, evc2),
numpy/linalg/tests/test_linalg.py:1168:        assert_equal(w.dtype, get_real_dtype(dtype))
numpy/linalg/tests/test_linalg.py:1169:        assert_equal(v.dtype, dtype)
numpy/linalg/tests/test_linalg.py:1173:        assert_raises(ValueError, np.linalg.eigh, x, UPLO="lrong")
numpy/linalg/tests/test_linalg.py:1174:        assert_raises(ValueError, np.linalg.eigh, x, "lower")
numpy/linalg/tests/test_linalg.py:1175:        assert_raises(ValueError, np.linalg.eigh, x, "upper")
numpy/linalg/tests/test_linalg.py:1185:        assert_allclose(w, tgt, rtol=rtol)
numpy/linalg/tests/test_linalg.py:1188:        assert_allclose(w, tgt, rtol=rtol)
numpy/linalg/tests/test_linalg.py:1191:        assert_allclose(w, tgt, rtol=rtol)
numpy/linalg/tests/test_linalg.py:1194:        assert_allclose(w, tgt, rtol=rtol)
numpy/linalg/tests/test_linalg.py:1197:        assert_allclose(w, tgt, rtol=rtol)
numpy/linalg/tests/test_linalg.py:1205:        assert_(res_v.dtype.type is np.float64)
numpy/linalg/tests/test_linalg.py:1206:        assert_(res.dtype.type is np.float64)
numpy/linalg/tests/test_linalg.py:1207:        assert_equal(a.shape, res_v.shape)
numpy/linalg/tests/test_linalg.py:1208:        assert_equal((0, 1), res.shape)
numpy/linalg/tests/test_linalg.py:1210:        assert_(isinstance(a, np.ndarray))
numpy/linalg/tests/test_linalg.py:1214:        assert_(res_v.dtype.type is np.complex64)
numpy/linalg/tests/test_linalg.py:1215:        assert_(res.dtype.type is np.float32)
numpy/linalg/tests/test_linalg.py:1216:        assert_equal(a.shape, res_v.shape)
numpy/linalg/tests/test_linalg.py:1217:        assert_equal((0,), res.shape)
numpy/linalg/tests/test_linalg.py:1219:        assert_(isinstance(a, np.ndarray))
numpy/linalg/tests/test_linalg.py:1229:            assert_equal(res.dtype, x.real.dtype)
numpy/linalg/tests/test_linalg.py:1232:            assert_(issubclass(res.dtype.type, np.floating))
numpy/linalg/tests/test_linalg.py:1238:        assert_equal(norm([]), 0.0)
numpy/linalg/tests/test_linalg.py:1239:        assert_equal(norm(array([], dtype=self.dt)), 0.0)
numpy/linalg/tests/test_linalg.py:1240:        assert_equal(norm(atleast_2d(array([], dtype=self.dt))), 0.0)
numpy/linalg/tests/test_linalg.py:1255:            assert_almost_equal(an, 0.0)
numpy/linalg/tests/test_linalg.py:1261:                assert_almost_equal(an, 0.0)
numpy/linalg/tests/test_linalg.py:1265:            assert_almost_equal(an, 2)
numpy/linalg/tests/test_linalg.py:1269:            assert_almost_equal(an, 2.0)
numpy/linalg/tests/test_linalg.py:1273:            assert_almost_equal(an, an.dtype.type(2.0)**an.dtype.type(1.0/2.0))
numpy/linalg/tests/test_linalg.py:1277:            assert_almost_equal(an, an.dtype.type(2.0)**an.dtype.type(1.0/4.0))
numpy/linalg/tests/test_linalg.py:1281:            assert_almost_equal(an, 1.0)
numpy/linalg/tests/test_linalg.py:1320:            assert_almost_equal(norm(A, ord=order, axis=0), expected0)
numpy/linalg/tests/test_linalg.py:1322:            assert_almost_equal(norm(A, ord=order, axis=1), expected1)
numpy/linalg/tests/test_linalg.py:1335:                    assert_raises(ValueError, norm, B, ord=order, axis=axis)
numpy/linalg/tests/test_linalg.py:1348:                    assert_almost_equal(n, expected)
numpy/linalg/tests/test_linalg.py:1359:        assert_allclose(np.squeeze(found), expected,
numpy/linalg/tests/test_linalg.py:1362:        assert_(found.shape == expected_shape,
numpy/linalg/tests/test_linalg.py:1370:                assert_allclose(np.squeeze(found), expected,
numpy/linalg/tests/test_linalg.py:1375:                assert_(found.shape == expected_shape,
numpy/linalg/tests/test_linalg.py:1383:                assert_allclose(np.squeeze(found), expected,
numpy/linalg/tests/test_linalg.py:1389:                assert_(found.shape == expected_shape,
numpy/linalg/tests/test_linalg.py:1399:        assert_equal(norm(self.array([[]], dtype=self.dt)), 0.0)
numpy/linalg/tests/test_linalg.py:1418:            assert_almost_equal(an, 2.0)
numpy/linalg/tests/test_linalg.py:1424:                assert_almost_equal(an, 1.0)
numpy/linalg/tests/test_linalg.py:1428:            assert_almost_equal(an, 2.0)
numpy/linalg/tests/test_linalg.py:1432:            assert_almost_equal(an, 3.0**(1.0/2.0))
numpy/linalg/tests/test_linalg.py:1436:            assert_almost_equal(an, 1.0)
numpy/linalg/tests/test_linalg.py:1440:            assert_almost_equal(an, 2.0)
numpy/linalg/tests/test_linalg.py:1444:            assert_almost_equal(an, 2.0)
numpy/linalg/tests/test_linalg.py:1454:        assert_almost_equal(norm(A), 84 ** 0.5)
numpy/linalg/tests/test_linalg.py:1455:        assert_almost_equal(norm(A, 'fro'), 84 ** 0.5)
numpy/linalg/tests/test_linalg.py:1456:        assert_almost_equal(norm(A, 'nuc'), 10.0)
numpy/linalg/tests/test_linalg.py:1457:        assert_almost_equal(norm(A, inf), 12.0)
numpy/linalg/tests/test_linalg.py:1458:        assert_almost_equal(norm(A, -inf), 4.0)
numpy/linalg/tests/test_linalg.py:1459:        assert_almost_equal(norm(A, 1), 10.0)
numpy/linalg/tests/test_linalg.py:1460:        assert_almost_equal(norm(A, -1), 6.0)
numpy/linalg/tests/test_linalg.py:1461:        assert_almost_equal(norm(A, 2), 9.1231056256176615)
numpy/linalg/tests/test_linalg.py:1462:        assert_almost_equal(norm(A, -2), 0.87689437438234041)
numpy/linalg/tests/test_linalg.py:1464:        assert_raises(ValueError, norm, A, 'nofro')
numpy/linalg/tests/test_linalg.py:1465:        assert_raises(ValueError, norm, A, -3)
numpy/linalg/tests/test_linalg.py:1466:        assert_raises(ValueError, norm, A, 0)
numpy/linalg/tests/test_linalg.py:1475:        assert_almost_equal(norm(A), (1 / 10) * 89 ** 0.5)
numpy/linalg/tests/test_linalg.py:1476:        assert_almost_equal(norm(A, 'fro'), (1 / 10) * 89 ** 0.5)
numpy/linalg/tests/test_linalg.py:1477:        assert_almost_equal(norm(A, 'nuc'), 1.3366836911774836)
numpy/linalg/tests/test_linalg.py:1478:        assert_almost_equal(norm(A, inf), 1.1)
numpy/linalg/tests/test_linalg.py:1479:        assert_almost_equal(norm(A, -inf), 0.6)
numpy/linalg/tests/test_linalg.py:1480:        assert_almost_equal(norm(A, 1), 1.0)
numpy/linalg/tests/test_linalg.py:1481:        assert_almost_equal(norm(A, -1), 0.4)
numpy/linalg/tests/test_linalg.py:1482:        assert_almost_equal(norm(A, 2), 0.88722940323461277)
numpy/linalg/tests/test_linalg.py:1483:        assert_almost_equal(norm(A, -2), 0.19456584790481812)
numpy/linalg/tests/test_linalg.py:1494:        assert_raises(ValueError, norm, A, 'fro', 0)
numpy/linalg/tests/test_linalg.py:1495:        assert_raises(ValueError, norm, A, 'nuc', 0)
numpy/linalg/tests/test_linalg.py:1496:        assert_raises(ValueError, norm, [3, 4], 'fro', None)
numpy/linalg/tests/test_linalg.py:1497:        assert_raises(ValueError, norm, [3, 4], 'nuc', None)
numpy/linalg/tests/test_linalg.py:1498:        assert_raises(ValueError, norm, [3, 4], 'test', None)
numpy/linalg/tests/test_linalg.py:1503:            assert_raises(ValueError, norm, A, order, None)
numpy/linalg/tests/test_linalg.py:1504:            assert_raises(ValueError, norm, A, order, (0, 1))
numpy/linalg/tests/test_linalg.py:1505:            assert_raises(ValueError, norm, B, order, (1, 2))
numpy/linalg/tests/test_linalg.py:1508:        assert_raises(np.AxisError, norm, B, None, 3)
numpy/linalg/tests/test_linalg.py:1509:        assert_raises(np.AxisError, norm, B, None, (2, 3))
numpy/linalg/tests/test_linalg.py:1510:        assert_raises(ValueError, norm, B, None, (0, 1, 2))
numpy/linalg/tests/test_linalg.py:1576:        assert_equal(4, matrix_rank(np.eye(4)))
numpy/linalg/tests/test_linalg.py:1580:        assert_equal(matrix_rank(I), 3)
numpy/linalg/tests/test_linalg.py:1582:        assert_equal(matrix_rank(np.zeros((4, 4))), 0)
numpy/linalg/tests/test_linalg.py:1584:        assert_equal(matrix_rank([1, 0, 0, 0]), 1)
numpy/linalg/tests/test_linalg.py:1585:        assert_equal(matrix_rank(np.zeros((4,))), 0)
numpy/linalg/tests/test_linalg.py:1587:        assert_equal(matrix_rank([1]), 1)
numpy/linalg/tests/test_linalg.py:1590:        assert_equal(matrix_rank(ms), np.array([3, 4, 0]))
numpy/linalg/tests/test_linalg.py:1592:        assert_equal(matrix_rank(1), 1)
numpy/linalg/tests/test_linalg.py:1595:        assert_equal(4, matrix_rank(np.eye(4), hermitian=True))
numpy/linalg/tests/test_linalg.py:1596:        assert_equal(1, matrix_rank(np.ones((4, 4)), hermitian=True))
numpy/linalg/tests/test_linalg.py:1597:        assert_equal(0, matrix_rank(np.zeros((4, 4)), hermitian=True))
numpy/linalg/tests/test_linalg.py:1601:        assert_equal(3, matrix_rank(I, hermitian=True))
numpy/linalg/tests/test_linalg.py:1604:        assert_equal(4, matrix_rank(I, hermitian=True, tol=0.99e-8))
numpy/linalg/tests/test_linalg.py:1605:        assert_equal(3, matrix_rank(I, hermitian=True, tol=1.01e-8))
numpy/linalg/tests/test_linalg.py:1616:        assert_equal(matrix_rank(X), 9)
numpy/linalg/tests/test_linalg.py:1618:        assert_equal(matrix_rank(X), 8)
numpy/linalg/tests/test_linalg.py:1635:        assert_(q.dtype == a_dtype)
numpy/linalg/tests/test_linalg.py:1636:        assert_(r.dtype == a_dtype)
numpy/linalg/tests/test_linalg.py:1637:        assert_(isinstance(q, a_type))
numpy/linalg/tests/test_linalg.py:1638:        assert_(isinstance(r, a_type))
numpy/linalg/tests/test_linalg.py:1639:        assert_(q.shape == (m, m))
numpy/linalg/tests/test_linalg.py:1640:        assert_(r.shape == (m, n))
numpy/linalg/tests/test_linalg.py:1641:        assert_almost_equal(dot(q, r), a)
numpy/linalg/tests/test_linalg.py:1642:        assert_almost_equal(dot(q.T.conj(), q), np.eye(m))
numpy/linalg/tests/test_linalg.py:1643:        assert_almost_equal(np.triu(r), r)
numpy/linalg/tests/test_linalg.py:1647:        assert_(q1.dtype == a_dtype)
numpy/linalg/tests/test_linalg.py:1648:        assert_(r1.dtype == a_dtype)
numpy/linalg/tests/test_linalg.py:1649:        assert_(isinstance(q1, a_type))
numpy/linalg/tests/test_linalg.py:1650:        assert_(isinstance(r1, a_type))
numpy/linalg/tests/test_linalg.py:1651:        assert_(q1.shape == (m, k))
numpy/linalg/tests/test_linalg.py:1652:        assert_(r1.shape == (k, n))
numpy/linalg/tests/test_linalg.py:1653:        assert_almost_equal(dot(q1, r1), a)
numpy/linalg/tests/test_linalg.py:1654:        assert_almost_equal(dot(q1.T.conj(), q1), np.eye(k))
numpy/linalg/tests/test_linalg.py:1655:        assert_almost_equal(np.triu(r1), r1)
numpy/linalg/tests/test_linalg.py:1659:        assert_(r2.dtype == a_dtype)
numpy/linalg/tests/test_linalg.py:1660:        assert_(isinstance(r2, a_type))
numpy/linalg/tests/test_linalg.py:1661:        assert_almost_equal(r2, r1)
numpy/linalg/tests/test_linalg.py:1676:        assert_equal(h.dtype, np.double)
numpy/linalg/tests/test_linalg.py:1677:        assert_equal(tau.dtype, np.double)
numpy/linalg/tests/test_linalg.py:1678:        assert_equal(h.shape, (n, m))
numpy/linalg/tests/test_linalg.py:1679:        assert_equal(tau.shape, (k,))
numpy/linalg/tests/test_linalg.py:1692:        assert_(h.dtype == np.double)
numpy/linalg/tests/test_linalg.py:1693:        assert_(tau.dtype == np.double)
numpy/linalg/tests/test_linalg.py:1694:        assert_(h.shape == (2, 3))
numpy/linalg/tests/test_linalg.py:1695:        assert_(tau.shape == (2,))
numpy/linalg/tests/test_linalg.py:1698:        assert_(h.dtype == np.double)
numpy/linalg/tests/test_linalg.py:1699:        assert_(tau.dtype == np.double)
numpy/linalg/tests/test_linalg.py:1700:        assert_(h.shape == (3, 2))
numpy/linalg/tests/test_linalg.py:1701:        assert_(tau.shape == (2,))
numpy/linalg/tests/test_linalg.py:1730:        assert_(q.dtype == a_dtype)
numpy/linalg/tests/test_linalg.py:1731:        assert_(r.dtype == a_dtype)
numpy/linalg/tests/test_linalg.py:1732:        assert_(isinstance(q, a_type))
numpy/linalg/tests/test_linalg.py:1733:        assert_(isinstance(r, a_type))
numpy/linalg/tests/test_linalg.py:1734:        assert_(q.shape[-2:] == (m, m))
numpy/linalg/tests/test_linalg.py:1735:        assert_(r.shape[-2:] == (m, n))
numpy/linalg/tests/test_linalg.py:1736:        assert_almost_equal(matmul(q, r), a)
numpy/linalg/tests/test_linalg.py:1740:        assert_almost_equal(matmul(swapaxes(q, -1, -2).conj(), q), stack_I_mat)
numpy/linalg/tests/test_linalg.py:1741:        assert_almost_equal(np.triu(r[..., :, :]), r)
numpy/linalg/tests/test_linalg.py:1745:        assert_(q1.dtype == a_dtype)
numpy/linalg/tests/test_linalg.py:1746:        assert_(r1.dtype == a_dtype)
numpy/linalg/tests/test_linalg.py:1747:        assert_(isinstance(q1, a_type))
numpy/linalg/tests/test_linalg.py:1748:        assert_(isinstance(r1, a_type))
numpy/linalg/tests/test_linalg.py:1749:        assert_(q1.shape[-2:] == (m, k))
numpy/linalg/tests/test_linalg.py:1750:        assert_(r1.shape[-2:] == (k, n))
numpy/linalg/tests/test_linalg.py:1751:        assert_almost_equal(matmul(q1, r1), a)
numpy/linalg/tests/test_linalg.py:1755:        assert_almost_equal(matmul(swapaxes(q1, -1, -2).conj(), q1), 
numpy/linalg/tests/test_linalg.py:1757:        assert_almost_equal(np.triu(r1[..., :, :]), r1)
numpy/linalg/tests/test_linalg.py:1761:        assert_(r2.dtype == a_dtype)
numpy/linalg/tests/test_linalg.py:1762:        assert_(isinstance(r2, a_type))
numpy/linalg/tests/test_linalg.py:1763:        assert_almost_equal(r2, r1)
numpy/linalg/tests/test_linalg.py:1815:        assert_equal(a.shape, res.shape)
numpy/linalg/tests/test_linalg.py:1816:        assert_(res.dtype.type is np.float64)
numpy/linalg/tests/test_linalg.py:1818:        assert_(isinstance(res, np.ndarray))
numpy/linalg/tests/test_linalg.py:1822:        assert_equal(a.shape, res.shape)
numpy/linalg/tests/test_linalg.py:1823:        assert_(res.dtype.type is np.complex64)
numpy/linalg/tests/test_linalg.py:1824:        assert_(isinstance(res, np.ndarray))
numpy/linalg/tests/test_linalg.py:1838:        assert_equal(arr.dtype.byteorder, '=')
numpy/linalg/tests/test_linalg.py:1843:            assert_array_equal(res, routine(n_arr))
numpy/linalg/tests/test_linalg.py:1845:            assert_array_equal(res, routine(sw_arr))
numpy/linalg/tests/test_linalg.py:1859:    assert_raises(np.linalg.LinAlgError, np.linalg.inv, x)
numpy/linalg/tests/test_linalg.py:1955:        assert_almost_equal(multi_dot([A, B, C]), A.dot(B).dot(C))
numpy/linalg/tests/test_linalg.py:1956:        assert_almost_equal(multi_dot([A, B, C]), np.dot(A, np.dot(B, C)))
numpy/linalg/tests/test_linalg.py:1963:        assert_almost_equal(multi_dot([A, B]), A.dot(B))
numpy/linalg/tests/test_linalg.py:1964:        assert_almost_equal(multi_dot([A, B]), np.dot(A, B))
numpy/linalg/tests/test_linalg.py:1973:        assert_almost_equal(multi_dot([A, B, C, D]), A.dot(B).dot(C).dot(D))
numpy/linalg/tests/test_linalg.py:1983:        assert_equal(multi_dot([A1d, B, C, D]).shape, (2,))
numpy/linalg/tests/test_linalg.py:1993:        assert_equal(multi_dot([A, B, C, D1d]).shape, (6,))
numpy/linalg/tests/test_linalg.py:2003:        assert_equal(multi_dot([A1d, B, C, D1d]).shape, ())
numpy/linalg/tests/test_linalg.py:2014:        assert out is ret
numpy/linalg/tests/test_linalg.py:2015:        assert_almost_equal(out, A.dot(B).dot(C))
numpy/linalg/tests/test_linalg.py:2016:        assert_almost_equal(out, np.dot(A, np.dot(B, C)))
numpy/linalg/tests/test_linalg.py:2024:        assert out is ret
numpy/linalg/tests/test_linalg.py:2025:        assert_almost_equal(out, A.dot(B))
numpy/linalg/tests/test_linalg.py:2026:        assert_almost_equal(out, np.dot(A, B))
numpy/linalg/tests/test_linalg.py:2037:        assert out is ret
numpy/linalg/tests/test_linalg.py:2038:        assert_almost_equal(out, A.dot(B).dot(C).dot(D))
numpy/linalg/tests/test_linalg.py:2066:        assert_almost_equal(np.triu(s[:-1, 1:]),
numpy/linalg/tests/test_linalg.py:2068:        assert_almost_equal(np.triu(m), np.triu(m_expected))
numpy/linalg/tests/test_linalg.py:2071:        assert_raises(ValueError, multi_dot, [])
numpy/linalg/tests/test_linalg.py:2072:        assert_raises(ValueError, multi_dot, [np.random.random((3, 3))])
numpy/linalg/tests/test_linalg.py:2096:        assert_equal(actual, expected)
numpy/linalg/tests/test_linalg.py:2113:        assert_allclose(np.tensordot(ainv, b, 1), np.linalg.tensorsolve(a, b))
numpy/linalg/tests/test_linalg.py:2134:        assert_allclose(np.tensordot(a, x, axes=len(x.shape)), b)
numpy/linalg/tests/test_linalg.py:2155:    assert_equal(c[0,-1], 1)
numpy/linalg/tests/test_linalg.py:2177:    assert_equal(results['info'], 0)
numpy/linalg/tests/test_linalg.py:2178:    assert_equal(results['m'], m)
numpy/linalg/tests/test_linalg.py:2179:    assert_equal(results['n'], m)
numpy/linalg/tests/test_linalg.py:2183:    assert_(2**32 < lwork < 2**42)
numpy/linalg/tests/test_deprecations.py:17:    assert_warns(DeprecationWarning, np.linalg.qr, a, mode='full')
numpy/linalg/tests/test_deprecations.py:18:    assert_warns(DeprecationWarning, np.linalg.qr, a, mode='f')
numpy/linalg/tests/test_deprecations.py:19:    assert_warns(DeprecationWarning, np.linalg.qr, a, mode='economic')
numpy/linalg/tests/test_deprecations.py:20:    assert_warns(DeprecationWarning, np.linalg.qr, a, mode='e')
numpy/linalg/tests/test_regression.py:36:        assert_array_almost_equal(va, rva)
numpy/linalg/tests/test_regression.py:47:        assert_array_almost_equal(vals, rvals)
numpy/linalg/tests/test_regression.py:57:        assert_array_almost_equal(b, np.zeros((2, 2)))
numpy/linalg/tests/test_regression.py:62:        assert_raises(ValueError, linalg.norm, array([1., 2., 3.]), 'fro')
numpy/linalg/tests/test_regression.py:72:        assert_array_equal(ap, bp)
numpy/linalg/tests/test_regression.py:86:                assert_equal(c, 1)
numpy/linalg/tests/test_regression.py:87:                assert_equal(np.linalg.matrix_rank(a), 1)
numpy/linalg/tests/test_regression.py:88:                assert_array_less(1, np.linalg.norm(a, ord=2))
numpy/linalg/tests/test_regression.py:95:        assert_array_equal(norm, [0, 1])
numpy/linalg/tests/test_regression.py:96:        assert_(norm.dtype == np.dtype('float64'))
numpy/linalg/tests/test_regression.py:99:        assert_array_equal(norm, [0, 1])
numpy/linalg/tests/test_regression.py:100:        assert_(norm.dtype != np.dtype('float64'))
numpy/linalg/tests/test_regression.py:103:        assert_array_equal(norm, [0, 1])
numpy/linalg/tests/test_regression.py:104:        assert_(norm.dtype == np.dtype('float64'))
numpy/linalg/tests/test_regression.py:106:        assert_raises(ValueError, linalg.norm, testvector, ord='fro')
numpy/linalg/tests/test_regression.py:107:        assert_raises(ValueError, linalg.norm, testvector, ord='nuc')
numpy/linalg/tests/test_regression.py:108:        assert_raises(ValueError, linalg.norm, testvector, ord=np.inf)
numpy/linalg/tests/test_regression.py:109:        assert_raises(ValueError, linalg.norm, testvector, ord=-np.inf)
numpy/linalg/tests/test_regression.py:112:            assert_raises((AttributeError, DeprecationWarning),
numpy/linalg/tests/test_regression.py:114:        assert_raises(ValueError, linalg.norm, testvector, ord=-1)
numpy/linalg/tests/test_regression.py:115:        assert_raises(ValueError, linalg.norm, testvector, ord=-2)
numpy/linalg/tests/test_regression.py:121:        assert_array_equal(norm, [0, 1])
numpy/linalg/tests/test_regression.py:122:        assert_(norm.dtype == np.dtype('float64'))
numpy/linalg/tests/test_regression.py:125:        assert_array_equal(norm, [0, 1])
numpy/linalg/tests/test_regression.py:126:        assert_(norm.dtype == np.dtype('float64'))
numpy/linalg/tests/test_regression.py:128:        assert_raises(TypeError, linalg.norm, testmatrix, ord='nuc')
numpy/linalg/tests/test_regression.py:129:        assert_raises(ValueError, linalg.norm, testmatrix, ord=np.inf)
numpy/linalg/tests/test_regression.py:130:        assert_raises(ValueError, linalg.norm, testmatrix, ord=-np.inf)
numpy/linalg/tests/test_regression.py:131:        assert_raises(ValueError, linalg.norm, testmatrix, ord=0)
numpy/linalg/tests/test_regression.py:132:        assert_raises(ValueError, linalg.norm, testmatrix, ord=1)
numpy/linalg/tests/test_regression.py:133:        assert_raises(ValueError, linalg.norm, testmatrix, ord=-1)
numpy/linalg/tests/test_regression.py:134:        assert_raises(TypeError, linalg.norm, testmatrix, ord=2)
numpy/linalg/tests/test_regression.py:135:        assert_raises(TypeError, linalg.norm, testmatrix, ord=-2)
numpy/linalg/tests/test_regression.py:136:        assert_raises(ValueError, linalg.norm, testmatrix, ord=3)
numpy/linalg/tests/test_regression.py:148:        assert_array_almost_equal(u_lstsq, u)
numpy/ma/testutils.py:87:    assert_equal(len(actual), len(desired), err_msg)
numpy/ma/testutils.py:89:        assert_equal(actual[k], desired[k], f'item={k!r}\n{err_msg}')
numpy/ma/testutils.py:100:    assert_equal(a.dtype, b.dtype)
numpy/ma/testutils.py:104:            assert_equal(operator.getitem(a, f), operator.getitem(b, f))
numpy/ma/testutils.py:117:        assert_equal(len(actual), len(desired), err_msg)
numpy/ma/testutils.py:121:            assert_equal(actual[k], desired[k], f'key={k!r}\n{err_msg}')
numpy/ma/testutils.py:225:    assert_array_compare(operator.__eq__, x, y,
numpy/ma/testutils.py:237:    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,
numpy/ma/testutils.py:251:    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,
numpy/ma/testutils.py:265:    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,
numpy/ma/testutils.py:274:    assert_array_compare(operator.__lt__, x, y,
numpy/ma/testutils.py:285:        assert_(m2 is nomask)
numpy/ma/testutils.py:287:        assert_(m1 is nomask)
numpy/ma/testutils.py:288:    assert_array_equal(m1, m2, err_msg=err_msg)
numpy/ma/tests/test_old_ma.py:54:        assert_(not isMaskedArray(x))
numpy/ma/tests/test_old_ma.py:55:        assert_(isMaskedArray(xm))
numpy/ma/tests/test_old_ma.py:56:        assert_equal(shape(xm), s)
numpy/ma/tests/test_old_ma.py:57:        assert_equal(xm.shape, s)
numpy/ma/tests/test_old_ma.py:58:        assert_equal(xm.dtype, x.dtype)
numpy/ma/tests/test_old_ma.py:59:        assert_equal(xm.size, reduce(lambda x, y:x * y, s))
numpy/ma/tests/test_old_ma.py:60:        assert_equal(count(xm), len(m1) - reduce(lambda x, y:x + y, m1))
numpy/ma/tests/test_old_ma.py:61:        assert_(eq(xm, xf))
numpy/ma/tests/test_old_ma.py:62:        assert_(eq(filled(xm, 1.e20), xf))
numpy/ma/tests/test_old_ma.py:63:        assert_(eq(x, xm))
numpy/ma/tests/test_old_ma.py:75:            assert_(not isMaskedArray(x))
numpy/ma/tests/test_old_ma.py:76:            assert_(isMaskedArray(xm))
numpy/ma/tests/test_old_ma.py:77:            assert_equal(shape(xm), s)
numpy/ma/tests/test_old_ma.py:78:            assert_equal(xm.shape, s)
numpy/ma/tests/test_old_ma.py:79:            assert_equal(xm.size, reduce(lambda x, y:x * y, s))
numpy/ma/tests/test_old_ma.py:80:            assert_equal(count(xm),
numpy/ma/tests/test_old_ma.py:82:            assert_(eq(xm, xf))
numpy/ma/tests/test_old_ma.py:83:            assert_(eq(filled(xm, 1.e20), xf))
numpy/ma/tests/test_old_ma.py:84:            assert_(eq(x, xm))
numpy/ma/tests/test_old_ma.py:92:        assert_(eq(a2d * a2d, a2d * a2dm))
numpy/ma/tests/test_old_ma.py:93:        assert_(eq(a2d + a2d, a2d + a2dm))
numpy/ma/tests/test_old_ma.py:94:        assert_(eq(a2d - a2d, a2d - a2dm))
numpy/ma/tests/test_old_ma.py:101:            assert_(eq(-x, -xm))
numpy/ma/tests/test_old_ma.py:102:            assert_(eq(x + y, xm + ym))
numpy/ma/tests/test_old_ma.py:103:            assert_(eq(x - y, xm - ym))
numpy/ma/tests/test_old_ma.py:104:            assert_(eq(x * y, xm * ym))
numpy/ma/tests/test_old_ma.py:106:                assert_(eq(x / y, xm / ym))
numpy/ma/tests/test_old_ma.py:107:            assert_(eq(a10 + y, a10 + ym))
numpy/ma/tests/test_old_ma.py:108:            assert_(eq(a10 - y, a10 - ym))
numpy/ma/tests/test_old_ma.py:109:            assert_(eq(a10 * y, a10 * ym))
numpy/ma/tests/test_old_ma.py:111:                assert_(eq(a10 / y, a10 / ym))
numpy/ma/tests/test_old_ma.py:112:            assert_(eq(x + a10, xm + a10))
numpy/ma/tests/test_old_ma.py:113:            assert_(eq(x - a10, xm - a10))
numpy/ma/tests/test_old_ma.py:114:            assert_(eq(x * a10, xm * a10))
numpy/ma/tests/test_old_ma.py:115:            assert_(eq(x / a10, xm / a10))
numpy/ma/tests/test_old_ma.py:116:            assert_(eq(x ** 2, xm ** 2))
numpy/ma/tests/test_old_ma.py:117:            assert_(eq(abs(x) ** 2.5, abs(xm) ** 2.5))
numpy/ma/tests/test_old_ma.py:118:            assert_(eq(x ** y, xm ** ym))
numpy/ma/tests/test_old_ma.py:119:            assert_(eq(np.add(x, y), add(xm, ym)))
numpy/ma/tests/test_old_ma.py:120:            assert_(eq(np.subtract(x, y), subtract(xm, ym)))
numpy/ma/tests/test_old_ma.py:121:            assert_(eq(np.multiply(x, y), multiply(xm, ym)))
numpy/ma/tests/test_old_ma.py:123:                assert_(eq(np.divide(x, y), divide(xm, ym)))
numpy/ma/tests/test_old_ma.py:128:        assert_(isinstance(na + ma, MaskedArray))
numpy/ma/tests/test_old_ma.py:129:        assert_(isinstance(ma + na, MaskedArray))
numpy/ma/tests/test_old_ma.py:134:        assert_(eq(np.cos(x), cos(xm)))
numpy/ma/tests/test_old_ma.py:135:        assert_(eq(np.cosh(x), cosh(xm)))
numpy/ma/tests/test_old_ma.py:136:        assert_(eq(np.sin(x), sin(xm)))
numpy/ma/tests/test_old_ma.py:137:        assert_(eq(np.sinh(x), sinh(xm)))
numpy/ma/tests/test_old_ma.py:138:        assert_(eq(np.tan(x), tan(xm)))
numpy/ma/tests/test_old_ma.py:139:        assert_(eq(np.tanh(x), tanh(xm)))
numpy/ma/tests/test_old_ma.py:141:            assert_(eq(np.sqrt(abs(x)), sqrt(xm)))
numpy/ma/tests/test_old_ma.py:142:            assert_(eq(np.log(abs(x)), log(xm)))
numpy/ma/tests/test_old_ma.py:143:            assert_(eq(np.log10(abs(x)), log10(xm)))
numpy/ma/tests/test_old_ma.py:144:        assert_(eq(np.exp(x), exp(xm)))
numpy/ma/tests/test_old_ma.py:145:        assert_(eq(np.arcsin(z), arcsin(zm)))
numpy/ma/tests/test_old_ma.py:146:        assert_(eq(np.arccos(z), arccos(zm)))
numpy/ma/tests/test_old_ma.py:147:        assert_(eq(np.arctan(z), arctan(zm)))
numpy/ma/tests/test_old_ma.py:148:        assert_(eq(np.arctan2(x, y), arctan2(xm, ym)))
numpy/ma/tests/test_old_ma.py:149:        assert_(eq(np.absolute(x), absolute(xm)))
numpy/ma/tests/test_old_ma.py:150:        assert_(eq(np.equal(x, y), equal(xm, ym)))
numpy/ma/tests/test_old_ma.py:151:        assert_(eq(np.not_equal(x, y), not_equal(xm, ym)))
numpy/ma/tests/test_old_ma.py:152:        assert_(eq(np.less(x, y), less(xm, ym)))
numpy/ma/tests/test_old_ma.py:153:        assert_(eq(np.greater(x, y), greater(xm, ym)))
numpy/ma/tests/test_old_ma.py:154:        assert_(eq(np.less_equal(x, y), less_equal(xm, ym)))
numpy/ma/tests/test_old_ma.py:155:        assert_(eq(np.greater_equal(x, y), greater_equal(xm, ym)))
numpy/ma/tests/test_old_ma.py:156:        assert_(eq(np.conjugate(x), conjugate(xm)))
numpy/ma/tests/test_old_ma.py:157:        assert_(eq(np.concatenate((x, y)), concatenate((xm, ym))))
numpy/ma/tests/test_old_ma.py:158:        assert_(eq(np.concatenate((x, y)), concatenate((x, y))))
numpy/ma/tests/test_old_ma.py:159:        assert_(eq(np.concatenate((x, y)), concatenate((xm, y))))
numpy/ma/tests/test_old_ma.py:160:        assert_(eq(np.concatenate((x, y, x)), concatenate((x, ym, x))))
numpy/ma/tests/test_old_ma.py:165:        assert_(count(ott).dtype.type is np.intp)
numpy/ma/tests/test_old_ma.py:166:        assert_equal(3, count(ott))
numpy/ma/tests/test_old_ma.py:167:        assert_equal(1, count(1))
numpy/ma/tests/test_old_ma.py:168:        assert_(eq(0, array(1, mask=[1])))
numpy/ma/tests/test_old_ma.py:170:        assert_(count(ott).dtype.type is np.intp)
numpy/ma/tests/test_old_ma.py:171:        assert_(isinstance(count(ott, 0), np.ndarray))
numpy/ma/tests/test_old_ma.py:172:        assert_(count(ott).dtype.type is np.intp)
numpy/ma/tests/test_old_ma.py:173:        assert_(eq(3, count(ott)))
numpy/ma/tests/test_old_ma.py:174:        assert_(getmask(count(ott, 0)) is nomask)
numpy/ma/tests/test_old_ma.py:175:        assert_(eq([1, 2], count(ott, 0)))
numpy/ma/tests/test_old_ma.py:184:        assert_(eq(max(xr), maximum.reduce(xmr)))
numpy/ma/tests/test_old_ma.py:185:        assert_(eq(min(xr), minimum.reduce(xmr)))
numpy/ma/tests/test_old_ma.py:190:        assert_(eq(np.add.reduce(x), add.reduce(x)))
numpy/ma/tests/test_old_ma.py:191:        assert_(eq(np.add.accumulate(x), add.accumulate(x)))
numpy/ma/tests/test_old_ma.py:192:        assert_(eq(4, sum(array(4), axis=0)))
numpy/ma/tests/test_old_ma.py:193:        assert_(eq(4, sum(array(4), axis=0)))
numpy/ma/tests/test_old_ma.py:194:        assert_(eq(np.sum(x, axis=0), sum(x, axis=0)))
numpy/ma/tests/test_old_ma.py:195:        assert_(eq(np.sum(filled(xm, 0), axis=0), sum(xm, axis=0)))
numpy/ma/tests/test_old_ma.py:196:        assert_(eq(np.sum(x, 0), sum(x, 0)))
numpy/ma/tests/test_old_ma.py:197:        assert_(eq(np.product(x, axis=0), product(x, axis=0)))
numpy/ma/tests/test_old_ma.py:198:        assert_(eq(np.product(x, 0), product(x, 0)))
numpy/ma/tests/test_old_ma.py:199:        assert_(eq(np.product(filled(xm, 1), axis=0),
numpy/ma/tests/test_old_ma.py:202:            assert_(eq(np.concatenate((x, y), 1),
numpy/ma/tests/test_old_ma.py:204:            assert_(eq(np.add.reduce(x, 1), add.reduce(x, 1)))
numpy/ma/tests/test_old_ma.py:205:            assert_(eq(np.sum(x, 1), sum(x, 1)))
numpy/ma/tests/test_old_ma.py:206:            assert_(eq(np.product(x, 1), product(x, 1)))
numpy/ma/tests/test_old_ma.py:217:        assert_(eq(np.sort(x1), sort(x2, fill_value=0)))
numpy/ma/tests/test_old_ma.py:219:        assert_(type(x2[1]) is type(x1[1]))
numpy/ma/tests/test_old_ma.py:220:        assert_(x1[1] == x2[1])
numpy/ma/tests/test_old_ma.py:221:        assert_(x2[0] is masked)
numpy/ma/tests/test_old_ma.py:222:        assert_(eq(x1[2], x2[2]))
numpy/ma/tests/test_old_ma.py:223:        assert_(eq(x1[2:5], x2[2:5]))
numpy/ma/tests/test_old_ma.py:224:        assert_(eq(x1[:], x2[:]))
numpy/ma/tests/test_old_ma.py:225:        assert_(eq(x1[1:], x3[1:]))
numpy/ma/tests/test_old_ma.py:228:        assert_(eq(x1, x2))
numpy/ma/tests/test_old_ma.py:231:        assert_(eq(x1, x2))
numpy/ma/tests/test_old_ma.py:233:        assert_(eq(x1, x2))
numpy/ma/tests/test_old_ma.py:235:        assert_(eq(x1, x2))
numpy/ma/tests/test_old_ma.py:238:        assert_(allequal(getmask(x2), array([0, 1, 0, 0])))
numpy/ma/tests/test_old_ma.py:240:        assert_(allequal(getmask(x3), array([0, 1, 1, 0])))
numpy/ma/tests/test_old_ma.py:242:        assert_(allequal(getmask(x4), array([0, 1, 1, 0])))
numpy/ma/tests/test_old_ma.py:243:        assert_(allequal(x4, array([1, 2, 3, 4])))
numpy/ma/tests/test_old_ma.py:246:        assert_(eq(x1, x2))
numpy/ma/tests/test_old_ma.py:247:        assert_(allequal(array([0, 0, 0, 1, 0], MaskType), x2.mask))
numpy/ma/tests/test_old_ma.py:248:        assert_(eq(3.0, x2.fill_value))
numpy/ma/tests/test_old_ma.py:253:        assert_equal(type(s2), str)
numpy/ma/tests/test_old_ma.py:254:        assert_equal(type(s1), str)
numpy/ma/tests/test_old_ma.py:255:        assert_equal(s1, s2)
numpy/ma/tests/test_old_ma.py:256:        assert_(x1[1:1].shape == (0,))
numpy/ma/tests/test_old_ma.py:263:        assert_(m is m2)
numpy/ma/tests/test_old_ma.py:265:        assert_(m is not m3)
numpy/ma/tests/test_old_ma.py:269:        assert_(y1._data is not x1)
numpy/ma/tests/test_old_ma.py:270:        assert_(allequal(x1, y1._data))
numpy/ma/tests/test_old_ma.py:271:        assert_(y1._mask is m)
numpy/ma/tests/test_old_ma.py:277:        assert_(y1a._mask.__array_interface__ ==
numpy/ma/tests/test_old_ma.py:281:        assert_(y2._mask is m3)
numpy/ma/tests/test_old_ma.py:282:        assert_(y2[2] is masked)
numpy/ma/tests/test_old_ma.py:284:        assert_(y2[2] is not masked)
numpy/ma/tests/test_old_ma.py:285:        assert_(y2._mask is m3)
numpy/ma/tests/test_old_ma.py:286:        assert_(allequal(y2.mask, 0))
numpy/ma/tests/test_old_ma.py:289:        assert_(y2a._mask is not m)
numpy/ma/tests/test_old_ma.py:290:        assert_(y2a[2] is masked)
numpy/ma/tests/test_old_ma.py:292:        assert_(y2a[2] is not masked)
numpy/ma/tests/test_old_ma.py:293:        assert_(y2a._mask is not m)
numpy/ma/tests/test_old_ma.py:294:        assert_(allequal(y2a.mask, 0))
numpy/ma/tests/test_old_ma.py:297:        assert_(filled(y3).dtype is (x1 * 1.0).dtype)
numpy/ma/tests/test_old_ma.py:302:        assert_(eq(concatenate([x4, x4]), y4))
numpy/ma/tests/test_old_ma.py:303:        assert_(eq(getmask(y4), [0, 0, 1, 0, 0, 0, 1, 0]))
numpy/ma/tests/test_old_ma.py:305:        assert_(eq(y5, [0, 0, 1, 1, 2, 2, 3, 3]))
numpy/ma/tests/test_old_ma.py:307:        assert_(eq(y5, y6))
numpy/ma/tests/test_old_ma.py:316:        assert_(x[3] is masked)
numpy/ma/tests/test_old_ma.py:317:        assert_(x[4] is masked)
numpy/ma/tests/test_old_ma.py:319:        assert_(x._mask is m)
numpy/ma/tests/test_old_ma.py:320:        assert_(x[3] is masked)
numpy/ma/tests/test_old_ma.py:321:        assert_(x[4] is not masked)
numpy/ma/tests/test_old_ma.py:322:        assert_(eq(x, [0, 10, 2, -1, 40]))
numpy/ma/tests/test_old_ma.py:326:        assert_(x._mask is not m2)
numpy/ma/tests/test_old_ma.py:327:        assert_(x[3] is masked)
numpy/ma/tests/test_old_ma.py:328:        assert_(x[4] is masked)
numpy/ma/tests/test_old_ma.py:329:        assert_(eq(x, [-1, 100, 200, 0, 0]))
numpy/ma/tests/test_old_ma.py:336:        assert_(x[2] is not masked)
numpy/ma/tests/test_old_ma.py:337:        assert_(x[3] is not masked)
numpy/ma/tests/test_old_ma.py:339:        assert_(x[2] is masked)
numpy/ma/tests/test_old_ma.py:340:        assert_(x[3] is not masked)
numpy/ma/tests/test_old_ma.py:341:        assert_(eq(x, [0, 1, 10, 40, 4]))
numpy/ma/tests/test_old_ma.py:347:        assert_(x[2] is not masked)
numpy/ma/tests/test_old_ma.py:348:        assert_(x[3] is not masked)
numpy/ma/tests/test_old_ma.py:350:        assert_(y[0] is masked)
numpy/ma/tests/test_old_ma.py:351:        assert_(y[1] is not masked)
numpy/ma/tests/test_old_ma.py:352:        assert_(eq(y, [10, 40]))
numpy/ma/tests/test_old_ma.py:353:        assert_(x[2] is masked)
numpy/ma/tests/test_old_ma.py:354:        assert_(x[3] is not masked)
numpy/ma/tests/test_old_ma.py:355:        assert_(eq(x, [0, 1, 10, 40, 4]))
numpy/ma/tests/test_old_ma.py:362:        assert_(all(take(ym, i, axis=0) == zm))
numpy/ma/tests/test_old_ma.py:369:        assert_(x[1, 0] == 12)
numpy/ma/tests/test_old_ma.py:371:        assert_(eq(z.real, x))
numpy/ma/tests/test_old_ma.py:372:        assert_(eq(z.imag, 10 * x))
numpy/ma/tests/test_old_ma.py:373:        assert_(eq((z * conjugate(z)).real, 101 * x * x))
numpy/ma/tests/test_old_ma.py:378:        assert_(str(x[3]) == str(masked))
numpy/ma/tests/test_old_ma.py:380:        assert_(count(where(c, masked, masked)) == 0)
numpy/ma/tests/test_old_ma.py:381:        assert_(shape(where(c, masked, masked)) == c.shape)
numpy/ma/tests/test_old_ma.py:383:        assert_(z.dtype is x.dtype)
numpy/ma/tests/test_old_ma.py:384:        assert_(z[3] is masked)
numpy/ma/tests/test_old_ma.py:385:        assert_(z[4] is masked)
numpy/ma/tests/test_old_ma.py:386:        assert_(z[7] is masked)
numpy/ma/tests/test_old_ma.py:387:        assert_(z[8] is not masked)
numpy/ma/tests/test_old_ma.py:388:        assert_(z[9] is not masked)
numpy/ma/tests/test_old_ma.py:389:        assert_(eq(x, z))
numpy/ma/tests/test_old_ma.py:391:        assert_(z.dtype is x.dtype)
numpy/ma/tests/test_old_ma.py:392:        assert_(z[3] is masked)
numpy/ma/tests/test_old_ma.py:393:        assert_(z[4] is not masked)
numpy/ma/tests/test_old_ma.py:394:        assert_(z[7] is not masked)
numpy/ma/tests/test_old_ma.py:395:        assert_(z[8] is masked)
numpy/ma/tests/test_old_ma.py:396:        assert_(z[9] is masked)
numpy/ma/tests/test_old_ma.py:398:        assert_(z.dtype is x.dtype)
numpy/ma/tests/test_old_ma.py:399:        assert_(z[3] is masked)
numpy/ma/tests/test_old_ma.py:400:        assert_(z[4] is not masked)
numpy/ma/tests/test_old_ma.py:401:        assert_(z[7] is not masked)
numpy/ma/tests/test_old_ma.py:402:        assert_(z[8] is masked)
numpy/ma/tests/test_old_ma.py:403:        assert_(z[9] is masked)
numpy/ma/tests/test_old_ma.py:404:        assert_(eq(x, z))
numpy/ma/tests/test_old_ma.py:409:        assert_(eq(z, [1., 2., 0., -4., -5]))
numpy/ma/tests/test_old_ma.py:412:        assert_(eq(z, [1., 2., 0., -4., -5]))
numpy/ma/tests/test_old_ma.py:413:        assert_(z[0] is masked)
numpy/ma/tests/test_old_ma.py:414:        assert_(z[1] is not masked)
numpy/ma/tests/test_old_ma.py:415:        assert_(z[2] is masked)
numpy/ma/tests/test_old_ma.py:416:        assert_(eq(masked_where(greater(x, 2), x), masked_greater(x, 2)))
numpy/ma/tests/test_old_ma.py:417:        assert_(eq(masked_where(greater_equal(x, 2), x),
numpy/ma/tests/test_old_ma.py:419:        assert_(eq(masked_where(less(x, 2), x), masked_less(x, 2)))
numpy/ma/tests/test_old_ma.py:420:        assert_(eq(masked_where(less_equal(x, 2), x), masked_less_equal(x, 2)))
numpy/ma/tests/test_old_ma.py:421:        assert_(eq(masked_where(not_equal(x, 2), x), masked_not_equal(x, 2)))
numpy/ma/tests/test_old_ma.py:422:        assert_(eq(masked_where(equal(x, 2), x), masked_equal(x, 2)))
numpy/ma/tests/test_old_ma.py:423:        assert_(eq(masked_where(not_equal(x, 2), x), masked_not_equal(x, 2)))
numpy/ma/tests/test_old_ma.py:424:        assert_(eq(masked_inside(list(range(5)), 1, 3), [0, 199, 199, 199, 4]))
numpy/ma/tests/test_old_ma.py:425:        assert_(eq(masked_outside(list(range(5)), 1, 3), [199, 1, 2, 3, 199]))
numpy/ma/tests/test_old_ma.py:426:        assert_(eq(masked_inside(array(list(range(5)),
numpy/ma/tests/test_old_ma.py:429:        assert_(eq(masked_outside(array(list(range(5)),
numpy/ma/tests/test_old_ma.py:432:        assert_(eq(masked_equal(array(list(range(5)),
numpy/ma/tests/test_old_ma.py:438:        assert_(eq(masked_where([1, 1, 0, 0, 0], [1, 2, 3, 4, 5]),
numpy/ma/tests/test_old_ma.py:443:        assert_(eq(atest, ctest))
numpy/ma/tests/test_old_ma.py:445:        assert_(eq(z, [1., 2., 0., -4., -5]))
numpy/ma/tests/test_old_ma.py:446:        assert_(z[0] is masked)
numpy/ma/tests/test_old_ma.py:447:        assert_(z[1] is not masked)
numpy/ma/tests/test_old_ma.py:448:        assert_(z[2] is masked)
numpy/ma/tests/test_old_ma.py:457:        assert_(eq(z, zm))
numpy/ma/tests/test_old_ma.py:458:        assert_(getmask(zm) is nomask)
numpy/ma/tests/test_old_ma.py:459:        assert_(eq(zm, [0, 1, 2, 30, 40, 50]))
numpy/ma/tests/test_old_ma.py:461:        assert_(eq(z, [99, 99, 99, 1, 1, 1]))
numpy/ma/tests/test_old_ma.py:463:        assert_(eq(z, [99, 1, 1, 99, 99, 99]))
numpy/ma/tests/test_old_ma.py:467:        assert_(eq(minimum([1, 2, 3], [4, 0, 9]), [1, 0, 3]))
numpy/ma/tests/test_old_ma.py:468:        assert_(eq(maximum([1, 2, 3], [4, 0, 9]), [4, 2, 9]))
numpy/ma/tests/test_old_ma.py:473:        assert_(eq(minimum(x, y), where(less(x, y), x, y)))
numpy/ma/tests/test_old_ma.py:474:        assert_(eq(maximum(x, y), where(greater(x, y), x, y)))
numpy/ma/tests/test_old_ma.py:475:        assert_(minimum.reduce(x) == 0)
numpy/ma/tests/test_old_ma.py:476:        assert_(maximum.reduce(x) == 4)
numpy/ma/tests/test_old_ma.py:485:        assert_(eq(np.transpose(y, (2, 0, 1)), transpose(x, (2, 0, 1))))
numpy/ma/tests/test_old_ma.py:486:        assert_(eq(np.take(y, (2, 0, 1), 1), take(x, (2, 0, 1), 1)))
numpy/ma/tests/test_old_ma.py:487:        assert_(eq(np.inner(filled(x, 0), filled(y, 0)),
numpy/ma/tests/test_old_ma.py:489:        assert_(eq(np.outer(filled(x, 0), filled(y, 0)),
numpy/ma/tests/test_old_ma.py:494:        assert_(t[0] == 'abc')
numpy/ma/tests/test_old_ma.py:495:        assert_(t[1] == 2)
numpy/ma/tests/test_old_ma.py:496:        assert_(t[2] == 3)
numpy/ma/tests/test_old_ma.py:506:        assert_(eq(x, y + 1))
numpy/ma/tests/test_old_ma.py:508:        assert_(eq(x, y + 1))
numpy/ma/tests/test_old_ma.py:514:        assert_(eq(x, y - 1))
numpy/ma/tests/test_old_ma.py:516:        assert_(eq(xm, y - 1))
numpy/ma/tests/test_old_ma.py:522:        assert_(eq(x, y * 2))
numpy/ma/tests/test_old_ma.py:524:        assert_(eq(xm, y * 2))
numpy/ma/tests/test_old_ma.py:530:        assert_(eq(x, y))
numpy/ma/tests/test_old_ma.py:532:        assert_(eq(x, y))
numpy/ma/tests/test_old_ma.py:538:        assert_(eq(x, y / 2.0))
numpy/ma/tests/test_old_ma.py:540:        assert_(eq(xm, ones((10,))))
numpy/ma/tests/test_old_ma.py:546:        assert_(eq(x, y + 1.))
numpy/ma/tests/test_old_ma.py:556:            assert_(eq(x, y))
numpy/ma/tests/test_old_ma.py:562:        assert_(str(masked) == '--')
numpy/ma/tests/test_old_ma.py:563:        assert_(xx[1] is masked)
numpy/ma/tests/test_old_ma.py:564:        assert_equal(filled(xx[1], 0), 0)
numpy/ma/tests/test_old_ma.py:569:        assert_(eq(2.0, average(ott, axis=0)))
numpy/ma/tests/test_old_ma.py:570:        assert_(eq(2.0, average(ott, weights=[1., 1., 2., 1.])))
numpy/ma/tests/test_old_ma.py:572:        assert_(eq(2.0, result))
numpy/ma/tests/test_old_ma.py:573:        assert_(wts == 4.0)
numpy/ma/tests/test_old_ma.py:575:        assert_(average(ott, axis=0) is masked)
numpy/ma/tests/test_old_ma.py:579:        assert_(eq(average(ott, axis=0), [2.0, 0.0]))
numpy/ma/tests/test_old_ma.py:580:        assert_(average(ott, axis=1)[0] is masked)
numpy/ma/tests/test_old_ma.py:581:        assert_(eq([2., 0.], average(ott, axis=0)))
numpy/ma/tests/test_old_ma.py:583:        assert_(eq(wts, [1., 0.]))
numpy/ma/tests/test_old_ma.py:590:        assert_(allclose(average(x, axis=0), 2.5))
numpy/ma/tests/test_old_ma.py:591:        assert_(allclose(average(x, axis=0, weights=w1), 2.5))
numpy/ma/tests/test_old_ma.py:593:        assert_(allclose(average(y, None),
numpy/ma/tests/test_old_ma.py:595:        assert_(allclose(average(y, axis=0), np.arange(6) * 3. / 2.))
numpy/ma/tests/test_old_ma.py:596:        assert_(allclose(average(y, axis=1),
numpy/ma/tests/test_old_ma.py:598:        assert_(allclose(average(y, None, weights=w2), 20. / 6.))
numpy/ma/tests/test_old_ma.py:599:        assert_(allclose(average(y, axis=0, weights=w2),
numpy/ma/tests/test_old_ma.py:601:        assert_(allclose(average(y, axis=1),
numpy/ma/tests/test_old_ma.py:608:        assert_(allclose(average(masked_array(x, m1), axis=0), 2.5))
numpy/ma/tests/test_old_ma.py:609:        assert_(allclose(average(masked_array(x, m2), axis=0), 2.5))
numpy/ma/tests/test_old_ma.py:610:        assert_(average(masked_array(x, m4), axis=0) is masked)
numpy/ma/tests/test_old_ma.py:611:        assert_equal(average(masked_array(x, m5), axis=0), 0.0)
numpy/ma/tests/test_old_ma.py:612:        assert_equal(count(average(masked_array(x, m4), axis=0)), 0)
numpy/ma/tests/test_old_ma.py:614:        assert_(allclose(average(z, None), 20. / 6.))
numpy/ma/tests/test_old_ma.py:615:        assert_(allclose(average(z, axis=0),
numpy/ma/tests/test_old_ma.py:617:        assert_(allclose(average(z, axis=1), [2.5, 5.0]))
numpy/ma/tests/test_old_ma.py:618:        assert_(allclose(average(z, axis=0, weights=w2),
numpy/ma/tests/test_old_ma.py:624:        assert_equal(shape(r1), shape(w1))
numpy/ma/tests/test_old_ma.py:625:        assert_equal(r1.shape, w1.shape)
numpy/ma/tests/test_old_ma.py:627:        assert_equal(shape(w2), shape(r2))
numpy/ma/tests/test_old_ma.py:629:        assert_equal(shape(w2), shape(r2))
numpy/ma/tests/test_old_ma.py:631:        assert_(shape(w2) == shape(r2))
numpy/ma/tests/test_old_ma.py:635:        assert_(eq(a2da, [0.5, 3.0]))
numpy/ma/tests/test_old_ma.py:637:        assert_(eq(a2dma, [1.0, 3.0]))
numpy/ma/tests/test_old_ma.py:639:        assert_(eq(a2dma, 7. / 3.))
numpy/ma/tests/test_old_ma.py:641:        assert_(eq(a2dma, [1.5, 4.0]))
numpy/ma/tests/test_old_ma.py:644:        assert_equal(1, int(array(1)))
numpy/ma/tests/test_old_ma.py:645:        assert_equal(1.0, float(array(1)))
numpy/ma/tests/test_old_ma.py:646:        assert_equal(1, int(array([[[1]]])))
numpy/ma/tests/test_old_ma.py:647:        assert_equal(1.0, float(array([[1]])))
numpy/ma/tests/test_old_ma.py:648:        assert_raises(TypeError, float, array([1, 1]))
numpy/ma/tests/test_old_ma.py:649:        assert_raises(ValueError, bool, array([0, 1]))
numpy/ma/tests/test_old_ma.py:650:        assert_raises(ValueError, bool, array([0, 0], mask=[0, 1]))
numpy/ma/tests/test_old_ma.py:656:            assert_((1 / array(0)).mask)
numpy/ma/tests/test_old_ma.py:657:        assert_((1 + xm).mask)
numpy/ma/tests/test_old_ma.py:658:        assert_((-xm).mask)
numpy/ma/tests/test_old_ma.py:659:        assert_((-xm).mask)
numpy/ma/tests/test_old_ma.py:660:        assert_(maximum(xm, xm).mask)
numpy/ma/tests/test_old_ma.py:661:        assert_(minimum(xm, xm).mask)
numpy/ma/tests/test_old_ma.py:662:        assert_(xm.filled().dtype is xm._data.dtype)
numpy/ma/tests/test_old_ma.py:664:        assert_(x.filled() == x._data)
numpy/ma/tests/test_old_ma.py:665:        assert_equal(str(xm), str(masked_print_option))
numpy/ma/tests/test_old_ma.py:669:        assert_(eq(a.any(), a._data.any()))
numpy/ma/tests/test_old_ma.py:670:        assert_(eq(a.all(), a._data.all()))
numpy/ma/tests/test_old_ma.py:671:        assert_(eq(a.argmax(), a._data.argmax()))
numpy/ma/tests/test_old_ma.py:672:        assert_(eq(a.argmin(), a._data.argmin()))
numpy/ma/tests/test_old_ma.py:673:        assert_(eq(a.choose(0, 1, 2, 3, 4),
numpy/ma/tests/test_old_ma.py:675:        assert_(eq(a.compress([1, 0, 1]), a._data.compress([1, 0, 1])))
numpy/ma/tests/test_old_ma.py:676:        assert_(eq(a.conj(), a._data.conj()))
numpy/ma/tests/test_old_ma.py:677:        assert_(eq(a.conjugate(), a._data.conjugate()))
numpy/ma/tests/test_old_ma.py:679:        assert_(eq(m.diagonal(), m._data.diagonal()))
numpy/ma/tests/test_old_ma.py:680:        assert_(eq(a.sum(), a._data.sum()))
numpy/ma/tests/test_old_ma.py:681:        assert_(eq(a.take([1, 2]), a._data.take([1, 2])))
numpy/ma/tests/test_old_ma.py:682:        assert_(eq(m.transpose(), m._data.transpose()))
numpy/ma/tests/test_old_ma.py:686:        assert_equal(a.ndim, 1)
numpy/ma/tests/test_old_ma.py:689:        assert_(not [m for m in dir(np.ndarray)
numpy/ma/tests/test_old_ma.py:696:        assert_equal(a[0].shape, ())
numpy/ma/tests/test_old_ma.py:697:        assert_equal(b[0].shape, ())
numpy/ma/tests/test_old_ma.py:698:        assert_equal(b[1].shape, ())
numpy/ma/tests/test_old_ma.py:705:        assert_(a[2] is masked)
numpy/ma/tests/test_old_ma.py:714:        assert_equal(b.mask, expected_mask)
numpy/ma/tests/test_old_ma.py:756:            assert_(eq(ur.filled(0), mr.filled(0), f))
numpy/ma/tests/test_old_ma.py:757:            assert_(eqmask(ur.mask, mr.mask))
numpy/ma/tests/test_old_ma.py:761:        assert_(not alltrue(a, axis=0))
numpy/ma/tests/test_old_ma.py:762:        assert_(sometrue(a, axis=0))
numpy/ma/tests/test_old_ma.py:763:        assert_equal(sum(a[:3], axis=0), 0)
numpy/ma/tests/test_old_ma.py:764:        assert_equal(product(a, axis=0), 0)
numpy/ma/tests/test_old_ma.py:769:        assert_equal(amask.max(), a.max())
numpy/ma/tests/test_old_ma.py:770:        assert_equal(amask.min(), 5)
numpy/ma/tests/test_old_ma.py:771:        assert_((amask.max(0) == a.max(0)).all())
numpy/ma/tests/test_old_ma.py:772:        assert_((amask.min(0) == [5, 6, 7, 8]).all())
numpy/ma/tests/test_old_ma.py:773:        assert_(amask.max(1)[0].mask)
numpy/ma/tests/test_old_ma.py:774:        assert_(amask.min(1)[0].mask)
numpy/ma/tests/test_old_ma.py:779:            assert_(eq(nonzero(x), [0]))
numpy/ma/tests/test_old_ma.py:809:        assert_equal(mX.trace(), mX.diagonal().compressed().sum())
numpy/ma/tests/test_old_ma.py:810:        assert_(eq(mX.trace(),
numpy/ma/tests/test_old_ma.py:817:        assert_(eq(clipped.mask, mx.mask))
numpy/ma/tests/test_old_ma.py:818:        assert_(eq(clipped._data, x.clip(2, 8)))
numpy/ma/tests/test_old_ma.py:819:        assert_(eq(clipped._data, mx._data.clip(2, 8)))
numpy/ma/tests/test_old_ma.py:824:        assert_equal(mx.ptp(), mx.compressed().ptp())
numpy/ma/tests/test_old_ma.py:831:        assert_(eq(mX.ptp(0), cols))
numpy/ma/tests/test_old_ma.py:832:        assert_(eq(mX.ptp(1), rows))
numpy/ma/tests/test_old_ma.py:837:        assert_(eq(mXswapped[-1], mX[:, -1]))
numpy/ma/tests/test_old_ma.py:839:        assert_equal(mXXswapped.shape, (2, 2, 3, 3))
numpy/ma/tests/test_old_ma.py:844:        assert_(eq(mXcp._data, mX.filled(1).cumprod(0)))
numpy/ma/tests/test_old_ma.py:846:        assert_(eq(mXcp._data, mX.filled(1).cumprod(1)))
numpy/ma/tests/test_old_ma.py:851:        assert_(eq(mXcp._data, mX.filled(0).cumsum(0)))
numpy/ma/tests/test_old_ma.py:853:        assert_(eq(mXcp._data, mX.filled(0).cumsum(1)))
numpy/ma/tests/test_old_ma.py:857:        assert_(eq(mX.var(axis=None), mX.compressed().var()))
numpy/ma/tests/test_old_ma.py:858:        assert_(eq(mX.std(axis=None), mX.compressed().std()))
numpy/ma/tests/test_old_ma.py:859:        assert_(eq(mXX.var(axis=3).shape, XX.var(axis=3).shape))
numpy/ma/tests/test_old_ma.py:860:        assert_(eq(mX.var().shape, X.var().shape))
numpy/ma/tests/test_old_ma.py:863:            assert_(eq(mXvar1[k], mX[k].compressed().var()))
numpy/ma/tests/test_old_ma.py:864:            assert_(eq(mXvar0[k], mX[:, k].compressed().var()))
numpy/ma/tests/test_old_ma.py:865:            assert_(eq(np.sqrt(mXvar0[k]),
numpy/ma/tests/test_core.py:88:        assert_equal(a.ndim, 1)
numpy/ma/tests/test_core.py:89:        assert_equal(b.ndim, 1)
numpy/ma/tests/test_core.py:90:        assert_equal(a.size, 3)
numpy/ma/tests/test_core.py:91:        assert_equal(b.size, 3)
numpy/ma/tests/test_core.py:92:        assert_equal(a.shape, (3,))
numpy/ma/tests/test_core.py:93:        assert_equal(b.shape, (3,))
numpy/ma/tests/test_core.py:98:        assert_equal(str(x), '0')
numpy/ma/tests/test_core.py:100:        assert_equal(str(x), str(masked_print_option))
numpy/ma/tests/test_core.py:102:        assert_equal(str(x), '0')
numpy/ma/tests/test_core.py:104:        assert_(x.filled().dtype is x._data.dtype)
numpy/ma/tests/test_core.py:109:        assert_(not isMaskedArray(x))
numpy/ma/tests/test_core.py:110:        assert_(isMaskedArray(xm))
numpy/ma/tests/test_core.py:111:        assert_((xm - ym).filled(0).any())
numpy/ma/tests/test_core.py:114:        assert_equal(np.shape(xm), s)
numpy/ma/tests/test_core.py:115:        assert_equal(xm.shape, s)
numpy/ma/tests/test_core.py:116:        assert_equal(xm.dtype, x.dtype)
numpy/ma/tests/test_core.py:117:        assert_equal(zm.dtype, z.dtype)
numpy/ma/tests/test_core.py:118:        assert_equal(xm.size, reduce(lambda x, y:x * y, s))
numpy/ma/tests/test_core.py:119:        assert_equal(count(xm), len(m1) - reduce(lambda x, y:x + y, m1))
numpy/ma/tests/test_core.py:120:        assert_array_equal(xm, xf)
numpy/ma/tests/test_core.py:121:        assert_array_equal(filled(xm, 1.e20), xf)
numpy/ma/tests/test_core.py:122:        assert_array_equal(x, xm)
numpy/ma/tests/test_core.py:134:            assert_(not isMaskedArray(x))
numpy/ma/tests/test_core.py:135:            assert_(isMaskedArray(xm))
numpy/ma/tests/test_core.py:136:            assert_equal(shape(xm), s)
numpy/ma/tests/test_core.py:137:            assert_equal(xm.shape, s)
numpy/ma/tests/test_core.py:138:            assert_equal(xm.size, reduce(lambda x, y:x * y, s))
numpy/ma/tests/test_core.py:139:            assert_equal(count(xm), len(m1) - reduce(lambda x, y:x + y, m1))
numpy/ma/tests/test_core.py:140:            assert_equal(xm, xf)
numpy/ma/tests/test_core.py:141:            assert_equal(filled(xm, 1.e20), xf)
numpy/ma/tests/test_core.py:142:            assert_equal(x, xm)
numpy/ma/tests/test_core.py:148:        assert_equal(np.concatenate((x, y)), concatenate((xm, ym)))
numpy/ma/tests/test_core.py:149:        assert_equal(np.concatenate((x, y)), concatenate((x, y)))
numpy/ma/tests/test_core.py:150:        assert_equal(np.concatenate((x, y)), concatenate((xm, y)))
numpy/ma/tests/test_core.py:151:        assert_equal(np.concatenate((x, y, x)), concatenate((x, ym, x)))
numpy/ma/tests/test_core.py:159:        assert_equal(xm.mask, np.reshape(m1, s))
numpy/ma/tests/test_core.py:160:        assert_equal(ym.mask, np.reshape(m2, s))
numpy/ma/tests/test_core.py:162:        assert_equal(np.concatenate((x, y), 1), xmym)
numpy/ma/tests/test_core.py:163:        assert_equal(np.concatenate((xm.mask, ym.mask), 1), xmym._mask)
numpy/ma/tests/test_core.py:168:        assert_array_equal(z, [0, 0, 1, 1])
numpy/ma/tests/test_core.py:169:        assert_array_equal(z.mask, [False, False, False, True])
numpy/ma/tests/test_core.py:171:        assert_array_equal(z, [1, 1, 0, 0])
numpy/ma/tests/test_core.py:172:        assert_array_equal(z.mask, [False, True, False, False])
numpy/ma/tests/test_core.py:181:        assert_equal_records(test, data)
numpy/ma/tests/test_core.py:186:        assert_equal(x.shape, (1, 3))
numpy/ma/tests/test_core.py:187:        assert_equal(x._data, [[1, 2, 3]])
numpy/ma/tests/test_core.py:188:        assert_equal(x._mask, [[1, 0, 0]])
numpy/ma/tests/test_core.py:195:        assert_equal(x.shape, x._mask.shape)
numpy/ma/tests/test_core.py:196:        assert_equal(xx.shape, xx._mask.shape)
numpy/ma/tests/test_core.py:203:        assert_equal(dma_1.mask, data.mask)
numpy/ma/tests/test_core.py:205:        assert_equal(dma_2.mask, dma_1.mask)
numpy/ma/tests/test_core.py:210:        assert_equal(x._mask, [True, True, True])
numpy/ma/tests/test_core.py:212:        assert_equal(x._mask, [False, False, False])
numpy/ma/tests/test_core.py:214:        assert_(np.may_share_memory(x.mask, y.mask))
numpy/ma/tests/test_core.py:216:        assert_(not np.may_share_memory(x.mask, y.mask))
numpy/ma/tests/test_core.py:233:        assert_equal(data, [[0, 1, 2, 3, 4], [4, 3, 2, 1, 0]])
numpy/ma/tests/test_core.py:234:        assert_equal(data._mask, [[1, 0, 0, 0, 0], [0, 0, 0, 0, 1]])
numpy/ma/tests/test_core.py:238:        assert_equal(data, [[0, 1, 2, 3, 4], [4, 3, 2, 1, 0]])
numpy/ma/tests/test_core.py:239:        assert_(data.mask is nomask)
numpy/ma/tests/test_core.py:246:        assert_array_equal(res.mask, [[True, False], [False, False]])
numpy/ma/tests/test_core.py:259:        assert_array_equal(res.mask, [[True, False], [False, False]])
numpy/ma/tests/test_core.py:276:        assert_equal(xmm._data, xm._data)
numpy/ma/tests/test_core.py:277:        assert_equal(xmm._mask, xm._mask)
numpy/ma/tests/test_core.py:278:        assert_equal(xmm.fill_value, xm.fill_value)
numpy/ma/tests/test_core.py:279:        assert_equal(xmm._hardmask, xm._hardmask)
numpy/ma/tests/test_core.py:284:        assert_(not m.flags.c_contiguous)
numpy/ma/tests/test_core.py:287:        assert_(new_m.flags.c_contiguous)
numpy/ma/tests/test_core.py:292:        assert_(not m.flags.c_contiguous)
numpy/ma/tests/test_core.py:295:        assert_(new_m.flags.c_contiguous)
numpy/ma/tests/test_core.py:302:            assert_equal(data_fixed._data, [data.fill_value, 0., 1.])
numpy/ma/tests/test_core.py:303:            assert_equal(data_fixed._mask, [1., 0., 1.])
numpy/ma/tests/test_core.py:309:        assert_(str(masked) == '--')
numpy/ma/tests/test_core.py:310:        assert_(x[1] is masked)
numpy/ma/tests/test_core.py:311:        assert_equal(filled(x[1], 0), 0)
numpy/ma/tests/test_core.py:318:        assert_equal(a[0], x)
numpy/ma/tests/test_core.py:319:        assert_(a[0] is x)
numpy/ma/tests/test_core.py:324:        assert_(a[0] is dt)
numpy/ma/tests/test_core.py:335:        assert_equal(np.sort(x1), sort(x2, endwith=False))
numpy/ma/tests/test_core.py:337:        assert_(type(x2[1]) is type(x1[1]))
numpy/ma/tests/test_core.py:338:        assert_(x1[1] == x2[1])
numpy/ma/tests/test_core.py:339:        assert_(x2[0] is masked)
numpy/ma/tests/test_core.py:340:        assert_equal(x1[2], x2[2])
numpy/ma/tests/test_core.py:341:        assert_equal(x1[2:5], x2[2:5])
numpy/ma/tests/test_core.py:342:        assert_equal(x1[:], x2[:])
numpy/ma/tests/test_core.py:343:        assert_equal(x1[1:], x3[1:])
numpy/ma/tests/test_core.py:346:        assert_equal(x1, x2)
numpy/ma/tests/test_core.py:349:        assert_equal(x1, x2)
numpy/ma/tests/test_core.py:351:        assert_equal(x1, x2)
numpy/ma/tests/test_core.py:353:        assert_equal(x1, x2)
numpy/ma/tests/test_core.py:356:        assert_(allequal(getmask(x2), array([0, 1, 0, 0])))
numpy/ma/tests/test_core.py:358:        assert_(allequal(getmask(x3), array([0, 1, 1, 0])))
numpy/ma/tests/test_core.py:360:        assert_(allequal(getmask(x4), array([0, 1, 1, 0])))
numpy/ma/tests/test_core.py:361:        assert_(allequal(x4, array([1, 2, 3, 4])))
numpy/ma/tests/test_core.py:364:        assert_equal(x1, x2)
numpy/ma/tests/test_core.py:365:        assert_(allequal(array([0, 0, 0, 1, 0], MaskType), x2.mask))
numpy/ma/tests/test_core.py:366:        assert_equal(3.0, x2.fill_value)
numpy/ma/tests/test_core.py:371:        assert_equal(type(s2), str)
numpy/ma/tests/test_core.py:372:        assert_equal(type(s1), str)
numpy/ma/tests/test_core.py:373:        assert_equal(s1, s2)
numpy/ma/tests/test_core.py:374:        assert_(x1[1:1].shape == (0,))
numpy/ma/tests/test_core.py:382:        assert_(m is m2)
numpy/ma/tests/test_core.py:384:        assert_(m is not m3)
numpy/ma/tests/test_core.py:388:        assert_equal(y1._data.__array_interface__, x1.__array_interface__)
numpy/ma/tests/test_core.py:389:        assert_(allequal(x1, y1.data))
numpy/ma/tests/test_core.py:390:        assert_equal(y1._mask.__array_interface__, m.__array_interface__)
numpy/ma/tests/test_core.py:394:        assert_(y1a._data.__array_interface__ ==
numpy/ma/tests/test_core.py:396:        assert_(y1a._mask.__array_interface__ ==
numpy/ma/tests/test_core.py:400:        assert_(y2._data.__array_interface__ == x1.__array_interface__)
numpy/ma/tests/test_core.py:401:        assert_(y2._mask.__array_interface__ == m3.__array_interface__)
numpy/ma/tests/test_core.py:402:        assert_(y2[2] is masked)
numpy/ma/tests/test_core.py:404:        assert_(y2[2] is not masked)
numpy/ma/tests/test_core.py:405:        assert_(y2._mask.__array_interface__ == m3.__array_interface__)
numpy/ma/tests/test_core.py:406:        assert_(allequal(y2.mask, 0))
numpy/ma/tests/test_core.py:409:        assert_(y2a._data.__array_interface__ != x1.__array_interface__)
numpy/ma/tests/test_core.py:410:        #assert_( y2a._mask is not m)
numpy/ma/tests/test_core.py:411:        assert_(y2a._mask.__array_interface__ != m.__array_interface__)
numpy/ma/tests/test_core.py:412:        assert_(y2a[2] is masked)
numpy/ma/tests/test_core.py:414:        assert_(y2a[2] is not masked)
numpy/ma/tests/test_core.py:415:        #assert_( y2a._mask is not m)
numpy/ma/tests/test_core.py:416:        assert_(y2a._mask.__array_interface__ != m.__array_interface__)
numpy/ma/tests/test_core.py:417:        assert_(allequal(y2a.mask, 0))
numpy/ma/tests/test_core.py:420:        assert_(filled(y3).dtype is (x1 * 1.0).dtype)
numpy/ma/tests/test_core.py:425:        assert_equal(concatenate([x4, x4]), y4)
numpy/ma/tests/test_core.py:426:        assert_equal(getmask(y4), [0, 0, 1, 0, 0, 0, 1, 0])
numpy/ma/tests/test_core.py:428:        assert_equal(y5, [0, 0, 1, 1, 2, 2, 3, 3])
numpy/ma/tests/test_core.py:430:        assert_equal(y5, y6)
numpy/ma/tests/test_core.py:432:        assert_equal(y5, y7)
numpy/ma/tests/test_core.py:434:        assert_equal(y5, y8)
numpy/ma/tests/test_core.py:437:        assert_equal(y9._data, x4._data)
numpy/ma/tests/test_core.py:438:        assert_equal(y9._mask, x4._mask)
numpy/ma/tests/test_core.py:443:        assert_equal(y._data.ctypes.data, x._data.ctypes.data)
numpy/ma/tests/test_core.py:444:        assert_equal(y._mask.ctypes.data, x._mask.ctypes.data)
numpy/ma/tests/test_core.py:446:        assert_not_equal(y._data.ctypes.data, x._data.ctypes.data)
numpy/ma/tests/test_core.py:447:        assert_not_equal(y._mask.ctypes.data, x._mask.ctypes.data)
numpy/ma/tests/test_core.py:453:        assert_equal(xc.mask, True)
numpy/ma/tests/test_core.py:457:        assert_(isMaskedArray(np.ma.copy([1,2,3])))
numpy/ma/tests/test_core.py:458:        assert_(isMaskedArray(np.ma.copy((1,2,3))))
numpy/ma/tests/test_core.py:466:        assert_equal(a_copy_method(), [1, 2, 3])
numpy/ma/tests/test_core.py:472:        assert_equal(copied.mask, a.mask)
numpy/ma/tests/test_core.py:473:        assert_not_equal(id(a._mask), id(copied._mask))
numpy/ma/tests/test_core.py:476:        assert_equal(copied.mask, [0, 0, 0])
numpy/ma/tests/test_core.py:477:        assert_equal(a.mask, [0, 1, 0])
numpy/ma/tests/test_core.py:480:        assert_equal(copied.mask, a.mask)
numpy/ma/tests/test_core.py:482:        assert_equal(copied.mask, [0, 0, 0])
numpy/ma/tests/test_core.py:483:        assert_equal(a.mask, [0, 1, 0])
numpy/ma/tests/test_core.py:487:        assert_equal(format(a), "[0 -- 2]")
numpy/ma/tests/test_core.py:488:        assert_equal(format(masked), "--")
numpy/ma/tests/test_core.py:489:        assert_equal(format(masked, ""), "--")
numpy/ma/tests/test_core.py:492:        # assert_equal(format(masked, " >5"), "   --")
numpy/ma/tests/test_core.py:493:        # assert_equal(format(masked, " <5"), "--   ")
numpy/ma/tests/test_core.py:498:        assert_equal(with_format_string, "--")
numpy/ma/tests/test_core.py:502:        assert_equal(str(a), '[0 -- 2]')
numpy/ma/tests/test_core.py:575:            assert_equal(str(a), '[0 -- 2]')
numpy/ma/tests/test_core.py:576:            assert_equal(repr(a), 'masked_array(data = [0 -- 2],\n'
numpy/ma/tests/test_core.py:598:        assert_equal(utype(arr_nomask), u)
numpy/ma/tests/test_core.py:599:        assert_equal(utype(arr_masked), u'--')
numpy/ma/tests/test_core.py:615:                    assert_equal(a_pickled._mask, a._mask)
numpy/ma/tests/test_core.py:616:                    assert_equal(a_pickled._data, a._data)
numpy/ma/tests/test_core.py:618:                        assert_equal(a_pickled.fill_value, 999)
numpy/ma/tests/test_core.py:620:                        assert_equal(a_pickled.fill_value, dtype(999))
numpy/ma/tests/test_core.py:621:                    assert_array_equal(a_pickled.mask, mask)
numpy/ma/tests/test_core.py:630:            assert_equal(a_pickled._mask, a._mask)
numpy/ma/tests/test_core.py:631:            assert_equal(a_pickled, a)
numpy/ma/tests/test_core.py:632:            assert_(isinstance(a_pickled._data, np.recarray))
numpy/ma/tests/test_core.py:639:            assert_equal(mc_pickled._baseclass, mc._baseclass)
numpy/ma/tests/test_core.py:640:            assert_equal(mc_pickled._mask, mc._mask)
numpy/ma/tests/test_core.py:641:            assert_equal(mc_pickled._data, mc._data)
numpy/ma/tests/test_core.py:649:            assert_equal(a_pickled._mask, a._mask)
numpy/ma/tests/test_core.py:650:            assert_equal(a_pickled, a)
numpy/ma/tests/test_core.py:659:            assert_equal(test, b)
numpy/ma/tests/test_core.py:665:        assert_equal(a[0].shape, ())
numpy/ma/tests/test_core.py:666:        assert_equal(b[0].shape, ())
numpy/ma/tests/test_core.py:667:        assert_equal(b[1].shape, ())
numpy/ma/tests/test_core.py:671:        assert_equal(1, int(array(1)))
numpy/ma/tests/test_core.py:672:        assert_equal(1.0, float(array(1)))
numpy/ma/tests/test_core.py:673:        assert_equal(1, int(array([[[1]]])))
numpy/ma/tests/test_core.py:674:        assert_equal(1.0, float(array([[1]])))
numpy/ma/tests/test_core.py:675:        assert_raises(TypeError, float, array([1, 1]))
numpy/ma/tests/test_core.py:679:            assert_(np.isnan(float(array([1], mask=[1]))))
numpy/ma/tests/test_core.py:682:            assert_raises(TypeError, lambda: float(a))
numpy/ma/tests/test_core.py:683:            assert_equal(float(a[-1]), 3.)
numpy/ma/tests/test_core.py:684:            assert_(np.isnan(float(a[0])))
numpy/ma/tests/test_core.py:685:        assert_raises(TypeError, int, a)
numpy/ma/tests/test_core.py:686:        assert_equal(int(a[-1]), 3)
numpy/ma/tests/test_core.py:687:        assert_raises(MAError, lambda:int(a[0]))
numpy/ma/tests/test_core.py:694:        assert_(x[1, 0] == 12)
numpy/ma/tests/test_core.py:696:        assert_equal(z.real, x)
numpy/ma/tests/test_core.py:697:        assert_equal(z.imag, 10 * x)
numpy/ma/tests/test_core.py:698:        assert_equal((z * conjugate(z)).real, 101 * x * x)
numpy/ma/tests/test_core.py:703:        assert_(str(x[3]) == str(masked))
numpy/ma/tests/test_core.py:705:        assert_(count(where(c, masked, masked)) == 0)
numpy/ma/tests/test_core.py:706:        assert_(shape(where(c, masked, masked)) == c.shape)
numpy/ma/tests/test_core.py:709:        assert_(z.dtype is x.dtype)
numpy/ma/tests/test_core.py:710:        assert_(z[3] is masked)
numpy/ma/tests/test_core.py:711:        assert_(z[4] is not masked)
numpy/ma/tests/test_core.py:712:        assert_(z[7] is not masked)
numpy/ma/tests/test_core.py:713:        assert_(z[8] is masked)
numpy/ma/tests/test_core.py:714:        assert_(z[9] is masked)
numpy/ma/tests/test_core.py:715:        assert_equal(x, z)
numpy/ma/tests/test_core.py:723:        assert_equal(z, [1., 2., 0., -4., -5])
numpy/ma/tests/test_core.py:726:        assert_equal(z, [1., 2., 0., -4., -5])
numpy/ma/tests/test_core.py:727:        assert_(z[0] is masked)
numpy/ma/tests/test_core.py:728:        assert_(z[1] is not masked)
numpy/ma/tests/test_core.py:729:        assert_(z[2] is masked)
numpy/ma/tests/test_core.py:738:        assert_equal(atest, [20])
numpy/ma/tests/test_core.py:742:        assert_equal(a.filled('x')[0], 'x')
numpy/ma/tests/test_core.py:749:        assert_equal(flexi.filled(),
numpy/ma/tests/test_core.py:754:        assert_equal(flexi.filled(1),
numpy/ma/tests/test_core.py:763:        assert_equal(tuple(test), (1, default_fill_value(1.)))
numpy/ma/tests/test_core.py:766:        assert_equal(tuple(test), (1, -1))
numpy/ma/tests/test_core.py:769:        assert_equal(tuple(a.filled()), (1, -999))
numpy/ma/tests/test_core.py:778:        assert_equal(test, control)
numpy/ma/tests/test_core.py:782:        assert_equal(test, control)
numpy/ma/tests/test_core.py:786:        assert_equal(Z.data.dtype, numpy.dtype([('A', [('f0', 'i1', (2, 2)),
numpy/ma/tests/test_core.py:788:        assert_equal(Z.mask.dtype, numpy.dtype([('A', [('f0', '?', (2, 2)),
numpy/ma/tests/test_core.py:796:        assert_(a.flags['F_CONTIGUOUS'])
numpy/ma/tests/test_core.py:797:        assert_(a.filled(0).flags['F_CONTIGUOUS'])
numpy/ma/tests/test_core.py:804:        assert_equal(y._optinfo['info'], '???')
numpy/ma/tests/test_core.py:806:        assert_equal(x._optinfo['info'], '???')
numpy/ma/tests/test_core.py:811:        assert_equal(a._optinfo["key"], (a == 2)._optinfo["key"])
numpy/ma/tests/test_core.py:812:        assert_equal(a._optinfo["key"], (a != 2)._optinfo["key"])
numpy/ma/tests/test_core.py:813:        assert_equal(a._optinfo["key"], (a > 2)._optinfo["key"])
numpy/ma/tests/test_core.py:814:        assert_equal(a._optinfo["key"], (a >= 2)._optinfo["key"])
numpy/ma/tests/test_core.py:815:        assert_equal(a._optinfo["key"], (a <= 2)._optinfo["key"])
numpy/ma/tests/test_core.py:816:        assert_equal(a._optinfo["key"], (a + 2)._optinfo["key"])
numpy/ma/tests/test_core.py:817:        assert_equal(a._optinfo["key"], (a - 2)._optinfo["key"])
numpy/ma/tests/test_core.py:818:        assert_equal(a._optinfo["key"], (a * 2)._optinfo["key"])
numpy/ma/tests/test_core.py:819:        assert_equal(a._optinfo["key"], (a / 2)._optinfo["key"])
numpy/ma/tests/test_core.py:820:        assert_equal(a._optinfo["key"], a[:2]._optinfo["key"])
numpy/ma/tests/test_core.py:821:        assert_equal(a._optinfo["key"], a[[0,0,2]]._optinfo["key"])
numpy/ma/tests/test_core.py:822:        assert_equal(a._optinfo["key"], np.exp(a)._optinfo["key"])
numpy/ma/tests/test_core.py:823:        assert_equal(a._optinfo["key"], np.abs(a)._optinfo["key"])
numpy/ma/tests/test_core.py:824:        assert_equal(a._optinfo["key"], array(a, copy=True)._optinfo["key"])
numpy/ma/tests/test_core.py:825:        assert_equal(a._optinfo["key"], np.zeros_like(a)._optinfo["key"])
numpy/ma/tests/test_core.py:834:        assert_equal(str(test), control)
numpy/ma/tests/test_core.py:845:        assert_equal(str(t_2d0), control)
numpy/ma/tests/test_core.py:854:        assert_equal(test, control)
numpy/ma/tests/test_core.py:855:        assert_equal(test.dtype, control.dtype)
numpy/ma/tests/test_core.py:861:        assert_equal(test, control)
numpy/ma/tests/test_core.py:862:        assert_equal(test.dtype, control.dtype)
numpy/ma/tests/test_core.py:863:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:871:        assert_equal(test, control)
numpy/ma/tests/test_core.py:872:        assert_equal(test.dtype, control.dtype)
numpy/ma/tests/test_core.py:873:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:879:        assert_equal(test, control)
numpy/ma/tests/test_core.py:880:        assert_equal(test.dtype, control.dtype)
numpy/ma/tests/test_core.py:887:        assert_(isinstance(f, mvoid))
numpy/ma/tests/test_core.py:890:        assert_(isinstance(a, mvoid))
numpy/ma/tests/test_core.py:894:        assert_(isinstance(f, mvoid))
numpy/ma/tests/test_core.py:903:        assert_(isinstance(f, mvoid))
numpy/ma/tests/test_core.py:904:        assert_equal((f[0], f['a']), (1, 1))
numpy/ma/tests/test_core.py:905:        assert_equal(f['b'], 2)
numpy/ma/tests/test_core.py:908:        assert_(isinstance(f, mvoid))
numpy/ma/tests/test_core.py:909:        assert_(f[0] is masked)
numpy/ma/tests/test_core.py:910:        assert_(f['a'] is masked)
numpy/ma/tests/test_core.py:911:        assert_equal(f[1], 4)
numpy/ma/tests/test_core.py:917:        assert_equal(A[0]["A"], A["A"][0])
numpy/ma/tests/test_core.py:927:        assert_equal(list(a[0]), [1, 2])
numpy/ma/tests/test_core.py:929:        assert_equal(list(a[1]), [masked, 4])
numpy/ma/tests/test_core.py:934:        assert_equal(str(mx[0]), "(1, 1)")
numpy/ma/tests/test_core.py:939:            assert_equal(str(mx[0]), "(1, -X-)")
numpy/ma/tests/test_core.py:940:            assert_equal(repr(mx[0]), "(1, -X-)")
numpy/ma/tests/test_core.py:946:        assert_equal(str(mx[0]), "(1,)")
numpy/ma/tests/test_core.py:955:        assert_(str(t_ma[0]) == "([1, --, 3],)")
numpy/ma/tests/test_core.py:956:        assert_(repr(t_ma[0]) == "([1, --, 3],)")
numpy/ma/tests/test_core.py:963:        assert_(str(t_2d[0]) == "([[1, --], [--, 4]],)")
numpy/ma/tests/test_core.py:964:        assert_(repr(t_2d[0]) == "([[1, --], [--, 4]],)")
numpy/ma/tests/test_core.py:969:        assert_(str(t_0d[0]) == "(--, 2)")
numpy/ma/tests/test_core.py:970:        assert_(repr(t_0d[0]) == "(--, 2)")
numpy/ma/tests/test_core.py:975:        assert_(str(t_2d[0]) == "([[1, --], [--, 4]], 1.0)")
numpy/ma/tests/test_core.py:976:        assert_(repr(t_2d[0]) == "([[1, --], [--, 4]], 1.0)")
numpy/ma/tests/test_core.py:981:        assert_(str(t_ne[0]) == "(--, (--, 1))")
numpy/ma/tests/test_core.py:982:        assert_(repr(t_ne[0]) == "(--, (--, 1))")
numpy/ma/tests/test_core.py:988:        assert_(mx[0] is mx1)
numpy/ma/tests/test_core.py:989:        assert_(mx[1] is not mx2)
numpy/ma/tests/test_core.py:990:        assert_(np.all(mx[1].data == mx2.data))
numpy/ma/tests/test_core.py:991:        assert_(np.all(mx[1].mask))
numpy/ma/tests/test_core.py:994:        assert_(mx2[0] == 0.)
numpy/ma/tests/test_core.py:1025:        assert_equal(a2d * a2d, a2d * a2dm)
numpy/ma/tests/test_core.py:1026:        assert_equal(a2d + a2d, a2d + a2dm)
numpy/ma/tests/test_core.py:1027:        assert_equal(a2d - a2d, a2d - a2dm)
numpy/ma/tests/test_core.py:1034:            assert_equal(-x, -xm)
numpy/ma/tests/test_core.py:1035:            assert_equal(x + y, xm + ym)
numpy/ma/tests/test_core.py:1036:            assert_equal(x - y, xm - ym)
numpy/ma/tests/test_core.py:1037:            assert_equal(x * y, xm * ym)
numpy/ma/tests/test_core.py:1038:            assert_equal(x / y, xm / ym)
numpy/ma/tests/test_core.py:1039:            assert_equal(a10 + y, a10 + ym)
numpy/ma/tests/test_core.py:1040:            assert_equal(a10 - y, a10 - ym)
numpy/ma/tests/test_core.py:1041:            assert_equal(a10 * y, a10 * ym)
numpy/ma/tests/test_core.py:1042:            assert_equal(a10 / y, a10 / ym)
numpy/ma/tests/test_core.py:1043:            assert_equal(x + a10, xm + a10)
numpy/ma/tests/test_core.py:1044:            assert_equal(x - a10, xm - a10)
numpy/ma/tests/test_core.py:1045:            assert_equal(x * a10, xm * a10)
numpy/ma/tests/test_core.py:1046:            assert_equal(x / a10, xm / a10)
numpy/ma/tests/test_core.py:1047:            assert_equal(x ** 2, xm ** 2)
numpy/ma/tests/test_core.py:1048:            assert_equal(abs(x) ** 2.5, abs(xm) ** 2.5)
numpy/ma/tests/test_core.py:1049:            assert_equal(x ** y, xm ** ym)
numpy/ma/tests/test_core.py:1050:            assert_equal(np.add(x, y), add(xm, ym))
numpy/ma/tests/test_core.py:1051:            assert_equal(np.subtract(x, y), subtract(xm, ym))
numpy/ma/tests/test_core.py:1052:            assert_equal(np.multiply(x, y), multiply(xm, ym))
numpy/ma/tests/test_core.py:1053:            assert_equal(np.divide(x, y), divide(xm, ym))
numpy/ma/tests/test_core.py:1061:        assert_equal(z, [[-1., 1., 1.], [-1., 4., 2.5]])
numpy/ma/tests/test_core.py:1062:        assert_equal(z.mask, [[1, 0, 0], [1, 0, 0]])
numpy/ma/tests/test_core.py:1065:        assert_equal(z, [[-1., 1., 1.], [-1., 4., 2.5]])
numpy/ma/tests/test_core.py:1066:        assert_equal(z.mask, [[1, 0, 0], [1, 0, 0]])
numpy/ma/tests/test_core.py:1070:        assert_equal(z, [[-1., -1., -1.], [3., 4., 5.]])
numpy/ma/tests/test_core.py:1071:        assert_equal(z.mask, [[1, 1, 1], [0, 0, 0]])
numpy/ma/tests/test_core.py:1077:        assert_(isinstance(na + ma, MaskedArray))
numpy/ma/tests/test_core.py:1078:        assert_(isinstance(ma + na, MaskedArray))
numpy/ma/tests/test_core.py:1083:        assert_equal(getmaskarray(a / 2), [0, 0, 0])
numpy/ma/tests/test_core.py:1084:        assert_equal(getmaskarray(2 / a), [1, 0, 1])
numpy/ma/tests/test_core.py:1090:        assert_((1 / array(0)).mask)
numpy/ma/tests/test_core.py:1091:        assert_((1 + xm).mask)
numpy/ma/tests/test_core.py:1092:        assert_((-xm).mask)
numpy/ma/tests/test_core.py:1093:        assert_(maximum(xm, xm).mask)
numpy/ma/tests/test_core.py:1094:        assert_(minimum(xm, xm).mask)
numpy/ma/tests/test_core.py:1099:        assert_((a[0] == 0) is masked)
numpy/ma/tests/test_core.py:1100:        assert_((a[0] != 0) is masked)
numpy/ma/tests/test_core.py:1101:        assert_equal((a[-1] == 0), False)
numpy/ma/tests/test_core.py:1102:        assert_equal((a[-1] != 0), True)
numpy/ma/tests/test_core.py:1108:        assert_equal(y.shape, x.shape)
numpy/ma/tests/test_core.py:1109:        assert_equal(y._mask, [True, True])
numpy/ma/tests/test_core.py:1111:        assert_(y is masked)
numpy/ma/tests/test_core.py:1113:        assert_equal(y.shape, x.shape)
numpy/ma/tests/test_core.py:1114:        assert_equal(y._mask, [True, True])
numpy/ma/tests/test_core.py:1120:        assert_equal(y.shape, x.shape)
numpy/ma/tests/test_core.py:1121:        assert_equal(y.mask, [True, ])
numpy/ma/tests/test_core.py:1125:        assert_equal(x.filled().ctypes.data, x.ctypes.data)
numpy/ma/tests/test_core.py:1128:        assert_equal(xm.shape, (2,))
numpy/ma/tests/test_core.py:1129:        assert_equal(xm.mask, [1, 1])
numpy/ma/tests/test_core.py:1134:        assert_equal(np.cos(x), cos(xm))
numpy/ma/tests/test_core.py:1135:        assert_equal(np.cosh(x), cosh(xm))
numpy/ma/tests/test_core.py:1136:        assert_equal(np.sin(x), sin(xm))
numpy/ma/tests/test_core.py:1137:        assert_equal(np.sinh(x), sinh(xm))
numpy/ma/tests/test_core.py:1138:        assert_equal(np.tan(x), tan(xm))
numpy/ma/tests/test_core.py:1139:        assert_equal(np.tanh(x), tanh(xm))
numpy/ma/tests/test_core.py:1140:        assert_equal(np.sqrt(abs(x)), sqrt(xm))
numpy/ma/tests/test_core.py:1141:        assert_equal(np.log(abs(x)), log(xm))
numpy/ma/tests/test_core.py:1142:        assert_equal(np.log10(abs(x)), log10(xm))
numpy/ma/tests/test_core.py:1143:        assert_equal(np.exp(x), exp(xm))
numpy/ma/tests/test_core.py:1144:        assert_equal(np.arcsin(z), arcsin(zm))
numpy/ma/tests/test_core.py:1145:        assert_equal(np.arccos(z), arccos(zm))
numpy/ma/tests/test_core.py:1146:        assert_equal(np.arctan(z), arctan(zm))
numpy/ma/tests/test_core.py:1147:        assert_equal(np.arctan2(x, y), arctan2(xm, ym))
numpy/ma/tests/test_core.py:1148:        assert_equal(np.absolute(x), absolute(xm))
numpy/ma/tests/test_core.py:1149:        assert_equal(np.angle(x + 1j*y), angle(xm + 1j*ym))
numpy/ma/tests/test_core.py:1150:        assert_equal(np.angle(x + 1j*y, deg=True), angle(xm + 1j*ym, deg=True))
numpy/ma/tests/test_core.py:1151:        assert_equal(np.equal(x, y), equal(xm, ym))
numpy/ma/tests/test_core.py:1152:        assert_equal(np.not_equal(x, y), not_equal(xm, ym))
numpy/ma/tests/test_core.py:1153:        assert_equal(np.less(x, y), less(xm, ym))
numpy/ma/tests/test_core.py:1154:        assert_equal(np.greater(x, y), greater(xm, ym))
numpy/ma/tests/test_core.py:1155:        assert_equal(np.less_equal(x, y), less_equal(xm, ym))
numpy/ma/tests/test_core.py:1156:        assert_equal(np.greater_equal(x, y), greater_equal(xm, ym))
numpy/ma/tests/test_core.py:1157:        assert_equal(np.conjugate(x), conjugate(xm))
numpy/ma/tests/test_core.py:1161:        assert_equal(1, count(1))
numpy/ma/tests/test_core.py:1162:        assert_equal(0, array(1, mask=[1]))
numpy/ma/tests/test_core.py:1166:        assert_(res.dtype.type is np.intp)
numpy/ma/tests/test_core.py:1167:        assert_equal(3, res)
numpy/ma/tests/test_core.py:1171:        assert_(res.dtype.type is np.intp)
numpy/ma/tests/test_core.py:1172:        assert_equal(3, res)
numpy/ma/tests/test_core.py:1174:        assert_(isinstance(res, ndarray))
numpy/ma/tests/test_core.py:1175:        assert_equal([1, 2], res)
numpy/ma/tests/test_core.py:1176:        assert_(getmask(res) is nomask)
numpy/ma/tests/test_core.py:1180:        assert_(isinstance(res, ndarray))
numpy/ma/tests/test_core.py:1181:        assert_(res.dtype.type is np.intp)
numpy/ma/tests/test_core.py:1182:        assert_raises(np.AxisError, ott.count, axis=1)
numpy/ma/tests/test_core.py:1186:        assert_equal(3, count([1,2,3]))
numpy/ma/tests/test_core.py:1187:        assert_equal(2, count((1,2)))
numpy/ma/tests/test_core.py:1196:        assert_equal(max(xr), maximum.reduce(xmr))
numpy/ma/tests/test_core.py:1197:        assert_equal(min(xr), minimum.reduce(xmr))
numpy/ma/tests/test_core.py:1199:        assert_equal(minimum([1, 2, 3], [4, 0, 9]), [1, 0, 3])
numpy/ma/tests/test_core.py:1200:        assert_equal(maximum([1, 2, 3], [4, 0, 9]), [4, 2, 9])
numpy/ma/tests/test_core.py:1205:        assert_equal(minimum(x, y), where(less(x, y), x, y))
numpy/ma/tests/test_core.py:1206:        assert_equal(maximum(x, y), where(greater(x, y), x, y))
numpy/ma/tests/test_core.py:1207:        assert_(minimum.reduce(x) == 0)
numpy/ma/tests/test_core.py:1208:        assert_(maximum.reduce(x) == 4)
numpy/ma/tests/test_core.py:1212:        assert_equal(maximum.reduce(x, axis=None), 2)
numpy/ma/tests/test_core.py:1217:        assert_(isinstance(aminimum, MaskedArray))
numpy/ma/tests/test_core.py:1218:        assert_equal(aminimum, np.minimum(a, a))
numpy/ma/tests/test_core.py:1221:        assert_(isinstance(aminimum, MaskedArray))
numpy/ma/tests/test_core.py:1222:        assert_equal(aminimum, np.minimum.outer(a, a))
numpy/ma/tests/test_core.py:1225:        assert_(isinstance(amaximum, MaskedArray))
numpy/ma/tests/test_core.py:1226:        assert_equal(amaximum, np.maximum(a, a))
numpy/ma/tests/test_core.py:1229:        assert_(isinstance(amaximum, MaskedArray))
numpy/ma/tests/test_core.py:1230:        assert_equal(amaximum, np.maximum.outer(a, a))
numpy/ma/tests/test_core.py:1236:        assert_equal(b, 3)
numpy/ma/tests/test_core.py:1255:            assert_(result is nout)
numpy/ma/tests/test_core.py:1259:            assert_(result is nout)
numpy/ma/tests/test_core.py:1265:        assert_equal(xm.max(), 10)
numpy/ma/tests/test_core.py:1266:        assert_(xm[0].max() is masked)
numpy/ma/tests/test_core.py:1267:        assert_(xm[0].max(0) is masked)
numpy/ma/tests/test_core.py:1268:        assert_(xm[0].max(-1) is masked)
numpy/ma/tests/test_core.py:1269:        assert_equal(xm.min(), -10.)
numpy/ma/tests/test_core.py:1270:        assert_(xm[0].min() is masked)
numpy/ma/tests/test_core.py:1271:        assert_(xm[0].min(0) is masked)
numpy/ma/tests/test_core.py:1272:        assert_(xm[0].min(-1) is masked)
numpy/ma/tests/test_core.py:1273:        assert_equal(xm.ptp(), 20.)
numpy/ma/tests/test_core.py:1274:        assert_(xm[0].ptp() is masked)
numpy/ma/tests/test_core.py:1275:        assert_(xm[0].ptp(0) is masked)
numpy/ma/tests/test_core.py:1276:        assert_(xm[0].ptp(-1) is masked)
numpy/ma/tests/test_core.py:1279:        assert_(x.min() is masked)
numpy/ma/tests/test_core.py:1280:        assert_(x.max() is masked)
numpy/ma/tests/test_core.py:1281:        assert_(x.ptp() is masked)
numpy/ma/tests/test_core.py:1294:            assert_equal(masked_array(x, mask=m1, dtype=float_dtype).max(),
numpy/ma/tests/test_core.py:1296:            assert_equal(masked_array(x, mask=m1, dtype=float_dtype).min(),
numpy/ma/tests/test_core.py:1299:        assert_equal(xm.min(), an10)
numpy/ma/tests/test_core.py:1300:        assert_equal(xm.max(), a10)
numpy/ma/tests/test_core.py:1304:            assert_equal(masked_array(x, mask=m1, dtype=float_dtype).max(),
numpy/ma/tests/test_core.py:1306:            assert_equal(masked_array(x, mask=m1, dtype=float_dtype).min(),
numpy/ma/tests/test_core.py:1313:            assert_equal(ym.min(), float_dtype(1e20-1j))
numpy/ma/tests/test_core.py:1314:            assert_equal(ym.max(), float_dtype(1e20+1j))
numpy/ma/tests/test_core.py:1318:            assert_equal(zm.min(), float_dtype(-np.inf-1j))
numpy/ma/tests/test_core.py:1319:            assert_equal(zm.max(), float_dtype(np.inf+2j))
numpy/ma/tests/test_core.py:1322:            assert masked_array([-cmax, 0], mask=[0, 1]).max() == -cmax
numpy/ma/tests/test_core.py:1323:            assert masked_array([cmax, 0], mask=[0, 1]).min() == cmax
numpy/ma/tests/test_core.py:1328:        assert_equal(np.add.reduce(x), add.reduce(x))
numpy/ma/tests/test_core.py:1329:        assert_equal(np.add.accumulate(x), add.accumulate(x))
numpy/ma/tests/test_core.py:1330:        assert_equal(4, sum(array(4), axis=0))
numpy/ma/tests/test_core.py:1331:        assert_equal(4, sum(array(4), axis=0))
numpy/ma/tests/test_core.py:1332:        assert_equal(np.sum(x, axis=0), sum(x, axis=0))
numpy/ma/tests/test_core.py:1333:        assert_equal(np.sum(filled(xm, 0), axis=0), sum(xm, axis=0))
numpy/ma/tests/test_core.py:1334:        assert_equal(np.sum(x, 0), sum(x, 0))
numpy/ma/tests/test_core.py:1335:        assert_equal(np.product(x, axis=0), product(x, axis=0))
numpy/ma/tests/test_core.py:1336:        assert_equal(np.product(x, 0), product(x, 0))
numpy/ma/tests/test_core.py:1337:        assert_equal(np.product(filled(xm, 1), axis=0), product(xm, axis=0))
numpy/ma/tests/test_core.py:1341:            assert_equal(np.concatenate((x, y), 1), concatenate((xm, ym), 1))
numpy/ma/tests/test_core.py:1342:            assert_equal(np.add.reduce(x, 1), add.reduce(x, 1))
numpy/ma/tests/test_core.py:1343:            assert_equal(np.sum(x, 1), sum(x, 1))
numpy/ma/tests/test_core.py:1344:            assert_equal(np.product(x, 1), product(x, 1))
numpy/ma/tests/test_core.py:1354:        assert_equal(test, control)
numpy/ma/tests/test_core.py:1355:        assert_equal(test.data, control.data)
numpy/ma/tests/test_core.py:1356:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:1361:        assert_equal(test, control)
numpy/ma/tests/test_core.py:1362:        assert_equal(test.data, control.data)
numpy/ma/tests/test_core.py:1363:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:1371:        assert_equal(test, control)
numpy/ma/tests/test_core.py:1372:        assert_equal(test.data, control.data)
numpy/ma/tests/test_core.py:1373:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:1378:        assert_equal(test, control)
numpy/ma/tests/test_core.py:1379:        assert_equal(test.data, control.data)
numpy/ma/tests/test_core.py:1380:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:1390:        assert_equal(test, control)
numpy/ma/tests/test_core.py:1391:        assert_equal(test.data, control.data)
numpy/ma/tests/test_core.py:1392:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:1397:        assert_equal(test, control)
numpy/ma/tests/test_core.py:1398:        assert_equal(test.data, control.data)
numpy/ma/tests/test_core.py:1399:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:1407:        assert_equal(test, control)
numpy/ma/tests/test_core.py:1408:        assert_equal(test.data, control.data)
numpy/ma/tests/test_core.py:1409:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:1414:        assert_equal(test, control)
numpy/ma/tests/test_core.py:1415:        assert_equal(test.data, control.data)
numpy/ma/tests/test_core.py:1416:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:1424:        assert_equal(b.mask, [0, 0, 0])
numpy/ma/tests/test_core.py:1427:        assert_equal(a.mask, [0, 0, 0])
numpy/ma/tests/test_core.py:1430:        assert_equal(b.mask, [0, 0, 0])
numpy/ma/tests/test_core.py:1433:        assert_equal(a.mask, [0, 0, 0])
numpy/ma/tests/test_core.py:1439:        assert_equal(np.true_divide(m, 5).mask.shape, ())
numpy/ma/tests/test_core.py:1444:        assert_equal(a.mask, [0, 0, 0])
numpy/ma/tests/test_core.py:1449:        assert_equal(mod(x, y), mod(xm, ym))
numpy/ma/tests/test_core.py:1451:        assert_equal(test, np.mod(ym, xm))
numpy/ma/tests/test_core.py:1452:        assert_equal(test.mask, mask_or(xm.mask, ym.mask))
numpy/ma/tests/test_core.py:1454:        assert_equal(test, np.mod(xm, ym))
numpy/ma/tests/test_core.py:1455:        assert_equal(test.mask, mask_or(mask_or(xm.mask, ym.mask), (ym == 0)))
numpy/ma/tests/test_core.py:1464:        assert_equal(np.transpose(y, (2, 0, 1)), transpose(x, (2, 0, 1)))
numpy/ma/tests/test_core.py:1465:        assert_equal(np.take(y, (2, 0, 1), 1), take(x, (2, 0, 1), 1))
numpy/ma/tests/test_core.py:1466:        assert_equal(np.inner(filled(x, 0), filled(y, 0)),
numpy/ma/tests/test_core.py:1468:        assert_equal(np.outer(filled(x, 0), filled(y, 0)),
numpy/ma/tests/test_core.py:1473:        assert_(t[0] == 'abc')
numpy/ma/tests/test_core.py:1474:        assert_(t[1] == 2)
numpy/ma/tests/test_core.py:1475:        assert_(t[2] == 3)
numpy/ma/tests/test_core.py:1480:        assert_equal(xx.imag, [10, 2])
numpy/ma/tests/test_core.py:1481:        assert_equal(xx.imag.filled(), [1e+20, 2])
numpy/ma/tests/test_core.py:1482:        assert_equal(xx.imag.dtype, xx._data.imag.dtype)
numpy/ma/tests/test_core.py:1483:        assert_equal(xx.real, [1, 20])
numpy/ma/tests/test_core.py:1484:        assert_equal(xx.real.filled(), [1e+20, 20])
numpy/ma/tests/test_core.py:1485:        assert_equal(xx.real.dtype, xx._data.real.dtype)
numpy/ma/tests/test_core.py:1501:            assert_(result is output)
numpy/ma/tests/test_core.py:1502:            assert_equal(result, xmmeth(axis=0, out=output))
numpy/ma/tests/test_core.py:1506:            assert_(result is output)
numpy/ma/tests/test_core.py:1507:            assert_(output[0] is masked)
numpy/ma/tests/test_core.py:1515:        assert_equal(test.data, [True, True])
numpy/ma/tests/test_core.py:1516:        assert_equal(test.mask, [False, False])
numpy/ma/tests/test_core.py:1517:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1520:        assert_equal(test.data, [True, False])
numpy/ma/tests/test_core.py:1521:        assert_equal(test.mask, [False, False])
numpy/ma/tests/test_core.py:1522:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1526:        assert_equal(test.data, [False, True])
numpy/ma/tests/test_core.py:1527:        assert_equal(test.mask, [True, False])
numpy/ma/tests/test_core.py:1528:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1531:        assert_equal(test.data, [False, False])
numpy/ma/tests/test_core.py:1532:        assert_equal(test.mask, [True, False])
numpy/ma/tests/test_core.py:1533:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1537:        assert_equal(test.data, [True, True])
numpy/ma/tests/test_core.py:1538:        assert_equal(test.mask, [False, False])
numpy/ma/tests/test_core.py:1539:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1548:        assert_equal(test.data, [[True, False], [False, False]])
numpy/ma/tests/test_core.py:1549:        assert_equal(test.mask, [[False, False], [False, True]])
numpy/ma/tests/test_core.py:1550:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1558:        assert_equal(test.data, [False, False])
numpy/ma/tests/test_core.py:1559:        assert_equal(test.mask, [False, False])
numpy/ma/tests/test_core.py:1560:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1563:        assert_equal(test.data, [False, True])
numpy/ma/tests/test_core.py:1564:        assert_equal(test.mask, [False, False])
numpy/ma/tests/test_core.py:1565:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1569:        assert_equal(test.data, [True, False])
numpy/ma/tests/test_core.py:1570:        assert_equal(test.mask, [True, False])
numpy/ma/tests/test_core.py:1571:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1574:        assert_equal(test.data, [True, True])
numpy/ma/tests/test_core.py:1575:        assert_equal(test.mask, [True, False])
numpy/ma/tests/test_core.py:1576:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1580:        assert_equal(test.data, [False, False])
numpy/ma/tests/test_core.py:1581:        assert_equal(test.mask, [False, False])
numpy/ma/tests/test_core.py:1582:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1591:        assert_equal(test.data, [[False, True], [True, True]])
numpy/ma/tests/test_core.py:1592:        assert_equal(test.mask, [[False, False], [False, True]])
numpy/ma/tests/test_core.py:1593:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1612:                assert_equal(m1 == m2, eq_expected)
numpy/ma/tests/test_core.py:1613:                assert_equal(m2 == m1, eq_expected)
numpy/ma/tests/test_core.py:1614:                assert_equal(ma1 == m2, eq_expected)
numpy/ma/tests/test_core.py:1615:                assert_equal(m1 == ma2, eq_expected)
numpy/ma/tests/test_core.py:1616:                assert_equal(ma1 == ma2, eq_expected)
numpy/ma/tests/test_core.py:1619:                assert_equal(array(el_by_el, dtype=bool).all(), eq_expected)
numpy/ma/tests/test_core.py:1621:                assert_equal(m1 != m2, ne_expected)
numpy/ma/tests/test_core.py:1622:                assert_equal(m2 != m1, ne_expected)
numpy/ma/tests/test_core.py:1623:                assert_equal(ma1 != m2, ne_expected)
numpy/ma/tests/test_core.py:1624:                assert_equal(m1 != ma2, ne_expected)
numpy/ma/tests/test_core.py:1625:                assert_equal(ma1 != ma2, ne_expected)
numpy/ma/tests/test_core.py:1627:                assert_equal(array(el_by_el, dtype=bool).any(), ne_expected)
numpy/ma/tests/test_core.py:1636:        assert_equal(test.data, [True, True])
numpy/ma/tests/test_core.py:1637:        assert_equal(test.mask, [False, True])
numpy/ma/tests/test_core.py:1638:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1641:        assert_equal(test.data, [True, False])
numpy/ma/tests/test_core.py:1642:        assert_equal(test.mask, [False, True])
numpy/ma/tests/test_core.py:1643:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1647:        assert_equal(test.data, [False, False])
numpy/ma/tests/test_core.py:1648:        assert_equal(test.mask, [True, True])
numpy/ma/tests/test_core.py:1649:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1652:        assert_equal(test.data, [False, False])
numpy/ma/tests/test_core.py:1653:        assert_equal(test.mask, [True, False])
numpy/ma/tests/test_core.py:1654:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1657:        assert_equal(test.data, [False, False])
numpy/ma/tests/test_core.py:1658:        assert_equal(test.mask, [True, False])
numpy/ma/tests/test_core.py:1659:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1668:        assert_equal(test.data, [False, False])
numpy/ma/tests/test_core.py:1669:        assert_equal(test.mask, [False, True])
numpy/ma/tests/test_core.py:1670:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1673:        assert_equal(test.data, [False, True])
numpy/ma/tests/test_core.py:1674:        assert_equal(test.mask, [False, True])
numpy/ma/tests/test_core.py:1675:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1679:        assert_equal(test.data, [True, True])
numpy/ma/tests/test_core.py:1680:        assert_equal(test.mask, [True, True])
numpy/ma/tests/test_core.py:1681:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1684:        assert_equal(test.data, [True, True])
numpy/ma/tests/test_core.py:1685:        assert_equal(test.mask, [True, False])
numpy/ma/tests/test_core.py:1686:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1689:        assert_equal(test.data, [True, True])
numpy/ma/tests/test_core.py:1690:        assert_equal(test.mask, [True, False])
numpy/ma/tests/test_core.py:1691:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1701:        assert_equal(test.data, [True, True])
numpy/ma/tests/test_core.py:1702:        assert_equal(test.mask, [False, True])
numpy/ma/tests/test_core.py:1703:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1706:        assert_equal(test.data, [True, False])
numpy/ma/tests/test_core.py:1707:        assert_equal(test.mask, [False, True])
numpy/ma/tests/test_core.py:1708:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1712:        assert_equal(test.data, [False, False])
numpy/ma/tests/test_core.py:1713:        assert_equal(test.mask, [True, True])
numpy/ma/tests/test_core.py:1714:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1717:        assert_equal(test.data, [False, False])
numpy/ma/tests/test_core.py:1718:        assert_equal(test.mask, [True, False])
numpy/ma/tests/test_core.py:1719:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1722:        assert_equal(test.data, [False, False])
numpy/ma/tests/test_core.py:1723:        assert_equal(test.mask, [True, False])
numpy/ma/tests/test_core.py:1724:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1734:        assert_equal(test.data, [False, False])
numpy/ma/tests/test_core.py:1735:        assert_equal(test.mask, [False, True])
numpy/ma/tests/test_core.py:1736:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1739:        assert_equal(test.data, [False, True])
numpy/ma/tests/test_core.py:1740:        assert_equal(test.mask, [False, True])
numpy/ma/tests/test_core.py:1741:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1745:        assert_equal(test.data, [True, True])
numpy/ma/tests/test_core.py:1746:        assert_equal(test.mask, [True, True])
numpy/ma/tests/test_core.py:1747:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1750:        assert_equal(test.data, [True, True])
numpy/ma/tests/test_core.py:1751:        assert_equal(test.mask, [True, False])
numpy/ma/tests/test_core.py:1752:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1755:        assert_equal(test.data, [True, True])
numpy/ma/tests/test_core.py:1756:        assert_equal(test.mask, [True, False])
numpy/ma/tests/test_core.py:1757:        assert_(test.fill_value == True)
numpy/ma/tests/test_core.py:1769:            assert_equal(a == None, array([True, False], mask=[0, 1]))
numpy/ma/tests/test_core.py:1770:            assert_equal(a.data == None, [True, False])
numpy/ma/tests/test_core.py:1771:            assert_equal(a != None, array([False, True], mask=[0, 1]))
numpy/ma/tests/test_core.py:1774:            assert_equal(a == None, [True, False])
numpy/ma/tests/test_core.py:1775:            assert_equal(a != None, [False, True])
numpy/ma/tests/test_core.py:1778:            assert_equal(a == None, array([False, True], mask=True))
numpy/ma/tests/test_core.py:1779:            assert_equal(a != None, array([True, False], mask=True))
numpy/ma/tests/test_core.py:1782:            assert_equal(a == None, masked)
numpy/ma/tests/test_core.py:1786:        assert_equal(a == 1, True)
numpy/ma/tests/test_core.py:1787:        assert_equal(a == 0, False)
numpy/ma/tests/test_core.py:1788:        assert_equal(a != 1, False)
numpy/ma/tests/test_core.py:1789:        assert_equal(a != 0, True)
numpy/ma/tests/test_core.py:1791:        assert_equal(b == 0, masked)
numpy/ma/tests/test_core.py:1792:        assert_equal(b == 1, masked)
numpy/ma/tests/test_core.py:1793:        assert_equal(b != 0, masked)
numpy/ma/tests/test_core.py:1794:        assert_equal(b != 1, masked)
numpy/ma/tests/test_core.py:1814:        assert_equal(test, control)
numpy/ma/tests/test_core.py:1815:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:1816:        assert_equal(a.mask, [0, 0, 0, 0, 1])
numpy/ma/tests/test_core.py:1819:        assert_equal(test, control)
numpy/ma/tests/test_core.py:1820:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:1821:        assert_equal(a.mask, [0, 0, 0, 0, 1])
numpy/ma/tests/test_core.py:1830:        assert_equal(mx.mask, x.mask)
numpy/ma/tests/test_core.py:1832:        assert_equal(mx.mask, [0, 1, 0])
numpy/ma/tests/test_core.py:1834:        assert_equal(mx.mask, [1, 1, 0])
numpy/ma/tests/test_core.py:1837:        assert_equal(mx.mask, [1, 1, 0])
numpy/ma/tests/test_core.py:1849:        assert_equal(xh._data, [0, 10, 2, 3, 4])
numpy/ma/tests/test_core.py:1850:        assert_equal(xs._data, [0, 10, 2, 3, 40])
numpy/ma/tests/test_core.py:1851:        assert_equal(xs.mask, [0, 0, 0, 1, 0])
numpy/ma/tests/test_core.py:1852:        assert_(xh._hardmask)
numpy/ma/tests/test_core.py:1853:        assert_(not xs._hardmask)
numpy/ma/tests/test_core.py:1856:        assert_equal(xh._data, [0, 10, 20, 3, 4])
numpy/ma/tests/test_core.py:1857:        assert_equal(xs._data, [0, 10, 20, 30, 40])
numpy/ma/tests/test_core.py:1858:        assert_equal(xs.mask, nomask)
numpy/ma/tests/test_core.py:1861:        assert_equal(xh.mask, [1, 0, 0, 1, 1])
numpy/ma/tests/test_core.py:1862:        assert_equal(xs.mask, [1, 0, 0, 0, 0])
numpy/ma/tests/test_core.py:1865:        assert_equal(xh._data, [0, 1, 1, 3, 4])
numpy/ma/tests/test_core.py:1866:        assert_equal(xs._data, [1, 1, 1, 1, 1])
numpy/ma/tests/test_core.py:1867:        assert_equal(xh.mask, [1, 0, 0, 1, 1])
numpy/ma/tests/test_core.py:1868:        assert_equal(xs.mask, nomask)
numpy/ma/tests/test_core.py:1872:        assert_equal(xh._data, [0, 1, 2, 3, 4])
numpy/ma/tests/test_core.py:1873:        assert_equal(xh.mask, nomask)
numpy/ma/tests/test_core.py:1877:        assert_equal(xh._data, [0, 1, 2, 3, 4])
numpy/ma/tests/test_core.py:1878:        assert_equal(xh._mask, [1, 1, 1, 0, 0])
numpy/ma/tests/test_core.py:1880:        assert_equal(xh._data, [0, 1, 2, 5, 5])
numpy/ma/tests/test_core.py:1881:        assert_equal(xh._mask, [1, 1, 1, 0, 0])
numpy/ma/tests/test_core.py:1885:        assert_equal(xh._data, [[1, 0], [3, 4]])
numpy/ma/tests/test_core.py:1886:        assert_equal(xh._mask, [[1, 0], [0, 0]])
numpy/ma/tests/test_core.py:1888:        assert_equal(xh._data, [[1, 0], [3, 5]])
numpy/ma/tests/test_core.py:1889:        assert_equal(xh._mask, [[1, 0], [0, 0]])
numpy/ma/tests/test_core.py:1891:        assert_equal(xh._data, [[1, 2], [2, 5]])
numpy/ma/tests/test_core.py:1892:        assert_equal(xh._mask, [[1, 0], [0, 0]])
numpy/ma/tests/test_core.py:1902:        assert_equal(xh._data, [999, 1, 2, 3, 4])
numpy/ma/tests/test_core.py:1909:        assert_equal(a, b)
numpy/ma/tests/test_core.py:1911:        assert_equal(a, b)
numpy/ma/tests/test_core.py:1912:        assert_equal(b, array([1, 2, 3], mask=[1, 0, 0]))
numpy/ma/tests/test_core.py:1915:        assert_equal(a, b)
numpy/ma/tests/test_core.py:1916:        assert_equal(b, array([0, 2, 3], mask=[0, 0, 0]))
numpy/ma/tests/test_core.py:1923:        assert_equal(a._mask, nomask)
numpy/ma/tests/test_core.py:1928:        assert_equal(a._mask, zeros(10))
numpy/ma/tests/test_core.py:1934:        assert_equal(a, b)
numpy/ma/tests/test_core.py:1935:        assert_equal(a.mask, nomask)
numpy/ma/tests/test_core.py:1941:        assert_equal(a.mask, b.mask)
numpy/ma/tests/test_core.py:1955:        assert_equal(xflat[0], x[0, 0])
numpy/ma/tests/test_core.py:1956:        assert_equal(xflat[1], x[0, 1])
numpy/ma/tests/test_core.py:1957:        assert_equal(xflat[2], x[0, 2])
numpy/ma/tests/test_core.py:1958:        assert_equal(xflat[:3], x[0])
numpy/ma/tests/test_core.py:1959:        assert_equal(xflat[3], x[1, 0])
numpy/ma/tests/test_core.py:1960:        assert_equal(xflat[4], x[1, 1])
numpy/ma/tests/test_core.py:1961:        assert_equal(xflat[5], x[1, 2])
numpy/ma/tests/test_core.py:1962:        assert_equal(xflat[3:], x[1])
numpy/ma/tests/test_core.py:1963:        assert_equal(xflat[-1], x[-1, -1])
numpy/ma/tests/test_core.py:1967:            assert_equal(xf, x[j, i])
numpy/ma/tests/test_core.py:1980:        assert_equal(m.dtype, np.dtype('f4'))
numpy/ma/tests/test_core.py:1987:        assert_raises(ValueError, assign)
numpy/ma/tests/test_core.py:1990:        assert_equal(b.dtype, np.dtype('f4'))
numpy/ma/tests/test_core.py:1996:        assert_equal(m.dtype, np.dtype('f4,i4'))
numpy/ma/tests/test_core.py:1997:        assert_equal(m._mask, np.ma.nomask)
numpy/ma/tests/test_core.py:2007:        assert_equal(fval, 0)
numpy/ma/tests/test_core.py:2009:        assert_equal(fval, default_fill_value(0))
numpy/ma/tests/test_core.py:2012:        assert_equal(fval, b"0")
numpy/ma/tests/test_core.py:2014:        assert_equal(fval, default_fill_value(b"camelot!"))
numpy/ma/tests/test_core.py:2015:        assert_raises(TypeError, _check_fill_value, 1e+20, int)
numpy/ma/tests/test_core.py:2016:        assert_raises(TypeError, _check_fill_value, 'stuff', int)
numpy/ma/tests/test_core.py:2024:        assert_(isinstance(fval, ndarray))
numpy/ma/tests/test_core.py:2025:        assert_equal(fval.item(), [-999, -12345678.9, b"???"])
numpy/ma/tests/test_core.py:2028:        assert_(isinstance(fval, ndarray))
numpy/ma/tests/test_core.py:2029:        assert_equal(fval.item(), [default_fill_value(0),
numpy/ma/tests/test_core.py:2035:        assert_(isinstance(fval, ndarray))
numpy/ma/tests/test_core.py:2036:        assert_equal(fval.item(), [-999, -12345678.9, b"???"])
numpy/ma/tests/test_core.py:2044:        assert_(isinstance(fval, ndarray))
numpy/ma/tests/test_core.py:2045:        assert_equal(fval.item(), [-999, -12345678.9, b"???"])
numpy/ma/tests/test_core.py:2051:        assert_(isinstance(fval, ndarray))
numpy/ma/tests/test_core.py:2052:        assert_equal(fval.item(), [-999, -12345678.9, b"???"])
numpy/ma/tests/test_core.py:2062:        assert_(isinstance(fval, ndarray))
numpy/ma/tests/test_core.py:2063:        assert_equal(fval.item(), (-999999999,))
numpy/ma/tests/test_core.py:2073:        assert_equal(b._data, [3, 4, 5])
numpy/ma/tests/test_core.py:2074:        assert_equal(b.fill_value, default_fill_value(0))
numpy/ma/tests/test_core.py:2077:        assert_equal(b._data, [3, 4, 5])
numpy/ma/tests/test_core.py:2078:        assert_equal(b.fill_value, default_fill_value(0.))
numpy/ma/tests/test_core.py:2081:        assert_equal(b._data, [3, 4, 5])
numpy/ma/tests/test_core.py:2082:        assert_equal(b.fill_value, default_fill_value(0))
numpy/ma/tests/test_core.py:2083:        assert_equal(b._optinfo['comment'], "updated!")
numpy/ma/tests/test_core.py:2086:        assert_equal(b['a']._data, a._data)
numpy/ma/tests/test_core.py:2087:        assert_equal(b['a'].fill_value, a.fill_value)
numpy/ma/tests/test_core.py:2094:        assert_equal(f1, f2)
numpy/ma/tests/test_core.py:2095:        assert_equal(f1, f3)
numpy/ma/tests/test_core.py:2106:        assert_equal(f1, expected)
numpy/ma/tests/test_core.py:2107:        assert_equal(f2, expected)
numpy/ma/tests/test_core.py:2112:        assert_equal(f['v'], np.array(default_fill_value(dt['v']), dt['v']))
numpy/ma/tests/test_core.py:2118:        assert_equal(series._fill_value, data._fill_value)
numpy/ma/tests/test_core.py:2123:        assert_equal(x.fill_value.item(), [999., b'999'])
numpy/ma/tests/test_core.py:2124:        assert_equal(x['f'].fill_value, 999)
numpy/ma/tests/test_core.py:2125:        assert_equal(x['s'].fill_value, b'999')
numpy/ma/tests/test_core.py:2128:        assert_equal(x.fill_value.item(), (9, b'???'))
numpy/ma/tests/test_core.py:2129:        assert_equal(x['f'].fill_value, 9)
numpy/ma/tests/test_core.py:2130:        assert_equal(x['s'].fill_value, b'???')
numpy/ma/tests/test_core.py:2134:        assert_equal(np.asarray(x.fill_value).dtype, float)
numpy/ma/tests/test_core.py:2135:        assert_equal(x.fill_value, 999.)
numpy/ma/tests/test_core.py:2136:        assert_equal(x._fill_value, np.array(999.))
numpy/ma/tests/test_core.py:2145:            assert_equal(tuple(subfields.fill_value), (999999, 1.e+20))
numpy/ma/tests/test_core.py:2157:        assert_equal(_check_fill_value(None, ndtype), control)
numpy/ma/tests/test_core.py:2162:        assert_equal(_check_fill_value(None, ndtype), control)
numpy/ma/tests/test_core.py:2164:        assert_equal(_check_fill_value(0, ndtype), control)
numpy/ma/tests/test_core.py:2172:        assert_equal(test, control)
numpy/ma/tests/test_core.py:2174:        assert_equal(_check_fill_value(0, ndtype), control)
numpy/ma/tests/test_core.py:2178:        assert_equal(M["f1"].fill_value.ndim, 0)
numpy/ma/tests/test_core.py:2200:        assert_equal(test.dtype, a.dtype)
numpy/ma/tests/test_core.py:2201:        assert_equal(test['A'], default_fill_value(a['A']))
numpy/ma/tests/test_core.py:2202:        assert_equal(test['B']['BA'], default_fill_value(a['B']['BA']))
numpy/ma/tests/test_core.py:2203:        assert_equal(test['B']['BB'], default_fill_value(a['B']['BB']))
numpy/ma/tests/test_core.py:2206:        assert_equal(test.dtype, a.dtype)
numpy/ma/tests/test_core.py:2207:        assert_equal(test[0], minimum_fill_value(a['A']))
numpy/ma/tests/test_core.py:2208:        assert_equal(test[1][0], minimum_fill_value(a['B']['BA']))
numpy/ma/tests/test_core.py:2209:        assert_equal(test[1][1], minimum_fill_value(a['B']['BB']))
numpy/ma/tests/test_core.py:2210:        assert_equal(test[1], minimum_fill_value(a['B']))
numpy/ma/tests/test_core.py:2213:        assert_equal(test.dtype, a.dtype)
numpy/ma/tests/test_core.py:2214:        assert_equal(test[0], maximum_fill_value(a['A']))
numpy/ma/tests/test_core.py:2215:        assert_equal(test[1][0], maximum_fill_value(a['B']['BA']))
numpy/ma/tests/test_core.py:2216:        assert_equal(test[1][1], maximum_fill_value(a['B']['BB']))
numpy/ma/tests/test_core.py:2217:        assert_equal(test[1], maximum_fill_value(a['B']))
numpy/ma/tests/test_core.py:2223:        assert_equal(test.dtype, a.dtype)
numpy/ma/tests/test_core.py:2224:        assert_equal(test[0], np.full(3, minimum_fill_value(a['value'])))
numpy/ma/tests/test_core.py:2227:        assert_equal(test.dtype, a.dtype)
numpy/ma/tests/test_core.py:2228:        assert_equal(test[0], np.full(3, maximum_fill_value(a['value'])))
numpy/ma/tests/test_core.py:2238:        assert_equal(aa._fill_value, np.array(10))
numpy/ma/tests/test_core.py:2239:        assert_equal(tuple(a.fill_value), (10, -999))
numpy/ma/tests/test_core.py:2241:        assert_equal(tuple(a.fill_value), (10, -10))
numpy/ma/tests/test_core.py:2246:        assert_equal(tt._fill_value, np.array(10))
numpy/ma/tests/test_core.py:2247:        assert_equal(tuple(t.fill_value), (10, default_fill_value(0)))
numpy/ma/tests/test_core.py:2259:        assert_(np.isnan(f[0]))
numpy/ma/tests/test_core.py:2260:        assert_equal(f[-1], default_fill_value(1.))
numpy/ma/tests/test_core.py:2265:        assert_equal(a.fill_value, 999.)
numpy/ma/tests/test_core.py:2268:        assert_equal(a.fill_value, 999.)
numpy/ma/tests/test_core.py:2271:        assert_equal(a.fill_value, 0.)
numpy/ma/tests/test_core.py:2274:        assert_equal(a.fill_value, 0.)
numpy/ma/tests/test_core.py:2280:        assert_equal(a.shape, (3, ))
numpy/ma/tests/test_core.py:2283:        assert_equal(a.shape, (3, ))
numpy/ma/tests/test_core.py:2286:        assert_equal(a.shape, (3, ))
numpy/ma/tests/test_core.py:2296:        assert_(y.fill_value == 1)
numpy/ma/tests/test_core.py:2301:        assert_(y.fill_value == 1)
numpy/ma/tests/test_core.py:2307:        assert_(y.fill_value == 1)
numpy/ma/tests/test_core.py:2316:        assert_(y.fill_value == 2)
numpy/ma/tests/test_core.py:2320:        assert_(y.fill_value == 2)
numpy/ma/tests/test_core.py:2328:        assert_(y.fill_value == 999999)
numpy/ma/tests/test_core.py:2334:        assert_equal(a["f0"].fill_value, default_fill_value(b"spam"))
numpy/ma/tests/test_core.py:2335:        assert_equal(a["f1"].fill_value, default_fill_value("eggs"))
numpy/ma/tests/test_core.py:2378:            assert_equal(ur.filled(0), mr.filled(0), f)
numpy/ma/tests/test_core.py:2379:            assert_mask_equal(ur.mask, mr.mask, err_msg=f)
numpy/ma/tests/test_core.py:2384:        assert_(not alltrue(a, axis=0))
numpy/ma/tests/test_core.py:2385:        assert_(sometrue(a, axis=0))
numpy/ma/tests/test_core.py:2386:        assert_equal(sum(a[:3], axis=0), 0)
numpy/ma/tests/test_core.py:2387:        assert_equal(product(a, axis=0), 0)
numpy/ma/tests/test_core.py:2388:        assert_equal(add.reduce(a), pi)
numpy/ma/tests/test_core.py:2394:        assert_equal(amask.max(), a.max())
numpy/ma/tests/test_core.py:2395:        assert_equal(amask.min(), 5)
numpy/ma/tests/test_core.py:2396:        assert_equal(amask.max(0), a.max(0))
numpy/ma/tests/test_core.py:2397:        assert_equal(amask.min(0), [5, 6, 7, 8])
numpy/ma/tests/test_core.py:2398:        assert_(amask.max(1)[0].mask)
numpy/ma/tests/test_core.py:2399:        assert_(amask.min(1)[0].mask)
numpy/ma/tests/test_core.py:2407:        assert_equal(test, control)
numpy/ma/tests/test_core.py:2408:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_core.py:2409:        assert_(not isinstance(test.mask, MaskedArray))
numpy/ma/tests/test_core.py:2415:        assert_raises(TypeError, operator.mul, a, "abc")
numpy/ma/tests/test_core.py:2416:        assert_raises(TypeError, operator.truediv, a, "abc")
numpy/ma/tests/test_core.py:2428:        assert_(me * a == "My mul")
numpy/ma/tests/test_core.py:2429:        assert_(a * me == "My rmul")
numpy/ma/tests/test_core.py:2447:        assert_(a.__mul__(me_too) is NotImplemented)
numpy/ma/tests/test_core.py:2448:        assert_(all(multiply.outer(a, me_too) == "Me2rmul"))
numpy/ma/tests/test_core.py:2449:        assert_(a.__truediv__(me_too) is NotImplemented)
numpy/ma/tests/test_core.py:2450:        assert_(me_too * a == "Me2mul")
numpy/ma/tests/test_core.py:2451:        assert_(a * me_too == "Me2rmul")
numpy/ma/tests/test_core.py:2452:        assert_(a / me_too == "Me2rdiv")
numpy/ma/tests/test_core.py:2505:        assert_equal(x, y + 1)
numpy/ma/tests/test_core.py:2507:        assert_equal(xm, y + 1)
numpy/ma/tests/test_core.py:2512:        assert_(id1 == x.data.ctypes.data)
numpy/ma/tests/test_core.py:2513:        assert_equal(x, y + 1.)
numpy/ma/tests/test_core.py:2523:        assert_equal(x, y + a)
numpy/ma/tests/test_core.py:2524:        assert_equal(xm, y + a)
numpy/ma/tests/test_core.py:2525:        assert_equal(xm.mask, mask_or(m, a.mask))
numpy/ma/tests/test_core.py:2531:        assert_equal(x, y - 1)
numpy/ma/tests/test_core.py:2533:        assert_equal(xm, y - 1)
numpy/ma/tests/test_core.py:2543:        assert_equal(x, y - a)
numpy/ma/tests/test_core.py:2544:        assert_equal(xm, y - a)
numpy/ma/tests/test_core.py:2545:        assert_equal(xm.mask, mask_or(m, a.mask))
numpy/ma/tests/test_core.py:2551:        assert_equal(x, y * 2)
numpy/ma/tests/test_core.py:2553:        assert_equal(xm, y * 2)
numpy/ma/tests/test_core.py:2563:        assert_equal(x, y * a)
numpy/ma/tests/test_core.py:2564:        assert_equal(xm, y * a)
numpy/ma/tests/test_core.py:2565:        assert_equal(xm.mask, mask_or(m, a.mask))
numpy/ma/tests/test_core.py:2574:        assert_equal(x, y)
numpy/ma/tests/test_core.py:2576:        assert_equal(xm, y)
numpy/ma/tests/test_core.py:2582:        assert_equal(x, y / 2.0)
numpy/ma/tests/test_core.py:2584:        assert_equal(xm, ones((10,)))
numpy/ma/tests/test_core.py:2594:        assert_equal(x, y / a)
numpy/ma/tests/test_core.py:2595:        assert_equal(xm, y / a)
numpy/ma/tests/test_core.py:2596:        assert_equal(xm.mask, mask_or(mask_or(m, a.mask), (a == 0)))
numpy/ma/tests/test_core.py:2608:        assert_equal(z._mask, [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1])
numpy/ma/tests/test_core.py:2614:        assert_equal(xm._mask, [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1])
numpy/ma/tests/test_core.py:2623:        assert_equal(xx.data, [2, 3, 3])
numpy/ma/tests/test_core.py:2624:        assert_equal(xx.mask, [0, 0, 1])
numpy/ma/tests/test_core.py:2627:        assert_equal(x.data, [2, 3, 3])
numpy/ma/tests/test_core.py:2628:        assert_equal(x.mask, [0, 0, 1])
numpy/ma/tests/test_core.py:2632:        assert_equal(xx.data, [1, 4, 3])
numpy/ma/tests/test_core.py:2633:        assert_equal(xx.mask, [1, 0, 1])
numpy/ma/tests/test_core.py:2637:        assert_equal(x.data, [1, 4, 3])
numpy/ma/tests/test_core.py:2638:        assert_equal(x.mask, [1, 0, 1])
numpy/ma/tests/test_core.py:2645:        assert_equal(xx.data, [0, 1, 3])
numpy/ma/tests/test_core.py:2646:        assert_equal(xx.mask, [0, 0, 1])
numpy/ma/tests/test_core.py:2650:        assert_equal(x.data, [0, 1, 3])
numpy/ma/tests/test_core.py:2651:        assert_equal(x.mask, [0, 0, 1])
numpy/ma/tests/test_core.py:2655:        assert_equal(xx.data, [1, 0, 3])
numpy/ma/tests/test_core.py:2656:        assert_equal(xx.mask, [1, 0, 1])
numpy/ma/tests/test_core.py:2660:        assert_equal(x.data, [1, 0, 3])
numpy/ma/tests/test_core.py:2661:        assert_equal(x.mask, [1, 0, 1])
numpy/ma/tests/test_core.py:2668:        assert_equal(xx.data, [2, 4, 3])
numpy/ma/tests/test_core.py:2669:        assert_equal(xx.mask, [0, 0, 1])
numpy/ma/tests/test_core.py:2673:        assert_equal(x.data, [2, 4, 3])
numpy/ma/tests/test_core.py:2674:        assert_equal(x.mask, [0, 0, 1])
numpy/ma/tests/test_core.py:2678:        assert_equal(xx.data, [1, 40, 3])
numpy/ma/tests/test_core.py:2679:        assert_equal(xx.mask, [1, 0, 1])
numpy/ma/tests/test_core.py:2683:        assert_equal(x.data, [1, 40, 3])
numpy/ma/tests/test_core.py:2684:        assert_equal(x.mask, [1, 0, 1])
numpy/ma/tests/test_core.py:2691:        assert_equal(xx.data, [1 / 2., 2 / 2., 3])
numpy/ma/tests/test_core.py:2692:        assert_equal(xx.mask, [0, 0, 1])
numpy/ma/tests/test_core.py:2696:        assert_equal(x.data, [1 / 2., 2 / 2., 3])
numpy/ma/tests/test_core.py:2697:        assert_equal(x.mask, [0, 0, 1])
numpy/ma/tests/test_core.py:2701:        assert_equal(xx.data, [1., 2. / 20., 3.])
numpy/ma/tests/test_core.py:2702:        assert_equal(xx.mask, [1, 0, 1])
numpy/ma/tests/test_core.py:2706:        assert_equal(x.data, [1., 2 / 20., 3.])
numpy/ma/tests/test_core.py:2707:        assert_equal(x.mask, [1, 0, 1])
numpy/ma/tests/test_core.py:2714:        assert_equal(xx.data, [1., 2. ** 2.5, 3.])
numpy/ma/tests/test_core.py:2715:        assert_equal(xx.mask, [0, 0, 1])
numpy/ma/tests/test_core.py:2718:        assert_equal(x.data, [1., 2. ** 2.5, 3])
numpy/ma/tests/test_core.py:2719:        assert_equal(x.mask, [0, 0, 1])
numpy/ma/tests/test_core.py:2725:        assert_equal(a, [[2, 2], [4, 4]])
numpy/ma/tests/test_core.py:2727:            assert_equal(a.mask, [[0, 0], [0, 0]])
numpy/ma/tests/test_core.py:2732:        assert_equal(a, [[2, 2], [4, 4]])
numpy/ma/tests/test_core.py:2733:        assert_equal(a.mask, [[0, 1], [0, 1]])
numpy/ma/tests/test_core.py:2739:        assert_equal(a, [[0, 0], [2, 2]])
numpy/ma/tests/test_core.py:2741:            assert_equal(a.mask, [[0, 0], [0, 0]])
numpy/ma/tests/test_core.py:2746:        assert_equal(a, [[0, 0], [2, 2]])
numpy/ma/tests/test_core.py:2747:        assert_equal(a.mask, [[0, 1], [0, 1]])
numpy/ma/tests/test_core.py:2753:        assert_equal(a, [[1, 1], [3, 3]])
numpy/ma/tests/test_core.py:2755:            assert_equal(a.mask, [[0, 0], [0, 0]])
numpy/ma/tests/test_core.py:2760:        assert_equal(a, [[1, 1], [3, 3]])
numpy/ma/tests/test_core.py:2761:        assert_equal(a.mask, [[0, 1], [0, 1]])
numpy/ma/tests/test_core.py:2771:                assert_equal(x, y + t(1))
numpy/ma/tests/test_core.py:2773:                assert_equal(xm, y + t(1))
numpy/ma/tests/test_core.py:2775:                assert_equal(len(w), 0, f'Failed on type={t}.')
numpy/ma/tests/test_core.py:2788:                assert_equal(x, y + a)
numpy/ma/tests/test_core.py:2789:                assert_equal(xm, y + a)
numpy/ma/tests/test_core.py:2790:                assert_equal(xm.mask, mask_or(m, a.mask))
numpy/ma/tests/test_core.py:2792:                assert_equal(len(w), 0, f'Failed on type={t}.')
numpy/ma/tests/test_core.py:2801:                assert_equal(x, y - t(1))
numpy/ma/tests/test_core.py:2803:                assert_equal(xm, y - t(1))
numpy/ma/tests/test_core.py:2805:                assert_equal(len(w), 0, f'Failed on type={t}.')
numpy/ma/tests/test_core.py:2818:                assert_equal(x, y - a)
numpy/ma/tests/test_core.py:2819:                assert_equal(xm, y - a)
numpy/ma/tests/test_core.py:2820:                assert_equal(xm.mask, mask_or(m, a.mask))
numpy/ma/tests/test_core.py:2822:                assert_equal(len(w), 0, f'Failed on type={t}.')
numpy/ma/tests/test_core.py:2831:                assert_equal(x, y * t(2))
numpy/ma/tests/test_core.py:2833:                assert_equal(xm, y * t(2))
numpy/ma/tests/test_core.py:2835:                assert_equal(len(w), 0, f'Failed on type={t}.')
numpy/ma/tests/test_core.py:2848:                assert_equal(x, y * a)
numpy/ma/tests/test_core.py:2849:                assert_equal(xm, y * a)
numpy/ma/tests/test_core.py:2850:                assert_equal(xm.mask, mask_or(m, a.mask))
numpy/ma/tests/test_core.py:2852:                assert_equal(len(w), 0, f'Failed on type={t}.')
numpy/ma/tests/test_core.py:2868:                    assert_equal(x, y)
numpy/ma/tests/test_core.py:2869:                    assert_equal(xm, y)
numpy/ma/tests/test_core.py:2871:                    assert_equal(len(w), 0, "Failed on type=%s." % t)
numpy/ma/tests/test_core.py:2890:                    assert_equal(x, y // a)
numpy/ma/tests/test_core.py:2891:                    assert_equal(xm, y // a)
numpy/ma/tests/test_core.py:2897:                    assert_equal(len(w), 0, f'Failed on type={t}.')
numpy/ma/tests/test_core.py:2924:                    assert_equal(x, y)
numpy/ma/tests/test_core.py:2929:                    assert_equal(xm, y)
numpy/ma/tests/test_core.py:2934:                    assert_equal(len(sup.log), 2, f'Failed on type={t}.')
numpy/ma/tests/test_core.py:2936:                    assert_equal(len(sup.log), 0, f'Failed on type={t}.')
numpy/ma/tests/test_core.py:2959:                    assert_equal(x, y / a)
numpy/ma/tests/test_core.py:2964:                    assert_equal(xm, y / a)
numpy/ma/tests/test_core.py:2973:                    assert_equal(len(sup.log), 2, f'Failed on type={t}.')
numpy/ma/tests/test_core.py:2975:                    assert_equal(len(sup.log), 0, f'Failed on type={t}.')
numpy/ma/tests/test_core.py:2986:                assert_equal(xx.data, xx_r.data)
numpy/ma/tests/test_core.py:2987:                assert_equal(xx.mask, xx_r.mask)
numpy/ma/tests/test_core.py:2990:                assert_equal(x.data, xx_r.data)
numpy/ma/tests/test_core.py:2991:                assert_equal(x.mask, xx_r.mask)
numpy/ma/tests/test_core.py:2993:                assert_equal(len(w), 0, f'Failed on type={t}.')
numpy/ma/tests/test_core.py:3033:        assert_equal(a.any(), a._data.any())
numpy/ma/tests/test_core.py:3034:        assert_equal(a.all(), a._data.all())
numpy/ma/tests/test_core.py:3035:        assert_equal(a.argmax(), a._data.argmax())
numpy/ma/tests/test_core.py:3036:        assert_equal(a.argmin(), a._data.argmin())
numpy/ma/tests/test_core.py:3037:        assert_equal(a.choose(0, 1, 2, 3, 4), a._data.choose(0, 1, 2, 3, 4))
numpy/ma/tests/test_core.py:3038:        assert_equal(a.compress([1, 0, 1]), a._data.compress([1, 0, 1]))
numpy/ma/tests/test_core.py:3039:        assert_equal(a.conj(), a._data.conj())
numpy/ma/tests/test_core.py:3040:        assert_equal(a.conjugate(), a._data.conjugate())
numpy/ma/tests/test_core.py:3043:        assert_equal(m.diagonal(), m._data.diagonal())
numpy/ma/tests/test_core.py:3044:        assert_equal(a.sum(), a._data.sum())
numpy/ma/tests/test_core.py:3045:        assert_equal(a.take([1, 2]), a._data.take([1, 2]))
numpy/ma/tests/test_core.py:3046:        assert_equal(m.transpose(), m._data.transpose())
numpy/ma/tests/test_core.py:3052:        assert_(allclose(a, b))
numpy/ma/tests/test_core.py:3055:        assert_(not allclose(a, b))
numpy/ma/tests/test_core.py:3057:        assert_(allclose(a, b))
numpy/ma/tests/test_core.py:3061:        assert_(allclose(a, b, masked_equal=True))
numpy/ma/tests/test_core.py:3062:        assert_(not allclose(a, b, masked_equal=False))
numpy/ma/tests/test_core.py:3066:        assert_(allclose(a, 0, masked_equal=True))
numpy/ma/tests/test_core.py:3070:        assert_(allclose(a, a))
numpy/ma/tests/test_core.py:3076:        assert allclose(a, a, atol=0)
numpy/ma/tests/test_core.py:3077:        assert allclose(a, a, atol=np.timedelta64(1, "ns"))
numpy/ma/tests/test_core.py:3091:        assert_(not mxbig.all())
numpy/ma/tests/test_core.py:3092:        assert_(mxbig.any())
numpy/ma/tests/test_core.py:3093:        assert_equal(mxbig.all(0), [False, False, True])
numpy/ma/tests/test_core.py:3094:        assert_equal(mxbig.all(1), [False, False, True])
numpy/ma/tests/test_core.py:3095:        assert_equal(mxbig.any(0), [False, False, True])
numpy/ma/tests/test_core.py:3096:        assert_equal(mxbig.any(1), [True, True, True])
numpy/ma/tests/test_core.py:3098:        assert_(not mxsmall.all())
numpy/ma/tests/test_core.py:3099:        assert_(mxsmall.any())
numpy/ma/tests/test_core.py:3100:        assert_equal(mxsmall.all(0), [True, True, False])
numpy/ma/tests/test_core.py:3101:        assert_equal(mxsmall.all(1), [False, False, False])
numpy/ma/tests/test_core.py:3102:        assert_equal(mxsmall.any(0), [True, True, False])
numpy/ma/tests/test_core.py:3103:        assert_equal(mxsmall.any(1), [True, True, False])
numpy/ma/tests/test_core.py:3110:        assert_(full.all() is masked)
numpy/ma/tests/test_core.py:3112:        assert_(store)
numpy/ma/tests/test_core.py:3113:        assert_(store._mask, True)
numpy/ma/tests/test_core.py:3114:        assert_(store is not masked)
numpy/ma/tests/test_core.py:3117:        assert_(full.any() is masked)
numpy/ma/tests/test_core.py:3119:        assert_(not store)
numpy/ma/tests/test_core.py:3120:        assert_(store._mask, True)
numpy/ma/tests/test_core.py:3121:        assert_(store is not masked)
numpy/ma/tests/test_core.py:3127:        assert_equal(mx.argmin(), 35)
numpy/ma/tests/test_core.py:3128:        assert_equal(mX.argmin(), 35)
numpy/ma/tests/test_core.py:3129:        assert_equal(m2x.argmin(), 4)
numpy/ma/tests/test_core.py:3130:        assert_equal(m2X.argmin(), 4)
numpy/ma/tests/test_core.py:3131:        assert_equal(mx.argmax(), 28)
numpy/ma/tests/test_core.py:3132:        assert_equal(mX.argmax(), 28)
numpy/ma/tests/test_core.py:3133:        assert_equal(m2x.argmax(), 31)
numpy/ma/tests/test_core.py:3134:        assert_equal(m2X.argmax(), 31)
numpy/ma/tests/test_core.py:3136:        assert_equal(mX.argmin(0), [2, 2, 2, 5, 0, 5])
numpy/ma/tests/test_core.py:3137:        assert_equal(m2X.argmin(0), [2, 2, 4, 5, 0, 4])
numpy/ma/tests/test_core.py:3138:        assert_equal(mX.argmax(0), [0, 5, 0, 5, 4, 0])
numpy/ma/tests/test_core.py:3139:        assert_equal(m2X.argmax(0), [5, 5, 0, 5, 1, 0])
numpy/ma/tests/test_core.py:3141:        assert_equal(mX.argmin(1), [4, 1, 0, 0, 5, 5, ])
numpy/ma/tests/test_core.py:3142:        assert_equal(m2X.argmin(1), [4, 4, 0, 0, 5, 3])
numpy/ma/tests/test_core.py:3143:        assert_equal(mX.argmax(1), [2, 4, 1, 1, 4, 1])
numpy/ma/tests/test_core.py:3144:        assert_equal(m2X.argmax(1), [2, 4, 1, 1, 1, 1])
numpy/ma/tests/test_core.py:3159:        assert_equal(clipped.mask, mx.mask)
numpy/ma/tests/test_core.py:3160:        assert_equal(clipped._data, x.clip(2, 8))
numpy/ma/tests/test_core.py:3161:        assert_equal(clipped._data, mx._data.clip(2, 8))
numpy/ma/tests/test_core.py:3168:        assert_equal(m.mask, [0, 1] * 5)
numpy/ma/tests/test_core.py:3174:        assert_equal(a.compress(condition), [2., 3.])
numpy/ma/tests/test_core.py:3178:        assert_equal(b._data, [2., 3.])
numpy/ma/tests/test_core.py:3179:        assert_equal(b._mask, [0, 1])
numpy/ma/tests/test_core.py:3180:        assert_equal(b.fill_value, 9999)
numpy/ma/tests/test_core.py:3181:        assert_equal(b, a[condition])
numpy/ma/tests/test_core.py:3185:        assert_equal(b._data, [1., 2., 3.])
numpy/ma/tests/test_core.py:3186:        assert_equal(b._mask, [0, 0, 1])
numpy/ma/tests/test_core.py:3187:        assert_equal(b.fill_value, 9999)
numpy/ma/tests/test_core.py:3188:        assert_equal(b, a[condition])
numpy/ma/tests/test_core.py:3193:        assert_equal(b._data, [30, 40, 50, 60])
numpy/ma/tests/test_core.py:3194:        assert_equal(b._mask, [1, 1, 0, 0])
numpy/ma/tests/test_core.py:3198:        assert_equal(b._data, [[10, 30], [40, 60]])
numpy/ma/tests/test_core.py:3199:        assert_equal(b._mask, [[0, 1], [1, 0]])
numpy/ma/tests/test_core.py:3205:        assert_equal(b, a)
numpy/ma/tests/test_core.py:3208:        assert_equal(b, [2, 3, 4])
numpy/ma/tests/test_core.py:3215:        assert_equal(len(a.fill_value.item()), len(datatype))
numpy/ma/tests/test_core.py:3218:        assert_equal(b.shape, a.shape)
numpy/ma/tests/test_core.py:3219:        assert_equal(b.fill_value, a.fill_value)
numpy/ma/tests/test_core.py:3222:        assert_equal(b.shape, a.shape)
numpy/ma/tests/test_core.py:3223:        assert_equal(b.fill_value, a.fill_value)
numpy/ma/tests/test_core.py:3228:        assert_(not np.may_share_memory(a.mask, b.mask))
numpy/ma/tests/test_core.py:3230:        assert_(np.may_share_memory(a.mask, b.mask))
numpy/ma/tests/test_core.py:3237:        assert_equal(len(a.fill_value.item()), len(datatype))
numpy/ma/tests/test_core.py:3240:        assert_equal(b.shape, a.shape)
numpy/ma/tests/test_core.py:3241:        assert_equal(b.fill_value, a.fill_value)
numpy/ma/tests/test_core.py:3244:        assert_equal(b.shape, a.shape)
numpy/ma/tests/test_core.py:3245:        assert_equal(b.fill_value, a.fill_value)
numpy/ma/tests/test_core.py:3250:        assert_(not np.may_share_memory(a.mask, b.mask))
numpy/ma/tests/test_core.py:3252:        assert_(np.may_share_memory(a.mask, b.mask))
numpy/ma/tests/test_core.py:3259:        assert_equal(len(a.fill_value.item()), len(datatype))
numpy/ma/tests/test_core.py:3262:        assert_equal(b.shape, a.shape)
numpy/ma/tests/test_core.py:3263:        assert_equal(b.fill_value, a.fill_value)
numpy/ma/tests/test_core.py:3266:        assert_equal(b.shape, a.shape)
numpy/ma/tests/test_core.py:3267:        assert_equal(b.fill_value, a.fill_value)
numpy/ma/tests/test_core.py:3272:        assert_(not np.may_share_memory(a.mask, b.mask))
numpy/ma/tests/test_core.py:3274:        assert_(np.may_share_memory(a.mask, b.mask))
numpy/ma/tests/test_core.py:3283:        assert_(x[3] is masked)
numpy/ma/tests/test_core.py:3284:        assert_(x[4] is masked)
numpy/ma/tests/test_core.py:3286:        assert_(x[3] is masked)
numpy/ma/tests/test_core.py:3287:        assert_(x[4] is not masked)
numpy/ma/tests/test_core.py:3288:        assert_equal(x, [0, 10, 2, -1, 40])
numpy/ma/tests/test_core.py:3293:        assert_equal(x, asarray([6, 1, 4, 3, 2, 5, 0, 7, 8, 9, ]))
numpy/ma/tests/test_core.py:3294:        assert_equal(x.mask, [0, 0, 0, 0, 0, 1, 0, 0, 0, 0])
numpy/ma/tests/test_core.py:3296:        assert_array_equal(x, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, ])
numpy/ma/tests/test_core.py:3297:        assert_equal(x.mask, [1, 0, 0, 0, 1, 1, 0, 0, 0, 0])
numpy/ma/tests/test_core.py:3301:        assert_equal(x, asarray([6, 1, 4, 3, 2, 5, 0, 7, 8, 9, ]))
numpy/ma/tests/test_core.py:3302:        assert_equal(x.mask, [0, 0, 0, 0, 0, 1, 0, 0, 0, 0])
numpy/ma/tests/test_core.py:3304:        assert_array_equal(x, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, ])
numpy/ma/tests/test_core.py:3305:        assert_equal(x.mask, [1, 0, 0, 0, 1, 1, 0, 0, 0, 0])
numpy/ma/tests/test_core.py:3313:        assert_(x[0] is not masked)
numpy/ma/tests/test_core.py:3314:        assert_equal(x[0], 0)
numpy/ma/tests/test_core.py:3315:        assert_(x[1] is not masked)
numpy/ma/tests/test_core.py:3316:        assert_equal(x[1], 3)
numpy/ma/tests/test_core.py:3317:        assert_(x[2] is masked)
numpy/ma/tests/test_core.py:3318:        assert_(x[3] is not masked)
numpy/ma/tests/test_core.py:3319:        assert_equal(x[3], 0)
numpy/ma/tests/test_core.py:3328:        assert_equal(xh._data, [3, 4, 2, 4, 5])
numpy/ma/tests/test_core.py:3337:        assert_equal(xx, [1, 2, 99, 4, 5, 99])
numpy/ma/tests/test_core.py:3341:        assert_equal(mxx._data, [1, 2, 99, 4, 5, 99])
numpy/ma/tests/test_core.py:3342:        assert_equal(mxx._mask, [0, 0, 0, 1, 1, 0])
numpy/ma/tests/test_core.py:3347:        assert_equal(xx._data, [1, 2, 30, 4, 5, 60])
numpy/ma/tests/test_core.py:3348:        assert_equal(xx._mask, [0, 0, 1, 0, 0, 0])
numpy/ma/tests/test_core.py:3352:        assert_equal(mxx._data, [1, 2, 30, 4, 5, 60])
numpy/ma/tests/test_core.py:3353:        assert_equal(mxx._mask, [0, 0, 1, 1, 1, 0])
numpy/ma/tests/test_core.py:3358:        assert_equal(mxx, [1, 2, 30, 4, 5, 60])
numpy/ma/tests/test_core.py:3364:        assert_equal(aravel._mask.shape, aravel.shape)
numpy/ma/tests/test_core.py:3367:        assert_equal(aravel._mask.shape, a.shape)
numpy/ma/tests/test_core.py:3370:        assert_equal(a.ravel()._mask, [0, 0, 0, 0])
numpy/ma/tests/test_core.py:3375:        assert_equal(ar._mask, [0, 0, 0, 0])
numpy/ma/tests/test_core.py:3376:        assert_equal(ar._data, [1, 2, 3, 4])
numpy/ma/tests/test_core.py:3377:        assert_equal(ar.fill_value, -99)
numpy/ma/tests/test_core.py:3379:        assert_equal(a.ravel(order='C'), [1, 2, 3, 4])
numpy/ma/tests/test_core.py:3380:        assert_equal(a.ravel(order='F'), [1, 3, 2, 4])
numpy/ma/tests/test_core.py:3387:        assert_equal(y.shape, (2, 2,))
numpy/ma/tests/test_core.py:3388:        assert_equal(y._mask.shape, (2, 2,))
numpy/ma/tests/test_core.py:3389:        assert_equal(x.shape, (4,))
numpy/ma/tests/test_core.py:3390:        assert_equal(x._mask.shape, (4,))
numpy/ma/tests/test_core.py:3397:        assert_equal(sortedx._data, [1, 2, 3, 4])
numpy/ma/tests/test_core.py:3398:        assert_equal(sortedx._mask, [0, 0, 0, 1])
numpy/ma/tests/test_core.py:3401:        assert_equal(sortedx._data, [4, 1, 2, 3])
numpy/ma/tests/test_core.py:3402:        assert_equal(sortedx._mask, [1, 0, 0, 0])
numpy/ma/tests/test_core.py:3405:        assert_equal(x._data, [1, 2, 3, 4])
numpy/ma/tests/test_core.py:3406:        assert_equal(x._mask, [0, 0, 0, 1])
numpy/ma/tests/test_core.py:3410:        assert_equal(x._data, [4, 1, 2, 3])
numpy/ma/tests/test_core.py:3411:        assert_equal(x._mask, [1, 0, 0, 0])
numpy/ma/tests/test_core.py:3415:        assert_(not isinstance(sorted, MaskedArray))
numpy/ma/tests/test_core.py:3419:        assert_equal(sortedx._data, [-2, -1, 0, 1, 2])
numpy/ma/tests/test_core.py:3422:        assert_equal(sortedx._data, [1, 2, -2, -1, 0])
numpy/ma/tests/test_core.py:3423:        assert_equal(sortedx._mask, [1, 1, 0, 0, 0])
numpy/ma/tests/test_core.py:3427:        assert_equal(sortedx, array([-1, 0], dtype=np.int8))
numpy/ma/tests/test_core.py:3433:        assert_equal(computed, expected)
numpy/ma/tests/test_core.py:3446:            assert_equal(sortedx._data, argsortedx._data)
numpy/ma/tests/test_core.py:3447:            assert_equal(sortedx._mask, argsortedx._mask)
numpy/ma/tests/test_core.py:3454:        assert_equal(a, [[2, 0, 1], [8, 4, 9]])
numpy/ma/tests/test_core.py:3457:        assert_equal(a, [[1, 4, 8], [0, 2, 9]])
numpy/ma/tests/test_core.py:3461:        assert_equal(a, [[2, 0, 1], [8, 4, 9]])
numpy/ma/tests/test_core.py:3462:        assert_equal(a._mask, [[0, 0, 0], [1, 0, 1]])
numpy/ma/tests/test_core.py:3465:        assert_equal(a, [[1, 4, 8], [0, 2, 9]])
numpy/ma/tests/test_core.py:3466:        assert_equal(a._mask, [[0, 0, 1], [0, 0, 1]])
numpy/ma/tests/test_core.py:3477:        assert_equal(am, an)
numpy/ma/tests/test_core.py:3482:        assert_equal(am, an)
numpy/ma/tests/test_core.py:3487:        assert_equal(am, an)
numpy/ma/tests/test_core.py:3505:        assert_equal(test, mask_last)
numpy/ma/tests/test_core.py:3506:        assert_equal(test.mask, mask_last.mask)
numpy/ma/tests/test_core.py:3509:        assert_equal(test, mask_first)
numpy/ma/tests/test_core.py:3510:        assert_equal(test.mask, mask_first.mask)
numpy/ma/tests/test_core.py:3524:        assert_equal(np.argsort(a), argsort(a))
numpy/ma/tests/test_core.py:3529:        assert_equal(data.squeeze(), [1, 2, 3])
numpy/ma/tests/test_core.py:3531:        assert_equal(data.squeeze(), [1, 2, 3])
numpy/ma/tests/test_core.py:3532:        assert_equal(data.squeeze()._mask, [1, 1, 1])
numpy/ma/tests/test_core.py:3537:        assert_equal(arr_sq, 1)
numpy/ma/tests/test_core.py:3539:        assert_equal(arr[0,0], 2)
numpy/ma/tests/test_core.py:3544:        assert_(m_arr_sq is not np.ma.masked)
numpy/ma/tests/test_core.py:3545:        assert_equal(m_arr_sq.mask, True)
numpy/ma/tests/test_core.py:3547:        assert_equal(m_arr[0,0], 2)
numpy/ma/tests/test_core.py:3567:        assert_equal(mXswapped[-1], mX[:, -1])
numpy/ma/tests/test_core.py:3570:        assert_equal(mXXswapped.shape, (2, 2, 3, 3))
numpy/ma/tests/test_core.py:3575:        assert_equal(x.take([0, 0, 3]), masked_array([10, 10, 40], [0, 0, 1]))
numpy/ma/tests/test_core.py:3576:        assert_equal(x.take([0, 0, 3]), x[[0, 0, 3]])
numpy/ma/tests/test_core.py:3577:        assert_equal(x.take([[0, 1], [0, 1]]),
numpy/ma/tests/test_core.py:3581:        assert_(x[1] is np.ma.masked)
numpy/ma/tests/test_core.py:3582:        assert_(x.take(1) is np.ma.masked)
numpy/ma/tests/test_core.py:3585:        assert_equal(x.take([0, 2], axis=1),
numpy/ma/tests/test_core.py:3587:        assert_equal(take(x, [0, 2], axis=1),
numpy/ma/tests/test_core.py:3602:        assert_equal(test, ctrl)
numpy/ma/tests/test_core.py:3611:        assert_equal(test, ctrl)
numpy/ma/tests/test_core.py:3612:        assert_equal(test.mask, ctrl.mask)
numpy/ma/tests/test_core.py:3617:        assert_equal(test, ctrl)
numpy/ma/tests/test_core.py:3618:        assert_equal(test.mask, ctrl.mask)
numpy/ma/tests/test_core.py:3626:        assert_(xlist[1] is None)
numpy/ma/tests/test_core.py:3627:        assert_(xlist[-2] is None)
numpy/ma/tests/test_core.py:3632:        assert_equal(xlist[0], [0, None, 2, 3])
numpy/ma/tests/test_core.py:3633:        assert_equal(xlist[1], [4, 5, 6, 7])
numpy/ma/tests/test_core.py:3634:        assert_equal(xlist[2], [8, 9, None, 11])
numpy/ma/tests/test_core.py:3635:        assert_equal(xlist, ctrl)
numpy/ma/tests/test_core.py:3642:        assert_equal(x.tolist(),
numpy/ma/tests/test_core.py:3650:        assert_equal(test, [[1, None], [3, 4]])
numpy/ma/tests/test_core.py:3654:        assert_equal(test, [1, None])
numpy/ma/tests/test_core.py:3662:                assert_(not isinstance(item, np.generic))
numpy/ma/tests/test_core.py:3668:                assert_(not isinstance(item, np.generic))
numpy/ma/tests/test_core.py:3674:        assert_equal(record['_data'], data._data)
numpy/ma/tests/test_core.py:3675:        assert_equal(record['_mask'], data._mask)
numpy/ma/tests/test_core.py:3679:        assert_equal(record['_data'], data._data)
numpy/ma/tests/test_core.py:3680:        assert_equal(record['_mask'], data._mask)
numpy/ma/tests/test_core.py:3689:        assert_equal(record['_data'], data._data)
numpy/ma/tests/test_core.py:3690:        assert_equal(record['_mask'], data._mask)
numpy/ma/tests/test_core.py:3699:        assert_equal_records(record['_data'], data._data)
numpy/ma/tests/test_core.py:3700:        assert_equal_records(record['_mask'], data._mask)
numpy/ma/tests/test_core.py:3706:        assert_equal(test, a)
numpy/ma/tests/test_core.py:3707:        assert_equal(test.mask, a.mask)
numpy/ma/tests/test_core.py:3711:        assert_equal(test, a)
numpy/ma/tests/test_core.py:3712:        assert_equal(test.mask, a.mask)
numpy/ma/tests/test_core.py:3717:        assert_equal(test, a)
numpy/ma/tests/test_core.py:3718:        assert_equal(test.data, a.data)
numpy/ma/tests/test_core.py:3725:        assert_equal(marray.T, control)
numpy/ma/tests/test_core.py:3726:        assert_equal(marray.transpose(), control)
numpy/ma/tests/test_core.py:3728:        assert_equal(MaskedArray.cumsum(marray.T, 0), control.cumsum(0))
numpy/ma/tests/test_core.py:3733:        assert_equal(x.T.mask, x.mask)
numpy/ma/tests/test_core.py:3734:        assert_equal(x.T.data, x.data)
numpy/ma/tests/test_core.py:3744:        assert_equal(x.data, xt.T.data)
numpy/ma/tests/test_core.py:3745:        assert_equal(x.mask, xt.T.mask)
numpy/ma/tests/test_core.py:3754:        assert_equal(xd.mask, x.diagonal().mask)
numpy/ma/tests/test_core.py:3755:        assert_equal(xd.data, x.diagonal().data)
numpy/ma/tests/test_core.py:3796:        assert_equal(mXcp._data, mX.filled(0).cumsum(0))
numpy/ma/tests/test_core.py:3798:        assert_equal(mXcp._data, mX.filled(0).cumsum(1))
numpy/ma/tests/test_core.py:3801:        assert_equal(mXcp._data, mX.filled(1).cumprod(0))
numpy/ma/tests/test_core.py:3803:        assert_equal(mXcp._data, mX.filled(1).cumprod(1))
numpy/ma/tests/test_core.py:3819:            assert_(result is output)
numpy/ma/tests/test_core.py:3820:            assert_equal(result, xmmeth(axis=0, out=output))
numpy/ma/tests/test_core.py:3824:            assert_(result is output)
numpy/ma/tests/test_core.py:3830:        assert_equal(mx.ptp(), mx.compressed().ptp())
numpy/ma/tests/test_core.py:3837:        assert_equal(mX.ptp(0), cols)
numpy/ma/tests/test_core.py:3838:        assert_equal(mX.ptp(1), rows)
numpy/ma/tests/test_core.py:3843:        assert_equal(y[1], 'bx')
numpy/ma/tests/test_core.py:3844:        assert_(y.mask[0])
numpy/ma/tests/test_core.py:3849:        assert_equal(a.sum(), 5)
numpy/ma/tests/test_core.py:3851:        assert_equal(a.sum(axis=0), [5, 7, 9])
numpy/ma/tests/test_core.py:3856:        assert_equal(a.prod(), 2 * 3)
numpy/ma/tests/test_core.py:3858:        assert_equal(a.prod(axis=0), [4, 10, 18])
numpy/ma/tests/test_core.py:3863:        assert_equal(a.mean(), 2)
numpy/ma/tests/test_core.py:3864:        assert_equal(a.anom(), [-1, 0, 1])
numpy/ma/tests/test_core.py:3868:        assert_equal(a.anom().shape, a.shape)
numpy/ma/tests/test_core.py:3870:        assert_equal(a.anom().shape, a.shape)
numpy/ma/tests/test_core.py:3871:        assert_(np.ma.is_masked(a.anom()))
numpy/ma/tests/test_core.py:3875:        assert_almost_equal(a.anom(),
numpy/ma/tests/test_core.py:3877:        assert_almost_equal(a.anom(axis=0),
numpy/ma/tests/test_core.py:3879:        assert_almost_equal(a.anom(axis=1),
numpy/ma/tests/test_core.py:3883:        assert_almost_equal(a.anom().filled(mval),
numpy/ma/tests/test_core.py:3885:        assert_almost_equal(a.anom(axis=0).filled(mval),
numpy/ma/tests/test_core.py:3887:        assert_almost_equal(a.anom(axis=1).filled(mval),
numpy/ma/tests/test_core.py:3894:        assert_equal(mX.trace(), mX.diagonal().compressed().sum())
numpy/ma/tests/test_core.py:3895:        assert_almost_equal(mX.trace(),
numpy/ma/tests/test_core.py:3898:        assert_equal(np.trace(mX), mX.trace())
numpy/ma/tests/test_core.py:3903:        assert_equal(arr.trace(axis1=1, axis2=2), m_arr.trace(axis1=1, axis2=2))
numpy/ma/tests/test_core.py:3910:        assert_almost_equal(r.filled(0), fx.dot(fx))
numpy/ma/tests/test_core.py:3911:        assert_(r.mask is nomask)
numpy/ma/tests/test_core.py:3915:        assert_almost_equal(r.filled(0), fX.dot(fX))
numpy/ma/tests/test_core.py:3916:        assert_(r.mask[1,3])
numpy/ma/tests/test_core.py:3919:        assert_almost_equal(r, r1)
numpy/ma/tests/test_core.py:3924:        assert_almost_equal(r.filled(0), fXX.dot(fYY))
numpy/ma/tests/test_core.py:3927:        assert_almost_equal(r, r1)
numpy/ma/tests/test_core.py:3935:        assert_almost_equal(z.filled(0), [[1, 0], [15, 16]])
numpy/ma/tests/test_core.py:3936:        assert_almost_equal(z.mask, [[0, 1], [0, 0]])
numpy/ma/tests/test_core.py:3942:        assert_equal(type(foo.mean()), np.float64)
numpy/ma/tests/test_core.py:3943:        assert_equal(type(foo.var()), np.float64)
numpy/ma/tests/test_core.py:3944:        assert((foo.mean() == bar.mean()) is np.bool_(True))
numpy/ma/tests/test_core.py:3949:        assert_equal(type(foo.mean(axis=1)), MaskedArray)
numpy/ma/tests/test_core.py:3950:        assert_equal(type(foo.var(axis=1)), MaskedArray)
numpy/ma/tests/test_core.py:3951:        assert_(foo.mean(axis=1, out=bar) is bar)
numpy/ma/tests/test_core.py:3952:        assert_(foo.var(axis=1, out=bar) is bar)
numpy/ma/tests/test_core.py:3957:        assert_almost_equal(mX.var(axis=None), mX.compressed().var())
numpy/ma/tests/test_core.py:3958:        assert_almost_equal(mX.std(axis=None), mX.compressed().std())
numpy/ma/tests/test_core.py:3959:        assert_almost_equal(mX.std(axis=None, ddof=1),
numpy/ma/tests/test_core.py:3961:        assert_almost_equal(mX.var(axis=None, ddof=1),
numpy/ma/tests/test_core.py:3963:        assert_equal(mXX.var(axis=3).shape, XX.var(axis=3).shape)
numpy/ma/tests/test_core.py:3964:        assert_equal(mX.var().shape, X.var().shape)
numpy/ma/tests/test_core.py:3966:        assert_almost_equal(mX.var(axis=None, ddof=2),
numpy/ma/tests/test_core.py:3968:        assert_almost_equal(mX.std(axis=None, ddof=2),
numpy/ma/tests/test_core.py:3971:            assert_almost_equal(mXvar1[k], mX[k].compressed().var())
numpy/ma/tests/test_core.py:3972:            assert_almost_equal(mXvar0[k], mX[:, k].compressed().var())
numpy/ma/tests/test_core.py:3973:            assert_almost_equal(np.sqrt(mXvar0[k]),
numpy/ma/tests/test_core.py:3985:            assert_(method() is masked)
numpy/ma/tests/test_core.py:3986:            assert_(method(0) is masked)
numpy/ma/tests/test_core.py:3987:            assert_(method(-1) is masked)
numpy/ma/tests/test_core.py:3990:            assert_(mout is not masked)
numpy/ma/tests/test_core.py:3991:            assert_equal(mout.mask, True)
numpy/ma/tests/test_core.py:3994:            assert_(np.isnan(nout))
numpy/ma/tests/test_core.py:4000:            assert_(method(ddof=1) is masked)
numpy/ma/tests/test_core.py:4001:            assert_(method(0, ddof=1) is masked)
numpy/ma/tests/test_core.py:4002:            assert_(method(-1, ddof=1) is masked)
numpy/ma/tests/test_core.py:4005:            assert_(mout is not masked)
numpy/ma/tests/test_core.py:4006:            assert_equal(mout.mask, True)
numpy/ma/tests/test_core.py:4009:            assert_(np.isnan(nout))
numpy/ma/tests/test_core.py:4014:        assert_equal(test.filled(0), [0, 0, 0])
numpy/ma/tests/test_core.py:4015:        assert_equal(test.mask, [0, 0, 1])
numpy/ma/tests/test_core.py:4017:        assert_equal(test.filled(0), [0, 0, 0])
numpy/ma/tests/test_core.py:4018:        assert_equal(test.mask, [0, 0, 1])
numpy/ma/tests/test_core.py:4020:        assert_equal(test.filled(0), [0, 0, 0])
numpy/ma/tests/test_core.py:4021:        assert_equal(test.mask, [1, 1, 1])
numpy/ma/tests/test_core.py:4028:        assert_equal(out, [0, 4, 8])
numpy/ma/tests/test_core.py:4030:        assert_equal(out, [0, 4, 8])
numpy/ma/tests/test_core.py:4031:        assert_equal(out.mask, [0, 1, 0])
numpy/ma/tests/test_core.py:4035:        assert_equal(out, control)
numpy/ma/tests/test_core.py:4041:        assert_equal(a.sum(0), [5, 7, 9])
numpy/ma/tests/test_core.py:4042:        assert_equal(a.sum(-1), [6, 15])
numpy/ma/tests/test_core.py:4043:        assert_equal(a.sum(1), [6, 15])
numpy/ma/tests/test_core.py:4045:        assert_equal(a.prod(0), [4, 10, 18])
numpy/ma/tests/test_core.py:4046:        assert_equal(a.prod(-1), [6, 120])
numpy/ma/tests/test_core.py:4047:        assert_equal(a.prod(1), [6, 120])
numpy/ma/tests/test_core.py:4049:        assert_equal(a.min(0), [1, 2, 3])
numpy/ma/tests/test_core.py:4050:        assert_equal(a.min(-1), [1, 4])
numpy/ma/tests/test_core.py:4051:        assert_equal(a.min(1), [1, 4])
numpy/ma/tests/test_core.py:4053:        assert_equal(a.max(0), [4, 5, 6])
numpy/ma/tests/test_core.py:4054:        assert_equal(a.max(-1), [3, 6])
numpy/ma/tests/test_core.py:4055:        assert_equal(a.max(1), [3, 6])
numpy/ma/tests/test_core.py:4095:        assert_almost_equal(mX.var(axis=None), mX.compressed().var())
numpy/ma/tests/test_core.py:4096:        assert_almost_equal(mX.std(axis=None), mX.compressed().std())
numpy/ma/tests/test_core.py:4097:        assert_equal(mXX.var(axis=3).shape, XX.var(axis=3).shape)
numpy/ma/tests/test_core.py:4098:        assert_equal(mX.var().shape, X.var().shape)
numpy/ma/tests/test_core.py:4100:        assert_almost_equal(mX.var(axis=None, ddof=2),
numpy/ma/tests/test_core.py:4102:        assert_almost_equal(mX.std(axis=None, ddof=2),
numpy/ma/tests/test_core.py:4105:            assert_almost_equal(mXvar1[k], mX[k].compressed().var())
numpy/ma/tests/test_core.py:4106:            assert_almost_equal(mXvar0[k], mX[:, k].compressed().var())
numpy/ma/tests/test_core.py:4107:            assert_almost_equal(np.sqrt(mXvar0[k]),
numpy/ma/tests/test_core.py:4127:        assert_equal(y, [1, 2])
numpy/ma/tests/test_core.py:4128:        assert_equal(y[1], 2)
numpy/ma/tests/test_core.py:4133:        assert_equal(mx, x)
numpy/ma/tests/test_core.py:4134:        assert_equal(mx._mask, [0, 0, 1])
numpy/ma/tests/test_core.py:4136:        assert_equal(mx, x)
numpy/ma/tests/test_core.py:4137:        assert_equal(mx._mask, [1, 1, 0])
numpy/ma/tests/test_core.py:4142:        assert_equal(mx._mask, [0, 0, 1])
numpy/ma/tests/test_core.py:4143:        assert_equal(mx.fill_value, 3)
numpy/ma/tests/test_core.py:4149:        assert_equal(masked_where(greater(x, 2), x), masked_greater(x, 2))
numpy/ma/tests/test_core.py:4150:        assert_equal(masked_where(greater_equal(x, 2), x),
numpy/ma/tests/test_core.py:4152:        assert_equal(masked_where(less(x, 2), x), masked_less(x, 2))
numpy/ma/tests/test_core.py:4153:        assert_equal(masked_where(less_equal(x, 2), x),
numpy/ma/tests/test_core.py:4155:        assert_equal(masked_where(not_equal(x, 2), x), masked_not_equal(x, 2))
numpy/ma/tests/test_core.py:4156:        assert_equal(masked_where(equal(x, 2), x), masked_equal(x, 2))
numpy/ma/tests/test_core.py:4157:        assert_equal(masked_where(not_equal(x, 2), x), masked_not_equal(x, 2))
numpy/ma/tests/test_core.py:4158:        assert_equal(masked_where([1, 1, 0, 0, 0], [1, 2, 3, 4, 5]),
numpy/ma/tests/test_core.py:4166:        assert_equal(atest, ctest)
numpy/ma/tests/test_core.py:4173:        assert_equal(test.mask, [0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
numpy/ma/tests/test_core.py:4180:        assert_equal(am.mask.dtype.names, am.dtype.names)
numpy/ma/tests/test_core.py:4188:        assert_raises(IndexError, np.ma.masked_where, y > 6, x)
numpy/ma/tests/test_core.py:4191:        assert_equal(masked_inside(list(range(5)), 1, 3),
numpy/ma/tests/test_core.py:4193:        assert_equal(masked_outside(list(range(5)), 1, 3), [199, 1, 2, 3, 199])
numpy/ma/tests/test_core.py:4194:        assert_equal(masked_inside(array(list(range(5)),
numpy/ma/tests/test_core.py:4197:        assert_equal(masked_outside(array(list(range(5)),
numpy/ma/tests/test_core.py:4200:        assert_equal(masked_equal(array(list(range(5)),
numpy/ma/tests/test_core.py:4210:        assert_equal(a.round(), [1., 2., 3., 5., 6.])
numpy/ma/tests/test_core.py:4211:        assert_equal(a.round(1), [1.2, 2.3, 3.5, 4.6, 5.7])
numpy/ma/tests/test_core.py:4212:        assert_equal(a.round(3), [1.235, 2.346, 3.457, 4.568, 5.679])
numpy/ma/tests/test_core.py:4215:        assert_equal(b, [1., 2., 3., 5., 6.])
numpy/ma/tests/test_core.py:4221:        assert_equal(z, [1., 2., 0., -4., -5])
numpy/ma/tests/test_core.py:4224:        assert_equal(z, [1., 2., 0., -4., -5])
numpy/ma/tests/test_core.py:4225:        assert_(z[0] is masked)
numpy/ma/tests/test_core.py:4226:        assert_(z[1] is not masked)
numpy/ma/tests/test_core.py:4227:        assert_(z[2] is masked)
numpy/ma/tests/test_core.py:4240:        assert_(result is output)
numpy/ma/tests/test_core.py:4241:        assert_equal(result, xm.round(decimals=2, out=output))
numpy/ma/tests/test_core.py:4245:        assert_(result is output)
numpy/ma/tests/test_core.py:4251:        assert_equal(a.round(), 1)
numpy/ma/tests/test_core.py:4254:        assert_(a.round() is masked)
numpy/ma/tests/test_core.py:4260:        assert_equal(output, 1)
numpy/ma/tests/test_core.py:4265:        assert_equal(output[()], 1)
numpy/ma/tests/test_core.py:4270:        assert_(output[()] is masked)
numpy/ma/tests/test_core.py:4274:        assert_(isinstance(a, MaskedArray))
numpy/ma/tests/test_core.py:4275:        assert_equal(a, np.identity(5))
numpy/ma/tests/test_core.py:4279:        assert_almost_equal(power(x, 2.), 1.21)
numpy/ma/tests/test_core.py:4280:        assert_(power(x, masked) is masked)
numpy/ma/tests/test_core.py:4284:        assert_almost_equal(y, [0, 1.21, 1.04880884817, 1.21, 0.])
numpy/ma/tests/test_core.py:4285:        assert_equal(y._mask, [1, 0, 0, 0, 1])
numpy/ma/tests/test_core.py:4288:        assert_equal(y._mask, [1, 0, 0, 0, 1])
numpy/ma/tests/test_core.py:4290:        assert_equal(z._mask, y._mask)
numpy/ma/tests/test_core.py:4291:        assert_almost_equal(z, y)
numpy/ma/tests/test_core.py:4292:        assert_almost_equal(z._data, y._data)
numpy/ma/tests/test_core.py:4294:        assert_equal(x._mask, y._mask)
numpy/ma/tests/test_core.py:4295:        assert_almost_equal(x, y)
numpy/ma/tests/test_core.py:4296:        assert_almost_equal(x._data, y._data)
numpy/ma/tests/test_core.py:4310:        assert_equal(test, ctrl)
numpy/ma/tests/test_core.py:4311:        assert_equal(test.mask, ctrl.mask)
numpy/ma/tests/test_core.py:4314:        assert_equal(test, ctrl)
numpy/ma/tests/test_core.py:4315:        assert_equal(test.mask, a2m.mask)
numpy/ma/tests/test_core.py:4318:        assert_equal(test, ctrl)
numpy/ma/tests/test_core.py:4319:        assert_equal(test.mask, b2m.mask)
numpy/ma/tests/test_core.py:4324:        assert_equal(test, ctrl)
numpy/ma/tests/test_core.py:4325:        assert_equal(test.mask, ctrl.mask)
numpy/ma/tests/test_core.py:4327:        assert_equal(test, ctrl)
numpy/ma/tests/test_core.py:4328:        assert_equal(test.mask, ctrl.mask)
numpy/ma/tests/test_core.py:4343:        assert_equal(d._mask, xm._mask)
numpy/ma/tests/test_core.py:4347:        assert_equal(d._mask, [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0])
numpy/ma/tests/test_core.py:4353:        assert_equal(d._mask, tmp)
numpy/ma/tests/test_core.py:4357:        assert_equal(d, [-9, -9, -9, -9, -9, 4, -9, -9, 10, -9, -9, 3])
numpy/ma/tests/test_core.py:4358:        assert_equal(d.dtype, ixm.dtype)
numpy/ma/tests/test_core.py:4364:        assert_equal(np.ma.where(True, a, a), r)
numpy/ma/tests/test_core.py:4365:        assert_equal(np.ma.where(True, b, b), r)
numpy/ma/tests/test_core.py:4373:        assert_(z.dtype is x.dtype)
numpy/ma/tests/test_core.py:4374:        assert_(z[3] is masked)
numpy/ma/tests/test_core.py:4375:        assert_(z[4] is masked)
numpy/ma/tests/test_core.py:4376:        assert_(z[7] is masked)
numpy/ma/tests/test_core.py:4377:        assert_(z[8] is not masked)
numpy/ma/tests/test_core.py:4378:        assert_(z[9] is not masked)
numpy/ma/tests/test_core.py:4379:        assert_equal(x, z)
numpy/ma/tests/test_core.py:4382:        assert_(z.dtype is x.dtype)
numpy/ma/tests/test_core.py:4383:        assert_(z[3] is masked)
numpy/ma/tests/test_core.py:4384:        assert_(z[4] is not masked)
numpy/ma/tests/test_core.py:4385:        assert_(z[7] is not masked)
numpy/ma/tests/test_core.py:4386:        assert_(z[8] is masked)
numpy/ma/tests/test_core.py:4387:        assert_(z[9] is masked)
numpy/ma/tests/test_core.py:4394:        assert_equal(z, [1., 2., 0., -4., -5])
numpy/ma/tests/test_core.py:4397:        assert_equal(z, [1., 2., 0., -4., -5])
numpy/ma/tests/test_core.py:4398:        assert_(z[0] is masked)
numpy/ma/tests/test_core.py:4399:        assert_(z[1] is not masked)
numpy/ma/tests/test_core.py:4400:        assert_(z[2] is masked)
numpy/ma/tests/test_core.py:4410:        assert_equal(z, zm)
numpy/ma/tests/test_core.py:4411:        assert_(getmask(zm) is nomask)
numpy/ma/tests/test_core.py:4412:        assert_equal(zm, [1, 2, 3, 40, 50])
numpy/ma/tests/test_core.py:4414:        assert_equal(z, [99, 99, 99, 1, 1])
numpy/ma/tests/test_core.py:4416:        assert_equal(z, [99, 1, 1, 99, 99])
numpy/ma/tests/test_core.py:4424:        assert_equal(test, control)
numpy/ma/tests/test_core.py:4433:        assert_equal(core, ma)
numpy/ma/tests/test_core.py:4434:        assert_equal(core.dtype, ma.dtype)
numpy/ma/tests/test_core.py:4444:        assert_equal(core, ma)
numpy/ma/tests/test_core.py:4445:        assert_equal(core.dtype, ma.dtype)
numpy/ma/tests/test_core.py:4454:        assert_equal(ma.dtype, expected.dtype)
numpy/ma/tests/test_core.py:4455:        assert_equal(ma, expected)
numpy/ma/tests/test_core.py:4456:        assert_equal(ma.mask, expected.mask)
numpy/ma/tests/test_core.py:4463:        assert_equal(chosen, array([20, 31, 12, 3]))
numpy/ma/tests/test_core.py:4465:        assert_equal(chosen, array([20, 31, 12, 3]))
numpy/ma/tests/test_core.py:4467:        assert_equal(chosen, array([20, 1, 12, 3]))
numpy/ma/tests/test_core.py:4471:        assert_equal(chosen, array([99, 1, 12, 99]))
numpy/ma/tests/test_core.py:4472:        assert_equal(chosen.mask, [1, 0, 0, 1])
numpy/ma/tests/test_core.py:4478:        assert_equal(chosen, array([20, 31, 12, 3]))
numpy/ma/tests/test_core.py:4479:        assert_equal(chosen.mask, [1, 0, 0, 1])
numpy/ma/tests/test_core.py:4487:        assert_equal(store, array([20, 31, 12, 3]))
numpy/ma/tests/test_core.py:4488:        assert_(store is chosen)
numpy/ma/tests/test_core.py:4493:        assert_equal(store, array([99, 31, 12, 99]))
numpy/ma/tests/test_core.py:4494:        assert_equal(store.mask, [1, 0, 0, 1])
numpy/ma/tests/test_core.py:4501:        assert_equal(store, array([999999, 31, 12, 999999]))
numpy/ma/tests/test_core.py:4508:        assert_equal(b.shape, (5, 2))
numpy/ma/tests/test_core.py:4509:        assert_(b.flags['C'])
numpy/ma/tests/test_core.py:4512:        assert_equal(b.shape, (5, 2))
numpy/ma/tests/test_core.py:4513:        assert_(b.flags['C'])
numpy/ma/tests/test_core.py:4516:        assert_equal(b.shape, (5, 2))
numpy/ma/tests/test_core.py:4517:        assert_(b.flags['F'])
numpy/ma/tests/test_core.py:4520:        assert_equal(b.shape, (5, 2))
numpy/ma/tests/test_core.py:4521:        assert_(b.flags['F'])
numpy/ma/tests/test_core.py:4524:        assert_(isinstance(c, MaskedArray))
numpy/ma/tests/test_core.py:4525:        assert_equal(c.shape, (2, 5))
numpy/ma/tests/test_core.py:4526:        assert_(c[0, 0] is masked)
numpy/ma/tests/test_core.py:4527:        assert_(c.flags['C'])
numpy/ma/tests/test_core.py:4533:        assert_equal(test, [('a', bool), ('b', bool)])
numpy/ma/tests/test_core.py:4534:        assert_(test is make_mask_descr(test))
numpy/ma/tests/test_core.py:4539:        assert_equal(test, (bool, 2))
numpy/ma/tests/test_core.py:4540:        assert_(test is make_mask_descr(test))
numpy/ma/tests/test_core.py:4545:        assert_equal(test, np.dtype(bool))
numpy/ma/tests/test_core.py:4546:        assert_(test is make_mask_descr(test))
numpy/ma/tests/test_core.py:4552:        assert_equal(test, control)
numpy/ma/tests/test_core.py:4553:        assert_(test is make_mask_descr(test))
numpy/ma/tests/test_core.py:4558:        assert_equal(test, np.dtype([('a', (bool, 2))]))
numpy/ma/tests/test_core.py:4559:        assert_(test is make_mask_descr(test))
numpy/ma/tests/test_core.py:4564:        assert_equal(test, np.dtype([(('A', 'a'), bool)]))
numpy/ma/tests/test_core.py:4565:        assert_(test is make_mask_descr(test))
numpy/ma/tests/test_core.py:4572:        assert_equal(test, np.dtype([('a', bool), ('b', [('a', bool, 3)])]))
numpy/ma/tests/test_core.py:4573:        assert_(test.fields['b'][0] is base_mtype)
numpy/ma/tests/test_core.py:4580:        assert_equal(test.dtype, MaskType)
numpy/ma/tests/test_core.py:4581:        assert_equal(test, [0, 1])
numpy/ma/tests/test_core.py:4585:        assert_equal(test.dtype, MaskType)
numpy/ma/tests/test_core.py:4586:        assert_equal(test, [0, 1])
numpy/ma/tests/test_core.py:4591:        assert_equal(test.dtype, MaskType)
numpy/ma/tests/test_core.py:4592:        assert_equal(test, [1, 1])
numpy/ma/tests/test_core.py:4597:        assert_equal(test.dtype, mdtype)
numpy/ma/tests/test_core.py:4598:        assert_equal(test, mask)
numpy/ma/tests/test_core.py:4604:        assert_equal(test.dtype, bdtype)
numpy/ma/tests/test_core.py:4605:        assert_equal(test, np.array([(0, 0), (0, 1)], dtype=bdtype))
numpy/ma/tests/test_core.py:4608:        assert_(isinstance(mask, np.void))
numpy/ma/tests/test_core.py:4610:        assert_equal(test, mask)
numpy/ma/tests/test_core.py:4611:        assert_(test is not mask)
numpy/ma/tests/test_core.py:4614:        assert_equal(test2, test)
numpy/ma/tests/test_core.py:4621:            assert_(res is nomask, msgformat % (cpy, shr, dt))
numpy/ma/tests/test_core.py:4629:        assert_equal(test, mask)
numpy/ma/tests/test_core.py:4631:        assert_equal(test, mask)
numpy/ma/tests/test_core.py:4634:        assert_equal(test, mask)
numpy/ma/tests/test_core.py:4639:        assert_equal(test, control)
numpy/ma/tests/test_core.py:4652:        assert_equal(mask_or(amask, bmask), cntrl)
numpy/ma/tests/test_core.py:4658:        assert_equal(flatten_mask(mask), mask)
numpy/ma/tests/test_core.py:4663:        assert_equal(test, control)
numpy/ma/tests/test_core.py:4670:        assert_equal(test, control)
numpy/ma/tests/test_core.py:4677:        assert_equal(test, m.anom())
numpy/ma/tests/test_core.py:4679:        assert_equal(test, m.reshape(2, 2))
numpy/ma/tests/test_core.py:4689:        assert_equal(test, control)
numpy/ma/tests/test_core.py:4692:        assert_equal(test, control)
numpy/ma/tests/test_core.py:4699:        assert_(type(test) is np.ndarray)
numpy/ma/tests/test_core.py:4707:        assert_(type(test) is A)
numpy/ma/tests/test_core.py:4711:        assert_equal(test.ndim, 1)
numpy/ma/tests/test_core.py:4713:        assert_equal(test.ndim, 1)
numpy/ma/tests/test_core.py:4720:        assert_equal(test.ndim, 1)
numpy/ma/tests/test_core.py:4728:        assert_equal(test, 42)
numpy/ma/tests/test_core.py:4734:        assert_equal(test, masked_equal([0, 1, -1, -1, 7, 4], -1))
numpy/ma/tests/test_core.py:4737:        assert_equal(test, masked_equal([0, 1, 1, 3, 7, 4], -1))
numpy/ma/tests/test_core.py:4740:        assert_equal(test, masked_equal([1, 2, 2, 1], -1))
numpy/ma/tests/test_core.py:4745:        assert_equal(test, masked_equal([1, 1, -1, 1, 1], -1))
numpy/ma/tests/test_core.py:4747:        assert_equal(test, masked_equal([-1, -1, -1, -1, -1], -1))
numpy/ma/tests/test_core.py:4767:        assert_equal_records(base._mask, np.zeros(base.shape, dtype=mdtype))
numpy/ma/tests/test_core.py:4769:        assert_equal_records(base._mask, np.ones(base.shape, dtype=mdtype))
numpy/ma/tests/test_core.py:4772:        assert_equal_records(base._mask, np.zeros(base.shape, dtype=mdtype))
numpy/ma/tests/test_core.py:4774:        assert_equal_records(base._mask, np.ones(base.shape, dtype=mdtype))
numpy/ma/tests/test_core.py:4777:        assert_equal_records(base._mask,
numpy/ma/tests/test_core.py:4787:        assert_equal(base_a.dtype, int)
numpy/ma/tests/test_core.py:4788:        assert_equal(base_a._data, [3, 2, 3, 4, 5])
numpy/ma/tests/test_core.py:4790:        assert_equal(base_b.dtype, float)
numpy/ma/tests/test_core.py:4791:        assert_equal(base_b._data, [pi, 2.2, 3.3, 4.4, 5.5])
numpy/ma/tests/test_core.py:4793:        assert_equal(base_c.dtype, '|S8')
numpy/ma/tests/test_core.py:4802:        assert_equal(base_a.dtype, int)
numpy/ma/tests/test_core.py:4803:        assert_equal(base_a._data, [3, 3, 3, 4, 5])
numpy/ma/tests/test_core.py:4805:        assert_equal(base_b.dtype, float)
numpy/ma/tests/test_core.py:4806:        assert_equal(base_b._data, [pi, pi, pi, 4.4, 5.5])
numpy/ma/tests/test_core.py:4808:        assert_equal(base_c.dtype, '|S8')
numpy/ma/tests/test_core.py:4818:            assert_equal(base[n].mask, [1, 1, 0, 0, 1])
numpy/ma/tests/test_core.py:4819:            assert_equal(base[n]._data, base._data[n])
numpy/ma/tests/test_core.py:4825:        assert_equal(getmaskarray(test),
numpy/ma/tests/test_core.py:4829:        assert_equal(getmaskarray(test),
numpy/ma/tests/test_core.py:4842:        assert_equal(test, data.ravel())
numpy/ma/tests/test_core.py:4843:        assert_equal(test.mask, controlmask)
numpy/ma/tests/test_core.py:4846:        assert_equal(test, data)
numpy/ma/tests/test_core.py:4847:        assert_equal(test.mask, controlmask.reshape(-1, 2))
numpy/ma/tests/test_core.py:4857:            assert_equal(type(a[i]), mvoid)
numpy/ma/tests/test_core.py:4858:            assert_equal_records(a[i]._data, a._data[i])
numpy/ma/tests/test_core.py:4859:            assert_equal_records(a[i]._mask, a._mask[i])
numpy/ma/tests/test_core.py:4861:            assert_equal(type(a[i, ...]), MaskedArray)
numpy/ma/tests/test_core.py:4862:            assert_equal_records(a[i,...]._data, a._data[i,...])
numpy/ma/tests/test_core.py:4863:            assert_equal_records(a[i,...]._mask, a._mask[i,...])
numpy/ma/tests/test_core.py:4875:        assert_equal(ma['a'], np.array([1.0, 3.0]))
numpy/ma/tests/test_core.py:4877:        assert_equal(ma['a'], np.array([1.0, 4.0]))
numpy/ma/tests/test_core.py:4884:        assert_equal(a.mask, control)
numpy/ma/tests/test_core.py:4887:        assert_equal(a.mask, control)
numpy/ma/tests/test_core.py:4893:        assert_equal(a.mask, control)
numpy/ma/tests/test_core.py:4897:        assert_equal(a.mask, control)
numpy/ma/tests/test_core.py:4904:        assert_array_equal(arr.mask, [True, False, False])
numpy/ma/tests/test_core.py:4909:            assert_equal(len(rec), len(self.data['ddtype']))
numpy/ma/tests/test_core.py:4922:            assert_(arr[0] is a0)
numpy/ma/tests/test_core.py:4923:            assert_(arr[1] is a1)
numpy/ma/tests/test_core.py:4924:            assert_(isinstance(arr[0,...], MaskedArray))
numpy/ma/tests/test_core.py:4925:            assert_(isinstance(arr[1,...], MaskedArray))
numpy/ma/tests/test_core.py:4926:            assert_(arr[0,...][()] is a0)
numpy/ma/tests/test_core.py:4927:            assert_(arr[1,...][()] is a1)
numpy/ma/tests/test_core.py:4931:            assert_(arr[1] is a1)
numpy/ma/tests/test_core.py:4932:            assert_(isinstance(arr[0,...], MaskedArray))
numpy/ma/tests/test_core.py:4933:            assert_(isinstance(arr[1,...], MaskedArray))
numpy/ma/tests/test_core.py:4934:            assert_equal(arr[0,...].mask, True)
numpy/ma/tests/test_core.py:4935:            assert_(arr[1,...][()] is a1)
numpy/ma/tests/test_core.py:4938:            assert_equal(arr[0].data, a0)
numpy/ma/tests/test_core.py:4939:            assert_equal(arr[0].mask, True)
numpy/ma/tests/test_core.py:4940:            assert_equal(arr[0,...][()].data, a0)
numpy/ma/tests/test_core.py:4941:            assert_equal(arr[0,...][()].mask, True)
numpy/ma/tests/test_core.py:4950:        assert_(arr.data[0] is np.ma.masked)
numpy/ma/tests/test_core.py:4953:        assert_(arr[0] is np.ma.masked)
numpy/ma/tests/test_core.py:4957:        assert_(arr[0] is np.ma.masked)
numpy/ma/tests/test_core.py:4973:        assert_(isinstance(test, MaskedArray))
numpy/ma/tests/test_core.py:4974:        assert_equal(test._data, a._data)
numpy/ma/tests/test_core.py:4975:        assert_equal(test._mask, a._mask)
numpy/ma/tests/test_core.py:4980:        assert_(not isinstance(test, MaskedArray))
numpy/ma/tests/test_core.py:4981:        assert_equal(test, a._data)
numpy/ma/tests/test_core.py:4982:        assert_equal_records(test, data.view(a.dtype).squeeze())
numpy/ma/tests/test_core.py:4988:        assert_(isinstance(test, MaskedArray))
numpy/ma/tests/test_core.py:4989:        assert_equal(test, data.ravel())
numpy/ma/tests/test_core.py:4990:        assert_equal(test.mask, controlmask)
numpy/ma/tests/test_core.py:4996:        assert_equal(test.mask.dtype.names, ('A', 'B'))
numpy/ma/tests/test_core.py:4997:        assert_equal(test['A'], a['a'])
numpy/ma/tests/test_core.py:4998:        assert_equal(test['B'], a['b'])
numpy/ma/tests/test_core.py:5001:        assert_(isinstance(test, MaskedArray))
numpy/ma/tests/test_core.py:5002:        assert_equal(test.mask.dtype.names, ('A', 'B'))
numpy/ma/tests/test_core.py:5003:        assert_equal(test['A'], a['a'][0])
numpy/ma/tests/test_core.py:5004:        assert_equal(test['B'], a['b'][0])
numpy/ma/tests/test_core.py:5007:        assert_(isinstance(test, MaskedArray))
numpy/ma/tests/test_core.py:5008:        assert_equal(test.dtype.names, ('A', 'B'))
numpy/ma/tests/test_core.py:5009:        assert_equal(test['A'], a['a'][-1])
numpy/ma/tests/test_core.py:5010:        assert_equal(test['B'], a['b'][-1])
numpy/ma/tests/test_core.py:5016:        assert_(isinstance(test, MaskedArray))
numpy/ma/tests/test_core.py:5017:        assert_equal(test, data)
numpy/ma/tests/test_core.py:5018:        assert_equal(test.mask, controlmask.reshape(-1, 2))
numpy/ma/tests/test_core.py:5021:        assert_(isinstance(test, MaskedArray))
numpy/ma/tests/test_core.py:5022:        assert_equal(test, data[0])
numpy/ma/tests/test_core.py:5023:        assert_equal(test.mask, (1, 0))
numpy/ma/tests/test_core.py:5026:        assert_(isinstance(test, MaskedArray))
numpy/ma/tests/test_core.py:5027:        assert_equal(test, data[-1])
numpy/ma/tests/test_core.py:5033:        assert_equal(test, data)
numpy/ma/tests/test_core.py:5034:        assert_(isinstance(test, np.recarray))
numpy/ma/tests/test_core.py:5035:        assert_(not isinstance(test, MaskedArray))
numpy/ma/tests/test_core.py:5053:            assert_equal(ma_f(a, axis=1)[...,:-1], numpy_f(d[...,:-1], axis=1))
numpy/ma/tests/test_core.py:5054:            assert_equal(ma_f(a, axis=(0,1))[...,:-1],
numpy/ma/tests/test_core.py:5062:            assert_equal(ma_f(a, keepdims=True).shape,
numpy/ma/tests/test_core.py:5064:            assert_equal(ma_f(a, keepdims=False).shape,
numpy/ma/tests/test_core.py:5068:            assert_equal(ma_f(a, axis=1, keepdims=True)[...,:-1],
numpy/ma/tests/test_core.py:5070:            assert_equal(ma_f(a, axis=(0,1), keepdims=True)[...,:-1],
numpy/ma/tests/test_core.py:5094:        assert_equal(count(a), 16)
numpy/ma/tests/test_core.py:5095:        assert_equal(count(a, axis=1), 2*ones((2,4)))
numpy/ma/tests/test_core.py:5096:        assert_equal(count(a, axis=(0,1)), 4*ones((4,)))
numpy/ma/tests/test_core.py:5097:        assert_equal(count(a, keepdims=True), 16*ones((1,1,1)))
numpy/ma/tests/test_core.py:5098:        assert_equal(count(a, axis=1, keepdims=True), 2*ones((2,1,4)))
numpy/ma/tests/test_core.py:5099:        assert_equal(count(a, axis=(0,1), keepdims=True), 4*ones((1,1,4)))
numpy/ma/tests/test_core.py:5100:        assert_equal(count(a, axis=-2), 2*ones((2,4)))
numpy/ma/tests/test_core.py:5101:        assert_raises(ValueError, count, a, axis=(1,1))
numpy/ma/tests/test_core.py:5102:        assert_raises(np.AxisError, count, a, axis=3)
numpy/ma/tests/test_core.py:5107:        assert_equal(count(a), 24)
numpy/ma/tests/test_core.py:5108:        assert_equal(count(a, axis=1), 3*ones((2,4)))
numpy/ma/tests/test_core.py:5109:        assert_equal(count(a, axis=(0,1)), 6*ones((4,)))
numpy/ma/tests/test_core.py:5110:        assert_equal(count(a, keepdims=True), 24*ones((1,1,1)))
numpy/ma/tests/test_core.py:5111:        assert_equal(np.ndim(count(a, keepdims=True)), 3)
numpy/ma/tests/test_core.py:5112:        assert_equal(count(a, axis=1, keepdims=True), 3*ones((2,1,4)))
numpy/ma/tests/test_core.py:5113:        assert_equal(count(a, axis=(0,1), keepdims=True), 6*ones((1,1,4)))
numpy/ma/tests/test_core.py:5114:        assert_equal(count(a, axis=-2), 3*ones((2,4)))
numpy/ma/tests/test_core.py:5115:        assert_raises(ValueError, count, a, axis=(1,1))
numpy/ma/tests/test_core.py:5116:        assert_raises(np.AxisError, count, a, axis=3)
numpy/ma/tests/test_core.py:5119:        assert_equal(count(np.ma.masked), 0)
numpy/ma/tests/test_core.py:5122:        assert_raises(np.AxisError, count, np.ma.array(1), axis=1)
numpy/ma/tests/test_core.py:5128:        assert_(add(np.ma.masked, 1) is np.ma.masked)
numpy/ma/tests/test_core.py:5135:        assert_(result is not np.ma.masked)
numpy/ma/tests/test_core.py:5136:        assert_(not isinstance(result, np.ma.core.MaskedConstant))
numpy/ma/tests/test_core.py:5137:        assert_equal(result.shape, vector.shape)
numpy/ma/tests/test_core.py:5138:        assert_equal(np.ma.getmask(result), np.ones(vector.shape, dtype=bool))
numpy/ma/tests/test_core.py:5151:        assert_(not isinstance(m, np.ma.core.MaskedConstant))
numpy/ma/tests/test_core.py:5152:        assert_(m is not np.ma.masked)
numpy/ma/tests/test_core.py:5157:        assert_equal(repr(np.ma.masked), 'masked')
numpy/ma/tests/test_core.py:5161:        assert_not_equal(repr(masked2), 'masked')
numpy/ma/tests/test_core.py:5171:            assert_(res is np.ma.masked)
numpy/ma/tests/test_core.py:5192:        assert_raises(np.ma.core.MaskError, operator.setitem, orig, (), 1)
numpy/ma/tests/test_core.py:5193:        assert_raises(ValueError,operator.setitem, orig.data, (), 1)
numpy/ma/tests/test_core.py:5194:        assert_raises(ValueError, operator.setitem, orig.mask, (), False)
numpy/ma/tests/test_core.py:5197:        assert_raises(ValueError, operator.setitem, view, (), 1)
numpy/ma/tests/test_core.py:5198:        assert_raises(ValueError, operator.setitem, view.data, (), 1)
numpy/ma/tests/test_core.py:5199:        assert_raises(ValueError, operator.setitem, view.mask, (), False)
numpy/ma/tests/test_core.py:5203:        assert_raises(MaskError, operator.setitem, a_i, (), np.ma.masked)
numpy/ma/tests/test_core.py:5204:        assert_raises(MaskError, int, np.ma.masked)
numpy/ma/tests/test_core.py:5208:        assert_warns(UserWarning, operator.setitem, a_f, (), np.ma.masked)
numpy/ma/tests/test_core.py:5209:        assert_(np.isnan(a_f[()]))
numpy/ma/tests/test_core.py:5215:        assert_equal(a_u[()], u'--')
numpy/ma/tests/test_core.py:5221:        assert_equal(a_b[()], b'--')
numpy/ma/tests/test_core.py:5228:        assert_(a is Sub())
numpy/ma/tests/test_core.py:5229:        assert_(a is not np.ma.masked)
numpy/ma/tests/test_core.py:5230:        assert_not_equal(repr(a), 'masked')
numpy/ma/tests/test_core.py:5233:        assert_raises(AttributeError, setattr, np.ma.masked, 'shape', (1,))
numpy/ma/tests/test_core.py:5234:        assert_raises(AttributeError, setattr, np.ma.masked, 'dtype', np.int64)
numpy/ma/tests/test_core.py:5243:        assert_equal(res.mask, [True])
numpy/ma/tests/test_core.py:5246:        assert_equal(res.mask, True)
numpy/ma/tests/test_core.py:5249:        assert_equal(res.mask, False)
numpy/ma/tests/test_core.py:5252:        assert_(res.mask is np.ma.nomask)
numpy/ma/tests/test_core.py:5255:        assert_equal(res.mask, [False] * 4)
numpy/ma/tests/test_core.py:5260:    assert_equal(np.argwhere(a), [[1], [3]])
numpy/ma/tests/test_core.py:5266:    assert_array_equal(a.mask, [False, False, True, False])
numpy/ma/tests/test_core.py:5270:    assert_array_equal(a.mask, [True, False, True, False])
numpy/ma/tests/test_core.py:5279:    assert_array_equal(result.data, expected_data)
numpy/ma/tests/test_core.py:5280:    assert_array_equal(result.mask, expected_mask)
numpy/ma/tests/test_core.py:5288:    assert_array_equal(result.data[-3], expected_data)
numpy/ma/tests/test_core.py:5289:    assert_array_equal(result.mask, expected_mask)
numpy/ma/tests/test_core.py:5292:    assert_array_equal(result.data[-3], expected_data)
numpy/ma/tests/test_core.py:5293:    assert_array_equal(result.mask, expected_mask)
numpy/ma/tests/test_core.py:5301:    assert_raises(ValueError, np.ma.append, a, b, axis=0)
numpy/ma/tests/test_core.py:5307:    assert_array_equal(result.data, expected.data)
numpy/ma/tests/test_core.py:5308:    assert_array_equal(result.mask, expected.mask)
numpy/ma/tests/test_core.py:5312:    assert_(default_fill_value(1 + 1j) == 1.e20 + 0.0j)
numpy/ma/tests/test_core.py:5320:    assert_(y is x)
numpy/ma/tests/test_core.py:5340:    assert_equal(res_kw.mask,  expected.mask)
numpy/ma/tests/test_core.py:5341:    assert_equal(res_kw.data,  expected.data)
numpy/ma/tests/test_core.py:5342:    assert_equal(res_tup.mask, expected.mask)
numpy/ma/tests/test_core.py:5343:    assert_equal(res_tup.data, expected.data)
numpy/ma/tests/test_core.py:5344:    assert_equal(res_pos.mask, expected.mask)
numpy/ma/tests/test_core.py:5345:    assert_equal(res_pos.data, expected.data)
numpy/ma/tests/test_core.py:5356:    assert x_a.dtype.names == np.dtype(descr).names
numpy/ma/tests/test_core.py:5357:    assert x_a.mask.dtype.names == np.dtype(descr).names
numpy/ma/tests/test_core.py:5358:    assert_equal(x, x_a)
numpy/ma/tests/test_core.py:5360:    assert_(x is x.astype(x.dtype, copy=False))
numpy/ma/tests/test_core.py:5361:    assert_equal(type(x.astype(x.dtype, subok=False)), np.ndarray)
numpy/ma/tests/test_core.py:5364:    assert_(x_f.flags.f_contiguous)
numpy/ma/tests/test_core.py:5365:    assert_(x_f.mask.flags.f_contiguous)
numpy/ma/tests/test_core.py:5369:    assert x_a2.dtype.names == np.dtype(descr).names
numpy/ma/tests/test_core.py:5370:    assert x_a2.mask.dtype.names == np.dtype(descr).names
numpy/ma/tests/test_core.py:5371:    assert_equal(x, x_a2)
numpy/ma/tests/test_core.py:5373:    assert_(x is np.array(x, dtype=descr, copy=False, subok=True))
numpy/ma/tests/test_core.py:5376:    assert_(x_f2.flags.f_contiguous)
numpy/ma/tests/test_core.py:5377:    assert_(x_f2.mask.flags.f_contiguous)
numpy/ma/tests/test_core.py:5388:    assert_(src.fill_value == 1)
numpy/ma/tests/test_core.py:5389:    assert_(src.dtype == dt1)
numpy/ma/tests/test_core.py:5390:    assert_(src.fill_value.dtype == dt1)
numpy/ma/tests/test_core.py:5392:    assert_(dst.fill_value == 1)
numpy/ma/tests/test_core.py:5393:    assert_(dst.dtype == dt2)
numpy/ma/tests/test_core.py:5394:    assert_(dst.fill_value.dtype == dt2)
numpy/ma/tests/test_core.py:5396:    assert_equal(src, dst)
numpy/ma/tests/test_core.py:5406:    assert_equal(mx.dtype, x.dtype)
numpy/ma/tests/test_core.py:5407:    assert_equal(mx.shape, x.shape)
numpy/ma/tests/test_core.py:5410:    assert_equal(mx.dtype, x.dtype)
numpy/ma/tests/test_core.py:5411:    assert_equal(mx.shape, x.shape)
numpy/ma/tests/test_core.py:5418:    assert_equal(a.mask.shape, ())
numpy/ma/tests/test_core.py:5448:    assert_equal(np.ma.core.doc_note(method.__doc__, "note"), expected_doc)
numpy/ma/tests/test_deprecations.py:25:        assert_equal(result, argsort(arr_2d, axis=None))
numpy/ma/tests/test_deprecations.py:43:        assert_warns(DeprecationWarning, np.ma.minimum, np.ma.array([1, 2]))
numpy/ma/tests/test_deprecations.py:46:        assert_warns(DeprecationWarning, np.ma.maximum, np.ma.array([1, 2]))
numpy/ma/tests/test_deprecations.py:59:        assert_equal(result, ma_max(data2d, axis=None))
numpy/ma/tests/test_deprecations.py:62:        assert_equal(result, ma_min(data2d, axis=None))
numpy/ma/tests/test_deprecations.py:66:        assert_equal(result, ma_min(data1d, axis=None))
numpy/ma/tests/test_deprecations.py:67:        assert_equal(result, ma_min(data1d, axis=0))
numpy/ma/tests/test_deprecations.py:70:        assert_equal(result, ma_max(data1d, axis=None))
numpy/ma/tests/test_deprecations.py:71:        assert_equal(result, ma_max(data1d, axis=0))
numpy/ma/tests/test_subclassing.py:20:    assert_equal(a[:len(b)], b)
numpy/ma/tests/test_subclassing.py:164:        assert_(isinstance(xmsub, MaskedArray))
numpy/ma/tests/test_subclassing.py:165:        assert_equal(xmsub._data, xsub)
numpy/ma/tests/test_subclassing.py:166:        assert_(isinstance(xmsub._data, SubArray))
numpy/ma/tests/test_subclassing.py:171:        assert_(isinstance(mx._data, subarray))
numpy/ma/tests/test_subclassing.py:177:            assert_(isinstance(log(mx), msubarray))
numpy/ma/tests/test_subclassing.py:178:            assert_equal(log(x), np.log(x))
numpy/ma/tests/test_subclassing.py:184:        assert_(isinstance(add(mx, mx), msubarray))
numpy/ma/tests/test_subclassing.py:185:        assert_(isinstance(add(mx, x), msubarray))
numpy/ma/tests/test_subclassing.py:187:        assert_equal(add(mx, x), mx+x)
numpy/ma/tests/test_subclassing.py:188:        assert_(isinstance(add(mx, mx)._data, subarray))
numpy/ma/tests/test_subclassing.py:189:        assert_(isinstance(add.outer(mx, mx), msubarray))
numpy/ma/tests/test_subclassing.py:190:        assert_(isinstance(hypot(mx, mx), msubarray))
numpy/ma/tests/test_subclassing.py:191:        assert_(isinstance(hypot(mx, x), msubarray))
numpy/ma/tests/test_subclassing.py:197:        assert_(isinstance(divide(mx, mx), msubarray))
numpy/ma/tests/test_subclassing.py:198:        assert_(isinstance(divide(mx, x), msubarray))
numpy/ma/tests/test_subclassing.py:199:        assert_equal(divide(mx, mx), divide(xmx, xmx))
numpy/ma/tests/test_subclassing.py:207:        assert_(isinstance(z, MaskedArray))
numpy/ma/tests/test_subclassing.py:208:        assert_(not isinstance(z, MSubArray))
numpy/ma/tests/test_subclassing.py:209:        assert_(isinstance(z._data, SubArray))
numpy/ma/tests/test_subclassing.py:210:        assert_equal(z._data.info, {})
numpy/ma/tests/test_subclassing.py:213:        assert_(isinstance(z, MaskedArray))
numpy/ma/tests/test_subclassing.py:214:        assert_(isinstance(z, MSubArray))
numpy/ma/tests/test_subclassing.py:215:        assert_(isinstance(z._data, SubArray))
numpy/ma/tests/test_subclassing.py:216:        assert_(z._data.info['added'] > 0)
numpy/ma/tests/test_subclassing.py:219:        assert_(isinstance(ym, MaskedArray))
numpy/ma/tests/test_subclassing.py:220:        assert_(isinstance(ym, MSubArray))
numpy/ma/tests/test_subclassing.py:221:        assert_(isinstance(ym._data, SubArray))
numpy/ma/tests/test_subclassing.py:222:        assert_(ym._data.info['iadded'] > 0)
numpy/ma/tests/test_subclassing.py:225:        assert_equal(ym._mask, [1, 0, 0, 0, 1])
numpy/ma/tests/test_subclassing.py:227:        assert_equal(ym._mask, [0, 0, 0, 0, 1])
numpy/ma/tests/test_subclassing.py:231:        assert_(hasattr(mxsub, 'info'))
numpy/ma/tests/test_subclassing.py:232:        assert_equal(mxsub.info, xsub.info)
numpy/ma/tests/test_subclassing.py:242:        assert_(not isinstance(mxsub, MSubArray))
numpy/ma/tests/test_subclassing.py:243:        assert_(isinstance(mxsub, MaskedArray))
numpy/ma/tests/test_subclassing.py:244:        assert_equal(mxsub._mask, m)
numpy/ma/tests/test_subclassing.py:247:        assert_(not isinstance(mxsub, MSubArray))
numpy/ma/tests/test_subclassing.py:248:        assert_(isinstance(mxsub, MaskedArray))
numpy/ma/tests/test_subclassing.py:249:        assert_equal(mxsub._mask, m)
numpy/ma/tests/test_subclassing.py:252:        assert_(isinstance(mxsub, MSubArray))
numpy/ma/tests/test_subclassing.py:253:        assert_equal(mxsub.info, xsub.info)
numpy/ma/tests/test_subclassing.py:254:        assert_equal(mxsub._mask, xsub._mask)
numpy/ma/tests/test_subclassing.py:257:        assert_(isinstance(mxsub, MSubArray))
numpy/ma/tests/test_subclassing.py:258:        assert_equal(mxsub.info, xsub.info)
numpy/ma/tests/test_subclassing.py:259:        assert_equal(mxsub._mask, m)
numpy/ma/tests/test_subclassing.py:268:        assert_(isinstance(xcsub[1], ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:269:        assert_(isinstance(xcsub[1,...], ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:270:        assert_(isinstance(xcsub[1:4], ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:273:        assert_(isinstance(mxcsub[1], ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:274:        assert_(isinstance(mxcsub[1,...].data, ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:275:        assert_(mxcsub[0] is masked)
numpy/ma/tests/test_subclassing.py:276:        assert_(isinstance(mxcsub[0,...].data, ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:277:        assert_(isinstance(mxcsub[1:4].data, ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:280:        assert_(isinstance(mxcsub.flat[1].data, ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:281:        assert_(mxcsub.flat[0] is masked)
numpy/ma/tests/test_subclassing.py:282:        assert_(isinstance(mxcsub.flat[1:4].base, ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:286:        assert_raises(ValueError, xcsub.__setitem__, 1, x[4])
numpy/ma/tests/test_subclassing.py:288:        assert_raises(ValueError, mxcsub.__setitem__, 1, x[4])
numpy/ma/tests/test_subclassing.py:289:        assert_raises(ValueError, mxcsub.__setitem__, slice(1, 4), x[1:4])
numpy/ma/tests/test_subclassing.py:293:        assert_raises(ValueError, mxcsub.flat.__setitem__, 1, x[4])
numpy/ma/tests/test_subclassing.py:294:        assert_raises(ValueError, mxcsub.flat.__setitem__, slice(1, 4), x[1:4])
numpy/ma/tests/test_subclassing.py:303:        assert_(isinstance(mxcsub_nomask[1,...].data, ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:304:        assert_(isinstance(mxcsub_nomask[0,...].data, ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:306:        assert_(isinstance(mxcsub_nomask[1], ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:307:        assert_(isinstance(mxcsub_nomask[0], ComplicatedSubArray))
numpy/ma/tests/test_subclassing.py:314:        assert_startswith(repr(mx), 'masked_array')
numpy/ma/tests/test_subclassing.py:317:        assert_startswith(repr(mxsub),
numpy/ma/tests/test_subclassing.py:326:        assert_equal(str(mxsub), '[-- 1 -- 3 4]')
numpy/ma/tests/test_subclassing.py:332:        assert_equal(str(mxcsub), 'myprefix [-- 1 -- 3 4] mypostfix')
numpy/ma/tests/test_subclassing.py:340:        assert_('info' in diff1._optinfo)
numpy/ma/tests/test_subclassing.py:341:        assert_(diff1._optinfo['info'] == 'test')
numpy/ma/tests/test_subclassing.py:343:        assert_('info' in diff2._optinfo)
numpy/ma/tests/test_subclassing.py:344:        assert_(diff2._optinfo['info'] == 'test')
numpy/ma/tests/test_subclassing.py:363:    assert_equal(data_masked.data, new_array.data)
numpy/ma/tests/test_subclassing.py:364:    assert_equal(data_masked.mask, new_array.mask)
numpy/ma/tests/test_subclassing.py:367:    assert_equal(data_masked.mask, new_array.mask)
numpy/ma/tests/test_subclassing.py:368:    assert_(new_array.sharedmask)
numpy/ma/tests/test_subclassing.py:372:    assert_equal(data_masked.data, new_array.data)
numpy/ma/tests/test_subclassing.py:373:    assert_equal(data_masked.mask, new_array.mask)
numpy/ma/tests/test_subclassing.py:376:    assert_equal([True, False, False], new_array.mask)
numpy/ma/tests/test_subclassing.py:377:    assert_(not new_array.sharedmask)
numpy/ma/tests/test_subclassing.py:381:    assert_equal(data_masked.data, new_array.data)
numpy/ma/tests/test_subclassing.py:383:    assert_equal(data_masked.mask, [True, False, True])
numpy/ma/tests/test_subclassing.py:385:    assert_(not new_array.mask)
numpy/ma/tests/test_subclassing.py:386:    assert_(not new_array.sharedmask)
numpy/ma/tests/test_extras.py:42:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:47:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:52:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:58:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:62:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:65:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:73:        assert_equal(type(masked_arr['b']), np.ma.core.MaskedArray)
numpy/ma/tests/test_extras.py:74:        assert_equal(type(masked_arr['b']['c']), np.ma.core.MaskedArray)
numpy/ma/tests/test_extras.py:75:        assert_equal(len(masked_arr['b']['c']), 1)
numpy/ma/tests/test_extras.py:76:        assert_equal(masked_arr['b']['c'].shape, (1, 1))
numpy/ma/tests/test_extras.py:77:        assert_equal(masked_arr['b']['c']._fill_value.shape, ())
numpy/ma/tests/test_extras.py:84:        assert_equal(type(masked_arr['b']), np.ma.core.MaskedArray)
numpy/ma/tests/test_extras.py:85:        assert_equal(len(masked_arr['b']), 1)
numpy/ma/tests/test_extras.py:86:        assert_equal(masked_arr['b'].shape, (1, 1))
numpy/ma/tests/test_extras.py:87:        assert_equal(masked_arr['b']._fill_value.shape, ())
numpy/ma/tests/test_extras.py:95:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:101:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:107:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:120:                    assert_equal(a.compressed().sum(), s)
numpy/ma/tests/test_extras.py:123:                    assert_equal(a.compressed().sum(), s)
numpy/ma/tests/test_extras.py:132:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:142:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:151:        assert_equal(test, [slice(0, a.size)])
numpy/ma/tests/test_extras.py:154:        assert_equal(test, [slice(0, a.size)])
numpy/ma/tests/test_extras.py:158:        assert_equal(test, [slice(3, 5), slice(6, 9)])
numpy/ma/tests/test_extras.py:162:        assert_equal(test, [])
numpy/ma/tests/test_extras.py:170:        assert_equal(2.0, average(ott, axis=0))
numpy/ma/tests/test_extras.py:171:        assert_equal(2.0, average(ott, weights=[1., 1., 2., 1.]))
numpy/ma/tests/test_extras.py:173:        assert_equal(2.0, result)
numpy/ma/tests/test_extras.py:174:        assert_(wts == 4.0)
numpy/ma/tests/test_extras.py:176:        assert_equal(average(ott, axis=0).mask, [True])
numpy/ma/tests/test_extras.py:180:        assert_equal(average(ott, axis=0), [2.0, 0.0])
numpy/ma/tests/test_extras.py:181:        assert_equal(average(ott, axis=1).mask[0], [True])
numpy/ma/tests/test_extras.py:182:        assert_equal([2., 0.], average(ott, axis=0))
numpy/ma/tests/test_extras.py:184:        assert_equal(wts, [1., 0.])
numpy/ma/tests/test_extras.py:191:        assert_equal(average(x, axis=0), 2.5)
numpy/ma/tests/test_extras.py:192:        assert_equal(average(x, axis=0, weights=w1), 2.5)
numpy/ma/tests/test_extras.py:194:        assert_equal(average(y, None), np.add.reduce(np.arange(6)) * 3. / 12.)
numpy/ma/tests/test_extras.py:195:        assert_equal(average(y, axis=0), np.arange(6) * 3. / 2.)
numpy/ma/tests/test_extras.py:196:        assert_equal(average(y, axis=1),
numpy/ma/tests/test_extras.py:198:        assert_equal(average(y, None, weights=w2), 20. / 6.)
numpy/ma/tests/test_extras.py:199:        assert_equal(average(y, axis=0, weights=w2),
numpy/ma/tests/test_extras.py:201:        assert_equal(average(y, axis=1),
numpy/ma/tests/test_extras.py:208:        assert_equal(average(masked_array(x, m1), axis=0), 2.5)
numpy/ma/tests/test_extras.py:209:        assert_equal(average(masked_array(x, m2), axis=0), 2.5)
numpy/ma/tests/test_extras.py:210:        assert_equal(average(masked_array(x, m4), axis=0).mask, [True])
numpy/ma/tests/test_extras.py:211:        assert_equal(average(masked_array(x, m5), axis=0), 0.0)
numpy/ma/tests/test_extras.py:212:        assert_equal(count(average(masked_array(x, m4), axis=0)), 0)
numpy/ma/tests/test_extras.py:214:        assert_equal(average(z, None), 20. / 6.)
numpy/ma/tests/test_extras.py:215:        assert_equal(average(z, axis=0), [0., 1., 99., 99., 4.0, 7.5])
numpy/ma/tests/test_extras.py:216:        assert_equal(average(z, axis=1), [2.5, 5.0])
numpy/ma/tests/test_extras.py:217:        assert_equal(average(z, axis=0, weights=w2),
numpy/ma/tests/test_extras.py:225:        assert_equal(shape(r1), shape(w1))
numpy/ma/tests/test_extras.py:226:        assert_equal(r1.shape, w1.shape)
numpy/ma/tests/test_extras.py:228:        assert_equal(shape(w2), shape(r2))
numpy/ma/tests/test_extras.py:230:        assert_equal(shape(w2), shape(r2))
numpy/ma/tests/test_extras.py:232:        assert_equal(shape(w2), shape(r2))
numpy/ma/tests/test_extras.py:236:        assert_equal(a2da, [0.5, 3.0])
numpy/ma/tests/test_extras.py:238:        assert_equal(a2dma, [1.0, 3.0])
numpy/ma/tests/test_extras.py:240:        assert_equal(a2dma, 7. / 3.)
numpy/ma/tests/test_extras.py:242:        assert_equal(a2dma, [1.5, 4.0])
numpy/ma/tests/test_extras.py:247:        assert_equal(a, 1.5)
numpy/ma/tests/test_extras.py:249:        assert_equal(a, 1.5)
numpy/ma/tests/test_extras.py:262:        assert_almost_equal(av.real, expected.real)
numpy/ma/tests/test_extras.py:263:        assert_almost_equal(av.imag, expected.imag)
numpy/ma/tests/test_extras.py:267:        assert_almost_equal(av0.real, expected0.real)
numpy/ma/tests/test_extras.py:268:        assert_almost_equal(av0.imag, expected0.imag)
numpy/ma/tests/test_extras.py:272:        assert_almost_equal(av1.real, expected1.real)
numpy/ma/tests/test_extras.py:273:        assert_almost_equal(av1.imag, expected1.imag)
numpy/ma/tests/test_extras.py:280:        assert_almost_equal(wav.real, expected.real)
numpy/ma/tests/test_extras.py:281:        assert_almost_equal(wav.imag, expected.imag)
numpy/ma/tests/test_extras.py:286:        assert_almost_equal(wav0.real, expected0.real)
numpy/ma/tests/test_extras.py:287:        assert_almost_equal(wav0.imag, expected0.imag)
numpy/ma/tests/test_extras.py:292:        assert_almost_equal(wav1.real, expected1.real)
numpy/ma/tests/test_extras.py:293:        assert_almost_equal(wav1.imag, expected1.imag)
numpy/ma/tests/test_extras.py:306:        assert_almost_equal(avg_unmasked, expected_unmasked)
numpy/ma/tests/test_extras.py:310:        assert_almost_equal(avg_masked, expected_masked)
numpy/ma/tests/test_extras.py:319:        assert_almost_equal(avg_unmasked, 1.5)
numpy/ma/tests/test_extras.py:335:        assert_almost_equal(avg_masked, avg_expected)
numpy/ma/tests/test_extras.py:336:        assert_equal(avg_masked.mask, avg_expected.mask)
numpy/ma/tests/test_extras.py:343:        assert_array_equal(mr_[1, 2, 3, 4, 5, 6], array([1, 2, 3, 4, 5, 6]))
numpy/ma/tests/test_extras.py:348:        assert_(isinstance(c, MaskedArray))
numpy/ma/tests/test_extras.py:349:        assert_array_equal(c, [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1])
numpy/ma/tests/test_extras.py:350:        assert_array_equal(c.mask, mr_[m, 0, 0, m])
numpy/ma/tests/test_extras.py:362:        assert_(d.shape == (5, 10))
numpy/ma/tests/test_extras.py:363:        assert_array_equal(d[:, :5], b_1)
numpy/ma/tests/test_extras.py:364:        assert_array_equal(d[:, 5:], b_2)
numpy/ma/tests/test_extras.py:365:        assert_array_equal(d.mask, np.r_['1', m_1, m_2])
numpy/ma/tests/test_extras.py:367:        assert_(d.shape == (10, 5))
numpy/ma/tests/test_extras.py:368:        assert_array_equal(d[:5,:], b_1)
numpy/ma/tests/test_extras.py:369:        assert_array_equal(d[5:,:], b_2)
numpy/ma/tests/test_extras.py:370:        assert_array_equal(d.mask, np.r_[m_1, m_2])
numpy/ma/tests/test_extras.py:374:        assert_equal(actual.mask, [True, False])
numpy/ma/tests/test_extras.py:375:        assert_equal(actual.data[1], 1)
numpy/ma/tests/test_extras.py:378:        assert_equal(actual.mask, [False, False, True])
numpy/ma/tests/test_extras.py:379:        assert_equal(actual.data[:2], [1, 2])
numpy/ma/tests/test_extras.py:394:        assert_equal(test, [0, 24])
numpy/ma/tests/test_extras.py:396:        assert_equal(test[0], [(0, 0, 1, 0, 0), (0, 1, 2, 3, 4)])
numpy/ma/tests/test_extras.py:397:        assert_equal(test[1], [(3, 3, 3, 4, 4), (0, 1, 2, 3, 4)])
numpy/ma/tests/test_extras.py:399:        assert_equal(test[0], [(0, 1, 2, 3, 4), (0, 0, 2, 0, 3)])
numpy/ma/tests/test_extras.py:400:        assert_equal(test[1], [(0, 1, 2, 3, 4), (4, 2, 4, 4, 4)])
numpy/ma/tests/test_extras.py:403:        assert_equal(test, [0, 24])
numpy/ma/tests/test_extras.py:405:        assert_equal(test[0], [(0, 0, 0, 0, 0), (0, 1, 2, 3, 4)])
numpy/ma/tests/test_extras.py:406:        assert_equal(test[1], [(4, 4, 4, 4, 4), (0, 1, 2, 3, 4)])
numpy/ma/tests/test_extras.py:408:        assert_equal(test[0], [(0, 1, 2, 3, 4), (0, 0, 0, 0, 0)])
numpy/ma/tests/test_extras.py:409:        assert_equal(test[1], [(0, 1, 2, 3, 4), (4, 4, 4, 4, 4)])
numpy/ma/tests/test_extras.py:413:        assert_equal(test[0], [(0, 0, 1, 0, 0), (0, 1, 2, 3, 4)])
numpy/ma/tests/test_extras.py:414:        assert_equal(test[1], [(1, 1, 2, 4, 4), (0, 1, 2, 3, 4)])
numpy/ma/tests/test_extras.py:416:        assert_equal(test[0], [(0, 1, 2, 4), (0, 0, 2, 3)])
numpy/ma/tests/test_extras.py:417:        assert_equal(test[1], [(0, 1, 2, 4), (4, 2, 4, 4)])
numpy/ma/tests/test_extras.py:496:        assert_equal(a, a2)
numpy/ma/tests/test_extras.py:497:        assert_equal(a, a3)
numpy/ma/tests/test_extras.py:498:        assert_equal(a, a4)
numpy/ma/tests/test_extras.py:518:        assert_equal(a, a2)
numpy/ma/tests/test_extras.py:519:        assert_equal(a, a3)
numpy/ma/tests/test_extras.py:520:        assert_equal(a, a4)
numpy/ma/tests/test_extras.py:531:        assert_equal(a, a2)
numpy/ma/tests/test_extras.py:548:        assert_equal(a, a2)
numpy/ma/tests/test_extras.py:549:        assert_equal(a, a3)
numpy/ma/tests/test_extras.py:550:        assert_equal(a, a4)
numpy/ma/tests/test_extras.py:564:        assert_equal(a, a2)
numpy/ma/tests/test_extras.py:570:        assert_equal(compress_rowcols(x), [[4, 5], [7, 8]])
numpy/ma/tests/test_extras.py:571:        assert_equal(compress_rowcols(x, 0), [[3, 4, 5], [6, 7, 8]])
numpy/ma/tests/test_extras.py:572:        assert_equal(compress_rowcols(x, 1), [[1, 2], [4, 5], [7, 8]])
numpy/ma/tests/test_extras.py:574:        assert_equal(compress_rowcols(x), [[0, 2], [6, 8]])
numpy/ma/tests/test_extras.py:575:        assert_equal(compress_rowcols(x, 0), [[0, 1, 2], [6, 7, 8]])
numpy/ma/tests/test_extras.py:576:        assert_equal(compress_rowcols(x, 1), [[0, 2], [3, 5], [6, 8]])
numpy/ma/tests/test_extras.py:578:        assert_equal(compress_rowcols(x), [[8]])
numpy/ma/tests/test_extras.py:579:        assert_equal(compress_rowcols(x, 0), [[6, 7, 8]])
numpy/ma/tests/test_extras.py:580:        assert_equal(compress_rowcols(x, 1,), [[2], [5], [8]])
numpy/ma/tests/test_extras.py:582:        assert_equal(compress_rowcols(x).size, 0)
numpy/ma/tests/test_extras.py:583:        assert_equal(compress_rowcols(x, 0).size, 0)
numpy/ma/tests/test_extras.py:584:        assert_equal(compress_rowcols(x, 1).size, 0)
numpy/ma/tests/test_extras.py:590:        assert_equal(mask_rowcols(x).mask,
numpy/ma/tests/test_extras.py:592:        assert_equal(mask_rowcols(x, 0).mask,
numpy/ma/tests/test_extras.py:594:        assert_equal(mask_rowcols(x, 1).mask,
numpy/ma/tests/test_extras.py:597:        assert_equal(mask_rowcols(x).mask,
numpy/ma/tests/test_extras.py:599:        assert_equal(mask_rowcols(x, 0).mask,
numpy/ma/tests/test_extras.py:601:        assert_equal(mask_rowcols(x, 1).mask,
numpy/ma/tests/test_extras.py:604:        assert_equal(mask_rowcols(x).mask,
numpy/ma/tests/test_extras.py:606:        assert_equal(mask_rowcols(x, 0).mask,
numpy/ma/tests/test_extras.py:608:        assert_equal(mask_rowcols(x, 1,).mask,
numpy/ma/tests/test_extras.py:611:        assert_(mask_rowcols(x).all() is masked)
numpy/ma/tests/test_extras.py:612:        assert_(mask_rowcols(x, 0).all() is masked)
numpy/ma/tests/test_extras.py:613:        assert_(mask_rowcols(x, 1).all() is masked)
numpy/ma/tests/test_extras.py:614:        assert_(mask_rowcols(x).mask.all())
numpy/ma/tests/test_extras.py:615:        assert_(mask_rowcols(x, 0).mask.all())
numpy/ma/tests/test_extras.py:616:        assert_(mask_rowcols(x, 1).mask.all())
numpy/ma/tests/test_extras.py:628:            assert_equal(res, mask_rowcols(x, rowcols_axis))
numpy/ma/tests/test_extras.py:638:        assert_equal(c.mask, [[1, 1], [1, 0]])
numpy/ma/tests/test_extras.py:640:        assert_equal(c.mask, [[1, 1, 1], [1, 0, 0], [1, 0, 0]])
numpy/ma/tests/test_extras.py:642:        assert_equal(c, np.dot(a.filled(0), b.filled(0)))
numpy/ma/tests/test_extras.py:644:        assert_equal(c, np.dot(b.filled(0), a.filled(0)))
numpy/ma/tests/test_extras.py:650:        assert_equal(c.mask, [[0, 1], [1, 1]])
numpy/ma/tests/test_extras.py:652:        assert_equal(c.mask, [[0, 0, 1], [0, 0, 1], [1, 1, 1]])
numpy/ma/tests/test_extras.py:654:        assert_equal(c, np.dot(a.filled(0), b.filled(0)))
numpy/ma/tests/test_extras.py:655:        assert_equal(c, dot(a, b))
numpy/ma/tests/test_extras.py:657:        assert_equal(c, np.dot(b.filled(0), a.filled(0)))
numpy/ma/tests/test_extras.py:663:        assert_equal(c.mask, nomask)
numpy/ma/tests/test_extras.py:665:        assert_equal(c.mask, nomask)
numpy/ma/tests/test_extras.py:670:        assert_equal(c.mask, [[1, 1], [0, 0]])
numpy/ma/tests/test_extras.py:672:        assert_equal(c, np.dot(a.filled(0), b.filled(0)))
numpy/ma/tests/test_extras.py:674:        assert_equal(c.mask, [[1, 0, 0], [1, 0, 0], [1, 0, 0]])
numpy/ma/tests/test_extras.py:676:        assert_equal(c, np.dot(b.filled(0), a.filled(0)))
numpy/ma/tests/test_extras.py:681:        assert_equal(c.mask, [[0, 0], [1, 1]])
numpy/ma/tests/test_extras.py:683:        assert_equal(c, np.dot(a.filled(0), b.filled(0)))
numpy/ma/tests/test_extras.py:685:        assert_equal(c.mask, [[0, 0, 1], [0, 0, 1], [0, 0, 1]])
numpy/ma/tests/test_extras.py:687:        assert_equal(c, np.dot(b.filled(0), a.filled(0)))
numpy/ma/tests/test_extras.py:692:        assert_equal(c.mask, [[1, 0], [1, 1]])
numpy/ma/tests/test_extras.py:694:        assert_equal(c, np.dot(a.filled(0), b.filled(0)))
numpy/ma/tests/test_extras.py:696:        assert_equal(c.mask, [[0, 0, 1], [1, 1, 1], [0, 0, 1]])
numpy/ma/tests/test_extras.py:698:        assert_equal(c, np.dot(b.filled(0), a.filled(0)))
numpy/ma/tests/test_extras.py:704:        assert_(type(dot(a, a)) is MaskedArray)
numpy/ma/tests/test_extras.py:705:        assert_(type(dot(a, b)) is MaskedArray)
numpy/ma/tests/test_extras.py:706:        assert_(type(dot(b, a)) is MaskedArray)
numpy/ma/tests/test_extras.py:707:        assert_(type(dot(b, b)) is MaskedArray)
numpy/ma/tests/test_extras.py:713:        assert_(res is out)
numpy/ma/tests/test_extras.py:714:        assert_equal(a, res)
numpy/ma/tests/test_extras.py:726:        assert_equal(xa, [[1, 4], [7, 10]])
numpy/ma/tests/test_extras.py:736:        assert_equal(xa, [[2, 5], [8, 11]])
numpy/ma/tests/test_extras.py:745:        assert_equal(test, ctrl)
numpy/ma/tests/test_extras.py:749:        assert_equal(test, ctrl)
numpy/ma/tests/test_extras.py:755:        assert_equal(r, np.inf)
numpy/ma/tests/test_extras.py:761:        assert_equal(r, np.inf)
numpy/ma/tests/test_extras.py:764:        assert_equal(r, np.inf)
numpy/ma/tests/test_extras.py:769:        assert_equal(r.mask, True)
numpy/ma/tests/test_extras.py:773:        assert_equal(r.mask, True)
numpy/ma/tests/test_extras.py:777:        assert_equal(np.ma.median(x), 4.)
numpy/ma/tests/test_extras.py:778:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:780:        assert_equal(np.ma.median(x), 3.5)
numpy/ma/tests/test_extras.py:781:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:783:        assert_equal(np.ma.median(x), 5.)
numpy/ma/tests/test_extras.py:784:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:787:        assert_equal(np.ma.median(x, axis=0), np.median(x, axis=0))
numpy/ma/tests/test_extras.py:788:        assert_equal(np.ma.median(x, axis=1), np.median(x, axis=1))
numpy/ma/tests/test_extras.py:789:        assert_(np.ma.median(x, axis=1) is not MaskedArray)
numpy/ma/tests/test_extras.py:792:        assert_equal(np.ma.median(x, axis=0), np.median(x, axis=0))
numpy/ma/tests/test_extras.py:793:        assert_equal(np.ma.median(x, axis=1), np.median(x, axis=1))
numpy/ma/tests/test_extras.py:794:        assert_(np.ma.median(x, axis=1) is not MaskedArray)
numpy/ma/tests/test_extras.py:799:        assert_equal(np.ma.median(x), 1.5)
numpy/ma/tests/test_extras.py:800:        assert_equal(np.ma.median(x).shape, (), "shape mismatch")
numpy/ma/tests/test_extras.py:801:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:803:        assert_equal(np.ma.median(x), 2.5)
numpy/ma/tests/test_extras.py:804:        assert_equal(np.ma.median(x).shape, (), "shape mismatch")
numpy/ma/tests/test_extras.py:805:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:807:        assert_equal(ma_x, [2., 5.])
numpy/ma/tests/test_extras.py:808:        assert_equal(ma_x.shape, (2,), "shape mismatch")
numpy/ma/tests/test_extras.py:809:        assert_(type(ma_x) is MaskedArray)
numpy/ma/tests/test_extras.py:838:        assert_equal(np.ma.median(x), 1)
numpy/ma/tests/test_extras.py:840:        assert_equal(np.ma.median(x), np.ma.masked)
numpy/ma/tests/test_extras.py:844:        assert_equal(np.ma.median(x), np.ma.masked)
numpy/ma/tests/test_extras.py:845:        assert_equal(np.ma.median(x).shape, (), "shape mismatch")
numpy/ma/tests/test_extras.py:846:        assert_(type(np.ma.median(x)) is np.ma.core.MaskedConstant)
numpy/ma/tests/test_extras.py:848:        assert_equal(np.ma.median(x), 2.)
numpy/ma/tests/test_extras.py:849:        assert_equal(np.ma.median(x).shape, (), "shape mismatch")
numpy/ma/tests/test_extras.py:850:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:852:        assert_equal(np.ma.median(x), 2.5)
numpy/ma/tests/test_extras.py:853:        assert_equal(np.ma.median(x).shape, (), "shape mismatch")
numpy/ma/tests/test_extras.py:854:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:856:        assert_equal(np.ma.median(x), 0.)
numpy/ma/tests/test_extras.py:857:        assert_equal(np.ma.median(x).shape, (), "shape mismatch")
numpy/ma/tests/test_extras.py:858:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:861:        assert_equal(np.ma.median(x), 3.)
numpy/ma/tests/test_extras.py:862:        assert_equal(np.ma.median(x).shape, (), "shape mismatch")
numpy/ma/tests/test_extras.py:863:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:866:        assert_equal(np.ma.median(x), 3.)
numpy/ma/tests/test_extras.py:867:        assert_equal(np.ma.median(x).shape, (), "shape mismatch")
numpy/ma/tests/test_extras.py:868:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:871:        assert_equal(np.ma.median(x), 2.5)
numpy/ma/tests/test_extras.py:872:        assert_equal(np.ma.median(x).shape, (), "shape mismatch")
numpy/ma/tests/test_extras.py:873:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:876:        assert_equal(np.ma.median(x), 2.5)
numpy/ma/tests/test_extras.py:877:        assert_equal(np.ma.median(x).shape, (), "shape mismatch")
numpy/ma/tests/test_extras.py:878:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:881:        assert_equal(np.ma.median(array([1,2,3],mask=[0,0,0])).shape,
numpy/ma/tests/test_extras.py:895:        assert_equal(median(z[:, 0]), 0)
numpy/ma/tests/test_extras.py:896:        assert_equal(median(z), 0)
numpy/ma/tests/test_extras.py:897:        assert_equal(median(z, axis=0), np.zeros(p))
numpy/ma/tests/test_extras.py:898:        assert_equal(median(z.T, axis=1), np.zeros(p))
numpy/ma/tests/test_extras.py:904:        assert_equal(median(x), 14.5)
numpy/ma/tests/test_extras.py:905:        assert_(type(np.ma.median(x)) is not MaskedArray)
numpy/ma/tests/test_extras.py:906:        assert_equal(median(x, axis=0), [13.5, 14.5, 15.5])
numpy/ma/tests/test_extras.py:907:        assert_(type(np.ma.median(x, axis=0)) is MaskedArray)
numpy/ma/tests/test_extras.py:908:        assert_equal(median(x, axis=1), [0, 0, 0, 10, 13, 16, 19, 0, 0, 0])
numpy/ma/tests/test_extras.py:909:        assert_(type(np.ma.median(x, axis=1)) is MaskedArray)
numpy/ma/tests/test_extras.py:910:        assert_equal(median(x, axis=1).mask, [1, 1, 1, 0, 0, 0, 0, 1, 1, 1])
numpy/ma/tests/test_extras.py:916:        assert_equal(median(x, 0), [[12, 9], [6, 15], [12, 9], [18, 15]])
numpy/ma/tests/test_extras.py:918:        assert_equal(median(x, 0), [[99, 10], [11, 99], [13, 14]])
numpy/ma/tests/test_extras.py:921:        assert_equal(median(x, 0), [[12, 10], [8, 9], [16, 17]])
numpy/ma/tests/test_extras.py:926:        assert_equal(median(x, axis=-1), median(x, axis=1))
numpy/ma/tests/test_extras.py:936:                assert_equal(out, 14.5)
numpy/ma/tests/test_extras.py:938:                assert_equal(out, 15.)
numpy/ma/tests/test_extras.py:939:            assert_(r is out)
numpy/ma/tests/test_extras.py:940:            assert_(type(r) is MaskedArray)
numpy/ma/tests/test_extras.py:955:            assert_equal(r, e)
numpy/ma/tests/test_extras.py:956:            assert_(r is out)
numpy/ma/tests/test_extras.py:957:            assert_(type(r) is MaskedArray)
numpy/ma/tests/test_extras.py:965:        assert_array_equal(np.ma.median(masked_arr, axis=0),
numpy/ma/tests/test_extras.py:975:            assert_(np.isscalar(r))
numpy/ma/tests/test_extras.py:976:            assert_array_equal(r, np.nan)
numpy/ma/tests/test_extras.py:978:            assert_(np.isscalar(r))
numpy/ma/tests/test_extras.py:979:            assert_array_equal(r, np.nan)
numpy/ma/tests/test_extras.py:982:            assert_equal(type(r), MaskedArray)
numpy/ma/tests/test_extras.py:983:            assert_array_equal(r, [1, np.nan, 3])
numpy/ma/tests/test_extras.py:985:            assert_equal(type(r), MaskedArray)
numpy/ma/tests/test_extras.py:986:            assert_array_equal(r, [np.nan, 2])
numpy/ma/tests/test_extras.py:988:            assert_equal(type(r), MaskedArray)
numpy/ma/tests/test_extras.py:989:            assert_array_equal(r, [np.nan, 2])
numpy/ma/tests/test_extras.py:993:        assert_array_equal(np.ma.median(dm, axis=None), np.nan)
numpy/ma/tests/test_extras.py:994:        assert_array_equal(np.ma.median(dm, axis=0), [1, np.nan, 3])
numpy/ma/tests/test_extras.py:995:        assert_array_equal(np.ma.median(dm, axis=1), [np.nan, 1.5])
numpy/ma/tests/test_extras.py:1002:        assert_equal(np.ma.median(d, 0, out=o), o)
numpy/ma/tests/test_extras.py:1004:        assert_equal(np.ma.median(d, 1, out=o), o)
numpy/ma/tests/test_extras.py:1006:        assert_equal(np.ma.median(d, out=o), o)
numpy/ma/tests/test_extras.py:1012:        assert_array_equal(np.ma.median(a), np.nan)
numpy/ma/tests/test_extras.py:1013:        assert_array_equal(np.ma.median(a, axis=0), np.nan)
numpy/ma/tests/test_extras.py:1022:        assert_array_equal(np.ma.median(a), np.nan)
numpy/ma/tests/test_extras.py:1023:        assert_(np.isscalar(np.ma.median(a)))
numpy/ma/tests/test_extras.py:1029:        assert_equal(np.ma.median(a, 0), b)
numpy/ma/tests/test_extras.py:1035:        assert_equal(np.ma.median(a, 1), b)
numpy/ma/tests/test_extras.py:1041:        assert_equal(np.ma.median(a, (0, 2)), b)
numpy/ma/tests/test_extras.py:1047:        assert_array_equal(np.ma.median(a, axis=1), 255)
numpy/ma/tests/test_extras.py:1048:        assert_array_equal(np.ma.median(a, axis=1).mask, False)
numpy/ma/tests/test_extras.py:1049:        assert_array_equal(np.ma.median(a, axis=0), a[0])
numpy/ma/tests/test_extras.py:1050:        assert_array_equal(np.ma.median(a), 255)
numpy/ma/tests/test_extras.py:1056:            assert_equal(np.ma.median(a, axis=0), [inf,  np.nan])
numpy/ma/tests/test_extras.py:1057:            assert_equal(np.ma.median(a, axis=1), [inf,  np.nan])
numpy/ma/tests/test_extras.py:1058:            assert_equal(np.ma.median(a), inf)
numpy/ma/tests/test_extras.py:1062:            assert_array_equal(np.ma.median(a, axis=1), inf)
numpy/ma/tests/test_extras.py:1063:            assert_array_equal(np.ma.median(a, axis=1).mask, False)
numpy/ma/tests/test_extras.py:1064:            assert_array_equal(np.ma.median(a, axis=0), a[0])
numpy/ma/tests/test_extras.py:1065:            assert_array_equal(np.ma.median(a), inf)
numpy/ma/tests/test_extras.py:1069:            assert_equal(np.ma.median(a), inf)
numpy/ma/tests/test_extras.py:1070:            assert_equal(np.ma.median(a, axis=0), inf)
numpy/ma/tests/test_extras.py:1071:            assert_equal(np.ma.median(a, axis=1), inf)
numpy/ma/tests/test_extras.py:1079:                assert_equal(np.ma.median(a, axis=0), [4., 7., -inf, 5.])
numpy/ma/tests/test_extras.py:1080:                assert_equal(np.ma.median(a), 4.5)
numpy/ma/tests/test_extras.py:1082:                assert_equal(np.ma.median(a, axis=0), [-10., 7., -inf, -9.])
numpy/ma/tests/test_extras.py:1083:                assert_equal(np.ma.median(a), -2.5)
numpy/ma/tests/test_extras.py:1084:            assert_equal(np.ma.median(a, axis=1), [-1., -2.5, inf])
numpy/ma/tests/test_extras.py:1090:                    assert_equal(np.ma.median(a), inf)
numpy/ma/tests/test_extras.py:1091:                    assert_equal(np.ma.median(a, axis=1), inf)
numpy/ma/tests/test_extras.py:1092:                    assert_equal(np.ma.median(a, axis=0),
numpy/ma/tests/test_extras.py:1100:            assert_array_equal(np.ma.median(a), np.nan)
numpy/ma/tests/test_extras.py:1101:            assert_(w.log[0].category is RuntimeWarning)
numpy/ma/tests/test_extras.py:1109:            assert_array_equal(np.ma.median(a), np.nan)
numpy/ma/tests/test_extras.py:1110:            assert_(w.log[0].category is RuntimeWarning)
numpy/ma/tests/test_extras.py:1114:        assert_equal(np.ma.median(a, axis=0), b)
numpy/ma/tests/test_extras.py:1115:        assert_equal(np.ma.median(a, axis=1), b)
numpy/ma/tests/test_extras.py:1121:            assert_equal(np.ma.median(a, axis=2), b)
numpy/ma/tests/test_extras.py:1122:            assert_(w[0].category is RuntimeWarning)
numpy/ma/tests/test_extras.py:1126:        assert_(type(np.ma.median(o.astype(object))), float)
numpy/ma/tests/test_extras.py:1128:        assert_(type(np.ma.median(o.astype(object))), float)
numpy/ma/tests/test_extras.py:1139:        assert_almost_equal(np.cov(x), cov(x))
numpy/ma/tests/test_extras.py:1140:        assert_almost_equal(np.cov(x, rowvar=False), cov(x, rowvar=False))
numpy/ma/tests/test_extras.py:1141:        assert_almost_equal(np.cov(x, rowvar=False, bias=True),
numpy/ma/tests/test_extras.py:1147:        assert_almost_equal(np.cov(x), cov(x))
numpy/ma/tests/test_extras.py:1148:        assert_almost_equal(np.cov(x, rowvar=False), cov(x, rowvar=False))
numpy/ma/tests/test_extras.py:1149:        assert_almost_equal(np.cov(x, rowvar=False, bias=True),
numpy/ma/tests/test_extras.py:1158:        assert_almost_equal(np.cov(nx), cov(x))
numpy/ma/tests/test_extras.py:1159:        assert_almost_equal(np.cov(nx, rowvar=False), cov(x, rowvar=False))
numpy/ma/tests/test_extras.py:1160:        assert_almost_equal(np.cov(nx, rowvar=False, bias=True),
numpy/ma/tests/test_extras.py:1170:        assert_almost_equal(np.cov(nx, nx[::-1]), cov(x, x[::-1]))
numpy/ma/tests/test_extras.py:1171:        assert_almost_equal(np.cov(nx, nx[::-1], rowvar=False),
numpy/ma/tests/test_extras.py:1173:        assert_almost_equal(np.cov(nx, nx[::-1], rowvar=False, bias=True),
numpy/ma/tests/test_extras.py:1184:        assert_almost_equal(cov(x),
numpy/ma/tests/test_extras.py:1186:        assert_almost_equal(cov(x, bias=True),
numpy/ma/tests/test_extras.py:1190:        assert_almost_equal(cov(x, rowvar=False),
numpy/ma/tests/test_extras.py:1193:        assert_almost_equal(cov(x, rowvar=False, bias=True),
numpy/ma/tests/test_extras.py:1211:            assert_warns(DeprecationWarning, corrcoef, x, ddof=-1)
numpy/ma/tests/test_extras.py:1214:            assert_almost_equal(np.corrcoef(x, ddof=0), corrcoef(x, ddof=0))
numpy/ma/tests/test_extras.py:1215:            assert_almost_equal(corrcoef(x, ddof=-1), expected)
numpy/ma/tests/test_extras.py:1216:            assert_almost_equal(corrcoef(x, y, ddof=-1), expected2)
numpy/ma/tests/test_extras.py:1217:            assert_almost_equal(corrcoef(x, ddof=3), expected)
numpy/ma/tests/test_extras.py:1218:            assert_almost_equal(corrcoef(x, y, ddof=3), expected2)
numpy/ma/tests/test_extras.py:1226:            assert_warns(DeprecationWarning, corrcoef, x, y, True, False)
numpy/ma/tests/test_extras.py:1227:            assert_warns(DeprecationWarning, corrcoef, x, y, True, True)
numpy/ma/tests/test_extras.py:1228:            assert_warns(DeprecationWarning, corrcoef, x, bias=False)
numpy/ma/tests/test_extras.py:1231:            assert_almost_equal(corrcoef(x, bias=1), expected)
numpy/ma/tests/test_extras.py:1236:        assert_almost_equal(np.corrcoef(x), corrcoef(x))
numpy/ma/tests/test_extras.py:1237:        assert_almost_equal(np.corrcoef(x, rowvar=False),
numpy/ma/tests/test_extras.py:1241:            assert_almost_equal(np.corrcoef(x, rowvar=False, bias=True),
numpy/ma/tests/test_extras.py:1247:        assert_almost_equal(np.corrcoef(x), corrcoef(x))
numpy/ma/tests/test_extras.py:1248:        assert_almost_equal(np.corrcoef(x, rowvar=False),
numpy/ma/tests/test_extras.py:1252:            assert_almost_equal(np.corrcoef(x, rowvar=False, bias=True),
numpy/ma/tests/test_extras.py:1261:        assert_almost_equal(np.corrcoef(nx), corrcoef(x))
numpy/ma/tests/test_extras.py:1262:        assert_almost_equal(np.corrcoef(nx, rowvar=False),
numpy/ma/tests/test_extras.py:1266:            assert_almost_equal(np.corrcoef(nx, rowvar=False, bias=True),
numpy/ma/tests/test_extras.py:1274:        assert_almost_equal(np.corrcoef(nx, nx[::-1]), corrcoef(x, x[::-1]))
numpy/ma/tests/test_extras.py:1275:        assert_almost_equal(np.corrcoef(nx, nx[::-1], rowvar=False),
numpy/ma/tests/test_extras.py:1280:            assert_almost_equal(np.corrcoef(nx, nx[::-1]),
numpy/ma/tests/test_extras.py:1282:            assert_almost_equal(np.corrcoef(nx, nx[::-1]),
numpy/ma/tests/test_extras.py:1293:        assert_almost_equal(test[:-1, :-1], control[:-1, :-1])
numpy/ma/tests/test_extras.py:1297:            assert_almost_equal(corrcoef(x, ddof=-2)[:-1, :-1],
numpy/ma/tests/test_extras.py:1299:            assert_almost_equal(corrcoef(x, ddof=3)[:-1, :-1],
numpy/ma/tests/test_extras.py:1301:            assert_almost_equal(corrcoef(x, bias=1)[:-1, :-1],
numpy/ma/tests/test_extras.py:1312:        assert_almost_equal(polyfit(x, y, 3), np.polyfit(x, y, 3))
numpy/ma/tests/test_extras.py:1323:            assert_almost_equal(a, a_)
numpy/ma/tests/test_extras.py:1328:            assert_almost_equal(a, a_)
numpy/ma/tests/test_extras.py:1333:            assert_almost_equal(a, a_)
numpy/ma/tests/test_extras.py:1342:        assert_equal(w, wo)
numpy/ma/tests/test_extras.py:1344:            assert_almost_equal(a, a_)
numpy/ma/tests/test_extras.py:1360:            assert_almost_equal(a, a_)
numpy/ma/tests/test_extras.py:1369:        assert_(isinstance(test[0], MaskedArray))
numpy/ma/tests/test_extras.py:1370:        assert_equal(test[0], masked_array([1, 2, 3], mask=[0, 0, 0]))
numpy/ma/tests/test_extras.py:1371:        assert_equal(test[1], [0, 3, 5])
numpy/ma/tests/test_extras.py:1372:        assert_equal(test[2], [0, 0, 0, 1, 1, 2])
numpy/ma/tests/test_extras.py:1378:        assert_equal(test[0], masked_array([1, 2, 3, -1], mask=[0, 0, 0, 1]))
numpy/ma/tests/test_extras.py:1379:        assert_equal(test[1], [0, 3, 5, 2])
numpy/ma/tests/test_extras.py:1380:        assert_equal(test[2], [0, 0, 3, 1, 3, 2])
numpy/ma/tests/test_extras.py:1386:        assert_equal(test[0], masked_array([1, 2, 3, -1], mask=[0, 0, 0, 1]))
numpy/ma/tests/test_extras.py:1387:        assert_equal(test[1], [0, 3, 5, 2])
numpy/ma/tests/test_extras.py:1388:        assert_equal(test[2], [0, 0, 3, 1, 3, 2])
numpy/ma/tests/test_extras.py:1394:        assert_equal(test[0], masked_array([1, ], mask=[True]))
numpy/ma/tests/test_extras.py:1395:        assert_equal(test[1], [0])
numpy/ma/tests/test_extras.py:1396:        assert_equal(test[2], [0, 0, 0])
numpy/ma/tests/test_extras.py:1401:        assert_equal(test[0], masked_array(masked))
numpy/ma/tests/test_extras.py:1402:        assert_equal(test[1], [0])
numpy/ma/tests/test_extras.py:1403:        assert_equal(test[2], [0])
numpy/ma/tests/test_extras.py:1410:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:1411:        assert_equal(test.filled(0), control.filled(0))
numpy/ma/tests/test_extras.py:1412:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_extras.py:1419:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:1420:        assert_equal(test.filled(0), control.filled(0))
numpy/ma/tests/test_extras.py:1421:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_extras.py:1425:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:1426:        assert_equal(test.filled(0), control.filled(0))
numpy/ma/tests/test_extras.py:1427:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_extras.py:1434:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:1435:        assert_equal(test.filled(0), control.filled(0))
numpy/ma/tests/test_extras.py:1436:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_extras.py:1440:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:1441:        assert_equal(test.filled(0), control.filled(0))
numpy/ma/tests/test_extras.py:1442:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_extras.py:1449:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:1450:        assert_equal(test.filled(0), control.filled(0))
numpy/ma/tests/test_extras.py:1451:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_extras.py:1456:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:1457:        assert_equal(test.filled(0), control.filled(0))
numpy/ma/tests/test_extras.py:1458:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_extras.py:1465:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:1466:        assert_(isinstance(test, MaskedArray))
numpy/ma/tests/test_extras.py:1467:        assert_equal(test.filled(0), control.filled(0))
numpy/ma/tests/test_extras.py:1468:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_extras.py:1472:        assert_(isinstance(test, MaskedArray))
numpy/ma/tests/test_extras.py:1473:        assert_equal(test.filled(0), control.filled(0))
numpy/ma/tests/test_extras.py:1474:        assert_equal(test.mask, control.mask)
numpy/ma/tests/test_extras.py:1482:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:1489:        assert_equal(test, array([3, 4, 7]))
numpy/ma/tests/test_extras.py:1494:        assert_equal(test, array([3, 4, 7, -1], mask=[0, 0, 0, 1]))
numpy/ma/tests/test_extras.py:1499:        assert_(isinstance(test, MaskedArray))
numpy/ma/tests/test_extras.py:1500:        assert_equal(test, [1, 2, 3, 4, 5, 6])
numpy/ma/tests/test_extras.py:1505:        assert_(isinstance(test, MaskedArray))
numpy/ma/tests/test_extras.py:1506:        assert_equal(test, [1, 2, 3, 4, 5, 6])
numpy/ma/tests/test_extras.py:1508:        assert_array_equal([], setxor1d([], []))
numpy/ma/tests/test_extras.py:1525:        assert_(isinstance(c, MaskedArray))
numpy/ma/tests/test_extras.py:1526:        assert_array_equal(c, ec)
numpy/ma/tests/test_extras.py:1529:        assert_array_equal(c, d)
numpy/ma/tests/test_extras.py:1536:        assert_equal(test, [True, True, True, False, True])
numpy/ma/tests/test_extras.py:1541:        assert_equal(test, [True, True, False, True, True])
numpy/ma/tests/test_extras.py:1543:        assert_array_equal([], in1d([], []))
numpy/ma/tests/test_extras.py:1549:        assert_equal(np.invert(in1d(a, b)), in1d(a, b, invert=True))
numpy/ma/tests/test_extras.py:1553:        assert_equal(np.invert(in1d(a, b)), in1d(a, b, invert=True))
numpy/ma/tests/test_extras.py:1555:        assert_array_equal([], in1d([], [], invert=True))
numpy/ma/tests/test_extras.py:1563:        assert_equal(test, control)
numpy/ma/tests/test_extras.py:1571:        assert_equal(z, ez)
numpy/ma/tests/test_extras.py:1573:        assert_array_equal([], union1d([], []))
numpy/ma/tests/test_extras.py:1580:        assert_equal(test, array([6, 7, -1], mask=[0, 0, 1]))
numpy/ma/tests/test_extras.py:1584:        assert_equal(setdiff1d(a, b), array([8, 9]))
numpy/ma/tests/test_extras.py:1586:        assert_equal(setdiff1d(a, []).dtype, np.uint32)
numpy/ma/tests/test_extras.py:1592:        assert_array_equal(setdiff1d(a, b), np.array(['c']))
numpy/ma/tests/test_extras.py:1601:        assert_equal(b.shape, (1, 3))
numpy/ma/tests/test_extras.py:1602:        assert_equal(b.mask.shape, b.data.shape)
numpy/ma/tests/test_extras.py:1603:        assert_equal(a.shape, (3,))
numpy/ma/tests/test_extras.py:1604:        assert_equal(a.mask.shape, a.data.shape)
numpy/ma/tests/test_extras.py:1605:        assert_equal(b.mask.shape, b.data.shape)
numpy/ma/tests/test_extras.py:1613:        assert_equal(b.shape, (1,))
numpy/ma/tests/test_extras.py:1614:        assert_equal(b.mask.shape, b.shape)
numpy/ma/tests/test_extras.py:1615:        assert_equal(b.data.shape, b.shape)
numpy/ma/tests/test_extras.py:1619:            assert_equal(a.shape, (1,))
numpy/ma/tests/test_extras.py:1620:            assert_equal(a.mask.shape, a.shape)
numpy/ma/tests/test_extras.py:1621:            assert_equal(a.data.shape, a.shape)
numpy/ma/tests/test_extras.py:1624:        assert_equal(b.shape, (1, 1))
numpy/ma/tests/test_extras.py:1625:        assert_equal(b.mask.shape, b.shape)
numpy/ma/tests/test_extras.py:1626:        assert_equal(b.data.shape, b.shape)
numpy/ma/tests/test_extras.py:1630:            assert_equal(a.shape, (1, 1))
numpy/ma/tests/test_extras.py:1631:            assert_equal(a.mask.shape, a.shape)
numpy/ma/tests/test_extras.py:1632:            assert_equal(a.data.shape, a.shape)
numpy/ma/tests/test_extras.py:1635:        assert_equal(b.shape, (1, 1, 1))
numpy/ma/tests/test_extras.py:1636:        assert_equal(b.mask.shape, b.shape)
numpy/ma/tests/test_extras.py:1637:        assert_equal(b.data.shape, b.shape)
numpy/ma/tests/test_extras.py:1641:            assert_equal(a.shape, (1, 1, 1))
numpy/ma/tests/test_extras.py:1642:            assert_equal(a.mask.shape, a.shape)
numpy/ma/tests/test_extras.py:1643:            assert_equal(a.data.shape, a.shape)
numpy/ma/tests/test_extras.py:1647:        assert_equal(b.shape, (1, 1))
numpy/ma/tests/test_extras.py:1648:        assert_equal(b.mask.shape, b.data.shape)
numpy/ma/tests/test_extras.py:1658:        assert_equal(c.shape, (2, 3))
numpy/ma/tests/test_extras.py:1659:        assert_array_equal(a.mask, c[0].mask)
numpy/ma/tests/test_extras.py:1660:        assert_array_equal(b.mask, c[1].mask)
numpy/ma/tests/test_extras.py:1663:        assert_array_equal(c.data, d.data)
numpy/ma/tests/test_extras.py:1664:        assert_array_equal(c.mask, d.mask)
numpy/ma/tests/test_extras.py:1667:        assert_equal(c.shape, (3, 2))
numpy/ma/tests/test_extras.py:1668:        assert_array_equal(a.mask, c[:, 0].mask)
numpy/ma/tests/test_extras.py:1669:        assert_array_equal(b.mask, c[:, 1].mask)
numpy/ma/tests/test_extras.py:1676:        assert_equal(c.shape, (2, 3))
numpy/ma/tests/test_extras.py:1677:        assert_array_equal(a.mask, c[0].mask)
numpy/ma/tests/test_extras.py:1678:        assert_array_equal(b.mask, c[1].mask)
numpy/ma/tests/test_extras.py:1681:        assert_array_equal(c.data, d.data)
numpy/ma/tests/test_extras.py:1682:        assert_array_equal(c.mask, d.mask)
numpy/ma/tests/test_extras.py:1685:        assert_equal(c.shape, (3, 2))
numpy/ma/tests/test_extras.py:1686:        assert_array_equal(a.mask, c[:, 0].mask)
numpy/ma/tests/test_extras.py:1687:        assert_array_equal(b.mask, c[:, 1].mask)
numpy/ma/tests/test_extras.py:1701:        assert_equal(c.shape, c_shp)
numpy/ma/tests/test_extras.py:1702:        assert_array_equal(a1.mask, c[0].mask)
numpy/ma/tests/test_extras.py:1703:        assert_array_equal(a2.mask, c[1].mask)
numpy/ma/tests/test_extras.py:1707:        assert_equal(c.shape, c_shp)
numpy/ma/tests/test_extras.py:1708:        assert_array_equal(a1.mask, c[..., 0].mask)
numpy/ma/tests/test_extras.py:1709:        assert_array_equal(a2.mask, c[..., 1].mask)
numpy/ma/tests/test_extras.py:1722:        assert_equal(c.shape, c_shp)
numpy/ma/tests/test_extras.py:1723:        assert_array_equal(a1.mask, c[0].mask)
numpy/ma/tests/test_extras.py:1724:        assert_array_equal(a2.mask, c[1].mask)
numpy/ma/tests/test_extras.py:1728:        assert_equal(c.shape, c_shp)
numpy/ma/tests/test_extras.py:1729:        assert_array_equal(a1.mask, c[..., 0].mask)
numpy/ma/tests/test_extras.py:1730:        assert_array_equal(a2.mask, c[..., 1].mask)
numpy/ma/tests/test_mrecords.py:40:        assert_equal(mbase.recordmask, base.recordmask)
numpy/ma/tests/test_mrecords.py:41:        assert_equal_records(mbase._mask, base._mask)
numpy/ma/tests/test_mrecords.py:42:        assert_(isinstance(mbase._data, recarray))
numpy/ma/tests/test_mrecords.py:43:        assert_equal_records(mbase._data, base._data.view(recarray))
numpy/ma/tests/test_mrecords.py:45:            assert_equal(base[field], mbase[field])
numpy/ma/tests/test_mrecords.py:46:        assert_equal_records(mbase.view(mrecarray), mbase)
numpy/ma/tests/test_mrecords.py:54:            assert_equal(getattr(mbase, field), mbase[field])
numpy/ma/tests/test_mrecords.py:55:            assert_equal(base[field], mbase[field])
numpy/ma/tests/test_mrecords.py:58:        assert_(isinstance(mbase_first, mrecarray))
numpy/ma/tests/test_mrecords.py:59:        assert_equal(mbase_first.dtype, mbase.dtype)
numpy/ma/tests/test_mrecords.py:60:        assert_equal(mbase_first.tolist(), (1, 1.1, b'one'))
numpy/ma/tests/test_mrecords.py:62:        assert_equal(mbase_first.recordmask, nomask)
numpy/ma/tests/test_mrecords.py:63:        assert_equal(mbase_first._mask.item(), (False, False, False))
numpy/ma/tests/test_mrecords.py:64:        assert_equal(mbase_first['a'], mbase['a'][0])
numpy/ma/tests/test_mrecords.py:66:        assert_(isinstance(mbase_last, mrecarray))
numpy/ma/tests/test_mrecords.py:67:        assert_equal(mbase_last.dtype, mbase.dtype)
numpy/ma/tests/test_mrecords.py:68:        assert_equal(mbase_last.tolist(), (None, None, None))
numpy/ma/tests/test_mrecords.py:70:        assert_equal(mbase_last.recordmask, True)
numpy/ma/tests/test_mrecords.py:71:        assert_equal(mbase_last._mask.item(), (True, True, True))
numpy/ma/tests/test_mrecords.py:72:        assert_equal(mbase_last['a'], mbase['a'][-1])
numpy/ma/tests/test_mrecords.py:73:        assert_((mbase_last['a'] is masked))
numpy/ma/tests/test_mrecords.py:76:        assert_(isinstance(mbase_sl, mrecarray))
numpy/ma/tests/test_mrecords.py:77:        assert_equal(mbase_sl.dtype, mbase.dtype)
numpy/ma/tests/test_mrecords.py:79:        assert_equal(mbase_sl.recordmask, [0, 1])
numpy/ma/tests/test_mrecords.py:80:        assert_equal_records(mbase_sl.mask,
numpy/ma/tests/test_mrecords.py:84:        assert_equal_records(mbase_sl, base[:2].view(mrecarray))
numpy/ma/tests/test_mrecords.py:86:            assert_equal(getattr(mbase_sl, field), base[:2][field])
numpy/ma/tests/test_mrecords.py:96:        assert_equal(mbase['a']._data, [5, 5, 5, 5, 5])
numpy/ma/tests/test_mrecords.py:97:        assert_equal(mbase['a']._mask, [0, 1, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:100:        assert_equal(mbase['a']._data, [1]*5)
numpy/ma/tests/test_mrecords.py:101:        assert_equal(ma.getmaskarray(mbase['a']), [0]*5)
numpy/ma/tests/test_mrecords.py:103:        assert_equal(mbase.recordmask, [False]*5)
numpy/ma/tests/test_mrecords.py:104:        assert_equal(mbase._mask.tolist(),
numpy/ma/tests/test_mrecords.py:114:        assert_equal(mbase.c.mask, [1]*5)
numpy/ma/tests/test_mrecords.py:115:        assert_equal(mbase.c.recordmask, [1]*5)
numpy/ma/tests/test_mrecords.py:116:        assert_equal(ma.getmaskarray(mbase['c']), [1]*5)
numpy/ma/tests/test_mrecords.py:117:        assert_equal(ma.getdata(mbase['c']), [b'N/A']*5)
numpy/ma/tests/test_mrecords.py:118:        assert_equal(mbase._mask.tolist(),
numpy/ma/tests/test_mrecords.py:128:        assert_equal(mbase.a, [1, 2, 3, 5, 5])
numpy/ma/tests/test_mrecords.py:129:        assert_equal(mbase.a._mask, [0, 1, 0, 0, 0])
numpy/ma/tests/test_mrecords.py:131:        assert_equal(mbase.b, base['b'])
numpy/ma/tests/test_mrecords.py:132:        assert_equal(mbase.b._mask, [0, 1, 0, 1, 1])
numpy/ma/tests/test_mrecords.py:140:        assert_equal(rdata.num, val)
numpy/ma/tests/test_mrecords.py:141:        assert_equal(rdata.num.mask, [1, 0, 0])
numpy/ma/tests/test_mrecords.py:149:        assert_equal(mbase.a, [1, 2, 3, 4, 5])
numpy/ma/tests/test_mrecords.py:150:        assert_equal(mbase.a._mask, [0, 1, 0, 1, 1])
numpy/ma/tests/test_mrecords.py:155:        assert_equal(mbase.a, [0, 1, 2, 3, 4])
numpy/ma/tests/test_mrecords.py:156:        assert_equal(mbase.a._mask, [0, 0, 0, 1, 0])
numpy/ma/tests/test_mrecords.py:163:        assert_equal(ma.getmaskarray(mbase['b']), [1]*5)
numpy/ma/tests/test_mrecords.py:164:        assert_equal(mbase['a']._mask, mbase['b']._mask)
numpy/ma/tests/test_mrecords.py:165:        assert_equal(mbase['a']._mask, mbase['c']._mask)
numpy/ma/tests/test_mrecords.py:166:        assert_equal(mbase._mask.tolist(),
numpy/ma/tests/test_mrecords.py:170:        assert_equal(ma.getmaskarray(mbase['c']), [0]*5)
numpy/ma/tests/test_mrecords.py:171:        assert_equal(mbase._mask.tolist(),
numpy/ma/tests/test_mrecords.py:179:        assert_equal(mbase.a.mask, [1, 0, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:180:        assert_equal(mbase.b.mask, [1, 0, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:181:        assert_equal(mbase.c.mask, [1, 0, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:184:        assert_equal(mbase.a.mask, [0, 0, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:185:        assert_equal(mbase.b.mask, [0, 0, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:186:        assert_equal(mbase.c.mask, [0, 0, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:195:        assert_equal(mbase.a.mask, [0, 0, 1, 1, 0])
numpy/ma/tests/test_mrecords.py:196:        assert_equal(mbase.b.mask, [1, 1, 0, 0, 0])
numpy/ma/tests/test_mrecords.py:197:        assert_equal(mbase.c.mask, [0, 0, 1, 1, 0])
numpy/ma/tests/test_mrecords.py:201:        assert_equal(mbase.a.mask, [0, 0, 1, 1, 0])
numpy/ma/tests/test_mrecords.py:202:        assert_equal(mbase.b.mask, [1, 1, 0, 0, 0])
numpy/ma/tests/test_mrecords.py:203:        assert_equal(mbase.c.mask, [0, 0, 1, 1, 0])
numpy/ma/tests/test_mrecords.py:215:        assert_equal(mbase.recordmask, [0, 1, 0, 1, 1])
numpy/ma/tests/test_mrecords.py:219:        assert_equal(mbase.a._data, [5, 5, 3, 4, 5])
numpy/ma/tests/test_mrecords.py:220:        assert_equal(mbase.a._mask, [0, 0, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:221:        assert_equal(mbase.b._data, [5., 5., 3.3, 4.4, 5.5])
numpy/ma/tests/test_mrecords.py:222:        assert_equal(mbase.b._mask, [0, 0, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:225:        assert_equal(mbase.b._mask, [0, 0, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:229:        assert_equal(mbase.a._data, [1, 2, 3, 4, 5])
numpy/ma/tests/test_mrecords.py:230:        assert_equal(mbase.a._mask, [1, 1, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:231:        assert_equal(mbase.b._data, [1.1, 2.2, 3.3, 4.4, 5.5])
numpy/ma/tests/test_mrecords.py:232:        assert_equal(mbase.b._mask, [1, 1, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:235:        assert_equal(mbase.b._mask, [1, 1, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:244:            assert_equal(mbase.a._data, [1, 2, 3, 5, 5])
numpy/ma/tests/test_mrecords.py:245:            assert_equal(mbase.b._data, [1.1, 2.2, 3.3, 5, 5.5])
numpy/ma/tests/test_mrecords.py:248:            assert_equal(mbase.a._mask, [0, 1, 0, 0, 1])
numpy/ma/tests/test_mrecords.py:249:            assert_equal(mbase.b._mask, mbase.a._mask)
numpy/ma/tests/test_mrecords.py:250:            assert_equal(mbase.b._mask, mbase.c._mask)
numpy/ma/tests/test_mrecords.py:271:        assert_(mbase._hardmask)
numpy/ma/tests/test_mrecords.py:273:        assert_equal_records(mbase._mask, base._mask)
numpy/ma/tests/test_mrecords.py:275:        assert_(not mbase._hardmask)
numpy/ma/tests/test_mrecords.py:278:        assert_equal_records(mbase._mask,
numpy/ma/tests/test_mrecords.py:280:        assert_(ma.make_mask(mbase['b']._mask) is nomask)
numpy/ma/tests/test_mrecords.py:281:        assert_equal(mbase['a']._mask, mbase['b']._mask)
numpy/ma/tests/test_mrecords.py:290:            assert_equal(mrec_.dtype, mrec.dtype)
numpy/ma/tests/test_mrecords.py:291:            assert_equal_records(mrec_._data, mrec._data)
numpy/ma/tests/test_mrecords.py:292:            assert_equal(mrec_._mask, mrec._mask)
numpy/ma/tests/test_mrecords.py:293:            assert_equal_records(mrec_._mask, mrec._mask)
numpy/ma/tests/test_mrecords.py:304:        assert_equal(mrecfilled['a'], np.array((1, 2, 99999), dtype=int))
numpy/ma/tests/test_mrecords.py:305:        assert_equal(mrecfilled['b'], np.array((1.1, 2.2, 99999.),
numpy/ma/tests/test_mrecords.py:307:        assert_equal(mrecfilled['c'], np.array(('one', 'two', 'N/A'),
numpy/ma/tests/test_mrecords.py:319:        assert_equal(mrec.tolist(),
numpy/ma/tests/test_mrecords.py:327:        assert_equal(x['base'][0], 10)
numpy/ma/tests/test_mrecords.py:333:        assert_equal(easy.filled(1).item(), (1, b'1', 1.))
numpy/ma/tests/test_mrecords.py:337:        assert_equal(solo.filled(1).item(),
numpy/ma/tests/test_mrecords.py:344:        assert_equal_records(mult.filled(0),
numpy/ma/tests/test_mrecords.py:363:        assert_(isinstance(test, MaskedRecords))
numpy/ma/tests/test_mrecords.py:364:        assert_equal_records(test, mrec)
numpy/ma/tests/test_mrecords.py:365:        assert_equal_records(test._mask, mrec._mask)
numpy/ma/tests/test_mrecords.py:371:        assert_(isinstance(test, ma.MaskedArray))
numpy/ma/tests/test_mrecords.py:372:        assert_equal(test, np.array(list(zip(a, b)), dtype=float))
numpy/ma/tests/test_mrecords.py:373:        assert_(test[3, 1] is ma.masked)
numpy/ma/tests/test_mrecords.py:379:        assert_(isinstance(test, MaskedRecords))
numpy/ma/tests/test_mrecords.py:380:        assert_equal_records(test, arr.view(alttype))
numpy/ma/tests/test_mrecords.py:381:        assert_(test['B'][3] is masked)
numpy/ma/tests/test_mrecords.py:382:        assert_equal(test.dtype, np.dtype(alttype))
numpy/ma/tests/test_mrecords.py:383:        assert_(test._fill_value is None)
numpy/ma/tests/test_mrecords.py:406:            assert_equal(getattr(mrec, f)._mask, l._mask)
numpy/ma/tests/test_mrecords.py:409:        assert_equal_records(fromarrays(_x, dtype=mrec.dtype), mrec[0])
numpy/ma/tests/test_mrecords.py:420:        assert_equal_records(pa, mpa)
numpy/ma/tests/test_mrecords.py:423:        assert_equal(_mrec.dtype, mrec.dtype)
numpy/ma/tests/test_mrecords.py:425:            assert_equal(getattr(_mrec, field), getattr(mrec._data, field))
numpy/ma/tests/test_mrecords.py:428:        assert_equal(_mrec.dtype, [('c1', int), ('c2', float), ('c3', '|S5')])
numpy/ma/tests/test_mrecords.py:430:            assert_equal(getattr(_mrec, f), getattr(mrec._data, n))
numpy/ma/tests/test_mrecords.py:433:        assert_equal(_mrec.dtype, mrec.dtype)
numpy/ma/tests/test_mrecords.py:434:        assert_equal_records(_mrec._data, mrec.filled())
numpy/ma/tests/test_mrecords.py:435:        assert_equal_records(_mrec._mask, mrec._mask)
numpy/ma/tests/test_mrecords.py:442:        assert_equal_records(_mrec._data, mrec._data)
numpy/ma/tests/test_mrecords.py:443:        assert_equal(_mrec._mask.tolist(), [(0, 0, 0), (1, 1, 1), (0, 0, 0)])
numpy/ma/tests/test_mrecords.py:446:        assert_equal_records(_mrec._data, mrec._data)
numpy/ma/tests/test_mrecords.py:447:        assert_equal(_mrec._mask.tolist(), [(1, 1, 1), (1, 1, 1), (1, 1, 1)])
numpy/ma/tests/test_mrecords.py:450:        assert_equal_records(_mrec._data, mrec._data)
numpy/ma/tests/test_mrecords.py:451:        assert_equal(_mrec._mask.tolist(), mrec._mask.tolist())
numpy/ma/tests/test_mrecords.py:455:        assert_equal_records(_mrec._data, mrec._data)
numpy/ma/tests/test_mrecords.py:456:        assert_equal(_mrec._mask.tolist(), mrec._mask.tolist())
numpy/ma/tests/test_mrecords.py:472:        assert_(isinstance(mrectxt, MaskedRecords))
numpy/ma/tests/test_mrecords.py:473:        assert_equal(mrectxt.F, [1, 1, 1, 1])
numpy/ma/tests/test_mrecords.py:474:        assert_equal(mrectxt.E._mask, [1, 1, 1, 1])
numpy/ma/tests/test_mrecords.py:475:        assert_equal(mrectxt.C, [1, 2, 3.e+5, -1e-10])
numpy/ma/tests/test_mrecords.py:482:        assert_equal(mrec.f3, d)
numpy/ma/tests/test_mrecords.py:483:        assert_equal(mrec.f3._mask, m)
numpy/ma/tests/test_regression.py:12:        assert_array_equal(np.ma.nonzero(x), [[1, 2, 6, 7]])
numpy/ma/tests/test_regression.py:46:        assert_(a.mask.ndim == 1)
numpy/ma/tests/test_regression.py:47:        assert_(b.mask.ndim == 2)
numpy/ma/tests/test_regression.py:53:        assert_(a.fill_value == 'X')
numpy/ma/tests/test_regression.py:60:        assert_(mout._data == 0)
numpy/ma/tests/test_regression.py:72:            assert_allclose(r0.data, r1.data)
numpy/ma/tests/test_regression.py:77:        assert_(a.mask.shape == (2,))
numpy/ma/tests/test_regression.py:80:        assert_(a.mask.shape == (2,))
numpy/ma/tests/test_regression.py:81:        assert_(b.shape == (2, 2))
numpy/ma/tests/test_regression.py:82:        assert_(b.mask.shape == (2, 2))
numpy/ma/tests/test_regression.py:87:        assert_array_equal(ma[[]], ma[:0])
numpy/ma/tests/test_regression.py:91:        assert_array_equal(ma.tobytes(order='F'), ma.T.tobytes())
numpy/tests/test_matlib.py:7:    assert_(isinstance(x, np.matrix))
numpy/tests/test_matlib.py:8:    assert_(x.shape, (1, 2))
numpy/tests/test_matlib.py:11:    assert_array_equal(numpy.matlib.ones((2, 3)),
numpy/tests/test_matlib.py:15:    assert_array_equal(numpy.matlib.ones(2), np.matrix([[ 1.,  1.]]))
numpy/tests/test_matlib.py:18:    assert_array_equal(numpy.matlib.zeros((2, 3)),
numpy/tests/test_matlib.py:22:    assert_array_equal(numpy.matlib.zeros(2), np.matrix([[ 0.,  0.]]))
numpy/tests/test_matlib.py:26:    assert_array_equal(x, np.matrix([[1, 0], [0, 1]]))
numpy/tests/test_matlib.py:30:    assert_array_equal(xc, np.matrix([[ 0,  1,  0],
numpy/tests/test_matlib.py:33:    assert xc.flags.c_contiguous
numpy/tests/test_matlib.py:37:    assert_array_equal(xf, np.matrix([[ 1,  0,  0,  0],
numpy/tests/test_matlib.py:41:    assert xf.flags.f_contiguous
numpy/tests/test_matlib.py:46:    assert_(x.ndim == 2)
numpy/tests/test_matlib.py:51:    assert_(x.ndim == 2)
numpy/tests/test_matlib.py:58:    assert_array_equal(x, y)
numpy/tests/test_ctypeslib.py:48:        assert isinstance(out1, ctypes.CDLL)
numpy/tests/test_ctypeslib.py:49:        assert out1 is out2 is out3 is out4
numpy/tests/test_ctypeslib.py:71:        assert_(p.from_param(np.array([1], dt)))
numpy/tests/test_ctypeslib.py:74:        assert_(p.from_param(np.array([1], dt)))
numpy/tests/test_ctypeslib.py:85:        assert_(p.from_param(np.zeros((10,), dt)))
numpy/tests/test_ctypeslib.py:88:        assert_(p.from_param(np.zeros((10,), dt)))
numpy/tests/test_ctypeslib.py:91:            assert_raises(TypeError, p.from_param, np.zeros((10,), dt2))
numpy/tests/test_ctypeslib.py:93:            assert_(p.from_param(np.zeros((10,), dt2)))
numpy/tests/test_ctypeslib.py:97:        assert_(p.from_param(np.array(1)))
numpy/tests/test_ctypeslib.py:98:        assert_raises(TypeError, p.from_param, np.array([1]))
numpy/tests/test_ctypeslib.py:100:        assert_raises(TypeError, p.from_param, np.array(1))
numpy/tests/test_ctypeslib.py:101:        assert_(p.from_param(np.array([1])))
numpy/tests/test_ctypeslib.py:103:        assert_(p.from_param(np.array([[1]])))
numpy/tests/test_ctypeslib.py:107:        assert_(p.from_param(np.array([[1, 2]])))
numpy/tests/test_ctypeslib.py:108:        assert_raises(TypeError, p.from_param, np.array([[1], [2]]))
numpy/tests/test_ctypeslib.py:110:        assert_(p.from_param(np.array(1)))
numpy/tests/test_ctypeslib.py:115:        assert_(p.from_param(x))
numpy/tests/test_ctypeslib.py:117:        assert_raises(TypeError, p.from_param, x)
numpy/tests/test_ctypeslib.py:119:        assert_(p.from_param(x))
numpy/tests/test_ctypeslib.py:120:        assert_raises(TypeError, p.from_param, np.array([[1, 2], [3, 4]]))
numpy/tests/test_ctypeslib.py:123:        assert_(ndpointer(dtype=np.float64) is ndpointer(dtype=np.float64))
numpy/tests/test_ctypeslib.py:126:        assert_(ndpointer(shape=2) is ndpointer(shape=(2,)))
numpy/tests/test_ctypeslib.py:129:        assert_(ndpointer(shape=2) is not ndpointer(ndim=2))
numpy/tests/test_ctypeslib.py:130:        assert_(ndpointer(ndim=2) is not ndpointer(shape=2))
numpy/tests/test_ctypeslib.py:169:        assert_equal(arr2.dtype, arr.dtype)
numpy/tests/test_ctypeslib.py:170:        assert_equal(arr2.shape, arr.shape)
numpy/tests/test_ctypeslib.py:185:        assert_(isinstance(ret, ptr_type))
numpy/tests/test_ctypeslib.py:196:        assert_equal(a.shape, (2,))
numpy/tests/test_ctypeslib.py:197:        assert_array_equal(a, np.array([1, 2]))
numpy/tests/test_ctypeslib.py:199:        assert_equal(a.shape, (3, 2))
numpy/tests/test_ctypeslib.py:200:        assert_array_equal(a, np.array([[1, 2], [3, 4], [5, 6]]))
numpy/tests/test_ctypeslib.py:208:        assert_equal(a.shape, (10,))
numpy/tests/test_ctypeslib.py:209:        assert_array_equal(a, np.arange(10))
numpy/tests/test_ctypeslib.py:212:        assert_equal(a.shape, (2, 5))
numpy/tests/test_ctypeslib.py:213:        assert_array_equal(a, np.arange(10).reshape((2, 5)))
numpy/tests/test_ctypeslib.py:216:        assert_raises(TypeError, as_array, p)
numpy/tests/test_ctypeslib.py:237:            assert_equal(x.dtype, expected.dtype)
numpy/tests/test_ctypeslib.py:238:            assert_equal(x, expected)
numpy/tests/test_ctypeslib.py:273:        assert_(arr_ref() is not None)
numpy/tests/test_ctypeslib.py:286:        assert_equal(ct, ctypes.c_uint16.__ctype_le__)
numpy/tests/test_ctypeslib.py:290:        assert_equal(ct, ctypes.c_uint16.__ctype_be__)
numpy/tests/test_ctypeslib.py:294:        assert_equal(ct, ctypes.c_uint16)
numpy/tests/test_ctypeslib.py:299:        assert_equal(ct, 2 * (3 * ctypes.c_int32))
numpy/tests/test_ctypeslib.py:308:        assert_(issubclass(ct, ctypes.Structure))
numpy/tests/test_ctypeslib.py:309:        assert_equal(ctypes.sizeof(ct), dt.itemsize)
numpy/tests/test_ctypeslib.py:322:        assert_(issubclass(ct, ctypes.Structure))
numpy/tests/test_ctypeslib.py:323:        assert_equal(ctypes.sizeof(ct), dt.itemsize)
numpy/tests/test_ctypeslib.py:338:        assert_(issubclass(ct, ctypes.Union))
numpy/tests/test_ctypeslib.py:339:        assert_equal(ctypes.sizeof(ct), dt.itemsize)
numpy/tests/test_ctypeslib.py:354:        assert_(issubclass(ct, ctypes.Union))
numpy/tests/test_ctypeslib.py:355:        assert_equal(ctypes.sizeof(ct), dt.itemsize)
numpy/tests/test_ctypeslib.py:368:        assert_raises(NotImplementedError, np.ctypeslib.as_ctypes_type, dt)
numpy/tests/test__all__.py:9:    assert len(dups) == 0
numpy/tests/test_numpy_version.py:34:    assert_(res is not None, np.__version__)
numpy/tests/test_numpy_version.py:40:        assert_(np.__version__ == np.version.short_version,
numpy/tests/test_numpy_version.py:43:        assert_(np.__version__.split("+")[0] == np.version.short_version,
numpy/tests/test_reloading.py:21:    assert_(_NoValue is np._NoValue)
numpy/tests/test_reloading.py:22:    assert_(ModuleDeprecationWarning is np.ModuleDeprecationWarning)
numpy/tests/test_reloading.py:23:    assert_(VisibleDeprecationWarning is np.VisibleDeprecationWarning)
numpy/tests/test_reloading.py:25:    assert_raises(RuntimeError, reload, numpy._globals)
numpy/tests/test_reloading.py:28:    assert_(_NoValue is np._NoValue)
numpy/tests/test_reloading.py:29:    assert_(ModuleDeprecationWarning is np.ModuleDeprecationWarning)
numpy/tests/test_reloading.py:30:    assert_(VisibleDeprecationWarning is np.VisibleDeprecationWarning)
numpy/tests/test_reloading.py:35:        assert_equal(repr(np._NoValue), '<no value>')
numpy/tests/test_public_api.py:61:    assert bad_results == allowlist
numpy/tests/test_public_api.py:83:    assert name in dir(np)
numpy/tests/test_public_api.py:89:    assert len(dir(np)) == len(set(dir(np)))
numpy/tests/test_public_api.py:94:    assert bad_results == {}
numpy/tests/test_public_api.py:99:    assert bad_results == {}
numpy/tests/test_public_api.py:108:    assert f is None, ("'test_not_exported' is mistakenly exported, "
numpy/tests/test_public_api.py:490:    assert len(xp_eps) > 0, "No entry points for 'array_api' found"
numpy/tests/test_public_api.py:502:    assert xp is numpy.array_api, msg
numpy/tests/test_scripts.py:41:    assert_equal(stdout.strip(), np.__version__.encode('ascii'))
numpy/tests/test_scripts.py:46:    assert_equal(stdout.strip(), np.__version__.encode('ascii'))
numpy/_pyinstaller/test_pyinstaller.py:35:    assert p.stdout.strip() == b"I made it!"
numpy/array_api/tests/test_set_functions.py:19:    assert out.inverse_indices.shape == x.shape
numpy/array_api/tests/test_array_object.py:39:    assert_raises(IndexError, lambda: a[:4])
numpy/array_api/tests/test_array_object.py:40:    assert_raises(IndexError, lambda: a[:-4])
numpy/array_api/tests/test_array_object.py:41:    assert_raises(IndexError, lambda: a[:3:-1])
numpy/array_api/tests/test_array_object.py:42:    assert_raises(IndexError, lambda: a[:-5:-1])
numpy/array_api/tests/test_array_object.py:43:    assert_raises(IndexError, lambda: a[4:])
numpy/array_api/tests/test_array_object.py:44:    assert_raises(IndexError, lambda: a[-4:])
numpy/array_api/tests/test_array_object.py:45:    assert_raises(IndexError, lambda: a[4::-1])
numpy/array_api/tests/test_array_object.py:46:    assert_raises(IndexError, lambda: a[-4::-1])
numpy/array_api/tests/test_array_object.py:48:    assert_raises(IndexError, lambda: a[...,:5])
numpy/array_api/tests/test_array_object.py:49:    assert_raises(IndexError, lambda: a[...,:-5])
numpy/array_api/tests/test_array_object.py:50:    assert_raises(IndexError, lambda: a[...,:5:-1])
numpy/array_api/tests/test_array_object.py:51:    assert_raises(IndexError, lambda: a[...,:-6:-1])
numpy/array_api/tests/test_array_object.py:52:    assert_raises(IndexError, lambda: a[...,5:])
numpy/array_api/tests/test_array_object.py:53:    assert_raises(IndexError, lambda: a[...,-5:])
numpy/array_api/tests/test_array_object.py:54:    assert_raises(IndexError, lambda: a[...,5::-1])
numpy/array_api/tests/test_array_object.py:55:    assert_raises(IndexError, lambda: a[...,-5::-1])
numpy/array_api/tests/test_array_object.py:58:    assert_raises(IndexError, lambda: a[a[:,0]==1,0])
numpy/array_api/tests/test_array_object.py:59:    assert_raises(IndexError, lambda: a[a[:,0]==1,...])
numpy/array_api/tests/test_array_object.py:60:    assert_raises(IndexError, lambda: a[..., a[0]==1])
numpy/array_api/tests/test_array_object.py:61:    assert_raises(IndexError, lambda: a[[True, True, True]])
numpy/array_api/tests/test_array_object.py:62:    assert_raises(IndexError, lambda: a[(True, True, True),])
numpy/array_api/tests/test_array_object.py:66:    assert_raises(IndexError, lambda: a[idx])
numpy/array_api/tests/test_array_object.py:67:    assert_raises(IndexError, lambda: a[idx,])
numpy/array_api/tests/test_array_object.py:68:    assert_raises(IndexError, lambda: a[[0, 1]])
numpy/array_api/tests/test_array_object.py:69:    assert_raises(IndexError, lambda: a[(0, 1), (0, 1)])
numpy/array_api/tests/test_array_object.py:70:    assert_raises(IndexError, lambda: a[[0, 1]])
numpy/array_api/tests/test_array_object.py:71:    assert_raises(IndexError, lambda: a[np.array([[0, 1]])])
numpy/array_api/tests/test_array_object.py:74:    assert_raises(IndexError, lambda: a[None])
numpy/array_api/tests/test_array_object.py:75:    assert_raises(IndexError, lambda: a[None, ...])
numpy/array_api/tests/test_array_object.py:76:    assert_raises(IndexError, lambda: a[..., None])
numpy/array_api/tests/test_array_object.py:79:    assert_raises(IndexError, lambda: a[()])
numpy/array_api/tests/test_array_object.py:80:    assert_raises(IndexError, lambda: a[0,])
numpy/array_api/tests/test_array_object.py:81:    assert_raises(IndexError, lambda: a[0])
numpy/array_api/tests/test_array_object.py:82:    assert_raises(IndexError, lambda: a[:])
numpy/array_api/tests/test_array_object.py:152:                        assert_raises(TypeError, lambda: getattr(a, _op)(s))
numpy/array_api/tests/test_array_object.py:170:                                assert_raises(TypeError, lambda: getattr(x, _op)(y))
numpy/array_api/tests/test_array_object.py:176:                                assert_raises(TypeError, lambda: getattr(x, _op)(y))
numpy/array_api/tests/test_array_object.py:189:                                assert_raises(TypeError, lambda: getattr(x, _op)(y))
numpy/array_api/tests/test_array_object.py:208:                assert_raises(TypeError, lambda: getattr(a, op)())
numpy/array_api/tests/test_array_object.py:228:                    assert_raises(ValueError, lambda: getattr(a, _op)(s))
numpy/array_api/tests/test_array_object.py:230:                    assert_raises(TypeError, lambda: getattr(a, _op)(s))
numpy/array_api/tests/test_array_object.py:243:                assert_raises(TypeError, lambda: x.__matmul__(y))
numpy/array_api/tests/test_array_object.py:244:                assert_raises(TypeError, lambda: y.__rmatmul__(x))
numpy/array_api/tests/test_array_object.py:245:                assert_raises(TypeError, lambda: x.__imatmul__(y))
numpy/array_api/tests/test_array_object.py:247:                assert_raises(ValueError, lambda: x.__matmul__(y))
numpy/array_api/tests/test_array_object.py:248:                assert_raises(ValueError, lambda: y.__rmatmul__(x))
numpy/array_api/tests/test_array_object.py:250:                    assert_raises(TypeError, lambda: x.__imatmul__(y))
numpy/array_api/tests/test_array_object.py:252:                    assert_raises(ValueError, lambda: x.__imatmul__(y))
numpy/array_api/tests/test_array_object.py:257:                    assert_raises(TypeError, lambda: x.__imatmul__(y))
numpy/array_api/tests/test_array_object.py:260:                    assert_raises(ValueError, lambda: x.__imatmul__(y))
numpy/array_api/tests/test_array_object.py:270:    assert bool(b) == False
numpy/array_api/tests/test_array_object.py:271:    assert int(i) == 0
numpy/array_api/tests/test_array_object.py:272:    assert float(f) == 0.0
numpy/array_api/tests/test_array_object.py:273:    assert operator.index(i) == 0
numpy/array_api/tests/test_array_object.py:276:    assert_raises(TypeError, lambda: bool(asarray([False])))
numpy/array_api/tests/test_array_object.py:277:    assert_raises(TypeError, lambda: int(asarray([0])))
numpy/array_api/tests/test_array_object.py:278:    assert_raises(TypeError, lambda: float(asarray([0.0])))
numpy/array_api/tests/test_array_object.py:279:    assert_raises(TypeError, lambda: operator.index(asarray([0])))
numpy/array_api/tests/test_array_object.py:283:    assert_raises(ValueError, lambda: bool(i))
numpy/array_api/tests/test_array_object.py:284:    assert_raises(ValueError, lambda: bool(f))
numpy/array_api/tests/test_array_object.py:286:    assert_raises(ValueError, lambda: int(b))
numpy/array_api/tests/test_array_object.py:287:    assert_raises(ValueError, lambda: int(f))
numpy/array_api/tests/test_array_object.py:289:    assert_raises(ValueError, lambda: float(b))
numpy/array_api/tests/test_array_object.py:290:    assert_raises(ValueError, lambda: float(i))
numpy/array_api/tests/test_array_object.py:292:    assert_raises(TypeError, lambda: operator.index(b))
numpy/array_api/tests/test_array_object.py:293:    assert_raises(TypeError, lambda: operator.index(f))
numpy/array_api/tests/test_array_object.py:298:    assert a.device == 'cpu'
numpy/array_api/tests/test_array_object.py:300:    assert all(equal(a.to_device('cpu'), a))
numpy/array_api/tests/test_array_object.py:301:    assert_raises(ValueError, lambda: a.to_device('gpu'))
numpy/array_api/tests/test_array_object.py:303:    assert all(equal(asarray(a, device='cpu'), a))
numpy/array_api/tests/test_array_object.py:304:    assert_raises(ValueError, lambda: asarray(a, device='gpu'))
numpy/array_api/tests/test_array_object.py:309:    assert_raises(ValueError, lambda: a.T)
numpy/array_api/tests/test_array_object.py:311:    assert isinstance(b.T, Array)
numpy/array_api/tests/test_array_object.py:312:    assert b.T.shape == (3, 2)
numpy/array_api/tests/test_array_object.py:314:    assert isinstance(a.mT, Array)
numpy/array_api/tests/test_array_object.py:315:    assert a.mT.shape == (1, 3, 2)
numpy/array_api/tests/test_array_object.py:316:    assert isinstance(b.mT, Array)
numpy/array_api/tests/test_array_object.py:317:    assert b.mT.shape == (3, 2)
numpy/array_api/tests/test_array_object.py:321:    assert np.asarray(a) is a._array
numpy/array_api/tests/test_array_object.py:323:    assert np.all(np.equal(b, np.ones((2, 3), dtype=np.float64)))
numpy/array_api/tests/test_array_object.py:324:    assert b.dtype == np.float64
numpy/array_api/tests/test_data_type_functions.py:19:    assert xp.can_cast(from_, to) == expected
numpy/array_api/tests/test_elementwise_functions.py:98:                        assert_raises(TypeError, lambda: func(x, y))
numpy/array_api/tests/test_elementwise_functions.py:101:                    assert_raises(TypeError, lambda: func(x))
numpy/array_api/tests/test_sorting_functions.py:23:    assert xp.all(out == xp.asarray(expected))
numpy/array_api/tests/test_creation_functions.py:26:    assert_raises(TypeError, lambda: Array([1]))
numpy/array_api/tests/test_creation_functions.py:27:    assert_raises(TypeError, lambda: asarray(["a"]))
numpy/array_api/tests/test_creation_functions.py:28:    assert_raises(ValueError, lambda: asarray([1.0], dtype=np.float16))
numpy/array_api/tests/test_creation_functions.py:29:    assert_raises(OverflowError, lambda: asarray(2**100))
numpy/array_api/tests/test_creation_functions.py:32:    assert_raises(TypeError, lambda: asarray([2**100]))
numpy/array_api/tests/test_creation_functions.py:34:    assert_raises(ValueError, lambda: asarray([1], device="gpu"))
numpy/array_api/tests/test_creation_functions.py:36:    assert_raises(ValueError, lambda: asarray([1], dtype=int))
numpy/array_api/tests/test_creation_functions.py:37:    assert_raises(ValueError, lambda: asarray([1], dtype="i"))
numpy/array_api/tests/test_creation_functions.py:44:    assert all(b[0] == 1)
numpy/array_api/tests/test_creation_functions.py:45:    assert all(a[0] == 0)
numpy/array_api/tests/test_creation_functions.py:49:    assert all(b[0] == 1)
numpy/array_api/tests/test_creation_functions.py:50:    assert all(a[0] == 0)
numpy/array_api/tests/test_creation_functions.py:54:    assert all(b[0] == 0)
numpy/array_api/tests/test_creation_functions.py:55:    assert_raises(NotImplementedError, lambda: asarray(a, copy=False))
numpy/array_api/tests/test_creation_functions.py:62:    assert_raises(ValueError, lambda: arange(1, device="gpu"))
numpy/array_api/tests/test_creation_functions.py:63:    assert_raises(ValueError, lambda: arange(1, dtype=int))
numpy/array_api/tests/test_creation_functions.py:64:    assert_raises(ValueError, lambda: arange(1, dtype="i"))
numpy/array_api/tests/test_creation_functions.py:69:    assert_raises(ValueError, lambda: empty((1,), device="gpu"))
numpy/array_api/tests/test_creation_functions.py:70:    assert_raises(ValueError, lambda: empty((1,), dtype=int))
numpy/array_api/tests/test_creation_functions.py:71:    assert_raises(ValueError, lambda: empty((1,), dtype="i"))
numpy/array_api/tests/test_creation_functions.py:76:    assert_raises(ValueError, lambda: empty_like(asarray(1), device="gpu"))
numpy/array_api/tests/test_creation_functions.py:77:    assert_raises(ValueError, lambda: empty_like(asarray(1), dtype=int))
numpy/array_api/tests/test_creation_functions.py:78:    assert_raises(ValueError, lambda: empty_like(asarray(1), dtype="i"))
numpy/array_api/tests/test_creation_functions.py:83:    assert_raises(ValueError, lambda: eye(1, device="gpu"))
numpy/array_api/tests/test_creation_functions.py:84:    assert_raises(ValueError, lambda: eye(1, dtype=int))
numpy/array_api/tests/test_creation_functions.py:85:    assert_raises(ValueError, lambda: eye(1, dtype="i"))
numpy/array_api/tests/test_creation_functions.py:90:    assert_raises(ValueError, lambda: full((1,), 0, device="gpu"))
numpy/array_api/tests/test_creation_functions.py:91:    assert_raises(ValueError, lambda: full((1,), 0, dtype=int))
numpy/array_api/tests/test_creation_functions.py:92:    assert_raises(ValueError, lambda: full((1,), 0, dtype="i"))
numpy/array_api/tests/test_creation_functions.py:97:    assert_raises(ValueError, lambda: full_like(asarray(1), 0, device="gpu"))
numpy/array_api/tests/test_creation_functions.py:98:    assert_raises(ValueError, lambda: full_like(asarray(1), 0, dtype=int))
numpy/array_api/tests/test_creation_functions.py:99:    assert_raises(ValueError, lambda: full_like(asarray(1), 0, dtype="i"))
numpy/array_api/tests/test_creation_functions.py:104:    assert_raises(ValueError, lambda: linspace(0, 1, 10, device="gpu"))
numpy/array_api/tests/test_creation_functions.py:105:    assert_raises(ValueError, lambda: linspace(0, 1, 10, dtype=float))
numpy/array_api/tests/test_creation_functions.py:106:    assert_raises(ValueError, lambda: linspace(0, 1, 10, dtype="f"))
numpy/array_api/tests/test_creation_functions.py:111:    assert_raises(ValueError, lambda: ones((1,), device="gpu"))
numpy/array_api/tests/test_creation_functions.py:112:    assert_raises(ValueError, lambda: ones((1,), dtype=int))
numpy/array_api/tests/test_creation_functions.py:113:    assert_raises(ValueError, lambda: ones((1,), dtype="i"))
numpy/array_api/tests/test_creation_functions.py:118:    assert_raises(ValueError, lambda: ones_like(asarray(1), device="gpu"))
numpy/array_api/tests/test_creation_functions.py:119:    assert_raises(ValueError, lambda: ones_like(asarray(1), dtype=int))
numpy/array_api/tests/test_creation_functions.py:120:    assert_raises(ValueError, lambda: ones_like(asarray(1), dtype="i"))
numpy/array_api/tests/test_creation_functions.py:125:    assert_raises(ValueError, lambda: zeros((1,), device="gpu"))
numpy/array_api/tests/test_creation_functions.py:126:    assert_raises(ValueError, lambda: zeros((1,), dtype=int))
numpy/array_api/tests/test_creation_functions.py:127:    assert_raises(ValueError, lambda: zeros((1,), dtype="i"))
numpy/array_api/tests/test_creation_functions.py:132:    assert_raises(ValueError, lambda: zeros_like(asarray(1), device="gpu"))
numpy/array_api/tests/test_creation_functions.py:133:    assert_raises(ValueError, lambda: zeros_like(asarray(1), dtype=int))
numpy/array_api/tests/test_creation_functions.py:134:    assert_raises(ValueError, lambda: zeros_like(asarray(1), dtype="i"))
numpy/array_api/tests/test_creation_functions.py:142:    assert_raises(ValueError, lambda: meshgrid(asarray([1.], dtype=float32), asarray([1.], dtype=float64)))
numpy/typing/tests/test_isfile.py:30:            assert_(os.path.isfile(file))
numpy/typing/tests/test_typing.py:404:    assert spec is not None
numpy/typing/tests/test_typing.py:405:    assert spec.loader is not None
numpy/typing/tests/test_runtime.py:37:    assert out == ref
numpy/typing/tests/test_runtime.py:45:    assert out == ref
numpy/typing/tests/test_runtime.py:60:    assert out == ref
numpy/typing/tests/test_runtime.py:75:    assert out == ref
numpy/typing/tests/test_runtime.py:82:    assert keys == ref
numpy/typing/tests/test_generic_alias.py:82:            assert value == value_ref
numpy/typing/tests/test_generic_alias.py:97:            assert value == value_ref
numpy/typing/tests/test_generic_alias.py:105:            assert value == value_ref
numpy/typing/tests/test_generic_alias.py:118:            assert value == value_ref1 == value_ref2
numpy/typing/tests/test_generic_alias.py:120:            assert value == value_ref1
numpy/f2py/tests/test_mixed.py:17:        assert self.module.bar11() == 11
numpy/f2py/tests/test_mixed.py:18:        assert self.module.foo_fixed.bar12() == 12
numpy/f2py/tests/test_mixed.py:19:        assert self.module.foo_free.bar13() == 13
numpy/f2py/tests/test_mixed.py:33:        assert self.module.bar11.__doc__ == expected
numpy/f2py/tests/test_return_logical.py:9:        assert t(True) == 1
numpy/f2py/tests/test_return_logical.py:10:        assert t(False) == 0
numpy/f2py/tests/test_return_logical.py:11:        assert t(0) == 0
numpy/f2py/tests/test_return_logical.py:12:        assert t(None) == 0
numpy/f2py/tests/test_return_logical.py:13:        assert t(0.0) == 0
numpy/f2py/tests/test_return_logical.py:14:        assert t(0j) == 0
numpy/f2py/tests/test_return_logical.py:15:        assert t(1j) == 1
numpy/f2py/tests/test_return_logical.py:16:        assert t(234) == 1
numpy/f2py/tests/test_return_logical.py:17:        assert t(234.6) == 1
numpy/f2py/tests/test_return_logical.py:18:        assert t(234.6 + 3j) == 1
numpy/f2py/tests/test_return_logical.py:19:        assert t("234") == 1
numpy/f2py/tests/test_return_logical.py:20:        assert t("aaa") == 1
numpy/f2py/tests/test_return_logical.py:21:        assert t("") == 0
numpy/f2py/tests/test_return_logical.py:22:        assert t([]) == 0
numpy/f2py/tests/test_return_logical.py:23:        assert t(()) == 0
numpy/f2py/tests/test_return_logical.py:24:        assert t({}) == 0
numpy/f2py/tests/test_return_logical.py:25:        assert t(t) == 1
numpy/f2py/tests/test_return_logical.py:26:        assert t(-234) == 1
numpy/f2py/tests/test_return_logical.py:27:        assert t(10**100) == 1
numpy/f2py/tests/test_return_logical.py:28:        assert t([234]) == 1
numpy/f2py/tests/test_return_logical.py:29:        assert t((234, )) == 1
numpy/f2py/tests/test_return_logical.py:30:        assert t(array(234)) == 1
numpy/f2py/tests/test_return_logical.py:31:        assert t(array([234])) == 1
numpy/f2py/tests/test_return_logical.py:32:        assert t(array([[234]])) == 1
numpy/f2py/tests/test_return_logical.py:33:        assert t(array([234], "b")) == 1
numpy/f2py/tests/test_return_logical.py:34:        assert t(array([234], "h")) == 1
numpy/f2py/tests/test_return_logical.py:35:        assert t(array([234], "i")) == 1
numpy/f2py/tests/test_return_logical.py:36:        assert t(array([234], "l")) == 1
numpy/f2py/tests/test_return_logical.py:37:        assert t(array([234], "f")) == 1
numpy/f2py/tests/test_return_logical.py:38:        assert t(array([234], "d")) == 1
numpy/f2py/tests/test_return_logical.py:39:        assert t(array([234 + 3j], "F")) == 1
numpy/f2py/tests/test_return_logical.py:40:        assert t(array([234], "D")) == 1
numpy/f2py/tests/test_return_logical.py:41:        assert t(array(0)) == 0
numpy/f2py/tests/test_return_logical.py:42:        assert t(array([0])) == 0
numpy/f2py/tests/test_return_logical.py:43:        assert t(array([[0]])) == 0
numpy/f2py/tests/test_return_logical.py:44:        assert t(array([0j])) == 0
numpy/f2py/tests/test_return_logical.py:45:        assert t(array([1])) == 1
numpy/f2py/tests/test_assumed_shape.py:20:        assert r == 3
numpy/f2py/tests/test_assumed_shape.py:22:        assert r == 3
numpy/f2py/tests/test_assumed_shape.py:24:        assert r == 3
numpy/f2py/tests/test_assumed_shape.py:27:        assert r == 3
numpy/f2py/tests/test_assumed_shape.py:29:        assert r == 3
numpy/f2py/tests/test_common.py:16:        assert self.module.block.long_bn == np.array(1.0, dtype=np.float64)
numpy/f2py/tests/test_common.py:17:        assert self.module.block.string_bn == np.array("2", dtype="|S1")
numpy/f2py/tests/test_common.py:18:        assert self.module.block.ok == np.array(3, dtype=np.int32)
numpy/f2py/tests/test_kind.py:19:            assert selectedintkind(i) == selected_int_kind(
numpy/f2py/tests/test_kind.py:24:            assert selectedrealkind(i) == selected_real_kind(
numpy/f2py/tests/test_array_from_pyobj.py:189:        assert self.type_num == info.num
numpy/f2py/tests/test_array_from_pyobj.py:239:        assert isinstance(self.arr, np.ndarray)
numpy/f2py/tests/test_array_from_pyobj.py:245:                assert (intent.flags & wrap.F2PY_INTENT_C)
numpy/f2py/tests/test_array_from_pyobj.py:247:                assert self.arr.flags["CONTIGUOUS"]
numpy/f2py/tests/test_array_from_pyobj.py:248:                assert (not self.arr_attr[6] & wrap.FORTRAN)
numpy/f2py/tests/test_array_from_pyobj.py:250:                assert (not intent.flags & wrap.F2PY_INTENT_C)
numpy/f2py/tests/test_array_from_pyobj.py:251:                assert self.arr.flags["FORTRAN"]
numpy/f2py/tests/test_array_from_pyobj.py:253:                assert (self.arr_attr[6] & wrap.FORTRAN)
numpy/f2py/tests/test_array_from_pyobj.py:261:            assert isinstance(obj, np.ndarray), repr(type(obj))
numpy/f2py/tests/test_array_from_pyobj.py:268:            assert self.pyarr.dtype == typ
numpy/f2py/tests/test_array_from_pyobj.py:270:        assert self.pyarr.flags["OWNDATA"], (obj, intent)
numpy/f2py/tests/test_array_from_pyobj.py:276:                assert self.pyarr.flags["CONTIGUOUS"]
numpy/f2py/tests/test_array_from_pyobj.py:277:                assert (not self.pyarr_attr[6] & wrap.FORTRAN)
numpy/f2py/tests/test_array_from_pyobj.py:279:                assert self.pyarr.flags["FORTRAN"]
numpy/f2py/tests/test_array_from_pyobj.py:281:                assert (self.pyarr_attr[6] & wrap.FORTRAN)
numpy/f2py/tests/test_array_from_pyobj.py:283:        assert self.arr_attr[1] == self.pyarr_attr[1]  # nd
numpy/f2py/tests/test_array_from_pyobj.py:284:        assert self.arr_attr[2] == self.pyarr_attr[2]  # dimensions
numpy/f2py/tests/test_array_from_pyobj.py:286:            assert self.arr_attr[3] == self.pyarr_attr[3], repr((
numpy/f2py/tests/test_array_from_pyobj.py:292:        assert self.arr_attr[5][-2:] == self.pyarr_attr[5][-2:]  # descr
numpy/f2py/tests/test_array_from_pyobj.py:293:        assert self.arr_attr[6] == self.pyarr_attr[6], repr((
numpy/f2py/tests/test_array_from_pyobj.py:302:            assert self.arr_attr[5][3] >= self.type.elsize
numpy/f2py/tests/test_array_from_pyobj.py:304:            assert self.arr_attr[5][3] == self.type.elsize
numpy/f2py/tests/test_array_from_pyobj.py:305:            assert (self.arr_equal(self.pyarr, self.arr))
numpy/f2py/tests/test_array_from_pyobj.py:310:                    assert self.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:332:        assert str(intent.in_.out) == "intent(in,out)"
numpy/f2py/tests/test_array_from_pyobj.py:333:        assert intent.in_.c.is_intent("c")
numpy/f2py/tests/test_array_from_pyobj.py:334:        assert not intent.in_.c.is_intent_exact("c")
numpy/f2py/tests/test_array_from_pyobj.py:335:        assert intent.in_.c.is_intent_exact("c", "in")
numpy/f2py/tests/test_array_from_pyobj.py:336:        assert intent.in_.c.is_intent_exact("in", "c")
numpy/f2py/tests/test_array_from_pyobj.py:337:        assert not intent.in_.is_intent("c")
numpy/f2py/tests/test_array_from_pyobj.py:352:        assert not a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:359:                assert a.has_shared_memory(), repr((self.type.dtype, t.dtype))
numpy/f2py/tests/test_array_from_pyobj.py:361:                assert not a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:373:        assert a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:378:        assert a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:393:        assert a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:411:        assert a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:417:            assert not a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:423:        assert not a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:430:            assert not a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:438:                assert a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:440:                assert not a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:448:                assert a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:450:                assert not a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:458:            assert not a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:466:            assert not a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:475:            assert a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:478:            assert a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:482:            assert a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:485:            assert a.has_shared_memory(), repr(t.dtype)
numpy/f2py/tests/test_array_from_pyobj.py:516:        assert a.arr.shape == shape
numpy/f2py/tests/test_array_from_pyobj.py:520:        assert a.arr.shape == shape
numpy/f2py/tests/test_array_from_pyobj.py:536:        assert a.arr.shape == shape
numpy/f2py/tests/test_array_from_pyobj.py:537:        assert a.arr_equal(a.arr, np.zeros(shape, dtype=self.type.dtype))
numpy/f2py/tests/test_array_from_pyobj.py:541:        assert a.arr.shape == shape
numpy/f2py/tests/test_array_from_pyobj.py:542:        assert a.arr_equal(a.arr, np.zeros(shape, dtype=self.type.dtype))
numpy/f2py/tests/test_array_from_pyobj.py:543:        assert a.arr.flags["FORTRAN"] and not a.arr.flags["CONTIGUOUS"]
numpy/f2py/tests/test_array_from_pyobj.py:547:        assert a.arr.shape == shape
numpy/f2py/tests/test_array_from_pyobj.py:548:        assert a.arr_equal(a.arr, np.zeros(shape, dtype=self.type.dtype))
numpy/f2py/tests/test_array_from_pyobj.py:565:        assert a.arr.shape == shape
numpy/f2py/tests/test_array_from_pyobj.py:566:        assert a.arr_equal(a.arr, np.zeros(shape, dtype=self.type.dtype))
numpy/f2py/tests/test_array_from_pyobj.py:570:        assert a.arr.shape == shape
numpy/f2py/tests/test_array_from_pyobj.py:571:        assert a.arr_equal(a.arr, np.zeros(shape, dtype=self.type.dtype))
numpy/f2py/tests/test_array_from_pyobj.py:572:        assert a.arr.flags["FORTRAN"] and not a.arr.flags["CONTIGUOUS"]
numpy/f2py/tests/test_array_from_pyobj.py:576:        assert a.arr.shape == shape
numpy/f2py/tests/test_array_from_pyobj.py:577:        assert a.arr_equal(a.arr, np.zeros(shape, dtype=self.type.dtype))
numpy/f2py/tests/test_array_from_pyobj.py:584:        assert a.arr.shape == shape
numpy/f2py/tests/test_array_from_pyobj.py:585:        assert not a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:591:        assert a.arr.shape == shape
numpy/f2py/tests/test_array_from_pyobj.py:592:        assert not a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:595:        assert a.arr.shape == shape
numpy/f2py/tests/test_array_from_pyobj.py:596:        assert not a.has_shared_memory()
numpy/f2py/tests/test_array_from_pyobj.py:603:        assert obj[1][2] == a.arr[1][2], repr((obj, a.arr))
numpy/f2py/tests/test_array_from_pyobj.py:605:        assert obj[1][2] == a.arr[1][2] == np.array(54, dtype=self.type.dtype)
numpy/f2py/tests/test_array_from_pyobj.py:606:        assert a.arr is obj
numpy/f2py/tests/test_array_from_pyobj.py:607:        assert obj.flags["FORTRAN"]  # obj attributes are changed inplace!
numpy/f2py/tests/test_array_from_pyobj.py:615:            assert obj.dtype.type == t.type
numpy/f2py/tests/test_array_from_pyobj.py:616:            assert obj.dtype.type is not self.type.type
numpy/f2py/tests/test_array_from_pyobj.py:620:            assert obj[1][2] == a.arr[1][2], repr((obj, a.arr))
numpy/f2py/tests/test_array_from_pyobj.py:622:            assert obj[1][2] == a.arr[1][2] == np.array(54,
numpy/f2py/tests/test_array_from_pyobj.py:624:            assert a.arr is obj
numpy/f2py/tests/test_array_from_pyobj.py:625:            assert obj.flags["FORTRAN"]  # obj attributes changed inplace!
numpy/f2py/tests/test_array_from_pyobj.py:627:            assert obj.dtype.type is self.type.type  # obj changed inplace!
numpy/f2py/tests/test_return_real.py:14:        assert abs(t(234) - 234.0) <= err
numpy/f2py/tests/test_return_real.py:15:        assert abs(t(234.6) - 234.6) <= err
numpy/f2py/tests/test_return_real.py:16:        assert abs(t("234") - 234) <= err
numpy/f2py/tests/test_return_real.py:17:        assert abs(t("234.6") - 234.6) <= err
numpy/f2py/tests/test_return_real.py:18:        assert abs(t(-234) + 234) <= err
numpy/f2py/tests/test_return_real.py:19:        assert abs(t([234]) - 234) <= err
numpy/f2py/tests/test_return_real.py:20:        assert abs(t((234, )) - 234.0) <= err
numpy/f2py/tests/test_return_real.py:21:        assert abs(t(array(234)) - 234.0) <= err
numpy/f2py/tests/test_return_real.py:22:        assert abs(t(array([234])) - 234.0) <= err
numpy/f2py/tests/test_return_real.py:23:        assert abs(t(array([[234]])) - 234.0) <= err
numpy/f2py/tests/test_return_real.py:24:        assert abs(t(array([234], "b")) + 22) <= err
numpy/f2py/tests/test_return_real.py:25:        assert abs(t(array([234], "h")) - 234.0) <= err
numpy/f2py/tests/test_return_real.py:26:        assert abs(t(array([234], "i")) - 234.0) <= err
numpy/f2py/tests/test_return_real.py:27:        assert abs(t(array([234], "l")) - 234.0) <= err
numpy/f2py/tests/test_return_real.py:28:        assert abs(t(array([234], "B")) - 234.0) <= err
numpy/f2py/tests/test_return_real.py:29:        assert abs(t(array([234], "f")) - 234.0) <= err
numpy/f2py/tests/test_return_real.py:30:        assert abs(t(array([234], "d")) - 234.0) <= err
numpy/f2py/tests/test_return_real.py:32:            assert t(1e200) == t(1e300)  # inf
numpy/f2py/tests/test_return_real.py:45:            assert repr(r) in ["inf", "Infinity"]
numpy/f2py/tests/test_symbolic.py:40:            assert s1 == s
numpy/f2py/tests/test_symbolic.py:55:        assert x.op == Op.SYMBOL
numpy/f2py/tests/test_symbolic.py:56:        assert repr(x) == "Expr(Op.SYMBOL, 'x')"
numpy/f2py/tests/test_symbolic.py:57:        assert x == x
numpy/f2py/tests/test_symbolic.py:58:        assert x != y
numpy/f2py/tests/test_symbolic.py:59:        assert hash(x) is not None
numpy/f2py/tests/test_symbolic.py:63:        assert n.op == Op.INTEGER
numpy/f2py/tests/test_symbolic.py:64:        assert repr(n) == "Expr(Op.INTEGER, (123, 4))"
numpy/f2py/tests/test_symbolic.py:65:        assert n == n
numpy/f2py/tests/test_symbolic.py:66:        assert n != m
numpy/f2py/tests/test_symbolic.py:67:        assert hash(n) is not None
numpy/f2py/tests/test_symbolic.py:71:        assert fn.op == Op.REAL
numpy/f2py/tests/test_symbolic.py:72:        assert repr(fn) == "Expr(Op.REAL, (12.3, 4))"
numpy/f2py/tests/test_symbolic.py:73:        assert fn == fn
numpy/f2py/tests/test_symbolic.py:74:        assert fn != fm
numpy/f2py/tests/test_symbolic.py:75:        assert hash(fn) is not None
numpy/f2py/tests/test_symbolic.py:79:        assert c.op == Op.COMPLEX
numpy/f2py/tests/test_symbolic.py:80:        assert repr(c) == ("Expr(Op.COMPLEX, (Expr(Op.INTEGER, (1, 4)),"
numpy/f2py/tests/test_symbolic.py:82:        assert c == c
numpy/f2py/tests/test_symbolic.py:83:        assert c != c2
numpy/f2py/tests/test_symbolic.py:84:        assert hash(c) is not None
numpy/f2py/tests/test_symbolic.py:88:        assert s.op == Op.STRING
numpy/f2py/tests/test_symbolic.py:89:        assert repr(s) == "Expr(Op.STRING, (\"'123'\", 1))", repr(s)
numpy/f2py/tests/test_symbolic.py:90:        assert s == s
numpy/f2py/tests/test_symbolic.py:91:        assert s != s2
numpy/f2py/tests/test_symbolic.py:95:        assert a.op == Op.ARRAY
numpy/f2py/tests/test_symbolic.py:96:        assert repr(a) == ("Expr(Op.ARRAY, (Expr(Op.INTEGER, (123, 4)),"
numpy/f2py/tests/test_symbolic.py:98:        assert a == a
numpy/f2py/tests/test_symbolic.py:99:        assert a != b
numpy/f2py/tests/test_symbolic.py:103:        assert t.op == Op.TERMS
numpy/f2py/tests/test_symbolic.py:104:        assert repr(t) == "Expr(Op.TERMS, {Expr(Op.SYMBOL, 'x'): 1})"
numpy/f2py/tests/test_symbolic.py:105:        assert t == t
numpy/f2py/tests/test_symbolic.py:106:        assert t != u
numpy/f2py/tests/test_symbolic.py:107:        assert hash(t) is not None
numpy/f2py/tests/test_symbolic.py:111:        assert v.op == Op.FACTORS
numpy/f2py/tests/test_symbolic.py:112:        assert repr(v) == "Expr(Op.FACTORS, {Expr(Op.SYMBOL, 'x'): 1})"
numpy/f2py/tests/test_symbolic.py:113:        assert v == v
numpy/f2py/tests/test_symbolic.py:114:        assert w != v
numpy/f2py/tests/test_symbolic.py:115:        assert hash(v) is not None
numpy/f2py/tests/test_symbolic.py:119:        assert t.op == Op.TERNARY
numpy/f2py/tests/test_symbolic.py:120:        assert t == t
numpy/f2py/tests/test_symbolic.py:121:        assert t != u
numpy/f2py/tests/test_symbolic.py:122:        assert hash(t) is not None
numpy/f2py/tests/test_symbolic.py:126:        assert e.op == Op.RELATIONAL
numpy/f2py/tests/test_symbolic.py:127:        assert e == e
numpy/f2py/tests/test_symbolic.py:128:        assert e != f
numpy/f2py/tests/test_symbolic.py:129:        assert hash(e) is not None
numpy/f2py/tests/test_symbolic.py:140:        assert str(x) == "x"
numpy/f2py/tests/test_symbolic.py:141:        assert str(n) == "123"
numpy/f2py/tests/test_symbolic.py:142:        assert str(a) == "[123, 456]"
numpy/f2py/tests/test_symbolic.py:143:        assert str(c) == "(123, 456)"
numpy/f2py/tests/test_symbolic.py:145:        assert str(Expr(Op.TERMS, {x: 1})) == "x"
numpy/f2py/tests/test_symbolic.py:146:        assert str(Expr(Op.TERMS, {x: 2})) == "2 * x"
numpy/f2py/tests/test_symbolic.py:147:        assert str(Expr(Op.TERMS, {x: -1})) == "-x"
numpy/f2py/tests/test_symbolic.py:148:        assert str(Expr(Op.TERMS, {x: -2})) == "-2 * x"
numpy/f2py/tests/test_symbolic.py:149:        assert str(Expr(Op.TERMS, {x: 1, y: 1})) == "x + y"
numpy/f2py/tests/test_symbolic.py:150:        assert str(Expr(Op.TERMS, {x: -1, y: -1})) == "-x - y"
numpy/f2py/tests/test_symbolic.py:151:        assert str(Expr(Op.TERMS, {x: 2, y: 3})) == "2 * x + 3 * y"
numpy/f2py/tests/test_symbolic.py:152:        assert str(Expr(Op.TERMS, {x: -2, y: 3})) == "-2 * x + 3 * y"
numpy/f2py/tests/test_symbolic.py:153:        assert str(Expr(Op.TERMS, {x: 2, y: -3})) == "2 * x - 3 * y"
numpy/f2py/tests/test_symbolic.py:155:        assert str(Expr(Op.FACTORS, {x: 1})) == "x"
numpy/f2py/tests/test_symbolic.py:156:        assert str(Expr(Op.FACTORS, {x: 2})) == "x ** 2"
numpy/f2py/tests/test_symbolic.py:157:        assert str(Expr(Op.FACTORS, {x: -1})) == "x ** -1"
numpy/f2py/tests/test_symbolic.py:158:        assert str(Expr(Op.FACTORS, {x: -2})) == "x ** -2"
numpy/f2py/tests/test_symbolic.py:159:        assert str(Expr(Op.FACTORS, {x: 1, y: 1})) == "x * y"
numpy/f2py/tests/test_symbolic.py:160:        assert str(Expr(Op.FACTORS, {x: 2, y: 3})) == "x ** 2 * y ** 3"
numpy/f2py/tests/test_symbolic.py:163:        assert str(v) == "x ** 2 * (x + y) ** 3", str(v)
numpy/f2py/tests/test_symbolic.py:165:        assert str(v) == "x ** 2 * (x * y) ** 3", str(v)
numpy/f2py/tests/test_symbolic.py:167:        assert str(Expr(Op.APPLY, ("f", (), {}))) == "f()"
numpy/f2py/tests/test_symbolic.py:168:        assert str(Expr(Op.APPLY, ("f", (x, ), {}))) == "f(x)"
numpy/f2py/tests/test_symbolic.py:169:        assert str(Expr(Op.APPLY, ("f", (x, y), {}))) == "f(x, y)"
numpy/f2py/tests/test_symbolic.py:170:        assert str(Expr(Op.INDEXING, ("f", x))) == "f[x]"
numpy/f2py/tests/test_symbolic.py:172:        assert str(as_ternary(x, y, z)) == "merge(y, z, x)"
numpy/f2py/tests/test_symbolic.py:173:        assert str(as_eq(x, y)) == "x .eq. y"
numpy/f2py/tests/test_symbolic.py:174:        assert str(as_ne(x, y)) == "x .ne. y"
numpy/f2py/tests/test_symbolic.py:175:        assert str(as_lt(x, y)) == "x .lt. y"
numpy/f2py/tests/test_symbolic.py:176:        assert str(as_le(x, y)) == "x .le. y"
numpy/f2py/tests/test_symbolic.py:177:        assert str(as_gt(x, y)) == "x .gt. y"
numpy/f2py/tests/test_symbolic.py:178:        assert str(as_ge(x, y)) == "x .ge. y"
numpy/f2py/tests/test_symbolic.py:187:        assert Expr(Op.FACTORS, {x: 2}).tostring(language=language) == "x * x"
numpy/f2py/tests/test_symbolic.py:188:        assert (Expr(Op.FACTORS, {
numpy/f2py/tests/test_symbolic.py:191:        assert Expr(Op.FACTORS, {
numpy/f2py/tests/test_symbolic.py:195:        assert as_apply(ArithOp.DIV, x,
numpy/f2py/tests/test_symbolic.py:197:        assert (as_apply(ArithOp.DIV, x,
numpy/f2py/tests/test_symbolic.py:199:        assert (as_apply(ArithOp.DIV, x - y, x +
numpy/f2py/tests/test_symbolic.py:201:        assert (x + (x - y) / (x + y) +
numpy/f2py/tests/test_symbolic.py:204:        assert as_ternary(x, y, z).tostring(language=language) == "(x?y:z)"
numpy/f2py/tests/test_symbolic.py:205:        assert as_eq(x, y).tostring(language=language) == "x == y"
numpy/f2py/tests/test_symbolic.py:206:        assert as_ne(x, y).tostring(language=language) == "x != y"
numpy/f2py/tests/test_symbolic.py:207:        assert as_lt(x, y).tostring(language=language) == "x < y"
numpy/f2py/tests/test_symbolic.py:208:        assert as_le(x, y).tostring(language=language) == "x <= y"
numpy/f2py/tests/test_symbolic.py:209:        assert as_gt(x, y).tostring(language=language) == "x > y"
numpy/f2py/tests/test_symbolic.py:210:        assert as_ge(x, y).tostring(language=language) == "x >= y"
numpy/f2py/tests/test_symbolic.py:217:        assert x + x == Expr(Op.TERMS, {x: 2})
numpy/f2py/tests/test_symbolic.py:218:        assert x - x == Expr(Op.INTEGER, (0, 4))
numpy/f2py/tests/test_symbolic.py:219:        assert x + y == Expr(Op.TERMS, {x: 1, y: 1})
numpy/f2py/tests/test_symbolic.py:220:        assert x - y == Expr(Op.TERMS, {x: 1, y: -1})
numpy/f2py/tests/test_symbolic.py:221:        assert x * x == Expr(Op.FACTORS, {x: 2})
numpy/f2py/tests/test_symbolic.py:222:        assert x * y == Expr(Op.FACTORS, {x: 1, y: 1})
numpy/f2py/tests/test_symbolic.py:224:        assert +x == x
numpy/f2py/tests/test_symbolic.py:225:        assert -x == Expr(Op.TERMS, {x: -1}), repr(-x)
numpy/f2py/tests/test_symbolic.py:226:        assert 2 * x == Expr(Op.TERMS, {x: 2})
numpy/f2py/tests/test_symbolic.py:227:        assert 2 + x == Expr(Op.TERMS, {x: 1, as_number(1): 2})
numpy/f2py/tests/test_symbolic.py:228:        assert 2 * x + 3 * y == Expr(Op.TERMS, {x: 2, y: 3})
numpy/f2py/tests/test_symbolic.py:229:        assert (x + y) * 2 == Expr(Op.TERMS, {x: 2, y: 2})
numpy/f2py/tests/test_symbolic.py:231:        assert x**2 == Expr(Op.FACTORS, {x: 2})
numpy/f2py/tests/test_symbolic.py:232:        assert (x + y)**2 == Expr(
numpy/f2py/tests/test_symbolic.py:243:        assert (x + y) * x == x**2 + x * y
numpy/f2py/tests/test_symbolic.py:244:        assert (x + y)**2 == x**2 + 2 * x * y + y**2
numpy/f2py/tests/test_symbolic.py:245:        assert (x + y)**2 + (x - y)**2 == 2 * x**2 + 2 * y**2
numpy/f2py/tests/test_symbolic.py:246:        assert (x + y) * z == x * z + y * z
numpy/f2py/tests/test_symbolic.py:247:        assert z * (x + y) == x * z + y * z
numpy/f2py/tests/test_symbolic.py:249:        assert (x / 2) == as_apply(ArithOp.DIV, x, as_number(2))
numpy/f2py/tests/test_symbolic.py:250:        assert (2 * x / 2) == x
numpy/f2py/tests/test_symbolic.py:251:        assert (3 * x / 2) == as_apply(ArithOp.DIV, 3 * x, as_number(2))
numpy/f2py/tests/test_symbolic.py:252:        assert (4 * x / 2) == 2 * x
numpy/f2py/tests/test_symbolic.py:253:        assert (5 * x / 2) == as_apply(ArithOp.DIV, 5 * x, as_number(2))
numpy/f2py/tests/test_symbolic.py:254:        assert (6 * x / 2) == 3 * x
numpy/f2py/tests/test_symbolic.py:255:        assert ((3 * 5) * x / 6) == as_apply(ArithOp.DIV, 5 * x, as_number(2))
numpy/f2py/tests/test_symbolic.py:256:        assert (30 * x**2 * y**4 / (24 * x**3 * y**3)) == as_apply(
numpy/f2py/tests/test_symbolic.py:258:        assert ((15 * x / 6) / 5) == as_apply(ArithOp.DIV, x,
numpy/f2py/tests/test_symbolic.py:260:        assert (x / (5 / x)) == as_apply(ArithOp.DIV, x**2, as_number(5))
numpy/f2py/tests/test_symbolic.py:262:        assert (x / 2.0) == Expr(Op.TERMS, {x: 0.5})
numpy/f2py/tests/test_symbolic.py:267:        assert s // t == Expr(Op.STRING, ('"ABC123"', 1))
numpy/f2py/tests/test_symbolic.py:268:        assert s // x == Expr(Op.CONCAT, (s, x))
numpy/f2py/tests/test_symbolic.py:269:        assert x // s == Expr(Op.CONCAT, (x, s))
numpy/f2py/tests/test_symbolic.py:272:        assert -c == as_complex(-1.0, -2.0)
numpy/f2py/tests/test_symbolic.py:273:        assert c + c == as_expr((1 + 2j) * 2)
numpy/f2py/tests/test_symbolic.py:274:        assert c * c == as_expr((1 + 2j)**2)
numpy/f2py/tests/test_symbolic.py:282:        assert x.substitute({x: y}) == y
numpy/f2py/tests/test_symbolic.py:283:        assert (x + y).substitute({x: z}) == y + z
numpy/f2py/tests/test_symbolic.py:284:        assert (x * y).substitute({x: z}) == y * z
numpy/f2py/tests/test_symbolic.py:285:        assert (x**4).substitute({x: z}) == z**4
numpy/f2py/tests/test_symbolic.py:286:        assert (x / y).substitute({x: z}) == z / y
numpy/f2py/tests/test_symbolic.py:287:        assert x.substitute({x: y + z}) == y + z
numpy/f2py/tests/test_symbolic.py:288:        assert a.substitute({x: y + z}) == as_array((y + z, y))
numpy/f2py/tests/test_symbolic.py:290:        assert as_ternary(x, y,
numpy/f2py/tests/test_symbolic.py:292:        assert as_eq(x, y).substitute({x: y + z}) == as_eq(y + z, y)
numpy/f2py/tests/test_symbolic.py:304:        assert fromstring("x") == x
numpy/f2py/tests/test_symbolic.py:305:        assert fromstring("+ x") == x
numpy/f2py/tests/test_symbolic.py:306:        assert fromstring("-  x") == -x
numpy/f2py/tests/test_symbolic.py:307:        assert fromstring("x + y") == x + y
numpy/f2py/tests/test_symbolic.py:308:        assert fromstring("x + 1") == x + 1
numpy/f2py/tests/test_symbolic.py:309:        assert fromstring("x * y") == x * y
numpy/f2py/tests/test_symbolic.py:310:        assert fromstring("x * 2") == x * 2
numpy/f2py/tests/test_symbolic.py:311:        assert fromstring("x / y") == x / y
numpy/f2py/tests/test_symbolic.py:312:        assert fromstring("x ** 2", language=Language.Python) == x**2
numpy/f2py/tests/test_symbolic.py:313:        assert fromstring("x ** 2 ** 3", language=Language.Python) == x**2**3
numpy/f2py/tests/test_symbolic.py:314:        assert fromstring("(x + y) * z") == (x + y) * z
numpy/f2py/tests/test_symbolic.py:316:        assert fromstring("f(x)") == f(x)
numpy/f2py/tests/test_symbolic.py:317:        assert fromstring("f(x,y)") == f(x, y)
numpy/f2py/tests/test_symbolic.py:318:        assert fromstring("f[x]") == f[x]
numpy/f2py/tests/test_symbolic.py:319:        assert fromstring("f[x][y]") == f[x][y]
numpy/f2py/tests/test_symbolic.py:321:        assert fromstring('"ABC"') == s
numpy/f2py/tests/test_symbolic.py:322:        assert (normalize(
numpy/f2py/tests/test_symbolic.py:325:        assert fromstring('f("ABC")') == f(s)
numpy/f2py/tests/test_symbolic.py:326:        assert fromstring('MYSTRKIND_"ABC"') == as_string('"ABC"', "MYSTRKIND")
numpy/f2py/tests/test_symbolic.py:328:        assert fromstring("(/x, y/)") == a, fromstring("(/x, y/)")
numpy/f2py/tests/test_symbolic.py:329:        assert fromstring("f((/x, y/))") == f(a)
numpy/f2py/tests/test_symbolic.py:330:        assert fromstring("(/(x+y)*z/)") == as_array(((x + y) * z, ))
numpy/f2py/tests/test_symbolic.py:332:        assert fromstring("123") == as_number(123)
numpy/f2py/tests/test_symbolic.py:333:        assert fromstring("123_2") == as_number(123, 2)
numpy/f2py/tests/test_symbolic.py:334:        assert fromstring("123_myintkind") == as_number(123, "myintkind")
numpy/f2py/tests/test_symbolic.py:336:        assert fromstring("123.0") == as_number(123.0, 4)
numpy/f2py/tests/test_symbolic.py:337:        assert fromstring("123.0_4") == as_number(123.0, 4)
numpy/f2py/tests/test_symbolic.py:338:        assert fromstring("123.0_8") == as_number(123.0, 8)
numpy/f2py/tests/test_symbolic.py:339:        assert fromstring("123.0e0") == as_number(123.0, 4)
numpy/f2py/tests/test_symbolic.py:340:        assert fromstring("123.0d0") == as_number(123.0, 8)
numpy/f2py/tests/test_symbolic.py:341:        assert fromstring("123d0") == as_number(123.0, 8)
numpy/f2py/tests/test_symbolic.py:342:        assert fromstring("123e-0") == as_number(123.0, 4)
numpy/f2py/tests/test_symbolic.py:343:        assert fromstring("123d+0") == as_number(123.0, 8)
numpy/f2py/tests/test_symbolic.py:344:        assert fromstring("123.0_myrealkind") == as_number(123.0, "myrealkind")
numpy/f2py/tests/test_symbolic.py:345:        assert fromstring("3E4") == as_number(30000.0, 4)
numpy/f2py/tests/test_symbolic.py:347:        assert fromstring("(1, 2)") == as_complex(1, 2)
numpy/f2py/tests/test_symbolic.py:348:        assert fromstring("(1e2, PI)") == as_complex(as_number(100.0),
numpy/f2py/tests/test_symbolic.py:351:        assert fromstring("[1, 2]") == as_array((as_number(1), as_number(2)))
numpy/f2py/tests/test_symbolic.py:353:        assert fromstring("POINT(x, y=1)") == as_apply(as_symbol("POINT"),
numpy/f2py/tests/test_symbolic.py:356:        assert fromstring(
numpy/f2py/tests/test_symbolic.py:364:        assert fromstring("x?y:z") == as_ternary(x, y, z)
numpy/f2py/tests/test_symbolic.py:366:        assert fromstring("*x") == as_deref(x)
numpy/f2py/tests/test_symbolic.py:367:        assert fromstring("**x") == as_deref(as_deref(x))
numpy/f2py/tests/test_symbolic.py:368:        assert fromstring("&x") == as_ref(x)
numpy/f2py/tests/test_symbolic.py:369:        assert fromstring("(*x) * (*y)") == as_deref(x) * as_deref(y)
numpy/f2py/tests/test_symbolic.py:370:        assert fromstring("(*x) * *y") == as_deref(x) * as_deref(y)
numpy/f2py/tests/test_symbolic.py:371:        assert fromstring("*x * *y") == as_deref(x) * as_deref(y)
numpy/f2py/tests/test_symbolic.py:372:        assert fromstring("*x**y") == as_deref(x) * as_deref(y)
numpy/f2py/tests/test_symbolic.py:374:        assert fromstring("x == y") == as_eq(x, y)
numpy/f2py/tests/test_symbolic.py:375:        assert fromstring("x != y") == as_ne(x, y)
numpy/f2py/tests/test_symbolic.py:376:        assert fromstring("x < y") == as_lt(x, y)
numpy/f2py/tests/test_symbolic.py:377:        assert fromstring("x > y") == as_gt(x, y)
numpy/f2py/tests/test_symbolic.py:378:        assert fromstring("x <= y") == as_le(x, y)
numpy/f2py/tests/test_symbolic.py:379:        assert fromstring("x >= y") == as_ge(x, y)
numpy/f2py/tests/test_symbolic.py:381:        assert fromstring("x .eq. y", language=Language.Fortran) == as_eq(x, y)
numpy/f2py/tests/test_symbolic.py:382:        assert fromstring("x .ne. y", language=Language.Fortran) == as_ne(x, y)
numpy/f2py/tests/test_symbolic.py:383:        assert fromstring("x .lt. y", language=Language.Fortran) == as_lt(x, y)
numpy/f2py/tests/test_symbolic.py:384:        assert fromstring("x .gt. y", language=Language.Fortran) == as_gt(x, y)
numpy/f2py/tests/test_symbolic.py:385:        assert fromstring("x .le. y", language=Language.Fortran) == as_le(x, y)
numpy/f2py/tests/test_symbolic.py:386:        assert fromstring("x .ge. y", language=Language.Fortran) == as_ge(x, y)
numpy/f2py/tests/test_symbolic.py:399:        assert x.traverse(replace_visit) == z
numpy/f2py/tests/test_symbolic.py:400:        assert y.traverse(replace_visit) == y
numpy/f2py/tests/test_symbolic.py:401:        assert z.traverse(replace_visit) == z
numpy/f2py/tests/test_symbolic.py:402:        assert (f(y)).traverse(replace_visit) == f(y)
numpy/f2py/tests/test_symbolic.py:403:        assert (f(x)).traverse(replace_visit) == f(z)
numpy/f2py/tests/test_symbolic.py:404:        assert (f[y]).traverse(replace_visit) == f[y]
numpy/f2py/tests/test_symbolic.py:405:        assert (f[z]).traverse(replace_visit) == f[z]
numpy/f2py/tests/test_symbolic.py:406:        assert (x + y + z).traverse(replace_visit) == (2 * z + y)
numpy/f2py/tests/test_symbolic.py:407:        assert (x +
numpy/f2py/tests/test_symbolic.py:410:        assert as_eq(x, y).traverse(replace_visit) == as_eq(z, y)
numpy/f2py/tests/test_symbolic.py:426:        assert function_symbols == {f}
numpy/f2py/tests/test_symbolic.py:427:        assert symbols == {x, y, z}
numpy/f2py/tests/test_symbolic.py:436:        assert symbols == {x, y, z, f}
numpy/f2py/tests/test_symbolic.py:448:        assert symbols == {x}
numpy/f2py/tests/test_symbolic.py:455:        assert x.linear_solve(x) == (as_number(1), as_number(0))
numpy/f2py/tests/test_symbolic.py:456:        assert (x + 1).linear_solve(x) == (as_number(1), as_number(1))
numpy/f2py/tests/test_symbolic.py:457:        assert (2 * x).linear_solve(x) == (as_number(2), as_number(0))
numpy/f2py/tests/test_symbolic.py:458:        assert (2 * x + 3).linear_solve(x) == (as_number(2), as_number(3))
numpy/f2py/tests/test_symbolic.py:459:        assert as_number(3).linear_solve(x) == (as_number(0), as_number(3))
numpy/f2py/tests/test_symbolic.py:460:        assert y.linear_solve(x) == (as_number(0), y)
numpy/f2py/tests/test_symbolic.py:461:        assert (y * z).linear_solve(x) == (as_number(0), y * z)
numpy/f2py/tests/test_symbolic.py:463:        assert (x + y).linear_solve(x) == (as_number(1), y)
numpy/f2py/tests/test_symbolic.py:464:        assert (z * x + y).linear_solve(x) == (z, y)
numpy/f2py/tests/test_symbolic.py:465:        assert ((z + y) * x + y).linear_solve(x) == (z + y, y)
numpy/f2py/tests/test_symbolic.py:466:        assert (z * y * x + y).linear_solve(x) == (z * y, y)
numpy/f2py/tests/test_symbolic.py:475:        assert as_numer_denom(x) == (x, as_number(1))
numpy/f2py/tests/test_symbolic.py:476:        assert as_numer_denom(x / n) == (x, n)
numpy/f2py/tests/test_symbolic.py:477:        assert as_numer_denom(n / x) == (n, x)
numpy/f2py/tests/test_symbolic.py:478:        assert as_numer_denom(x / y) == (x, y)
numpy/f2py/tests/test_symbolic.py:479:        assert as_numer_denom(x * y) == (x * y, as_number(1))
numpy/f2py/tests/test_symbolic.py:480:        assert as_numer_denom(n + x / y) == (x + n * y, y)
numpy/f2py/tests/test_symbolic.py:481:        assert as_numer_denom(n + x / (y - x / n)) == (y * n**2, y * n - x)
numpy/f2py/tests/test_symbolic.py:488:        assert x.polynomial_atoms() == {x}
numpy/f2py/tests/test_symbolic.py:489:        assert n.polynomial_atoms() == set()
numpy/f2py/tests/test_symbolic.py:490:        assert (y[x]).polynomial_atoms() == {y[x]}
numpy/f2py/tests/test_symbolic.py:491:        assert (y(x)).polynomial_atoms() == {y(x)}
numpy/f2py/tests/test_symbolic.py:492:        assert (y(x) + x).polynomial_atoms() == {y(x), x}
numpy/f2py/tests/test_symbolic.py:493:        assert (y(x) * x[y]).polynomial_atoms() == {y(x), x[y]}
numpy/f2py/tests/test_symbolic.py:494:        assert (y(x)**x).polynomial_atoms() == {y(x)}
numpy/f2py/tests/test_size.py:14:        assert r == [0]
numpy/f2py/tests/test_size.py:17:        assert r == [3]
numpy/f2py/tests/test_size.py:20:        assert np.allclose(r, [3, 7])
numpy/f2py/tests/test_size.py:23:        assert np.allclose(r, [3, 7, 11])
numpy/f2py/tests/test_size.py:28:        assert np.allclose(r.T, np.array([[]]))
numpy/f2py/tests/test_size.py:31:        assert np.allclose(r, [[1.], [2.]])
numpy/f2py/tests/test_size.py:34:        assert np.allclose(r, [[1, 4], [2, 5], [3, 6]])
numpy/f2py/tests/test_size.py:39:        assert np.allclose(r, [])
numpy/f2py/tests/test_size.py:42:        assert np.allclose(r, [1, 2])
numpy/f2py/tests/test_size.py:45:        assert np.allclose(r, [1, 2, 3, 4, 5, 6])
numpy/f2py/tests/test_callback.py:50:        assert self.module.t.__doc__ == expected
numpy/f2py/tests/test_callback.py:55:        assert r == 4
numpy/f2py/tests/test_callback.py:57:        assert r == 5
numpy/f2py/tests/test_callback.py:59:        assert r == 6
numpy/f2py/tests/test_callback.py:61:        assert r == 12
numpy/f2py/tests/test_callback.py:63:        assert r == 180
numpy/f2py/tests/test_callback.py:65:        assert r == 180
numpy/f2py/tests/test_callback.py:68:        assert r == 17
numpy/f2py/tests/test_callback.py:70:        assert r == 11
numpy/f2py/tests/test_callback.py:72:        assert r == 11
numpy/f2py/tests/test_callback.py:83:        assert r == 7
numpy/f2py/tests/test_callback.py:85:        assert r == 9
numpy/f2py/tests/test_callback.py:98:        assert r == 0
numpy/f2py/tests/test_callback.py:117:        assert res == 0
numpy/f2py/tests/test_callback.py:131:            assert r == 123
numpy/f2py/tests/test_callback.py:139:                    assert r == 42
numpy/f2py/tests/test_callback.py:163:            assert str(msg).startswith("Callback global_f not defined")
numpy/f2py/tests/test_callback.py:168:            assert str(msg).startswith("cb: Callback global_f not defined")
numpy/f2py/tests/test_callback.py:172:        assert r == 3
numpy/f2py/tests/test_callback.py:176:        assert r == 4
numpy/f2py/tests/test_callback.py:182:            assert str(msg).startswith("Callback global_f not defined")
numpy/f2py/tests/test_callback.py:186:        assert r == 5
numpy/f2py/tests/test_callback.py:190:        assert r == 3
numpy/f2py/tests/test_callback.py:211:        assert r == 123 + 1 + 2 + 3
numpy/f2py/tests/test_callback.py:228:        assert r == 123 + 1
numpy/f2py/tests/test_string.py:16:        assert inp == pytest.approx(strings)
numpy/f2py/tests/test_string.py:19:        assert out == pytest.approx(expected)
numpy/f2py/tests/test_string.py:33:        assert a.tobytes() == b"123\0\0"
numpy/f2py/tests/test_string.py:34:        assert b.tobytes() == b"B23\0\0"
numpy/f2py/tests/test_string.py:35:        assert c.tobytes() == b"123"
numpy/f2py/tests/test_string.py:36:        assert d.tobytes() == b"D23"
numpy/f2py/tests/test_string.py:54:        assert isinstance(s, bytes)
numpy/f2py/tests/test_string.py:90:            assert r == expected, s
numpy/f2py/tests/test_string.py:97:            assert r == expected
numpy/f2py/tests/test_string.py:100:            assert rest == self._sint(s, start=4)
numpy/f2py/tests/test_module_doc.py:21:        assert self.module.mod.__doc__ == textwrap.dedent("""\
numpy/f2py/tests/test_quoted_character.py:16:        assert self.module.foo() == (b"'", b'"', b";", b"!", b"(", b")")
numpy/f2py/tests/test_parameter.py:28:        assert np.allclose(x, [0 + 1 + 2 * 3, 1, 2])
numpy/f2py/tests/test_parameter.py:39:        assert np.allclose(x, [0 + 1 + 2 * 3, 1, 2])
numpy/f2py/tests/test_parameter.py:50:        assert np.allclose(x, [0 + 1 + 2 * 6, 1, 2])
numpy/f2py/tests/test_parameter.py:57:        assert np.allclose(x, [0 + 1 + 2 + 3 * 4, 1, 2, 3])
numpy/f2py/tests/test_parameter.py:68:        assert np.allclose(x, [0 + 1 + 2 * 3, 1, 2])
numpy/f2py/tests/test_parameter.py:79:        assert np.allclose(x, [0 + 1 + 2 * 3, 1, 2])
numpy/f2py/tests/test_parameter.py:90:        assert np.allclose(x, [0 + 1 * 3 * 3 + 2 * 3 * 3, 1 * 3, 2 * 3])
numpy/f2py/tests/test_parameter.py:101:        assert np.allclose(x, [0 + 1 * 3 * 3 + 2 * 3 * 3, 1 * 3, 2 * 3])
numpy/f2py/tests/test_parameter.py:112:        assert np.allclose(x, [0 + 1 * 3 * 3 + 2 * 3 * 3, 1 * 3, 2 * 3])
numpy/f2py/tests/test_abstract_interface.py:13:        assert self.module.ops_module.foo(3, 5) == (8, 13)
numpy/f2py/tests/test_abstract_interface.py:20:        assert len(mod) == 1
numpy/f2py/tests/test_abstract_interface.py:21:        assert len(mod[0]["body"]) == 1
numpy/f2py/tests/test_abstract_interface.py:22:        assert mod[0]["body"][0]["block"] == "abstract interface"
numpy/f2py/tests/test_semicolon_split.py:33:        assert self.module.foo() == 42
numpy/f2py/tests/test_semicolon_split.py:65:        assert self.module.foo() == 42
numpy/f2py/tests/test_compile_function.py:62:            assert ret_val == 0
numpy/f2py/tests/test_compile_function.py:73:        assert calc_result == 15
numpy/f2py/tests/test_compile_function.py:83:    assert ret_val == 1
numpy/f2py/tests/test_compile_function.py:99:        assert ret_val == 127
numpy/f2py/tests/test_compile_function.py:117:        assert ret_val == 0
numpy/f2py/tests/test_block_docstring.py:17:        assert self.module.block.__doc__ == expected
numpy/f2py/tests/test_return_integer.py:9:        assert t(123) == 123
numpy/f2py/tests/test_return_integer.py:10:        assert t(123.6) == 123
numpy/f2py/tests/test_return_integer.py:11:        assert t("123") == 123
numpy/f2py/tests/test_return_integer.py:12:        assert t(-123) == -123
numpy/f2py/tests/test_return_integer.py:13:        assert t([123]) == 123
numpy/f2py/tests/test_return_integer.py:14:        assert t((123, )) == 123
numpy/f2py/tests/test_return_integer.py:15:        assert t(array(123)) == 123
numpy/f2py/tests/test_return_integer.py:16:        assert t(array([123])) == 123
numpy/f2py/tests/test_return_integer.py:17:        assert t(array([[123]])) == 123
numpy/f2py/tests/test_return_integer.py:18:        assert t(array([123], "b")) == 123
numpy/f2py/tests/test_return_integer.py:19:        assert t(array([123], "h")) == 123
numpy/f2py/tests/test_return_integer.py:20:        assert t(array([123], "i")) == 123
numpy/f2py/tests/test_return_integer.py:21:        assert t(array([123], "l")) == 123
numpy/f2py/tests/test_return_integer.py:22:        assert t(array([123], "B")) == 123
numpy/f2py/tests/test_return_integer.py:23:        assert t(array([123], "f")) == 123
numpy/f2py/tests/test_return_integer.py:24:        assert t(array([123], "d")) == 123
numpy/f2py/tests/test_return_character.py:13:            assert t(23) == b"2"
numpy/f2py/tests/test_return_character.py:15:            assert r == b"a"
numpy/f2py/tests/test_return_character.py:17:            assert r == b"a"
numpy/f2py/tests/test_return_character.py:19:            assert r == b"M"
numpy/f2py/tests/test_return_character.py:21:            assert t(23) == b"23"
numpy/f2py/tests/test_return_character.py:22:            assert t("123456789abcdef") == b"123456789a"
numpy/f2py/tests/test_return_character.py:24:            assert t(23) == b"23"
numpy/f2py/tests/test_return_character.py:25:            assert t("ab") == b"ab"
numpy/f2py/tests/test_return_character.py:26:            assert t("123456789abcdef") == b"12345"
numpy/f2py/tests/test_return_complex.py:13:        assert abs(t(234j) - 234.0j) <= err
numpy/f2py/tests/test_return_complex.py:14:        assert abs(t(234.6) - 234.6) <= err
numpy/f2py/tests/test_return_complex.py:15:        assert abs(t(234) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:16:        assert abs(t(234.6 + 3j) - (234.6 + 3j)) <= err
numpy/f2py/tests/test_return_complex.py:17:        # assert abs(t('234')-234.)<=err
numpy/f2py/tests/test_return_complex.py:18:        # assert abs(t('234.6')-234.6)<=err
numpy/f2py/tests/test_return_complex.py:19:        assert abs(t(-234) + 234.0) <= err
numpy/f2py/tests/test_return_complex.py:20:        assert abs(t([234]) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:21:        assert abs(t((234, )) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:22:        assert abs(t(array(234)) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:23:        assert abs(t(array(23 + 4j, "F")) - (23 + 4j)) <= err
numpy/f2py/tests/test_return_complex.py:24:        assert abs(t(array([234])) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:25:        assert abs(t(array([[234]])) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:26:        assert abs(t(array([234], "b")) + 22.0) <= err
numpy/f2py/tests/test_return_complex.py:27:        assert abs(t(array([234], "h")) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:28:        assert abs(t(array([234], "i")) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:29:        assert abs(t(array([234], "l")) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:30:        assert abs(t(array([234], "q")) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:31:        assert abs(t(array([234], "f")) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:32:        assert abs(t(array([234], "d")) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:33:        assert abs(t(array([234 + 3j], "F")) - (234 + 3j)) <= err
numpy/f2py/tests/test_return_complex.py:34:        assert abs(t(array([234], "D")) - 234.0) <= err
numpy/f2py/tests/test_return_complex.py:47:            assert repr(r) in ["(inf+0j)", "(Infinity+0j)"]
numpy/f2py/tests/test_crackfortran.py:18:        assert np.allclose(k, w + 1)
numpy/f2py/tests/test_crackfortran.py:20:        assert np.allclose(k, w + 1)
numpy/f2py/tests/test_crackfortran.py:21:        assert self.module.t0(23) == b"2"
numpy/f2py/tests/test_crackfortran.py:28:        assert len(mod) == 1
numpy/f2py/tests/test_crackfortran.py:40:        assert len(mod) == 1
numpy/f2py/tests/test_crackfortran.py:50:        assert len(mod) == 1
numpy/f2py/tests/test_crackfortran.py:52:        assert set(tt['a']['attrspec']) == {'private', 'bind(c)'}
numpy/f2py/tests/test_crackfortran.py:53:        assert set(tt['b_']['attrspec']) == {'public', 'bind(c)'}
numpy/f2py/tests/test_crackfortran.py:54:        assert set(tt['c']['attrspec']) == {'public'}
numpy/f2py/tests/test_crackfortran.py:61:        assert len(mod) == 1
numpy/f2py/tests/test_crackfortran.py:63:        assert "body" in mod and len(mod["body"]) == 9
numpy/f2py/tests/test_crackfortran.py:64:        assert mod["body"][1]["name"] == "operator(.item.)"
numpy/f2py/tests/test_crackfortran.py:66:        assert mod["body"][1]["implementedby"] == \
numpy/f2py/tests/test_crackfortran.py:68:        assert mod["body"][2]["name"] == "operator(==)"
numpy/f2py/tests/test_crackfortran.py:70:        assert mod["body"][2]["implementedby"] == ["items_are_equal"]
numpy/f2py/tests/test_crackfortran.py:71:        assert mod["body"][3]["name"] == "assignment(=)"
numpy/f2py/tests/test_crackfortran.py:73:        assert mod["body"][3]["implementedby"] == \
numpy/f2py/tests/test_crackfortran.py:86:        assert r == 123
numpy/f2py/tests/test_crackfortran.py:93:        assert r == 123
numpy/f2py/tests/test_crackfortran.py:102:        assert r == (1, 2)
numpy/f2py/tests/test_crackfortran.py:111:            assert markinnerspaces(i) == i
numpy/f2py/tests/test_crackfortran.py:114:        assert markinnerspaces("a 'b c' \\' \\'") == "a 'b@_@c' \\' \\'"
numpy/f2py/tests/test_crackfortran.py:115:        assert markinnerspaces(r'a "b c" \" \"') == r'a "b@_@c" \" \"'
numpy/f2py/tests/test_crackfortran.py:118:        assert markinnerspaces("a 'b c\" \" d' e") == "a 'b@_@c\"@_@\"@_@d' e"
numpy/f2py/tests/test_crackfortran.py:119:        assert markinnerspaces("a \"b c' ' d\" e") == "a \"b@_@c'@_@'@_@d\" e"
numpy/f2py/tests/test_crackfortran.py:122:        assert markinnerspaces("a 'b c' 'd e'") == "a 'b@_@c' 'd@_@e'"
numpy/f2py/tests/test_crackfortran.py:123:        assert markinnerspaces(r'a "b c" "d e"') == r'a "b@_@c" "d@_@e"'
numpy/f2py/tests/test_crackfortran.py:202:            assert a.size == sz
numpy/f2py/tests/test_crackfortran.py:225:            assert sz == sz1, (n, n1, sz, sz1)
numpy/f2py/tests/test_crackfortran.py:232:        assert len(mod) == 1
numpy/f2py/tests/test_crackfortran.py:233:        assert mod[0]["vars"]["abar"]["="] == "bar('abar')"
numpy/f2py/tests/test_f2py2e.py:95:        assert Path(f'{opath}').exists()
numpy/f2py/tests/test_f2py2e.py:142:            assert (
numpy/f2py/tests/test_f2py2e.py:165:            assert (
numpy/f2py/tests/test_f2py2e.py:195:            assert (
numpy/f2py/tests/test_f2py2e.py:214:    assert Path.exists(foutl.cmodf)
numpy/f2py/tests/test_f2py2e.py:216:    assert Path.exists(foutl.wrap77)
numpy/f2py/tests/test_f2py2e.py:233:        assert capslo.search(out) is not None
numpy/f2py/tests/test_f2py2e.py:234:        assert capshi.search(out) is None
numpy/f2py/tests/test_f2py2e.py:241:        assert capslo.search(out) is None
numpy/f2py/tests/test_f2py2e.py:242:        assert capshi.search(out) is not None
numpy/f2py/tests/test_f2py2e.py:266:        assert capslo.search(out) is not None
numpy/f2py/tests/test_f2py2e.py:267:        assert capshi.search(out) is None
numpy/f2py/tests/test_f2py2e.py:280:        assert capslo.search(out) is None
numpy/f2py/tests/test_f2py2e.py:281:        assert capshi.search(out) is not None
numpy/f2py/tests/test_f2py2e.py:331:        assert "Documentation is saved to file" in out
numpy/f2py/tests/test_f2py2e.py:333:            assert "\\documentclass" in otex.read()
numpy/f2py/tests/test_f2py2e.py:349:        assert "Documentation is saved to file" not in out
numpy/f2py/tests/test_f2py2e.py:369:        assert "Documentation is saved to file" in out
numpy/f2py/tests/test_f2py2e.py:371:            assert "\\documentclass" not in otex.read()
numpy/f2py/tests/test_f2py2e.py:387:        assert "ReST Documentation is saved to file" in out
numpy/f2py/tests/test_f2py2e.py:389:            assert r".. -*- rest -*-" in orst.read()
numpy/f2py/tests/test_f2py2e.py:405:        assert "ReST Documentation is saved to file" not in out
numpy/f2py/tests/test_f2py2e.py:421:            assert r"#define DEBUGCFUNCS" in ocmod.read()
numpy/f2py/tests/test_f2py2e.py:450:        assert rout.stdout == eout
numpy/f2py/tests/test_f2py2e.py:451:        assert rout.stderr == eerr
numpy/f2py/tests/test_f2py2e.py:514:            assert "#include <stdbool.h>" in ocmr
numpy/f2py/tests/test_f2py2e.py:515:            assert "#include <stdio.h>" in ocmr
numpy/f2py/tests/test_f2py2e.py:556:        assert len(out) == 0
numpy/f2py/tests/test_f2py2e.py:584:        assert np.__version__ == out.strip()
numpy/f2py/tests/test_f2py2e.py:600:        assert rout.stdout == eout
numpy/f2py/tests/test_regression.py:22:        assert np.allclose(x, [3, 1, 2])
numpy/f2py/tests/test_regression.py:41:        assert np.allclose(rval, expval)
numpy/f2py/tests/test_regression.py:53:        assert hasattr(self.module, "__f2py_numpy_version__")
numpy/f2py/tests/test_regression.py:56:        assert isinstance(self.module.__f2py_numpy_version__, str)
numpy/f2py/tests/test_regression.py:59:        assert np.__version__ == self.module.__f2py_numpy_version__
numpy/testing/tests/test_utils.py:93:        assert_raises(AssertionError, self._assert_func, x, y)
numpy/testing/tests/test_utils.py:100:        assert_raises(AssertionError, self._assert_func, x, y)
numpy/testing/tests/test_utils.py:161:            assert_equal(len(l), 1)
numpy/testing/tests/test_utils.py:188:        assert_(type(a == a), bool)
numpy/testing/tests/test_utils.py:189:        assert_(a == a)
numpy/testing/tests/test_utils.py:190:        assert_(a != b)
numpy/testing/tests/test_utils.py:230:        assert_equal(a, b)
numpy/testing/tests/test_utils.py:239:        assert_equal(a, b)
numpy/testing/tests/test_utils.py:250:        assert_equal(a, b)
numpy/testing/tests/test_utils.py:261:        assert_equal(a, b)
numpy/testing/tests/test_utils.py:525:        assert_equal(msgs[3], 'Mismatched elements: 3 / 3 (100%)')
numpy/testing/tests/test_utils.py:526:        assert_equal(msgs[4], 'Max absolute difference: 1.e-05')
numpy/testing/tests/test_utils.py:527:        assert_equal(msgs[5], 'Max relative difference: 3.33328889e-06')
numpy/testing/tests/test_utils.py:541:        assert_equal(msgs[3], 'Mismatched elements: 1 / 3 (33.3%)')
numpy/testing/tests/test_utils.py:542:        assert_equal(msgs[4], 'Max absolute difference: 1.e-05')
numpy/testing/tests/test_utils.py:543:        assert_equal(msgs[5], 'Max relative difference: 3.33328889e-06')
numpy/testing/tests/test_utils.py:544:        assert_equal(msgs[6], ' x: array([1.     , 2.     , 3.00003])')
numpy/testing/tests/test_utils.py:545:        assert_equal(msgs[7], ' y: array([1.     , 2.     , 3.00004])')
numpy/testing/tests/test_utils.py:553:        assert_equal(msgs[3], 'Mismatched elements: 1 / 2 (50%)')
numpy/testing/tests/test_utils.py:554:        assert_equal(msgs[4], 'Max absolute difference: 1.')
numpy/testing/tests/test_utils.py:555:        assert_equal(msgs[5], 'Max relative difference: 1.')
numpy/testing/tests/test_utils.py:556:        assert_equal(msgs[6], ' x: array([inf,  0.])')
numpy/testing/tests/test_utils.py:557:        assert_equal(msgs[7], ' y: array([inf,  1.])')
numpy/testing/tests/test_utils.py:565:        assert_equal(msgs[3], 'Mismatched elements: 2 / 2 (100%)')
numpy/testing/tests/test_utils.py:566:        assert_equal(msgs[4], 'Max absolute difference: 2')
numpy/testing/tests/test_utils.py:567:        assert_equal(msgs[5], 'Max relative difference: inf')
numpy/testing/tests/test_utils.py:576:        assert_equal(msgs[3], 'Mismatched elements: 20 / 20 (100%)')
numpy/testing/tests/test_utils.py:577:        assert_equal(msgs[4], 'Max absolute difference: 1.')
numpy/testing/tests/test_utils.py:578:        assert_equal(msgs[5], 'Max relative difference: 1.')
numpy/testing/tests/test_utils.py:585:        assert_equal(msgs[3], 'Mismatched elements: 20 / 20 (100%)')
numpy/testing/tests/test_utils.py:586:        assert_equal(msgs[4], 'Max absolute difference: 1.')
numpy/testing/tests/test_utils.py:587:        assert_equal(msgs[5], 'Max relative difference: 0.5')
numpy/testing/tests/test_utils.py:637:        assert_raises(AssertionError, lambda: self._assert_func(anan, aone))
numpy/testing/tests/test_utils.py:638:        assert_raises(AssertionError, lambda: self._assert_func(anan, ainf))
numpy/testing/tests/test_utils.py:639:        assert_raises(AssertionError, lambda: self._assert_func(ainf, anan))
numpy/testing/tests/test_utils.py:646:        assert_raises(AssertionError, lambda: self._assert_func(anan, aone))
numpy/testing/tests/test_utils.py:647:        assert_raises(AssertionError, lambda: self._assert_func(anan, ainf))
numpy/testing/tests/test_utils.py:648:        assert_raises(AssertionError, lambda: self._assert_func(ainf, anan))
numpy/testing/tests/test_utils.py:661:        assert_raises(AssertionError, lambda: self._assert_func(y, x))
numpy/testing/tests/test_utils.py:665:        assert_raises(AssertionError, lambda: self._assert_func(x, y))
numpy/testing/tests/test_utils.py:666:        assert_raises(AssertionError, lambda: self._assert_func(y, x))
numpy/testing/tests/test_utils.py:673:        assert_raises(AssertionError, lambda: self._assert_func(y, x))
numpy/testing/tests/test_utils.py:677:        assert_raises(AssertionError, lambda: self._assert_func(x, y))
numpy/testing/tests/test_utils.py:678:        assert_raises(AssertionError, lambda: self._assert_func(y, x))
numpy/testing/tests/test_utils.py:685:        assert_raises(AssertionError, lambda: self._assert_func(y, x))
numpy/testing/tests/test_utils.py:689:        assert_raises(AssertionError, lambda: self._assert_func(x, y))
numpy/testing/tests/test_utils.py:690:        assert_raises(AssertionError, lambda: self._assert_func(y, x))
numpy/testing/tests/test_utils.py:697:        assert_raises(AssertionError, lambda: self._assert_func(y, x))
numpy/testing/tests/test_utils.py:702:        assert_raises(AssertionError, lambda: self._assert_func(y, x))
numpy/testing/tests/test_utils.py:706:        assert_raises(AssertionError, lambda: self._assert_func(x, y))
numpy/testing/tests/test_utils.py:713:        assert_raises(AssertionError, lambda: self._assert_func(aone, anan))
numpy/testing/tests/test_utils.py:714:        assert_raises(AssertionError, lambda: self._assert_func(anan, aone))
numpy/testing/tests/test_utils.py:715:        assert_raises(AssertionError, lambda: self._assert_func(anan, ainf))
numpy/testing/tests/test_utils.py:716:        assert_raises(AssertionError, lambda: self._assert_func(ainf, anan))
numpy/testing/tests/test_utils.py:722:        assert_raises(AssertionError, lambda: self._assert_func(x, anan))
numpy/testing/tests/test_utils.py:723:        assert_raises(AssertionError, lambda: self._assert_func(anan, x))
numpy/testing/tests/test_utils.py:727:        assert_raises(AssertionError, lambda: self._assert_func(x, anan))
numpy/testing/tests/test_utils.py:728:        assert_raises(AssertionError, lambda: self._assert_func(anan, x))
numpy/testing/tests/test_utils.py:733:        assert_raises(AssertionError, lambda: self._assert_func(x, y))
numpy/testing/tests/test_utils.py:742:        assert_raises(AssertionError, lambda: self._assert_func(ainf, aone))
numpy/testing/tests/test_utils.py:743:        assert_raises(AssertionError, lambda: self._assert_func(aone, -ainf))
numpy/testing/tests/test_utils.py:744:        assert_raises(AssertionError, lambda: self._assert_func(ainf, ainf))
numpy/testing/tests/test_utils.py:745:        assert_raises(AssertionError, lambda: self._assert_func(ainf, -ainf))
numpy/testing/tests/test_utils.py:746:        assert_raises(AssertionError, lambda: self._assert_func(-ainf, -ainf))
numpy/testing/tests/test_utils.py:752:        assert_raises(AssertionError, lambda: self._assert_func(x, ainf))
numpy/testing/tests/test_utils.py:753:        assert_raises(AssertionError, lambda: self._assert_func(ainf, x))
numpy/testing/tests/test_utils.py:754:        assert_raises(AssertionError, lambda: self._assert_func(x, -ainf))
numpy/testing/tests/test_utils.py:755:        assert_raises(AssertionError, lambda: self._assert_func(-x, -ainf))
numpy/testing/tests/test_utils.py:756:        assert_raises(AssertionError, lambda: self._assert_func(-ainf, -x))
numpy/testing/tests/test_utils.py:803:        assert_equal(assert_warns(UserWarning, f), 3)
numpy/testing/tests/test_utils.py:806:        assert_raises(AssertionError, assert_no_warnings, f)
numpy/testing/tests/test_utils.py:807:        assert_equal(assert_no_warnings(lambda x: x, 1), 1)
numpy/testing/tests/test_utils.py:824:        assert_raises(AssertionError, no_warnings)
numpy/testing/tests/test_utils.py:837:                assert_warns(UserWarning, f)
numpy/testing/tests/test_utils.py:852:        assert_allclose(x, y, atol=1)
numpy/testing/tests/test_utils.py:853:        assert_raises(AssertionError, assert_allclose, x, y)
numpy/testing/tests/test_utils.py:858:        assert_allclose(a, b, atol=1)
numpy/testing/tests/test_utils.py:859:        assert_raises(AssertionError, assert_allclose, a, b)
numpy/testing/tests/test_utils.py:862:        assert_allclose(a, b)
numpy/testing/tests/test_utils.py:863:        assert_raises(AssertionError, assert_allclose, a, b, rtol=1e-9)
numpy/testing/tests/test_utils.py:865:        assert_allclose(6, 10, rtol=0.5)
numpy/testing/tests/test_utils.py:866:        assert_raises(AssertionError, assert_allclose, 10, 6, rtol=0.5)
numpy/testing/tests/test_utils.py:871:        assert_allclose(a, a)
numpy/testing/tests/test_utils.py:878:            assert_allclose(a, b)
numpy/testing/tests/test_utils.py:880:        assert_('Mismatched elements: 1 / 4 (25%)\n'
numpy/testing/tests/test_utils.py:888:        assert_allclose(a, b, equal_nan=True)
numpy/testing/tests/test_utils.py:893:        assert_raises(AssertionError, assert_allclose, a, b, equal_nan=False)
numpy/testing/tests/test_utils.py:901:        assert_array_equal(a, b)
numpy/testing/tests/test_utils.py:902:        assert_array_almost_equal(a, b)
numpy/testing/tests/test_utils.py:903:        assert_array_less(a, b)
numpy/testing/tests/test_utils.py:904:        assert_allclose(a, b)
numpy/testing/tests/test_utils.py:911:            assert_allclose(a, b)
numpy/testing/tests/test_utils.py:913:        assert_('Max relative difference: 0.5' in msg)
numpy/testing/tests/test_utils.py:918:        assert_allclose(a, a)
numpy/testing/tests/test_utils.py:934:        assert_array_almost_equal_nulp(x, y, nulp)
numpy/testing/tests/test_utils.py:939:        assert_array_almost_equal_nulp(x, y, nulp)
numpy/testing/tests/test_utils.py:966:        assert_array_max_ulp(nan1_f64, nan2_f64, 0)
numpy/testing/tests/test_utils.py:976:        assert_array_almost_equal_nulp(x, y, nulp)
numpy/testing/tests/test_utils.py:980:        assert_array_almost_equal_nulp(x, y, nulp)
numpy/testing/tests/test_utils.py:1007:        assert_array_max_ulp(nan1_f32, nan2_f32, 0)
numpy/testing/tests/test_utils.py:1017:        assert_array_almost_equal_nulp(x, y, nulp)
numpy/testing/tests/test_utils.py:1021:        assert_array_almost_equal_nulp(x, y, nulp)
numpy/testing/tests/test_utils.py:1048:        assert_array_max_ulp(nan1_f16, nan2_f16, 0)
numpy/testing/tests/test_utils.py:1059:        assert_array_almost_equal_nulp(xi, x + y*1j, nulp)
numpy/testing/tests/test_utils.py:1060:        assert_array_almost_equal_nulp(xi, y + x*1j, nulp)
numpy/testing/tests/test_utils.py:1064:        assert_array_almost_equal_nulp(xi, y + y*1j, nulp)
numpy/testing/tests/test_utils.py:1068:        assert_array_almost_equal_nulp(xi, x + y*1j, nulp)
numpy/testing/tests/test_utils.py:1069:        assert_array_almost_equal_nulp(xi, y + x*1j, nulp)
numpy/testing/tests/test_utils.py:1071:        assert_array_almost_equal_nulp(xi, y + y*1j, nulp)
numpy/testing/tests/test_utils.py:1111:        assert_array_almost_equal_nulp(xi, x + y*1j, nulp)
numpy/testing/tests/test_utils.py:1112:        assert_array_almost_equal_nulp(xi, y + x*1j, nulp)
numpy/testing/tests/test_utils.py:1114:        assert_array_almost_equal_nulp(xi, y + y*1j, nulp)
numpy/testing/tests/test_utils.py:1118:        assert_array_almost_equal_nulp(xi, x + y*1j, nulp)
numpy/testing/tests/test_utils.py:1119:        assert_array_almost_equal_nulp(xi, y + x*1j, nulp)
numpy/testing/tests/test_utils.py:1121:        assert_array_almost_equal_nulp(xi, y + y*1j, nulp)
numpy/testing/tests/test_utils.py:1155:        assert_array_max_ulp(x, x, maxulp=0)
numpy/testing/tests/test_utils.py:1162:        assert_array_max_ulp(x, x+eps, maxulp=20)
numpy/testing/tests/test_utils.py:1169:        assert_array_max_ulp(x, x+eps, maxulp=200)
numpy/testing/tests/test_utils.py:1175:            assert_array_max_ulp(inf, big, maxulp=200)
numpy/testing/tests/test_utils.py:1209:        assert_string_equal("hello", "hello")
numpy/testing/tests/test_utils.py:1210:        assert_string_equal("hello\nmultiline", "hello\nmultiline")
numpy/testing/tests/test_utils.py:1213:            assert_string_equal("foo\nbar", "hello\nbar")
numpy/testing/tests/test_utils.py:1215:        assert_equal(msg, "Differences in strings:\n- foo\n+ hello")
numpy/testing/tests/test_utils.py:1221:        assert_string_equal("a+*b", "a+*b")
numpy/testing/tests/test_utils.py:1259:    assert_equal(num_warns, n_in_context)
numpy/testing/tests/test_utils.py:1262:    # assert_warn_len_equal is called under
numpy/testing/tests/test_utils.py:1266:    # check that no assertion is uncaught
numpy/testing/tests/test_utils.py:1274:    assert_warn_len_equal(mod=mod_inst,
numpy/testing/tests/test_utils.py:1285:    assert_warn_len_equal(mod=mod_inst,
numpy/testing/tests/test_utils.py:1304:    assert_equal(getattr(my_mod, '__warningregistry__', {}), {})
numpy/testing/tests/test_utils.py:1308:    assert_equal(my_mod.__warningregistry__, {})
numpy/testing/tests/test_utils.py:1314:    assert_warn_len_equal(my_mod, 1, py37=0)
numpy/testing/tests/test_utils.py:1319:    assert_warn_len_equal(my_mod, 1, py37=0)
numpy/testing/tests/test_utils.py:1326:    assert_warn_len_equal(my_mod, 2, py34=1, py37=0)
numpy/testing/tests/test_utils.py:1332:    assert_equal(getattr(my_mod, '__warningregistry__', {}), {})
numpy/testing/tests/test_utils.py:1343:    assert_warn_len_equal(my_mod, 0)
numpy/testing/tests/test_utils.py:1353:    assert_equal(len(sup.log), 1)
numpy/testing/tests/test_utils.py:1354:    assert_equal(sup.log[0].message.args[0], "Some warning")
numpy/testing/tests/test_utils.py:1355:    assert_warn_len_equal(my_mod, 0, py37=0)
numpy/testing/tests/test_utils.py:1361:    assert_warn_len_equal(my_mod, 0)
numpy/testing/tests/test_utils.py:1366:    assert_warn_len_equal(my_mod, 0)
numpy/testing/tests/test_utils.py:1373:    assert_warn_len_equal(my_mod, 1, py37=0)
numpy/testing/tests/test_utils.py:1378:    assert_equal(getattr(my_mod, '__warningregistry__', {}), {})
numpy/testing/tests/test_utils.py:1384:    assert_warn_len_equal(my_mod, 0)
numpy/testing/tests/test_utils.py:1389:    assert_warn_len_equal(my_mod, 0)
numpy/testing/tests/test_utils.py:1394:    assert_warn_len_equal(my_mod, 0)
numpy/testing/tests/test_utils.py:1401:    assert_warn_len_equal(my_mod, 1, py37=0)
numpy/testing/tests/test_utils.py:1416:        assert_equal(len(w), 1)
numpy/testing/tests/test_utils.py:1430:        assert_equal(len(sup.log), 2)
numpy/testing/tests/test_utils.py:1431:        assert_equal(len(log1), 1)
numpy/testing/tests/test_utils.py:1432:        assert_equal(len(log2),1)
numpy/testing/tests/test_utils.py:1433:        assert_equal(log2[0].message.args[0], 'Some other warning 2')
numpy/testing/tests/test_utils.py:1443:        assert_equal(len(sup.log), 2)
numpy/testing/tests/test_utils.py:1444:        assert_equal(len(log1), 1)
numpy/testing/tests/test_utils.py:1445:        assert_equal(len(log2), 1)
numpy/testing/tests/test_utils.py:1446:        assert_equal(log2[0].message.args[0], 'Some other warning 2')
numpy/testing/tests/test_utils.py:1455:            assert_equal(len(sup2.log), 1)
numpy/testing/tests/test_utils.py:1456:        assert_equal(len(sup.log), 1)
numpy/testing/tests/test_utils.py:1474:        assert_equal(len(sup.log), 2)
numpy/testing/tests/test_utils.py:1483:        assert_equal(len(sup.log), 2)
numpy/testing/tests/test_utils.py:1493:        assert_equal(len(sup.log), 2)
numpy/testing/tests/test_utils.py:1503:        assert_equal(len(sup.log), 2)
numpy/testing/tests/test_utils.py:1511:    assert_(not os.path.isdir(tdir))
numpy/testing/tests/test_utils.py:1519:    assert_(raised)
numpy/testing/tests/test_utils.py:1520:    assert_(not os.path.isdir(tdir))
numpy/testing/tests/test_utils.py:1527:    assert_(not os.path.isfile(fpath))
numpy/testing/tests/test_utils.py:1535:    assert_(raised)
numpy/testing/tests/test_utils.py:1536:    assert_(not os.path.isfile(fpath))
numpy/testing/tests/test_utils.py:1550:    assert_equal(my_mod.__warningregistry__, {})
numpy/testing/tests/test_utils.py:1565:        assert_no_gc_cycles(no_cycle)
numpy/testing/tests/test_utils.py:1579:            assert_no_gc_cycles(make_cycle)
numpy/testing/tests/test_utils.py:1612:                    assert_no_gc_cycles(lambda: None)
numpy/lib/tests/test_type_check.py:12:    assert_(np.all(x), x)
numpy/lib/tests/test_type_check.py:23:        assert_(common_type(ai32) == np.float64)
numpy/lib/tests/test_type_check.py:24:        assert_(common_type(af16) == np.float16)
numpy/lib/tests/test_type_check.py:25:        assert_(common_type(af32) == np.float32)
numpy/lib/tests/test_type_check.py:26:        assert_(common_type(af64) == np.float64)
numpy/lib/tests/test_type_check.py:27:        assert_(common_type(acs) == np.csingle)
numpy/lib/tests/test_type_check.py:28:        assert_(common_type(acd) == np.cdouble)
numpy/lib/tests/test_type_check.py:35:            assert_equal(mintypecode(itype), 'd')
numpy/lib/tests/test_type_check.py:36:        assert_equal(mintypecode('f'), 'f')
numpy/lib/tests/test_type_check.py:37:        assert_equal(mintypecode('d'), 'd')
numpy/lib/tests/test_type_check.py:38:        assert_equal(mintypecode('F'), 'F')
numpy/lib/tests/test_type_check.py:39:        assert_equal(mintypecode('D'), 'D')
numpy/lib/tests/test_type_check.py:43:            assert_equal(mintypecode(itype+'f'), 'f')
numpy/lib/tests/test_type_check.py:44:            assert_equal(mintypecode(itype+'d'), 'd')
numpy/lib/tests/test_type_check.py:45:            assert_equal(mintypecode(itype+'F'), 'F')
numpy/lib/tests/test_type_check.py:46:            assert_equal(mintypecode(itype+'D'), 'D')
numpy/lib/tests/test_type_check.py:47:        assert_equal(mintypecode('ff'), 'f')
numpy/lib/tests/test_type_check.py:48:        assert_equal(mintypecode('fd'), 'd')
numpy/lib/tests/test_type_check.py:49:        assert_equal(mintypecode('fF'), 'F')
numpy/lib/tests/test_type_check.py:50:        assert_equal(mintypecode('fD'), 'D')
numpy/lib/tests/test_type_check.py:51:        assert_equal(mintypecode('df'), 'd')
numpy/lib/tests/test_type_check.py:52:        assert_equal(mintypecode('dd'), 'd')
numpy/lib/tests/test_type_check.py:54:        assert_equal(mintypecode('dF'), 'D')
numpy/lib/tests/test_type_check.py:55:        assert_equal(mintypecode('dD'), 'D')
numpy/lib/tests/test_type_check.py:56:        assert_equal(mintypecode('Ff'), 'F')
numpy/lib/tests/test_type_check.py:58:        assert_equal(mintypecode('Fd'), 'D')
numpy/lib/tests/test_type_check.py:59:        assert_equal(mintypecode('FF'), 'F')
numpy/lib/tests/test_type_check.py:60:        assert_equal(mintypecode('FD'), 'D')
numpy/lib/tests/test_type_check.py:61:        assert_equal(mintypecode('Df'), 'D')
numpy/lib/tests/test_type_check.py:62:        assert_equal(mintypecode('Dd'), 'D')
numpy/lib/tests/test_type_check.py:63:        assert_equal(mintypecode('DF'), 'D')
numpy/lib/tests/test_type_check.py:64:        assert_equal(mintypecode('DD'), 'D')
numpy/lib/tests/test_type_check.py:67:        assert_equal(mintypecode('fdF'), 'D')
numpy/lib/tests/test_type_check.py:69:        assert_equal(mintypecode('fdD'), 'D')
numpy/lib/tests/test_type_check.py:70:        assert_equal(mintypecode('fFD'), 'D')
numpy/lib/tests/test_type_check.py:71:        assert_equal(mintypecode('dFD'), 'D')
numpy/lib/tests/test_type_check.py:73:        assert_equal(mintypecode('ifd'), 'd')
numpy/lib/tests/test_type_check.py:74:        assert_equal(mintypecode('ifF'), 'F')
numpy/lib/tests/test_type_check.py:75:        assert_equal(mintypecode('ifD'), 'D')
numpy/lib/tests/test_type_check.py:76:        assert_equal(mintypecode('idF'), 'D')
numpy/lib/tests/test_type_check.py:78:        assert_equal(mintypecode('idD'), 'D')
numpy/lib/tests/test_type_check.py:84:        assert_(np.isscalar(3))
numpy/lib/tests/test_type_check.py:85:        assert_(not np.isscalar([3]))
numpy/lib/tests/test_type_check.py:86:        assert_(not np.isscalar((3,)))
numpy/lib/tests/test_type_check.py:87:        assert_(np.isscalar(3j))
numpy/lib/tests/test_type_check.py:88:        assert_(np.isscalar(4.0))
numpy/lib/tests/test_type_check.py:95:        assert_array_equal(y, np.real(y))
numpy/lib/tests/test_type_check.py:99:        assert_array_equal(y, out)
numpy/lib/tests/test_type_check.py:100:        assert_(isinstance(out, np.ndarray))
numpy/lib/tests/test_type_check.py:104:        assert_equal(y, out)
numpy/lib/tests/test_type_check.py:105:        assert_(not isinstance(out, np.ndarray))
numpy/lib/tests/test_type_check.py:109:        assert_array_equal(y.real, np.real(y))
numpy/lib/tests/test_type_check.py:113:        assert_array_equal(y.real, out)
numpy/lib/tests/test_type_check.py:114:        assert_(isinstance(out, np.ndarray))
numpy/lib/tests/test_type_check.py:118:        assert_equal(1.0, out)
numpy/lib/tests/test_type_check.py:119:        assert_(not isinstance(out, np.ndarray))
numpy/lib/tests/test_type_check.py:126:        assert_array_equal(0, np.imag(y))
numpy/lib/tests/test_type_check.py:130:        assert_array_equal(0, out)
numpy/lib/tests/test_type_check.py:131:        assert_(isinstance(out, np.ndarray))
numpy/lib/tests/test_type_check.py:135:        assert_equal(0, out)
numpy/lib/tests/test_type_check.py:136:        assert_(not isinstance(out, np.ndarray))
numpy/lib/tests/test_type_check.py:140:        assert_array_equal(y.imag, np.imag(y))
numpy/lib/tests/test_type_check.py:144:        assert_array_equal(y.imag, out)
numpy/lib/tests/test_type_check.py:145:        assert_(isinstance(out, np.ndarray))
numpy/lib/tests/test_type_check.py:149:        assert_equal(1.0, out)
numpy/lib/tests/test_type_check.py:150:        assert_(not isinstance(out, np.ndarray))
numpy/lib/tests/test_type_check.py:158:        assert_(not np.sometrue(res, axis=0))
numpy/lib/tests/test_type_check.py:163:        assert_array_equal(res, [1, 0, 0])
numpy/lib/tests/test_type_check.py:171:        assert_array_equal(res, [1, 1, 0])
numpy/lib/tests/test_type_check.py:176:        assert_array_equal(res, [0, 1, 1])
numpy/lib/tests/test_type_check.py:183:        assert_(not iscomplexobj(z))
numpy/lib/tests/test_type_check.py:185:        assert_(iscomplexobj(z))
numpy/lib/tests/test_type_check.py:188:        assert_(not iscomplexobj(1.0))
numpy/lib/tests/test_type_check.py:189:        assert_(iscomplexobj(1+0j))
numpy/lib/tests/test_type_check.py:192:        assert_(iscomplexobj([3, 1+0j, True]))
numpy/lib/tests/test_type_check.py:193:        assert_(not iscomplexobj([3, 1, True]))
numpy/lib/tests/test_type_check.py:201:        assert_(iscomplexobj(dummy))
numpy/lib/tests/test_type_check.py:220:        assert_(iscomplexobj(dummy))
numpy/lib/tests/test_type_check.py:229:        assert_(iscomplexobj(a))
numpy/lib/tests/test_type_check.py:235:        assert_(isrealobj(z))
numpy/lib/tests/test_type_check.py:237:        assert_(not isrealobj(z))
numpy/lib/tests/test_type_check.py:245:        assert_all(np.all(res, axis=0))
numpy/lib/tests/test_type_check.py:249:            assert_all(np.isnan(np.array((1.,))/0.) == 0)
numpy/lib/tests/test_type_check.py:253:            assert_all(np.isnan(np.array((-1.,))/0.) == 0)
numpy/lib/tests/test_type_check.py:257:            assert_all(np.isnan(np.array((0.,))/0.) == 1)
numpy/lib/tests/test_type_check.py:260:        assert_all(np.isnan(1) == 0)
numpy/lib/tests/test_type_check.py:263:        assert_all(np.isnan(1+1j) == 0)
numpy/lib/tests/test_type_check.py:267:            assert_all(np.isnan(np.array(0+0j)/0.) == 1)
numpy/lib/tests/test_type_check.py:276:        assert_all(np.all(res, axis=0))
numpy/lib/tests/test_type_check.py:280:            assert_all(np.isfinite(np.array((1.,))/0.) == 0)
numpy/lib/tests/test_type_check.py:284:            assert_all(np.isfinite(np.array((-1.,))/0.) == 0)
numpy/lib/tests/test_type_check.py:288:            assert_all(np.isfinite(np.array((0.,))/0.) == 0)
numpy/lib/tests/test_type_check.py:291:        assert_all(np.isfinite(1) == 1)
numpy/lib/tests/test_type_check.py:294:        assert_all(np.isfinite(1+1j) == 1)
numpy/lib/tests/test_type_check.py:298:            assert_all(np.isfinite(np.array(1+1j)/0.) == 0)
numpy/lib/tests/test_type_check.py:307:        assert_all(np.all(res, axis=0))
numpy/lib/tests/test_type_check.py:311:            assert_all(np.isinf(np.array((1.,))/0.) == 1)
numpy/lib/tests/test_type_check.py:315:            assert_all(np.isinf(np.array(1.,)/0.) == 1)
numpy/lib/tests/test_type_check.py:319:            assert_all(np.isinf(np.array((-1.,))/0.) == 1)
numpy/lib/tests/test_type_check.py:323:            assert_all(np.isinf(np.array(-1.)/0.) == 1)
numpy/lib/tests/test_type_check.py:327:            assert_all(np.isinf(np.array((0.,))/0.) == 0)
numpy/lib/tests/test_type_check.py:335:        assert_(vals[0] == 0)
numpy/lib/tests/test_type_check.py:336:        assert_(vals[1] == 0)
numpy/lib/tests/test_type_check.py:337:        assert_(vals[2] == 1)
numpy/lib/tests/test_type_check.py:345:        assert_(vals[0] == 1)
numpy/lib/tests/test_type_check.py:346:        assert_(vals[1] == 0)
numpy/lib/tests/test_type_check.py:347:        assert_(vals[2] == 0)
numpy/lib/tests/test_type_check.py:355:        assert_all(vals[0] < -1e10) and assert_all(np.isfinite(vals[0]))
numpy/lib/tests/test_type_check.py:356:        assert_(vals[1] == 0)
numpy/lib/tests/test_type_check.py:357:        assert_all(vals[2] > 1e10) and assert_all(np.isfinite(vals[2]))
numpy/lib/tests/test_type_check.py:358:        assert_equal(type(vals), np.ndarray)
numpy/lib/tests/test_type_check.py:364:        assert_equal(vals, [30, 10, 20])
numpy/lib/tests/test_type_check.py:365:        assert_all(np.isfinite(vals[[0, 2]]))
numpy/lib/tests/test_type_check.py:366:        assert_equal(type(vals), np.ndarray)
numpy/lib/tests/test_type_check.py:373:        assert_(result is vals)
numpy/lib/tests/test_type_check.py:374:        assert_all(vals[0] < -1e10) and assert_all(np.isfinite(vals[0]))
numpy/lib/tests/test_type_check.py:375:        assert_(vals[1] == 0)
numpy/lib/tests/test_type_check.py:376:        assert_all(vals[2] > 1e10) and assert_all(np.isfinite(vals[2]))
numpy/lib/tests/test_type_check.py:377:        assert_equal(type(vals), np.ndarray)
numpy/lib/tests/test_type_check.py:384:        assert_(result is vals)
numpy/lib/tests/test_type_check.py:385:        assert_equal(vals, [30, 10, 20])
numpy/lib/tests/test_type_check.py:386:        assert_all(np.isfinite(vals[[0, 2]]))
numpy/lib/tests/test_type_check.py:387:        assert_equal(type(vals), np.ndarray)
numpy/lib/tests/test_type_check.py:391:        assert_array_equal(vals, np.array([1], int))
numpy/lib/tests/test_type_check.py:392:        assert_equal(type(vals), np.ndarray)
numpy/lib/tests/test_type_check.py:394:        assert_array_equal(vals, np.array([1], int))
numpy/lib/tests/test_type_check.py:395:        assert_equal(type(vals), np.ndarray)
numpy/lib/tests/test_type_check.py:399:        assert_all(vals == 1)
numpy/lib/tests/test_type_check.py:400:        assert_equal(type(vals), np.int_)
numpy/lib/tests/test_type_check.py:402:        assert_all(vals == 1)
numpy/lib/tests/test_type_check.py:403:        assert_equal(type(vals), np.int_)
numpy/lib/tests/test_type_check.py:407:        assert_all(vals == 1.0)
numpy/lib/tests/test_type_check.py:408:        assert_equal(type(vals), np.float_)
numpy/lib/tests/test_type_check.py:410:        assert_all(vals == 1.1)
numpy/lib/tests/test_type_check.py:411:        assert_equal(type(vals), np.float_)
numpy/lib/tests/test_type_check.py:415:        assert_all(vals == 1+1j)
numpy/lib/tests/test_type_check.py:416:        assert_equal(type(vals), np.complex_)
numpy/lib/tests/test_type_check.py:418:        assert_all(vals == 1+1j)
numpy/lib/tests/test_type_check.py:419:        assert_equal(type(vals), np.complex_)
numpy/lib/tests/test_type_check.py:427:        assert_all(np.isfinite(vals))
numpy/lib/tests/test_type_check.py:428:        assert_equal(type(vals), np.complex_)
numpy/lib/tests/test_type_check.py:435:        assert_all(np.isfinite(vals))
numpy/lib/tests/test_type_check.py:436:        assert_equal(type(vals), np.complex_)
numpy/lib/tests/test_type_check.py:449:        assert_all(np.isfinite(vals[[0, 2]]))
numpy/lib/tests/test_type_check.py:450:        assert_all(vals[0] < -1e10)
numpy/lib/tests/test_type_check.py:451:        assert_equal(vals[[1, 2]], [np.inf, 999])
numpy/lib/tests/test_type_check.py:452:        assert_equal(type(vals), np.ndarray)
numpy/lib/tests/test_type_check.py:460:        assert_all(isrealobj(b))
numpy/lib/tests/test_type_check.py:461:        assert_array_equal(a, b)
numpy/lib/tests/test_type_check.py:463:        assert_all(iscomplexobj(b))
numpy/lib/tests/test_type_check.py:465:        assert_all(isrealobj(b))
numpy/lib/tests/test_type_check.py:472:        assert_equal(a.__class__, np.ndarray)
numpy/lib/tests/test_type_check.py:473:        assert_(np.issubdtype(a.dtype, np.floating))
numpy/lib/tests/test_utils.py:23:    assert_('numpy.linalg.eig' in out)
numpy/lib/tests/test_utils.py:73:    assert_('deprecated' in old_func.__doc__)
numpy/lib/tests/test_utils.py:77:    assert_('Rather use new_func2' in old_func2.__doc__)
numpy/lib/tests/test_utils.py:81:    assert_('old_func3' in new_func3.__doc__)
numpy/lib/tests/test_utils.py:82:    assert_('new_func3' in new_func3.__doc__)
numpy/lib/tests/test_utils.py:86:    assert_('Rather use new_func7' in old_func7.__doc__)
numpy/lib/tests/test_utils.py:101:                assert line.startswith('    ') or not line.startswith(' '), knd
numpy/lib/tests/test_utils.py:103:                assert line.startswith('    '), knd
numpy/lib/tests/test_utils.py:110:    assert_equal(new_doc[index:], old_doc)
numpy/lib/tests/test_utils.py:115:    assert_('\n        Bizarre' in new_func5.__doc__)
numpy/lib/tests/test_utils.py:130:        assert_equal(high - low, a.size * a.itemsize)
numpy/lib/tests/test_utils.py:136:        assert_equal(high - low, b.size * b.itemsize)
numpy/lib/tests/test_utils.py:142:        assert_equal(high - low, b.size * b.itemsize)
numpy/lib/tests/test_utils.py:150:        assert_equal(high - low, b.size * 2 * b.itemsize - b.itemsize)
numpy/lib/tests/test_utils.py:173:    assert _has_method_heading(WithPublicMethods)
numpy/lib/tests/test_utils.py:174:    assert not _has_method_heading(NoPublicMethods)
numpy/lib/tests/test_twodim_base.py:32:        assert_equal(eye(4),
numpy/lib/tests/test_twodim_base.py:38:        assert_equal(eye(4, dtype='f'),
numpy/lib/tests/test_twodim_base.py:44:        assert_equal(eye(3) == 1,
numpy/lib/tests/test_twodim_base.py:48:        assert_equal(eye(4, k=1),
numpy/lib/tests/test_twodim_base.py:54:        assert_equal(eye(4, k=-1),
numpy/lib/tests/test_twodim_base.py:61:        assert_equal(eye(4, 3),
numpy/lib/tests/test_twodim_base.py:67:        assert_equal(eye(3, 4),
numpy/lib/tests/test_twodim_base.py:73:        assert_equal(eye(3, 4, k=2),
numpy/lib/tests/test_twodim_base.py:78:        assert_equal(eye(4, 3, k=-2),
numpy/lib/tests/test_twodim_base.py:85:        assert_equal(eye(2, 2, 1), [[0, 1], [0, 0]])
numpy/lib/tests/test_twodim_base.py:86:        assert_equal(eye(2, 2, -1), [[0, 0], [1, 0]])
numpy/lib/tests/test_twodim_base.py:87:        assert_equal(eye(2, 2, 2), [[0, 0], [0, 0]])
numpy/lib/tests/test_twodim_base.py:88:        assert_equal(eye(2, 2, -2), [[0, 0], [0, 0]])
numpy/lib/tests/test_twodim_base.py:89:        assert_equal(eye(3, 2, 2), [[0, 0], [0, 0], [0, 0]])
numpy/lib/tests/test_twodim_base.py:90:        assert_equal(eye(3, 2, 1), [[0, 1], [0, 0], [0, 0]])
numpy/lib/tests/test_twodim_base.py:91:        assert_equal(eye(3, 2, -1), [[0, 0], [1, 0], [0, 1]])
numpy/lib/tests/test_twodim_base.py:92:        assert_equal(eye(3, 2, -2), [[0, 0], [0, 0], [1, 0]])
numpy/lib/tests/test_twodim_base.py:93:        assert_equal(eye(3, 2, -3), [[0, 0], [0, 0], [0, 0]])
numpy/lib/tests/test_twodim_base.py:96:        assert_equal(eye(2, 2, dtype='S3'),
numpy/lib/tests/test_twodim_base.py:100:        assert_equal(eye(2, 2, dtype=bool), [[True, False], [False, True]])
numpy/lib/tests/test_twodim_base.py:105:        assert_equal(mat_c, mat_f)
numpy/lib/tests/test_twodim_base.py:118:        assert_equal(diag(vals), b)
numpy/lib/tests/test_twodim_base.py:124:        assert_equal(diag(vals, k=2), b)
numpy/lib/tests/test_twodim_base.py:125:        assert_equal(diag(vals, k=-2), c)
numpy/lib/tests/test_twodim_base.py:133:        assert_equal(diag(vals), b)
numpy/lib/tests/test_twodim_base.py:137:        assert_equal(diag(vals, 2), b[:3])
numpy/lib/tests/test_twodim_base.py:140:        assert_equal(diag(vals, -2), b[:3])
numpy/lib/tests/test_twodim_base.py:148:        assert_equal(diag(A, k=2), [])
numpy/lib/tests/test_twodim_base.py:149:        assert_equal(diag(A, k=1), [2])
numpy/lib/tests/test_twodim_base.py:150:        assert_equal(diag(A, k=0), [1, 4])
numpy/lib/tests/test_twodim_base.py:151:        assert_equal(diag(A, k=-1), [3, 6])
numpy/lib/tests/test_twodim_base.py:152:        assert_equal(diag(A, k=-2), [5])
numpy/lib/tests/test_twodim_base.py:153:        assert_equal(diag(A, k=-3), [])
numpy/lib/tests/test_twodim_base.py:156:        assert_raises(ValueError, diag, [[[1]]])
numpy/lib/tests/test_twodim_base.py:161:        assert_raises(ValueError, fliplr, ones(4))
numpy/lib/tests/test_twodim_base.py:164:        assert_equal(fliplr(a), b)
numpy/lib/tests/test_twodim_base.py:169:        assert_equal(fliplr(a), b)
numpy/lib/tests/test_twodim_base.py:176:        assert_equal(flipud(a), b)
numpy/lib/tests/test_twodim_base.py:181:        assert_equal(flipud(a), b)
numpy/lib/tests/test_twodim_base.py:203:        assert_array_equal(H.T, answer)
numpy/lib/tests/test_twodim_base.py:205:        assert_array_equal(H.T, answer)
numpy/lib/tests/test_twodim_base.py:207:        assert_array_equal(H, eye(10, 10))
numpy/lib/tests/test_twodim_base.py:208:        assert_array_equal(xedges, np.linspace(0, 9, 11))
numpy/lib/tests/test_twodim_base.py:209:        assert_array_equal(yedges, np.linspace(0, 9, 11))
numpy/lib/tests/test_twodim_base.py:223:        assert_array_almost_equal(H, answer/8., 3)
numpy/lib/tests/test_twodim_base.py:224:        assert_array_equal(xed, np.linspace(0, 6, 7))
numpy/lib/tests/test_twodim_base.py:225:        assert_array_equal(yed, np.linspace(0, 5, 6))
numpy/lib/tests/test_twodim_base.py:235:        assert_array_almost_equal(H, answer, 3)
numpy/lib/tests/test_twodim_base.py:240:        assert_array_equal(H, 0)
numpy/lib/tests/test_twodim_base.py:244:        assert_array_max_ulp(a, array([[0.]]))
numpy/lib/tests/test_twodim_base.py:247:        assert_array_max_ulp(a, np.zeros((4, 4)))
numpy/lib/tests/test_twodim_base.py:269:        assert_array_equal(H, answer)
numpy/lib/tests/test_twodim_base.py:270:        assert_array_equal(ye, array([0., 0.25, 0.5, 0.75, 1]))
numpy/lib/tests/test_twodim_base.py:277:        assert_array_equal(H, answer)
numpy/lib/tests/test_twodim_base.py:278:        assert_array_equal(xe, array([0., 0.25, 0.5, 0.75, 1]))
numpy/lib/tests/test_twodim_base.py:290:        assert_(r == ((ShouldDispatch,), (s_d, xy), {}))
numpy/lib/tests/test_twodim_base.py:292:        assert_(r == ((ShouldDispatch,), (xy, s_d), {}))
numpy/lib/tests/test_twodim_base.py:294:        assert_(r, ((ShouldDispatch,), (xy, xy), dict(bins=s_d)))
numpy/lib/tests/test_twodim_base.py:296:        assert_(r, ((ShouldDispatch,), (xy, xy), dict(bins=[s_d, 5])))
numpy/lib/tests/test_twodim_base.py:297:        assert_raises(Exception, histogram2d, xy, xy, bins=[s_d])
numpy/lib/tests/test_twodim_base.py:299:        assert_(r, ((ShouldDispatch,), (xy, xy), dict(weights=s_d)))
numpy/lib/tests/test_twodim_base.py:314:        assert_array_equal(tri(3), out)
numpy/lib/tests/test_twodim_base.py:315:        assert_array_equal(tri(3, dtype=bool), out.astype(bool))
numpy/lib/tests/test_twodim_base.py:323:        assert_array_equal(b, [[1, 0], [1, 1]])
numpy/lib/tests/test_twodim_base.py:324:        assert_array_equal(c, b.T)
numpy/lib/tests/test_twodim_base.py:326:        assert_equal(b.dtype, a.dtype)
numpy/lib/tests/test_twodim_base.py:327:        assert_equal(c.dtype, a.dtype)
numpy/lib/tests/test_twodim_base.py:349:        assert_array_equal(a_triu_observed, a_triu_desired)
numpy/lib/tests/test_twodim_base.py:350:        assert_array_equal(a_tril_observed, a_tril_desired)
numpy/lib/tests/test_twodim_base.py:351:        assert_equal(a_triu_observed.dtype, a.dtype)
numpy/lib/tests/test_twodim_base.py:352:        assert_equal(a_tril_observed.dtype, a.dtype)
numpy/lib/tests/test_twodim_base.py:364:    assert_array_equal(np.triu(arr), out_triu)
numpy/lib/tests/test_twodim_base.py:365:    assert_array_equal(np.tril(arr), out_tril)
numpy/lib/tests/test_twodim_base.py:375:        assert_equal(np.triu(arr).dtype, arr.dtype)
numpy/lib/tests/test_twodim_base.py:376:        assert_equal(np.tril(arr).dtype, arr.dtype)
numpy/lib/tests/test_twodim_base.py:382:    assert_equal(np.triu(arr).dtype, arr.dtype)
numpy/lib/tests/test_twodim_base.py:383:    assert_equal(np.tril(arr).dtype, arr.dtype)
numpy/lib/tests/test_twodim_base.py:386:    assert_equal(np.triu(arr).dtype, arr.dtype)
numpy/lib/tests/test_twodim_base.py:387:    assert_equal(np.tril(arr).dtype, arr.dtype)
numpy/lib/tests/test_twodim_base.py:394:    assert_array_equal(a[iu], array([0, 1, 2, 4, 5, 8]))
numpy/lib/tests/test_twodim_base.py:397:    assert_array_equal(a[iu1], array([1, 2, 5]))
numpy/lib/tests/test_twodim_base.py:414:    assert_array_equal(a[il1],
numpy/lib/tests/test_twodim_base.py:416:    assert_array_equal(b[il3],
numpy/lib/tests/test_twodim_base.py:421:    assert_array_equal(a,
numpy/lib/tests/test_twodim_base.py:427:    assert_array_equal(b,
numpy/lib/tests/test_twodim_base.py:434:    assert_array_equal(a,
numpy/lib/tests/test_twodim_base.py:440:    assert_array_equal(b,
numpy/lib/tests/test_twodim_base.py:461:        assert_array_equal(a[iu1],
numpy/lib/tests/test_twodim_base.py:463:        assert_array_equal(b[iu3],
numpy/lib/tests/test_twodim_base.py:469:        assert_array_equal(a,
numpy/lib/tests/test_twodim_base.py:475:        assert_array_equal(b,
numpy/lib/tests/test_twodim_base.py:484:        assert_array_equal(a,
numpy/lib/tests/test_twodim_base.py:490:        assert_array_equal(b,
numpy/lib/tests/test_twodim_base.py:499:        assert_raises(ValueError, tril_indices_from, np.ones((2,)))
numpy/lib/tests/test_twodim_base.py:500:        assert_raises(ValueError, tril_indices_from, np.ones((2, 2, 2)))
numpy/lib/tests/test_twodim_base.py:506:        assert_raises(ValueError, triu_indices_from, np.ones((2,)))
numpy/lib/tests/test_twodim_base.py:507:        assert_raises(ValueError, triu_indices_from, np.ones((2, 2, 2)))
numpy/lib/tests/test_twodim_base.py:520:        assert_array_equal(v, powers[:, 1:])
numpy/lib/tests/test_twodim_base.py:525:            assert_array_equal(v, powers[:, m-n:m])
numpy/lib/tests/test_twodim_base.py:533:        assert_array_equal(v, expected)
numpy/lib/tests/test_twodim_base.py:542:        assert_array_equal(v, expected)
numpy/lib/tests/test_polynomial.py:17:        assert_equal(repr(p), 'poly1d([1., 2., 3.])')
numpy/lib/tests/test_polynomial.py:18:        assert_equal(str(p),
numpy/lib/tests/test_polynomial.py:23:        assert_equal(repr(q), 'poly1d([3., 2., 1.])')
numpy/lib/tests/test_polynomial.py:24:        assert_equal(str(q),
numpy/lib/tests/test_polynomial.py:29:        assert_equal(str(r),
numpy/lib/tests/test_polynomial.py:33:        assert_equal(str(np.poly1d([-3, -2, -1])),
numpy/lib/tests/test_polynomial.py:40:        assert_equal(p(0), 3.0)
numpy/lib/tests/test_polynomial.py:41:        assert_equal(p(5), 38.0)
numpy/lib/tests/test_polynomial.py:42:        assert_equal(q(0), 1.0)
numpy/lib/tests/test_polynomial.py:43:        assert_equal(q(5), 86.0)
numpy/lib/tests/test_polynomial.py:49:        assert_equal(p/q, (np.poly1d([0.25]), np.poly1d([1.5, 3.75])))
numpy/lib/tests/test_polynomial.py:50:        assert_equal(p.integ(), np.poly1d([1/3, 1., 4., 0.]))
numpy/lib/tests/test_polynomial.py:51:        assert_equal(p.integ(1), np.poly1d([1/3, 1., 4., 0.]))
numpy/lib/tests/test_polynomial.py:55:        assert_equal(p * q, np.poly1d([3., 8., 14., 8., 3.]))
numpy/lib/tests/test_polynomial.py:56:        assert_equal(p + q, np.poly1d([4., 4., 4.]))
numpy/lib/tests/test_polynomial.py:57:        assert_equal(p - q, np.poly1d([-2., 0., 2.]))
numpy/lib/tests/test_polynomial.py:58:        assert_equal(p ** 4, np.poly1d([1., 8., 36., 104., 214., 312., 324., 216., 81.]))
numpy/lib/tests/test_polynomial.py:59:        assert_equal(p(q), np.poly1d([9., 12., 16., 8., 6.]))
numpy/lib/tests/test_polynomial.py:60:        assert_equal(q(p), np.poly1d([3., 12., 32., 40., 34.]))
numpy/lib/tests/test_polynomial.py:61:        assert_equal(p.deriv(), np.poly1d([2., 2.]))
numpy/lib/tests/test_polynomial.py:62:        assert_equal(p.deriv(2), np.poly1d([2.]))
numpy/lib/tests/test_polynomial.py:63:        assert_equal(np.polydiv(np.poly1d([1, 0, -1]), np.poly1d([1, 1])),
numpy/lib/tests/test_polynomial.py:73:        assert_equal(np.asarray(p), ar)
numpy/lib/tests/test_polynomial.py:74:        assert_equal(np.asarray(p).dtype, dtype)
numpy/lib/tests/test_polynomial.py:75:        assert_equal(len(p), 2)
numpy/lib/tests/test_polynomial.py:81:            assert_equal(scalar, ref)
numpy/lib/tests/test_polynomial.py:83:                assert isinstance(scalar, int)
numpy/lib/tests/test_polynomial.py:85:                assert_equal(scalar.dtype, dtype)
numpy/lib/tests/test_polynomial.py:89:        assert_equal(str(q),
numpy/lib/tests/test_polynomial.py:93:        assert_equal(str(q),
numpy/lib/tests/test_polynomial.py:98:        assert_array_almost_equal(np.poly([3, -np.sqrt(2), np.sqrt(2)]),
numpy/lib/tests/test_polynomial.py:103:        assert_array_almost_equal(np.poly(A), [1, -6, -72, -27])
numpy/lib/tests/test_polynomial.py:106:        assert_(np.isrealobj(np.poly([+1.082j, +2.613j, -2.613j, -1.082j])))
numpy/lib/tests/test_polynomial.py:109:        assert_(np.isrealobj(np.poly([1j, -1j, 1+2j, 1-2j, 1+3j, 1-3.j])))
numpy/lib/tests/test_polynomial.py:110:        assert_(np.isrealobj(np.poly([1j, -1j, 1+2j, 1-2j])))
numpy/lib/tests/test_polynomial.py:111:        assert_(np.isrealobj(np.poly([1j, -1j, 2j, -2j])))
numpy/lib/tests/test_polynomial.py:112:        assert_(np.isrealobj(np.poly([1j, -1j])))
numpy/lib/tests/test_polynomial.py:113:        assert_(np.isrealobj(np.poly([1, -1])))
numpy/lib/tests/test_polynomial.py:115:        assert_(np.iscomplexobj(np.poly([1j, -1.0000001j])))
numpy/lib/tests/test_polynomial.py:119:        assert_(np.isrealobj(np.poly(np.concatenate((a, np.conjugate(a))))))
numpy/lib/tests/test_polynomial.py:122:        assert_array_equal(np.roots([1, 0, 0]), [0, 0])
numpy/lib/tests/test_polynomial.py:127:        assert_equal(str(p),
numpy/lib/tests/test_polynomial.py:134:        assert_equal(str(p), " \n0")
numpy/lib/tests/test_polynomial.py:152:        assert_almost_equal(est, m, decimal=4)
numpy/lib/tests/test_polynomial.py:156:        assert_almost_equal(val0, cov, decimal=4)
numpy/lib/tests/test_polynomial.py:159:        assert_almost_equal([4.8927, -1.0177, 1.7768], m2, decimal=4)
numpy/lib/tests/test_polynomial.py:163:        assert_almost_equal(val, cov2, decimal=4)
numpy/lib/tests/test_polynomial.py:166:        assert_almost_equal([4.8927, -1.0177, 1.7768], m3, decimal=4)
numpy/lib/tests/test_polynomial.py:170:        assert_almost_equal(val, cov3, decimal=4)
numpy/lib/tests/test_polynomial.py:175:        assert_almost_equal(c, np.polyfit(x, y, 2))
numpy/lib/tests/test_polynomial.py:179:        assert_almost_equal(cc, np.polyfit(x, yy, 2))
numpy/lib/tests/test_polynomial.py:182:        assert_almost_equal(est, m[:, 0], decimal=4)
numpy/lib/tests/test_polynomial.py:183:        assert_almost_equal(est, m[:, 1], decimal=4)
numpy/lib/tests/test_polynomial.py:184:        assert_almost_equal(val0, cov[:, :, 0], decimal=4)
numpy/lib/tests/test_polynomial.py:185:        assert_almost_equal(val0, cov[:, :, 1], decimal=4)
numpy/lib/tests/test_polynomial.py:192:        assert_allclose(mean.std(), 0.5, atol=0.01)
numpy/lib/tests/test_polynomial.py:193:        assert_allclose(np.sqrt(cov.mean()), 0.5, atol=0.01)
numpy/lib/tests/test_polynomial.py:197:        assert_allclose(mean.std(), 0.5, atol=0.01)
numpy/lib/tests/test_polynomial.py:198:        assert_almost_equal(np.sqrt(cov.mean()), 0.5)
numpy/lib/tests/test_polynomial.py:202:        assert_allclose(mean.std(), 0.5, atol=0.01)
numpy/lib/tests/test_polynomial.py:203:        assert_allclose(np.sqrt(cov.mean()), 0.5, atol=0.01)
numpy/lib/tests/test_polynomial.py:207:        assert_allclose(mean.std(), 0.5, atol=0.01)
numpy/lib/tests/test_polynomial.py:208:        assert_almost_equal(np.sqrt(cov.mean()), 0.25)
numpy/lib/tests/test_polynomial.py:214:        assert_(p2[1] == Decimal("3.9999999999999990"))
numpy/lib/tests/test_polynomial.py:216:        assert_(p2[1] == Decimal('8.0'))
numpy/lib/tests/test_polynomial.py:218:        assert_(p2[3] == Decimal("1.333333333333333333333333333"))
numpy/lib/tests/test_polynomial.py:219:        assert_(p2[2] == Decimal('1.5'))
numpy/lib/tests/test_polynomial.py:220:        assert_(np.issubdtype(p2.coeffs.dtype, np.object_))
numpy/lib/tests/test_polynomial.py:222:        assert_equal(np.poly([Decimal(1), Decimal(2)]),
numpy/lib/tests/test_polynomial.py:228:        assert_((p2.coeffs == [1j, 1j, 1j, 0]).all())
numpy/lib/tests/test_polynomial.py:230:        assert_((p2.coeffs == [6j, 2j]).all())
numpy/lib/tests/test_polynomial.py:249:        assert_almost_equal(np.poly(v), np.poly(np.diag(v)))
numpy/lib/tests/test_polynomial.py:257:        assert_equal(p.coeffs.dtype, np.int64)
numpy/lib/tests/test_polynomial.py:260:        assert_equal(p.coeffs.dtype, np.float32)
numpy/lib/tests/test_polynomial.py:263:        assert_equal(p.coeffs.dtype, np.complex64)
numpy/lib/tests/test_polynomial.py:268:        assert_equal(p == None, False)
numpy/lib/tests/test_polynomial.py:269:        assert_equal(p != None, True)
numpy/lib/tests/test_polynomial.py:270:        assert_equal(p == p, True)
numpy/lib/tests/test_polynomial.py:271:        assert_equal(p == p2, False)
numpy/lib/tests/test_polynomial.py:272:        assert_equal(p != p2, True)
numpy/lib/tests/test_polynomial.py:278:        assert_equal(q.coeffs.dtype, np.complex128)
numpy/lib/tests/test_polynomial.py:279:        assert_equal(r.coeffs.dtype, np.complex128)
numpy/lib/tests/test_polynomial.py:280:        assert_equal(q*a + r, b)
numpy/lib/tests/test_polynomial.py:285:        assert isinstance(s, np.poly1d)
numpy/lib/tests/test_polynomial.py:286:        assert isinstance(t, np.poly1d)
numpy/lib/tests/test_polynomial.py:288:        assert isinstance(u, np.poly1d)
numpy/lib/tests/test_polynomial.py:289:        assert isinstance(v, np.poly1d)
numpy/lib/tests/test_polynomial.py:296:        assert_equal(p.coeffs, [2, 3, 4])
numpy/lib/tests/test_polynomial.py:299:        assert_equal(p.coeffs, [2, 3, 14])
numpy/lib/tests/test_polynomial.py:303:        assert_raises(AttributeError, setattr, p, 'coeffs', np.array(1))
numpy/lib/tests/test__iotools.py:21:        assert_equal(test, ['1', '2', '3', '4', '5'])
numpy/lib/tests/test__iotools.py:23:        assert_equal(test, ['1', '2', '3', '4', '5'])
numpy/lib/tests/test__iotools.py:29:        assert_equal(test, ['1', '2', '3', '4', '', '5'])
numpy/lib/tests/test__iotools.py:31:        assert_equal(test, ['1 2 3 4', '5'])
numpy/lib/tests/test__iotools.py:37:        assert_equal(test, ['1', '2', '3', '4', '5  6'])
numpy/lib/tests/test__iotools.py:40:        assert_equal(test, ['1  2', '3  4', '5  6'])
numpy/lib/tests/test__iotools.py:46:        assert_equal(test, ['1', '2', '3', '4', '', '5'])
numpy/lib/tests/test__iotools.py:50:        assert_equal(test, ['1', '2', '3', '4', '', '5'])
numpy/lib/tests/test__iotools.py:55:        assert_equal(test, ['1', '2', '3', '4', '', '5'])
numpy/lib/tests/test__iotools.py:61:        assert_equal(test, ['1', '2', '3', '4', '', '5', ''])
numpy/lib/tests/test__iotools.py:65:        assert_equal(test, ['1     3  4  5  6'])
numpy/lib/tests/test__iotools.py:69:        assert_equal(test, ['1     3  4  5  6'])
numpy/lib/tests/test__iotools.py:74:        assert_equal(test, ['1', '3', '4  5', '6'])
numpy/lib/tests/test__iotools.py:78:        assert_equal(test, ['1', '3  4', '5  6'])
numpy/lib/tests/test__iotools.py:89:        assert_equal(test, ['A', 'a', 'b', 'c'])
numpy/lib/tests/test__iotools.py:91:        assert_equal(test, ['A', 'A_1', 'B', 'C'])
numpy/lib/tests/test__iotools.py:93:        assert_equal(test, ['A', 'A_1', 'B', 'C'])
numpy/lib/tests/test__iotools.py:95:        assert_equal(test, ['a', 'a_1', 'b', 'c'])
numpy/lib/tests/test__iotools.py:98:        assert_raises(ValueError, NameValidator, case_sensitive='foobar')
numpy/lib/tests/test__iotools.py:105:        assert_equal(test, ['dates_', 'data_', 'Other_Data', 'mask_'])
numpy/lib/tests/test__iotools.py:111:        assert_equal(validator(namelist), ['a', 'b', 'c'])
numpy/lib/tests/test__iotools.py:113:        assert_equal(validator(namelist), ['f0', 'b', 'c'])
numpy/lib/tests/test__iotools.py:115:        assert_equal(validator(namelist), ['a', 'b', 'f0'])
numpy/lib/tests/test__iotools.py:117:        assert_equal(validator(namelist), ['f1', 'f0', 'f2'])
numpy/lib/tests/test__iotools.py:123:        assert_equal(validator(namelist, nbfields=1), ('a',))
numpy/lib/tests/test__iotools.py:124:        assert_equal(validator(namelist, nbfields=5, defaultfmt="g%i"),
numpy/lib/tests/test__iotools.py:131:        assert_(validator(namelist) is None)
numpy/lib/tests/test__iotools.py:132:        assert_equal(validator(namelist, nbfields=3), ['f0', 'f1', 'f2'])
numpy/lib/tests/test__iotools.py:147:        assert_equal(converter._status, 1)
numpy/lib/tests/test__iotools.py:148:        assert_equal(converter.default, -99999)
numpy/lib/tests/test__iotools.py:154:        assert_equal(converter._status, 0)
numpy/lib/tests/test__iotools.py:157:        assert_equal(converter.upgrade('0'), 0)
numpy/lib/tests/test__iotools.py:158:        assert_equal(converter._status, 1)
numpy/lib/tests/test__iotools.py:166:        assert_equal(converter.upgrade('17179869184'), 17179869184)
numpy/lib/tests/test__iotools.py:167:        assert_equal(converter._status, 1 + status_offset)
numpy/lib/tests/test__iotools.py:170:        assert_allclose(converter.upgrade('0.'), 0.0)
numpy/lib/tests/test__iotools.py:171:        assert_equal(converter._status, 2 + status_offset)
numpy/lib/tests/test__iotools.py:174:        assert_equal(converter.upgrade('0j'), complex('0j'))
numpy/lib/tests/test__iotools.py:175:        assert_equal(converter._status, 3 + status_offset)
numpy/lib/tests/test__iotools.py:183:            assert_(type(res) is str)
numpy/lib/tests/test__iotools.py:184:            assert_equal(res, 'a')
numpy/lib/tests/test__iotools.py:185:            assert_equal(converter._status, 8 + status_offset)
numpy/lib/tests/test__iotools.py:192:        assert_equal(converter('0'), 0)
numpy/lib/tests/test__iotools.py:193:        assert_equal(converter(''), converter.default)
numpy/lib/tests/test__iotools.py:194:        assert_equal(converter('missing'), converter.default)
numpy/lib/tests/test__iotools.py:195:        assert_equal(converter('missed'), converter.default)
numpy/lib/tests/test__iotools.py:209:            assert_equal(test, date(2001, 1, 1))
numpy/lib/tests/test__iotools.py:211:            assert_equal(test, date(2009, 1, 1))
numpy/lib/tests/test__iotools.py:213:            assert_equal(test, date(2000, 1, 1))
numpy/lib/tests/test__iotools.py:221:        assert_equal(conv._mapper, old_mapper)
numpy/lib/tests/test__iotools.py:222:        assert_(hasattr(conv, 'default'))
numpy/lib/tests/test__iotools.py:229:        assert_equal(converter.default, -999)
numpy/lib/tests/test__iotools.py:230:        assert_equal(converter.type, np.dtype(float))
numpy/lib/tests/test__iotools.py:235:        assert_equal(converter.default, 0)
numpy/lib/tests/test__iotools.py:236:        assert_equal(converter.type, np.dtype(float))
numpy/lib/tests/test__iotools.py:242:        assert_equal(converter.default, 0)
numpy/lib/tests/test__iotools.py:255:        assert_(converter(val) == -9223372036854775807)
numpy/lib/tests/test__iotools.py:257:        assert_(converter(val) == 9223372036854775807)
numpy/lib/tests/test__iotools.py:263:        assert_(converter(val) == 9223372043271415339)
numpy/lib/tests/test__iotools.py:271:        assert_equal(has_nested_fields(ndtype), False)
numpy/lib/tests/test__iotools.py:273:        assert_equal(has_nested_fields(ndtype), False)
numpy/lib/tests/test__iotools.py:275:        assert_equal(has_nested_fields(ndtype), True)
numpy/lib/tests/test__iotools.py:281:        assert_equal(easy_dtype(ndtype), np.dtype(float))
numpy/lib/tests/test__iotools.py:284:        assert_equal(easy_dtype(ndtype),
numpy/lib/tests/test__iotools.py:287:        assert_equal(easy_dtype(ndtype, defaultfmt="field_%03i"),
numpy/lib/tests/test__iotools.py:291:        assert_equal(easy_dtype(ndtype, names="a, b"),
numpy/lib/tests/test__iotools.py:295:        assert_equal(easy_dtype(ndtype, names="a, b, c"),
numpy/lib/tests/test__iotools.py:299:        assert_equal(easy_dtype(ndtype, names=", b"),
numpy/lib/tests/test__iotools.py:302:        assert_equal(easy_dtype(ndtype, names="a", defaultfmt="f%02i"),
numpy/lib/tests/test__iotools.py:306:        assert_equal(easy_dtype(ndtype), np.dtype([('A', int), ('B', float)]))
numpy/lib/tests/test__iotools.py:308:        assert_equal(easy_dtype(ndtype, names="a,b"),
numpy/lib/tests/test__iotools.py:311:        assert_equal(easy_dtype(ndtype, names="a"),
numpy/lib/tests/test__iotools.py:314:        assert_equal(easy_dtype(ndtype, names="a,b,c"),
numpy/lib/tests/test__iotools.py:318:        assert_equal(easy_dtype(ndtype),
numpy/lib/tests/test__iotools.py:322:        assert_equal(easy_dtype(ndtype, names="a, b, c"),
numpy/lib/tests/test__iotools.py:326:        assert_equal(easy_dtype(ndtype, names="a, b, c"),
numpy/lib/tests/test__iotools.py:339:        assert_equal(dt_flat, [float, float])
numpy/lib/tests/test__iotools.py:343:        assert_equal(dt_flat, [np.dtype('|S1'), np.dtype('|S2'), int])
numpy/lib/tests/test__iotools.py:347:        assert_equal(dt_flat, [float, int])
numpy/lib/tests/test__iotools.py:349:        assert_equal(dt_flat, [float] * 2 + [int] * 3)
numpy/lib/tests/test__iotools.py:353:        assert_equal(dt_flat, [float, float])
numpy/lib/tests/test_shape_base.py:47:                assert_equal(a_func, take_along_axis(a, ai_func, axis=axis))
numpy/lib/tests/test_shape_base.py:58:        assert_raises(ValueError, take_along_axis, a, np.array(1), axis=1)
numpy/lib/tests/test_shape_base.py:60:        assert_raises(IndexError, take_along_axis, a, ai.astype(bool), axis=1)
numpy/lib/tests/test_shape_base.py:62:        assert_raises(IndexError, take_along_axis, a, ai.astype(float), axis=1)
numpy/lib/tests/test_shape_base.py:64:        assert_raises(np.AxisError, take_along_axis, a, ai, axis=10)
numpy/lib/tests/test_shape_base.py:72:        assert_equal(actual.shape, ai.shape)
numpy/lib/tests/test_shape_base.py:79:        assert_equal(actual.shape, (3, 2, 5))
numpy/lib/tests/test_shape_base.py:97:            assert_equal(i_min, i_max)
numpy/lib/tests/test_shape_base.py:104:        assert_equal(take_along_axis(a, ai, axis=1), 20)
numpy/lib/tests/test_shape_base.py:110:        assert_array_equal(
numpy/lib/tests/test_shape_base.py:115:        assert_array_equal(
numpy/lib/tests/test_shape_base.py:120:        assert_array_equal(apply_along_axis(np.sum, 0, a),
numpy/lib/tests/test_shape_base.py:134:        assert_(isinstance(result, MyNDArray))
numpy/lib/tests/test_shape_base.py:135:        assert_array_equal(result, expected)
numpy/lib/tests/test_shape_base.py:138:        assert_(isinstance(result, MyNDArray))
numpy/lib/tests/test_shape_base.py:139:        assert_array_equal(result, expected)
numpy/lib/tests/test_shape_base.py:150:        assert_array_equal(
numpy/lib/tests/test_shape_base.py:157:        assert_(isinstance(res, cls))
numpy/lib/tests/test_shape_base.py:158:        assert_array_equal(res, np.array([6, 6, 6]).view(cls))
numpy/lib/tests/test_shape_base.py:163:            assert_equal(x.ndim, 1)
numpy/lib/tests/test_shape_base.py:167:        assert_(isinstance(res, cls))
numpy/lib/tests/test_shape_base.py:168:        assert_array_equal(res, np.array([6, 6, 6]).view(cls))
numpy/lib/tests/test_shape_base.py:171:        assert_(isinstance(res, cls))
numpy/lib/tests/test_shape_base.py:172:        assert_array_equal(res, np.array([3, 3, 3, 3, 3, 3]).view(cls))
numpy/lib/tests/test_shape_base.py:177:            assert_equal(x.ndim, 1)
numpy/lib/tests/test_shape_base.py:187:        assert_equal(type(actual), type(expected))
numpy/lib/tests/test_shape_base.py:188:        assert_equal(actual, expected)
numpy/lib/tests/test_shape_base.py:195:        assert_equal(type(actual), type(expected))
numpy/lib/tests/test_shape_base.py:196:        assert_equal(actual, expected)
numpy/lib/tests/test_shape_base.py:208:        assert_equal(type(actual), type(expected))
numpy/lib/tests/test_shape_base.py:209:        assert_equal(actual, expected)
numpy/lib/tests/test_shape_base.py:221:            assert_equal(x.ndim, 1)
numpy/lib/tests/test_shape_base.py:226:        assert_(isinstance(res, np.ma.masked_array))
numpy/lib/tests/test_shape_base.py:227:        assert_equal(res.ndim, 3)
numpy/lib/tests/test_shape_base.py:228:        assert_array_equal(res[:,:,0].mask, f1to2(a[:,0]).mask)
numpy/lib/tests/test_shape_base.py:229:        assert_array_equal(res[:,:,1].mask, f1to2(a[:,1]).mask)
numpy/lib/tests/test_shape_base.py:230:        assert_array_equal(res[:,:,2].mask, f1to2(a[:,2]).mask)
numpy/lib/tests/test_shape_base.py:236:        assert_array_equal(res, np.array([[2, 1], [4, 3]]))
numpy/lib/tests/test_shape_base.py:241:            assert_(False) # should never be reached
numpy/lib/tests/test_shape_base.py:244:        assert_raises(ValueError, np.apply_along_axis, never_call, 0, a)
numpy/lib/tests/test_shape_base.py:245:        assert_raises(ValueError, np.apply_along_axis, never_call, 1, a)
numpy/lib/tests/test_shape_base.py:249:            assert_(len(x) == 0)
numpy/lib/tests/test_shape_base.py:254:        assert_equal(actual, np.ones(10))
numpy/lib/tests/test_shape_base.py:255:        assert_raises(ValueError, np.apply_along_axis, empty_to_1, 0, a)
numpy/lib/tests/test_shape_base.py:266:        assert_equal(actual, expected)
numpy/lib/tests/test_shape_base.py:270:            assert_equal(type(actual[i]), type(expected[i]))
numpy/lib/tests/test_shape_base.py:277:        assert_array_equal(aoa_a, np.array([[[60], [92], [124]]]))
numpy/lib/tests/test_shape_base.py:286:            assert_(b.shape[axis] == 1)
numpy/lib/tests/test_shape_base.py:287:            assert_(np.squeeze(b).shape == s)
numpy/lib/tests/test_shape_base.py:291:        assert np.expand_dims(a, axis=(0, 1, 2)).shape == (1, 1, 1, 3, 3, 3)
numpy/lib/tests/test_shape_base.py:292:        assert np.expand_dims(a, axis=(0, -1, -2)).shape == (1, 3, 3, 3, 1, 1)
numpy/lib/tests/test_shape_base.py:293:        assert np.expand_dims(a, axis=(0, 3, 5)).shape == (1, 3, 3, 1, 3, 1)
numpy/lib/tests/test_shape_base.py:294:        assert np.expand_dims(a, axis=(0, -3, -5)).shape == (1, 1, 3, 1, 3, 3)
numpy/lib/tests/test_shape_base.py:299:        assert_raises(np.AxisError, expand_dims, a, -6)
numpy/lib/tests/test_shape_base.py:300:        assert_raises(np.AxisError, expand_dims, a, 5)
numpy/lib/tests/test_shape_base.py:303:        assert_raises(np.AxisError, expand_dims, a, (0, -6))
numpy/lib/tests/test_shape_base.py:304:        assert_raises(np.AxisError, expand_dims, a, (0, 5))
numpy/lib/tests/test_shape_base.py:308:        assert_raises(ValueError, expand_dims, a, axis=(1, 1))
numpy/lib/tests/test_shape_base.py:315:        assert_(isinstance(expanded, np.ma.MaskedArray))
numpy/lib/tests/test_shape_base.py:316:        assert_equal(expanded.shape, (2, 1, 5))
numpy/lib/tests/test_shape_base.py:317:        assert_equal(expanded.mask.shape, (2, 1, 5))
numpy/lib/tests/test_shape_base.py:323:        assert_raises(ValueError, array_split, a, 0)
numpy/lib/tests/test_shape_base.py:392:        assert_(a.dtype.type is res[-1].dtype.type)
numpy/lib/tests/test_shape_base.py:399:        assert_(a.dtype.type is res[-1].dtype.type)
numpy/lib/tests/test_shape_base.py:417:        assert_(a.dtype.type is res[-1].dtype.type)
numpy/lib/tests/test_shape_base.py:427:            assert_equal(res[i].shape, tgt[i].shape)
numpy/lib/tests/test_shape_base.py:467:        assert_raises(ValueError, split, a, 3)
numpy/lib/tests/test_shape_base.py:472:        assert_raises(TypeError, column_stack, 1)
numpy/lib/tests/test_shape_base.py:482:        assert_equal(actual, expected)
numpy/lib/tests/test_shape_base.py:492:        assert_equal(actual, expected)
numpy/lib/tests/test_shape_base.py:501:        assert_raises(TypeError, dstack, 1)
numpy/lib/tests/test_shape_base.py:508:        assert_array_equal(res, desired)
numpy/lib/tests/test_shape_base.py:515:        assert_array_equal(res, desired)
numpy/lib/tests/test_shape_base.py:522:        assert_array_equal(res, desired)
numpy/lib/tests/test_shape_base.py:529:        assert_array_equal(res, desired)
numpy/lib/tests/test_shape_base.py:543:        assert_raises(ValueError, hsplit, 1, 1)
numpy/lib/tests/test_shape_base.py:549:            assert_(0)
numpy/lib/tests/test_shape_base.py:572:        assert_raises(ValueError, vsplit, 1, 1)
numpy/lib/tests/test_shape_base.py:576:        assert_raises(ValueError, vsplit, a, 2)
numpy/lib/tests/test_shape_base.py:582:            assert_(0)
numpy/lib/tests/test_shape_base.py:597:        assert_raises(ValueError, dsplit, 1, 1)
numpy/lib/tests/test_shape_base.py:601:        assert_raises(ValueError, dsplit, a, 2)
numpy/lib/tests/test_shape_base.py:605:        assert_raises(ValueError, dsplit, a, 2)
numpy/lib/tests/test_shape_base.py:612:            assert_(0)
numpy/lib/tests/test_shape_base.py:634:        assert_array_equal(np.squeeze(a), np.reshape(a, (20, 10, 10)))
numpy/lib/tests/test_shape_base.py:635:        assert_array_equal(np.squeeze(b), np.reshape(b, (20, 10, 20)))
numpy/lib/tests/test_shape_base.py:636:        assert_array_equal(np.squeeze(c), np.reshape(c, (20, 10)))
numpy/lib/tests/test_shape_base.py:641:        assert_equal(res, 1.5)
numpy/lib/tests/test_shape_base.py:642:        assert_equal(res.ndim, 0)
numpy/lib/tests/test_shape_base.py:643:        assert_equal(type(res), np.ndarray)
numpy/lib/tests/test_shape_base.py:653:        assert_equal(type(kron(a, a)), np.ndarray)
numpy/lib/tests/test_shape_base.py:654:        assert_equal(type(kron(ma, ma)), myarray)
numpy/lib/tests/test_shape_base.py:655:        assert_equal(type(kron(a, ma)), myarray)
numpy/lib/tests/test_shape_base.py:656:        assert_equal(type(kron(ma, a)), myarray)
numpy/lib/tests/test_shape_base.py:666:        assert_array_equal(np.kron(a, b), k)
numpy/lib/tests/test_shape_base.py:673:        assert_array_equal(k, np.kron(x, x))
numpy/lib/tests/test_shape_base.py:692:        assert np.array_equal(
numpy/lib/tests/test_shape_base.py:700:        assert_equal(tile(a, 2), [0, 1, 2, 0, 1, 2])
numpy/lib/tests/test_shape_base.py:701:        assert_equal(tile(a, (2, 2)), [[0, 1, 2, 0, 1, 2], [0, 1, 2, 0, 1, 2]])
numpy/lib/tests/test_shape_base.py:702:        assert_equal(tile(a, (1, 2)), [[0, 1, 2, 0, 1, 2]])
numpy/lib/tests/test_shape_base.py:703:        assert_equal(tile(b, 2), [[1, 2, 1, 2], [3, 4, 3, 4]])
numpy/lib/tests/test_shape_base.py:704:        assert_equal(tile(b, (2, 1)), [[1, 2], [3, 4], [1, 2], [3, 4]])
numpy/lib/tests/test_shape_base.py:705:        assert_equal(tile(b, (2, 2)), [[1, 2, 1, 2], [3, 4, 3, 4],
numpy/lib/tests/test_shape_base.py:712:        assert_equal(a, np.arange(5))
numpy/lib/tests/test_shape_base.py:719:        assert_equal(c, (2, 0))
numpy/lib/tests/test_shape_base.py:720:        assert_equal(d, (3, 2, 0))
numpy/lib/tests/test_shape_base.py:733:                assert_equal(large, klarge)
numpy/lib/tests/test_shape_base.py:740:        assert_(np.may_share_memory(d, d))
numpy/lib/tests/test_shape_base.py:741:        assert_(np.may_share_memory(d, d[::-1]))
numpy/lib/tests/test_shape_base.py:742:        assert_(np.may_share_memory(d, d[::2]))
numpy/lib/tests/test_shape_base.py:743:        assert_(np.may_share_memory(d, d[1:, ::-1]))
numpy/lib/tests/test_shape_base.py:745:        assert_(not np.may_share_memory(d[::-1], d2))
numpy/lib/tests/test_shape_base.py:746:        assert_(not np.may_share_memory(d[::2], d2))
numpy/lib/tests/test_shape_base.py:747:        assert_(not np.may_share_memory(d[1:, ::-1], d2))
numpy/lib/tests/test_shape_base.py:748:        assert_(np.may_share_memory(d2[1:, ::-1], d2))
numpy/lib/tests/test_shape_base.py:758:        assert_array_equal(x, y)
numpy/lib/tests/test_ufunclike.py:17:        assert_equal(res, tgt)
numpy/lib/tests/test_ufunclike.py:19:        assert_equal(res, tgt)
numpy/lib/tests/test_ufunclike.py:20:        assert_equal(out, tgt)
numpy/lib/tests/test_ufunclike.py:32:        assert_equal(res, tgt)
numpy/lib/tests/test_ufunclike.py:34:        assert_equal(res, tgt)
numpy/lib/tests/test_ufunclike.py:35:        assert_equal(out, tgt)
numpy/lib/tests/test_ufunclike.py:47:        assert_equal(res, tgt)
numpy/lib/tests/test_ufunclike.py:49:        assert_equal(res, tgt)
numpy/lib/tests/test_ufunclike.py:50:        assert_equal(out, tgt)
numpy/lib/tests/test_ufunclike.py:51:        assert_equal(ufl.fix(3.14), 3)
numpy/lib/tests/test_ufunclike.py:72:        assert_array_equal(f, nx.array([1, -1]))
numpy/lib/tests/test_ufunclike.py:73:        assert_(isinstance(f, MyArray))
numpy/lib/tests/test_ufunclike.py:74:        assert_equal(f.metadata, 'foo')
numpy/lib/tests/test_ufunclike.py:80:        assert_(isinstance(f0d, MyArray))
numpy/lib/tests/test_ufunclike.py:81:        assert_equal(f0d.metadata, 'bar')
numpy/lib/tests/test_ufunclike.py:85:        assert_warns(DeprecationWarning, ufl.fix, [1, 2], y=nx.empty(2))
numpy/lib/tests/test_ufunclike.py:86:        assert_warns(DeprecationWarning, ufl.isposinf, [1, 2], y=nx.empty(2))
numpy/lib/tests/test_ufunclike.py:87:        assert_warns(DeprecationWarning, ufl.isneginf, [1, 2], y=nx.empty(2))
numpy/lib/tests/test_ufunclike.py:93:        assert_equal(actual, expected)
numpy/lib/tests/test_ufunclike.py:94:        assert_equal(type(actual), type(expected))
numpy/lib/tests/test_ufunclike.py:99:        assert_equal(actual, expected)
numpy/lib/tests/test_ufunclike.py:100:        assert_equal(type(actual), type(expected))
numpy/lib/tests/test_ufunclike.py:104:        assert_(actual is out)
numpy/lib/tests/test_index_tricks.py:16:        assert_equal(np.unravel_index(2, (2, 2)), (1, 0))
numpy/lib/tests/test_index_tricks.py:37:        assert_equal(np.ravel_multi_index((1, 0), (2, 2)), 2)
numpy/lib/tests/test_index_tricks.py:38:        assert_equal(np.unravel_index(254, (17, 94)), (2, 66))
numpy/lib/tests/test_index_tricks.py:39:        assert_equal(np.ravel_multi_index((2, 66), (17, 94)), 254)
numpy/lib/tests/test_index_tricks.py:40:        assert_raises(ValueError, np.unravel_index, -1, (2, 2))
numpy/lib/tests/test_index_tricks.py:41:        assert_raises(TypeError, np.unravel_index, 0.5, (2, 2))
numpy/lib/tests/test_index_tricks.py:42:        assert_raises(ValueError, np.unravel_index, 4, (2, 2))
numpy/lib/tests/test_index_tricks.py:43:        assert_raises(ValueError, np.ravel_multi_index, (-3, 1), (2, 2))
numpy/lib/tests/test_index_tricks.py:44:        assert_raises(ValueError, np.ravel_multi_index, (2, 1), (2, 2))
numpy/lib/tests/test_index_tricks.py:45:        assert_raises(ValueError, np.ravel_multi_index, (0, -3), (2, 2))
numpy/lib/tests/test_index_tricks.py:46:        assert_raises(ValueError, np.ravel_multi_index, (0, 2), (2, 2))
numpy/lib/tests/test_index_tricks.py:47:        assert_raises(TypeError, np.ravel_multi_index, (0.1, 0.), (2, 2))
numpy/lib/tests/test_index_tricks.py:49:        assert_equal(np.unravel_index((2*3 + 1)*6 + 4, (4, 3, 6)), [2, 1, 4])
numpy/lib/tests/test_index_tricks.py:54:        assert_equal(np.ravel_multi_index(arr, (7, 6)), [22, 41, 37])
numpy/lib/tests/test_index_tricks.py:59:        assert_equal(np.ravel_multi_index(arr, (4, 4), mode=('clip', 'wrap')),
numpy/lib/tests/test_index_tricks.py:61:        assert_equal(np.ravel_multi_index((3, 1, 4, 1), (6, 7, 8, 9)), 1621)
numpy/lib/tests/test_index_tricks.py:63:        assert_equal(np.unravel_index(np.array([22, 41, 37]), (7, 6)),
numpy/lib/tests/test_index_tricks.py:68:        assert_equal(np.unravel_index(1621, (6, 7, 8, 9)), [3, 1, 4, 1])
numpy/lib/tests/test_index_tricks.py:73:        assert_raises_regex(TypeError, msg1, np.unravel_index, [], (10, 3, 5))
numpy/lib/tests/test_index_tricks.py:74:        assert_raises_regex(TypeError, msg1, np.unravel_index, (), (10, 3, 5))
numpy/lib/tests/test_index_tricks.py:75:        assert_raises_regex(TypeError, msg2, np.unravel_index, np.array([]),
numpy/lib/tests/test_index_tricks.py:77:        assert_equal(np.unravel_index(np.array([],dtype=int), (10, 3, 5)),
numpy/lib/tests/test_index_tricks.py:79:        assert_raises_regex(TypeError, msg1, np.ravel_multi_index, ([], []),
numpy/lib/tests/test_index_tricks.py:81:        assert_raises_regex(TypeError, msg1, np.ravel_multi_index, ([], ['abc']),
numpy/lib/tests/test_index_tricks.py:83:        assert_raises_regex(TypeError, msg2, np.ravel_multi_index,
numpy/lib/tests/test_index_tricks.py:87:        assert_equal(np.ravel_multi_index(np.array([[], []], dtype=int),
numpy/lib/tests/test_index_tricks.py:100:        assert_raises(ValueError, np.unravel_index, 1, (2**32-1, 2**31+1))
numpy/lib/tests/test_index_tricks.py:122:            assert_equal(np.ravel_multi_index(coords, shape), uncoords)
numpy/lib/tests/test_index_tricks.py:123:            assert_equal(coords, np.unravel_index(uncoords, shape))
numpy/lib/tests/test_index_tricks.py:127:            assert_equal(coords, np.unravel_index(uncoords, shape, order='F'))
numpy/lib/tests/test_index_tricks.py:134:            assert_equal(np.ravel_multi_index(coords, shape), uncoords)
numpy/lib/tests/test_index_tricks.py:135:            assert_equal(coords, np.unravel_index(uncoords, shape))
numpy/lib/tests/test_index_tricks.py:139:            assert_equal(coords, np.unravel_index(uncoords, shape, order='F'))
numpy/lib/tests/test_index_tricks.py:146:        assert_equal(np.ravel_multi_index([5, 1, -1, 2], (4, 3, 7, 12),
numpy/lib/tests/test_index_tricks.py:156:        assert_(x.flags.writeable)
numpy/lib/tests/test_index_tricks.py:157:        assert_(y.flags.writeable)
numpy/lib/tests/test_index_tricks.py:162:        assert_equal(x, ())
numpy/lib/tests/test_index_tricks.py:164:        assert_raises_regex(ValueError, "0d array", np.unravel_index, [0], ())
numpy/lib/tests/test_index_tricks.py:165:        assert_raises_regex(
numpy/lib/tests/test_index_tricks.py:172:        assert(res.shape == (0,))
numpy/lib/tests/test_index_tricks.py:181:        assert(len(res) == 3)
numpy/lib/tests/test_index_tricks.py:182:        assert(all(a.shape == (0,) for a in res))
numpy/lib/tests/test_index_tricks.py:191:        assert_(a.shape == (10,))
numpy/lib/tests/test_index_tricks.py:192:        assert_(b.shape == (20,))
numpy/lib/tests/test_index_tricks.py:193:        assert_(a[0] == -1)
numpy/lib/tests/test_index_tricks.py:194:        assert_almost_equal(a[-1], 1)
numpy/lib/tests/test_index_tricks.py:195:        assert_(b[0] == -1)
numpy/lib/tests/test_index_tricks.py:196:        assert_almost_equal(b[1]-b[0], 0.1, 11)
numpy/lib/tests/test_index_tricks.py:197:        assert_almost_equal(b[-1], b[0]+19*0.1, 11)
numpy/lib/tests/test_index_tricks.py:198:        assert_almost_equal(a[1]-a[0], 2.0/9.0, 11)
numpy/lib/tests/test_index_tricks.py:202:        assert_almost_equal(st, 8/49.0)
numpy/lib/tests/test_index_tricks.py:203:        assert_array_almost_equal(y, mgrid[2:10:50j], 13)
numpy/lib/tests/test_index_tricks.py:208:        assert_(c.shape == (2, 10, 10))
numpy/lib/tests/test_index_tricks.py:209:        assert_(d.shape == (2, 20, 20))
numpy/lib/tests/test_index_tricks.py:210:        assert_array_equal(c[0][0, :], -np.ones(10, 'd'))
numpy/lib/tests/test_index_tricks.py:211:        assert_array_equal(c[1][:, 0], -2*np.ones(10, 'd'))
numpy/lib/tests/test_index_tricks.py:212:        assert_array_almost_equal(c[0][-1, :], np.ones(10, 'd'), 11)
numpy/lib/tests/test_index_tricks.py:213:        assert_array_almost_equal(c[1][:, -1], 2*np.ones(10, 'd'), 11)
numpy/lib/tests/test_index_tricks.py:214:        assert_array_almost_equal(d[0, 1, :] - d[0, 0, :],
numpy/lib/tests/test_index_tricks.py:216:        assert_array_almost_equal(d[1, :, 1] - d[1, :, 0],
numpy/lib/tests/test_index_tricks.py:226:            assert_equal(f, b)
numpy/lib/tests/test_index_tricks.py:241:        assert_equal(grid.size, expected[0])
numpy/lib/tests/test_index_tricks.py:242:        assert_equal(grid_small.size, expected[1])
numpy/lib/tests/test_index_tricks.py:248:        assert_(grid32.dtype == np.float64)
numpy/lib/tests/test_index_tricks.py:249:        assert_array_almost_equal(grid64, grid32)
numpy/lib/tests/test_index_tricks.py:254:        assert_(grid32.dtype == np.float64)
numpy/lib/tests/test_index_tricks.py:255:        assert_array_almost_equal(grid64, grid32)
numpy/lib/tests/test_index_tricks.py:259:        assert_array_almost_equal(
numpy/lib/tests/test_index_tricks.py:264:        assert_array_almost_equal(
numpy/lib/tests/test_index_tricks.py:270:        assert_array_equal(r_[1, 2, 3, 4, 5, 6], np.array([1, 2, 3, 4, 5, 6]))
numpy/lib/tests/test_index_tricks.py:273:        assert_array_equal(c, [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1])
numpy/lib/tests/test_index_tricks.py:277:        assert_(g.dtype == 'f8')
numpy/lib/tests/test_index_tricks.py:281:        assert_(g.dtype == 'f8')
numpy/lib/tests/test_index_tricks.py:286:        assert_(g.shape == (100,))
numpy/lib/tests/test_index_tricks.py:290:        assert_(g.shape == (100,))
numpy/lib/tests/test_index_tricks.py:296:        assert_(d.shape == (5, 10))
numpy/lib/tests/test_index_tricks.py:297:        assert_array_equal(d[:, :5], b)
numpy/lib/tests/test_index_tricks.py:298:        assert_array_equal(d[:, 5:], c)
numpy/lib/tests/test_index_tricks.py:300:        assert_(d.shape == (10, 5))
numpy/lib/tests/test_index_tricks.py:301:        assert_array_equal(d[:5, :], b)
numpy/lib/tests/test_index_tricks.py:302:        assert_array_equal(d[5:, :], c)
numpy/lib/tests/test_index_tricks.py:305:        assert_equal(r_[0, np.array(1), 2], [0, 1, 2])
numpy/lib/tests/test_index_tricks.py:306:        assert_equal(r_[[0, 1, 2], np.array(3)], [0, 1, 2, 3])
numpy/lib/tests/test_index_tricks.py:307:        assert_equal(r_[np.array(0), [1, 2, 3]], [0, 1, 2, 3])
numpy/lib/tests/test_index_tricks.py:313:        assert_equal(list(ndenumerate(a)),
numpy/lib/tests/test_index_tricks.py:321:        assert_equal(a[:-1], a[s_[:-1]])
numpy/lib/tests/test_index_tricks.py:322:        assert_equal(a[:-1], a[index_exp[:-1]])
numpy/lib/tests/test_index_tricks.py:327:        assert_equal(a[:, :3, [1, 2]], a[index_exp[:, :3, [1, 2]]])
numpy/lib/tests/test_index_tricks.py:328:        assert_equal(a[:, :3, [1, 2]], a[s_[:, :3, [1, 2]]])
numpy/lib/tests/test_index_tricks.py:335:        assert_equal(a.dtype, np.intp)
numpy/lib/tests/test_index_tricks.py:338:        assert_equal(a.dtype, np.intp)
numpy/lib/tests/test_index_tricks.py:342:        assert_equal(a.dtype, np.float32)
numpy/lib/tests/test_index_tricks.py:350:                assert_equal(a.shape[k], sz)
numpy/lib/tests/test_index_tricks.py:351:                assert_(all(sh == 1 for j, sh in enumerate(a.shape) if j != k))
numpy/lib/tests/test_index_tricks.py:352:                assert_(np.issubdtype(a.dtype, np.integer))
numpy/lib/tests/test_index_tricks.py:357:        assert_equal(np.ix_(bool_a)[0], int_a)
numpy/lib/tests/test_index_tricks.py:361:        assert_raises(ValueError, np.ix_, idx2d)
numpy/lib/tests/test_index_tricks.py:367:        assert_equal(out[0].shape, (length_of_vector, 1))
numpy/lib/tests/test_index_tricks.py:368:        assert_equal(out[1].shape, (1, length_of_vector))
numpy/lib/tests/test_index_tricks.py:370:        assert_equal(x.shape, (length_of_vector,))
numpy/lib/tests/test_index_tricks.py:375:    assert_equal(a, [[1, 2, 3, 0, 0, 4, 5, 6]])
numpy/lib/tests/test_index_tricks.py:382:        assert_array_equal(
numpy/lib/tests/test_index_tricks.py:391:        assert_array_equal(
numpy/lib/tests/test_index_tricks.py:407:        assert_array_equal(
numpy/lib/tests/test_index_tricks.py:423:        assert_array_equal(
numpy/lib/tests/test_index_tricks.py:433:        assert_equal(np.where(a != 0), (i, i, i, i))
numpy/lib/tests/test_index_tricks.py:456:    assert_array_equal(
numpy/lib/tests/test_index_tricks.py:469:    assert_array_equal(
numpy/lib/tests/test_index_tricks.py:482:        assert_array_equal(r, np.arange(4))
numpy/lib/tests/test_index_tricks.py:483:        assert_array_equal(c, np.arange(4))
numpy/lib/tests/test_index_tricks.py:499:    assert_array_equal(x, expected)
numpy/lib/tests/test_index_tricks.py:502:    assert_array_equal(x, expected)
numpy/lib/tests/test_index_tricks.py:506:    assert_array_equal(x, list(ndindex(3)))
numpy/lib/tests/test_index_tricks.py:510:    assert_equal(x, [()])
numpy/lib/tests/test_index_tricks.py:513:    assert_equal(x, [()])
numpy/lib/tests/test_index_tricks.py:517:    assert_equal(x, [])
numpy/lib/tests/test_arrayterator.py:25:        assert_(len(block.flat) <= (buf_size or els))
numpy/lib/tests/test_arrayterator.py:28:    assert_(list(b.flat) == list(a.flat))
numpy/lib/tests/test_arrayterator.py:40:        assert_(len(block.flat) <= (buf_size or els))
numpy/lib/tests/test_arrayterator.py:43:    assert_(np.all(c.__array__() == d))
numpy/lib/tests/test_arrayterator.py:46:    assert_(list(c.flat) == list(d.flat))
numpy/lib/tests/test__version.py:9:    assert_(NumpyVersion('1.8.0') == '1.8.0')
numpy/lib/tests/test__version.py:11:        assert_(NumpyVersion('1.8.0') < ver)
numpy/lib/tests/test__version.py:14:        assert_(NumpyVersion('1.8.0') > ver)
numpy/lib/tests/test__version.py:19:    assert_(NumpyVersion('1.9.0') < '1.10.0')
numpy/lib/tests/test__version.py:20:    assert_(NumpyVersion('1.11.0') < '1.11.1')
numpy/lib/tests/test__version.py:21:    assert_(NumpyVersion('1.11.0') == '1.11.0')
numpy/lib/tests/test__version.py:22:    assert_(NumpyVersion('1.99.11') < '1.99.12')
numpy/lib/tests/test__version.py:26:    assert_(NumpyVersion('1.8.0rc1') == '1.8.0rc1')
numpy/lib/tests/test__version.py:28:        assert_(NumpyVersion('1.8.0rc1') < ver)
numpy/lib/tests/test__version.py:31:        assert_(NumpyVersion('1.8.0rc1') > ver)
numpy/lib/tests/test__version.py:33:    assert_(NumpyVersion('1.8.0b1') > '1.8.0a2')
numpy/lib/tests/test__version.py:37:    assert_(NumpyVersion('1.9.0.dev-Unknown') < '1.9.0')
numpy/lib/tests/test__version.py:39:        assert_(NumpyVersion('1.9.0.dev-f16acvda') < ver)
numpy/lib/tests/test__version.py:41:    assert_(NumpyVersion('1.9.0.dev-f16acvda') == '1.9.0.dev-11111111')
numpy/lib/tests/test__version.py:45:    assert_(NumpyVersion('1.9.0a2.dev-f16acvda') == '1.9.0a2.dev-11111111')
numpy/lib/tests/test__version.py:46:    assert_(NumpyVersion('1.9.0a2.dev-6acvda54') < '1.9.0a2')
numpy/lib/tests/test__version.py:50:    assert_(NumpyVersion('1.9.0.dev0+Unknown') < '1.9.0')
numpy/lib/tests/test__version.py:52:        assert_(NumpyVersion('1.9.0.dev0+f16acvda') < ver)
numpy/lib/tests/test__version.py:54:    assert_(NumpyVersion('1.9.0.dev0+f16acvda') == '1.9.0.dev0+11111111')
numpy/lib/tests/test__version.py:58:    assert_(NumpyVersion('1.9.0a2.dev0+f16acvda') == '1.9.0a2.dev0+11111111')
numpy/lib/tests/test__version.py:59:    assert_(NumpyVersion('1.9.0a2.dev0+6acvda54') < '1.9.0a2')
numpy/lib/tests/test__version.py:64:        assert_raises(ValueError, NumpyVersion, ver)
numpy/lib/tests/test_io.py:186:        assert_equal(self.arr[0], self.arr_reloaded)
numpy/lib/tests/test_io.py:187:        assert_equal(self.arr[0].dtype, self.arr_reloaded.dtype)
numpy/lib/tests/test_io.py:188:        assert_equal(self.arr[0].flags.fnc, self.arr_reloaded.flags.fnc)
numpy/lib/tests/test_io.py:197:                assert_equal(arr, reloaded)
numpy/lib/tests/test_io.py:198:                assert_equal(arr.dtype, reloaded.dtype)
numpy/lib/tests/test_io.py:199:                assert_equal(arr.flags.fnc, reloaded.flags.fnc)
numpy/lib/tests/test_io.py:231:        assert_equal(a, l['file_a'])
numpy/lib/tests/test_io.py:232:        assert_equal(b, l['file_b'])
numpy/lib/tests/test_io.py:241:        assert_equal(sorted(dir(l.f)), ['file_a','file_b'])
numpy/lib/tests/test_io.py:242:        assert_equal(a, l.f.file_a)
numpy/lib/tests/test_io.py:243:        assert_equal(b, l.f.file_b)
numpy/lib/tests/test_io.py:276:                assert_(not fp.closed)
numpy/lib/tests/test_io.py:279:                assert_(not fp.closed)
numpy/lib/tests/test_io.py:281:                assert_(not fp.closed)
numpy/lib/tests/test_io.py:320:            assert_(fp.closed)
numpy/lib/tests/test_io.py:330:        assert_equal(c.readlines(),
numpy/lib/tests/test_io.py:338:        assert_equal(c.readlines(), [b'1 2\n', b'3 4\n'])
numpy/lib/tests/test_io.py:346:        assert_equal(lines, [b'1\n', b'2\n', b'3\n', b'4\n'])
numpy/lib/tests/test_io.py:350:        assert_raises(ValueError, np.savetxt, c, np.array(1))
numpy/lib/tests/test_io.py:351:        assert_raises(ValueError, np.savetxt, c, np.array([[[1], [2]]]))
numpy/lib/tests/test_io.py:358:        assert_equal(c.readlines(), [b'1 2\n', b'3 4\n'])
numpy/lib/tests/test_io.py:368:        assert_equal(c.readlines(), [b'1 3\n', b'4 6\n'])
numpy/lib/tests/test_io.py:377:            assert_array_equal(data, v)
numpy/lib/tests/test_io.py:384:        assert_equal(c.readlines(), [b'1,2\n', b'3,4\n'])
numpy/lib/tests/test_io.py:392:        assert_equal(c.readlines(), [b'01 2.0\n', b'03 4.0\n'])
numpy/lib/tests/test_io.py:399:        assert_equal(lines, [b'01 : 2.0\n', b'03 : 4.0\n'])
numpy/lib/tests/test_io.py:406:        assert_equal(lines, [b'01 : 2.0\n', b'03 : 4.0\n'])
numpy/lib/tests/test_io.py:410:        assert_raises(ValueError, np.savetxt, c, a, fmt=99)
numpy/lib/tests/test_io.py:421:        assert_equal(c.read(),
numpy/lib/tests/test_io.py:427:        assert_equal(c.read(),
numpy/lib/tests/test_io.py:435:        assert_equal(c.read(),
numpy/lib/tests/test_io.py:443:        assert_equal(c.read(),
numpy/lib/tests/test_io.py:451:            assert_array_equal(a, b)
numpy/lib/tests/test_io.py:519:        assert_array_equal(a, b)
numpy/lib/tests/test_io.py:544:                assert_array_equal(a, b)
numpy/lib/tests/test_io.py:552:        assert_equal(s.read().decode('UTF-8'), utf8 + '\n')
numpy/lib/tests/test_io.py:560:        assert_equal(s.read(), utf8 + '\n')
numpy/lib/tests/test_io.py:571:            assert_equal(s.read(), u"%f\n" % 1.)
numpy/lib/tests/test_io.py:573:            assert_equal(s.read(), b"%f\n" % 1.)
numpy/lib/tests/test_io.py:605:        assert p.exitcode == 0
numpy/lib/tests/test_io.py:619:                    assert_array_equal(res, wanted)
numpy/lib/tests/test_io.py:622:                    assert_array_equal(res, wanted)
numpy/lib/tests/test_io.py:640:            assert_array_equal(x, [0., 1., 2.])
numpy/lib/tests/test_io.py:649:            assert_array_equal(x, nonascii)
numpy/lib/tests/test_io.py:654:        assert_array_equal(v, np.array(utf16.decode('UTF-16').split()))
numpy/lib/tests/test_io.py:664:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:676:            assert_array_equal(x, a)
numpy/lib/tests/test_io.py:695:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:705:        assert_array_equal(y, b)
numpy/lib/tests/test_io.py:714:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:719:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:727:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:734:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:743:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:753:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:762:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:771:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:780:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:791:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:807:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:815:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:823:        assert_array_equal(x, a[:, 1])
numpy/lib/tests/test_io.py:830:        assert_array_equal(x, a[:, 1:])
numpy/lib/tests/test_io.py:835:        assert_array_equal(x, a[:, 1:])
numpy/lib/tests/test_io.py:844:            assert_array_equal(x, a[:, 1])
numpy/lib/tests/test_io.py:854:        assert_array_equal(x, a[:, 1])
numpy/lib/tests/test_io.py:858:        assert_array_equal(x, a[:, 1])
numpy/lib/tests/test_io.py:868:        assert_equal(arr['stid'], [b"JOE", b"BOB"])
numpy/lib/tests/test_io.py:869:        assert_equal(arr['temp'], [25.3, 27.9])
numpy/lib/tests/test_io.py:874:        assert_raises_regex(
numpy/lib/tests/test_io.py:880:        assert_raises_regex(
numpy/lib/tests/test_io.py:904:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:913:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:923:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:932:            assert_array_equal(x, a)
numpy/lib/tests/test_io.py:938:            assert_equal(x.shape, (0,))
numpy/lib/tests/test_io.py:940:            assert_equal(x.shape, (0,))
numpy/lib/tests/test_io.py:941:            assert_(x.dtype == np.int64)
numpy/lib/tests/test_io.py:949:        assert_array_equal(data, [21, 42])
numpy/lib/tests/test_io.py:954:        assert_array_equal(data, [33, 66])
numpy/lib/tests/test_io.py:968:        assert_equal(test, control)
numpy/lib/tests/test_io.py:976:        assert_equal(res, tgt)
numpy/lib/tests/test_io.py:984:        assert_equal(res, tgt)
numpy/lib/tests/test_io.py:998:            assert_equal(res, tgt, err_msg="%s" % dt)
numpy/lib/tests/test_io.py:1030:        assert_equal(res, tgt)
numpy/lib/tests/test_io.py:1046:        assert_(txt_bad != txt)
numpy/lib/tests/test_io.py:1050:        assert_equal(res, a)
numpy/lib/tests/test_io.py:1057:        assert_array_equal(data, [[1, 21], [3, 42]])
numpy/lib/tests/test_io.py:1067:        assert_array_equal(x['comment'], a)
numpy/lib/tests/test_io.py:1073:        assert_(a.dtype.str == '|S1')
numpy/lib/tests/test_io.py:1074:        assert_(b.dtype.str == '<i4')
numpy/lib/tests/test_io.py:1075:        assert_(c.dtype.str == '<f4')
numpy/lib/tests/test_io.py:1076:        assert_array_equal(a, np.array([b'M', b'F']))
numpy/lib/tests/test_io.py:1077:        assert_array_equal(b, np.array([21, 35]))
numpy/lib/tests/test_io.py:1078:        assert_array_equal(c, np.array([72.,  58.]))
numpy/lib/tests/test_io.py:1084:        assert_raises(ValueError, np.loadtxt, c, ndmin=3)
numpy/lib/tests/test_io.py:1086:        assert_raises(ValueError, np.loadtxt, c, ndmin=1.5)
numpy/lib/tests/test_io.py:1090:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1096:        assert_(x.shape == (1, 3))
numpy/lib/tests/test_io.py:1099:        assert_(x.shape == (3,))
numpy/lib/tests/test_io.py:1102:        assert_(x.shape == (3,))
numpy/lib/tests/test_io.py:1108:        assert_(x.shape == (3, 1))
numpy/lib/tests/test_io.py:1111:        assert_(x.shape == (3,))
numpy/lib/tests/test_io.py:1114:        assert_(x.shape == (3,))
numpy/lib/tests/test_io.py:1119:            assert_(np.loadtxt(f, ndmin=2).shape == (0, 1,))
numpy/lib/tests/test_io.py:1120:            assert_(np.loadtxt(f, ndmin=1).shape == (0,))
numpy/lib/tests/test_io.py:1128:        assert_array_equal(res, np.arange(10))
numpy/lib/tests/test_io.py:1136:        assert_raises_regex(ValueError, "3", np.loadtxt, c)
numpy/lib/tests/test_io.py:1157:            assert_array_equal(x, sutf8)
numpy/lib/tests/test_io.py:1162:            assert_array_equal(x, np.array(x, dtype="S"))
numpy/lib/tests/test_io.py:1171:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1180:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1188:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1197:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1201:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1211:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1227:            assert_array_equal(res, [[-1, 0], [1, 2], [3, 4]][skip:])
numpy/lib/tests/test_io.py:1248:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1259:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1269:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1283:            assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1287:            assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1295:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1315:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1323:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1330:        assert_array_equal(test, control)
numpy/lib/tests/test_io.py:1335:        assert_array_equal(test, control)
numpy/lib/tests/test_io.py:1343:        assert_array_equal(test, control)
numpy/lib/tests/test_io.py:1347:        assert_array_equal(test, control)
numpy/lib/tests/test_io.py:1355:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1359:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1368:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1372:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1383:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:1396:            assert_equal(a, np.array([[1., 1.], [2., 2.], [3., 3.], [4., 4.]]))
numpy/lib/tests/test_io.py:1399:            assert_equal(a, np.array([[1., 1.], [2., 2.], [3., 3.], [4., 4.]]))
numpy/lib/tests/test_io.py:1404:            assert_equal(a, np.array([[1., 1.], [3., 3.], [4., 4.], [6., 6.]]))
numpy/lib/tests/test_io.py:1407:            assert_equal(a, np.array([[1., 1.], [3., 3.], [4., 4.]]))
numpy/lib/tests/test_io.py:1415:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:1419:        assert_equal(test['gender'], control['gender'])
numpy/lib/tests/test_io.py:1420:        assert_equal(test['age'], control['age'])
numpy/lib/tests/test_io.py:1421:        assert_equal(test['weight'], control['weight'])
numpy/lib/tests/test_io.py:1429:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:1435:        assert_equal(test.dtype.names, ['f0', 'f1', 'f2', 'f3', 'f4'])
numpy/lib/tests/test_io.py:1437:            assert_equal(test['f%i' % i], ctrl)
numpy/lib/tests/test_io.py:1444:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1452:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1464:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1482:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:1485:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:1496:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:1497:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:1504:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1526:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:1529:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1538:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1548:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:1551:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1562:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1573:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1580:        assert_equal(test, [21, 42])
numpy/lib/tests/test_io.py:1585:        assert_equal(test, [33, 66])
numpy/lib/tests/test_io.py:1598:        assert_raises(ConverterError, np.genfromtxt, s, **kwargs)
numpy/lib/tests/test_io.py:1606:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1614:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1618:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1628:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1633:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1647:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1665:        assert parsed[()] == b"1"
numpy/lib/tests/test_io.py:1667:        assert parsed[()] == b"string"
numpy/lib/tests/test_io.py:1676:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1688:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1696:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1703:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1710:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1719:        assert_equal(test.data, ctrl_d)
numpy/lib/tests/test_io.py:1720:        assert_equal(test.mask, ctrl_m)
numpy/lib/tests/test_io.py:1730:        assert_equal(test, control[:, 1])
numpy/lib/tests/test_io.py:1737:        assert_equal(test, control[:, 1:])
numpy/lib/tests/test_io.py:1741:        assert_equal(test, control[:, 1:])
numpy/lib/tests/test_io.py:1749:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:1758:        assert_equal(test['stid'], [b"JOE", b"BOB"])
numpy/lib/tests/test_io.py:1759:        assert_equal(test['temp'], [25.3, 27.9])
numpy/lib/tests/test_io.py:1764:        assert_equal(test, np.array([1., 4.]))
numpy/lib/tests/test_io.py:1772:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:1775:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:1783:            assert_equal(test, np.array([]))
numpy/lib/tests/test_io.py:1787:            assert_equal(test, np.array([]))
numpy/lib/tests/test_io.py:1795:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1804:        assert_array_equal(x, a)
numpy/lib/tests/test_io.py:1813:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1814:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_io.py:1821:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1822:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_io.py:1835:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1844:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1854:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1868:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:1872:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:1878:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:1882:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:1891:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1892:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_io.py:1900:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1910:        assert_equal(test, control)
numpy/lib/tests/test_io.py:1924:        assert_equal(len(mtest), 45)
numpy/lib/tests/test_io.py:1925:        assert_equal(mtest, np.ones(45, dtype=[(_, int) for _ in 'abcde']))
numpy/lib/tests/test_io.py:1944:        assert_equal(len(mtest), 45)
numpy/lib/tests/test_io.py:1945:        assert_equal(mtest, np.ones(45, dtype=[(_, int) for _ in 'ae']))
numpy/lib/tests/test_io.py:1949:        assert_equal(len(mtest), 50)
numpy/lib/tests/test_io.py:1952:        assert_equal(mtest, control)
numpy/lib/tests/test_io.py:1962:        assert_raises(ValueError, np.genfromtxt, mdata, **kwargs)
numpy/lib/tests/test_io.py:1971:        assert_equal(mtest, ctrl)
numpy/lib/tests/test_io.py:1979:        assert_equal(mtest, ctrl)
numpy/lib/tests/test_io.py:1988:        assert_equal(mtest, ctrl)
numpy/lib/tests/test_io.py:1997:        assert_equal(mtest, ctrl)
numpy/lib/tests/test_io.py:2006:        assert_equal(mtest, ctrl)
numpy/lib/tests/test_io.py:2015:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:2018:        assert_equal(mtest, ctrl)
numpy/lib/tests/test_io.py:2022:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:2025:        assert_equal(mtest, ctrl)
numpy/lib/tests/test_io.py:2035:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:2042:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:2049:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:2059:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:2066:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:2073:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:2083:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:2096:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:2105:        assert_equal(test.dtype.names, ctrl_names)
numpy/lib/tests/test_io.py:2110:        assert_equal(test.dtype.names, ctrl_names)
numpy/lib/tests/test_io.py:2115:        assert_equal(test.dtype.names, ctrl_names)
numpy/lib/tests/test_io.py:2124:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:2130:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:2138:        assert_equal(test, ctrl)
numpy/lib/tests/test_io.py:2146:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:2147:        assert_equal(test[1], b'testNonetherestofthedata')
numpy/lib/tests/test_io.py:2152:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:2153:        assert_equal(test[1], b' testNonetherestofthedata')
numpy/lib/tests/test_io.py:2164:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:2165:        assert_equal(test[1, 0], b"test1")
numpy/lib/tests/test_io.py:2166:        assert_equal(test[1, 1], b"testNonethe" + latin1)
numpy/lib/tests/test_io.py:2167:        assert_equal(test[1, 2], b"test3")
numpy/lib/tests/test_io.py:2171:        assert_equal(test[1, 0], u"test1")
numpy/lib/tests/test_io.py:2172:        assert_equal(test[1, 1], u"testNonethe" + latin1.decode('latin1'))
numpy/lib/tests/test_io.py:2173:        assert_equal(test[1, 2], u"test3")
numpy/lib/tests/test_io.py:2179:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:2180:        assert_equal(test['f0'], 0)
numpy/lib/tests/test_io.py:2181:        assert_equal(test['f1'], b"testNonethe" + latin1)
numpy/lib/tests/test_io.py:2186:        assert_array_equal(v, np.array(utf16.decode('UTF-16').split()))
numpy/lib/tests/test_io.py:2197:            assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:2202:        assert_array_equal(test, ctl)
numpy/lib/tests/test_io.py:2215:            assert_array_equal(test, ctl)
numpy/lib/tests/test_io.py:2222:            assert_equal(test['f0'], 0)
numpy/lib/tests/test_io.py:2223:            assert_equal(test['f1'], "testNonethe" + utf8.decode("UTF-8"))
numpy/lib/tests/test_io.py:2252:                assert_(w[0].category is np.VisibleDeprecationWarning)
numpy/lib/tests/test_io.py:2258:            assert_array_equal(test, ctl)
numpy/lib/tests/test_io.py:2267:        assert_(isinstance(test, np.recarray))
numpy/lib/tests/test_io.py:2268:        assert_equal(test, control)
numpy/lib/tests/test_io.py:2275:        assert_equal(test, control)
numpy/lib/tests/test_io.py:2276:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_io.py:2277:        assert_equal(test.A, [0, 2])
numpy/lib/tests/test_io.py:2286:        assert_(isinstance(test, np.recarray))
numpy/lib/tests/test_io.py:2287:        assert_equal(test, control)
numpy/lib/tests/test_io.py:2294:        assert_equal(test, control)
numpy/lib/tests/test_io.py:2295:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_io.py:2296:        assert_equal(test.A, [0, 2])
numpy/lib/tests/test_io.py:2302:        assert_(isinstance(test, np.recarray))
numpy/lib/tests/test_io.py:2303:        assert_equal(test, control)
numpy/lib/tests/test_io.py:2310:        assert_(isinstance(test, np.recarray))
numpy/lib/tests/test_io.py:2311:        assert_equal(test, control)
numpy/lib/tests/test_io.py:2317:        assert_equal(test.dtype, control.dtype)
numpy/lib/tests/test_io.py:2318:        assert_equal(test, control)
numpy/lib/tests/test_io.py:2326:        assert_equal(a1, [[1, 2], [3, 4], [5, 6]])
numpy/lib/tests/test_io.py:2327:        assert_equal(a2, [[7, 8], [9, 10]])
numpy/lib/tests/test_io.py:2330:        assert_raises(ValueError, np.genfromtxt, TextIO(data), max_rows=0)
numpy/lib/tests/test_io.py:2337:        assert_equal(test, control)
numpy/lib/tests/test_io.py:2340:        assert_raises(ValueError, np.genfromtxt, TextIO(data), skip_footer=1,
numpy/lib/tests/test_io.py:2344:        assert_raises(ValueError, np.genfromtxt, TextIO(data), max_rows=4)
numpy/lib/tests/test_io.py:2352:            assert_equal(test, control)
numpy/lib/tests/test_io.py:2356:            assert_equal(test, control)
numpy/lib/tests/test_io.py:2366:        assert_equal(test, control)
numpy/lib/tests/test_io.py:2372:        assert_equal(test, control)
numpy/lib/tests/test_io.py:2386:            assert_array_equal(res, tgt)
numpy/lib/tests/test_io.py:2402:                assert_array_equal(np.genfromtxt(name), wanted)
numpy/lib/tests/test_io.py:2411:        assert_array_equal(res, np.arange(10))
numpy/lib/tests/test_io.py:2428:        assert_equal(test.dtype.names, ['f0', 'f1', 'f2'])
numpy/lib/tests/test_io.py:2430:        assert_(test.dtype['f0'] == float)
numpy/lib/tests/test_io.py:2431:        assert_(test.dtype['f1'] == np.int64)
numpy/lib/tests/test_io.py:2432:        assert_(test.dtype['f2'] == np.int_)
numpy/lib/tests/test_io.py:2434:        assert_allclose(test['f0'], 73786976294838206464.)
numpy/lib/tests/test_io.py:2435:        assert_equal(test['f1'], 17179869184)
numpy/lib/tests/test_io.py:2436:        assert_equal(test['f2'], 1024)
numpy/lib/tests/test_io.py:2441:        assert_array_equal(a, np.array([1.0, 4.0, 7.0, 0.0]))
numpy/lib/tests/test_io.py:2442:        assert_array_equal(b, np.array([2.0, 5.0, 8.0, 1.0]))
numpy/lib/tests/test_io.py:2443:        assert_array_equal(c, np.array([3.0, 6.0, 9.0, 2.0]))
numpy/lib/tests/test_io.py:2451:        assert_equal(a.dtype, np.dtype('S1'))
numpy/lib/tests/test_io.py:2452:        assert_equal(b.dtype, np.dtype('i4'))
numpy/lib/tests/test_io.py:2453:        assert_equal(c.dtype, np.dtype('f4'))
numpy/lib/tests/test_io.py:2454:        assert_array_equal(a, np.array([b'M', b'F']))
numpy/lib/tests/test_io.py:2455:        assert_array_equal(b, np.array([21, 35]))
numpy/lib/tests/test_io.py:2456:        assert_array_equal(c, np.array([72.,  58.]))
numpy/lib/tests/test_io.py:2465:            assert_array_equal(arr, result)
numpy/lib/tests/test_io.py:2466:            assert_equal(arr.dtype, result.dtype)
numpy/lib/tests/test_io.py:2475:        assert_array_equal(expected, test)
numpy/lib/tests/test_io.py:2476:        assert_equal(expected.dtype, test.dtype)
numpy/lib/tests/test_io.py:2486:        assert_array_equal(expected, test)
numpy/lib/tests/test_io.py:2487:        assert_equal((), test.shape)
numpy/lib/tests/test_io.py:2488:        assert_equal(expected.dtype, test.dtype)
numpy/lib/tests/test_io.py:2499:        assert_array_equal(a, b)
numpy/lib/tests/test_io.py:2510:            assert_array_equal(x, a)
numpy/lib/tests/test_io.py:2519:            assert_array_equal(data, a)
numpy/lib/tests/test_io.py:2528:            assert_array_equal(data, a)
numpy/lib/tests/test_io.py:2549:            assert_array_equal(data, a)
numpy/lib/tests/test_io.py:2557:                assert_array_equal(data['lab'], 'place holder')
numpy/lib/tests/test_io.py:2565:            assert_array_equal(data['lab'], 'place holder')
numpy/lib/tests/test_io.py:2574:            assert_array_equal(a, data)
numpy/lib/tests/test_io.py:2586:            assert_(isinstance(test, np.recarray))
numpy/lib/tests/test_io.py:2587:            assert_equal(test, control)
numpy/lib/tests/test_io.py:2599:            assert_(isinstance(test, np.recarray))
numpy/lib/tests/test_io.py:2600:            assert_equal(test, control)
numpy/lib/tests/test_io.py:2614:    assert_array_equal(np.load(f), a)
numpy/lib/tests/test_io.py:2651:    assert_array_equal(np.load(f), a)
numpy/lib/tests/test_io.py:2673:    assert_array_equal(res, [1, 2, 3])
numpy/lib/tests/test_io.py:2684:    assert_array_equal(np.loadtxt(f), [1, 2, 3])
numpy/lib/tests/test_io.py:2697:    assert_('x' in z)
numpy/lib/tests/test_io.py:2698:    assert_('y' in z)
numpy/lib/tests/test_io.py:2699:    assert_('x' in z.keys())
numpy/lib/tests/test_io.py:2700:    assert_('y' in z.keys())
numpy/lib/tests/test_io.py:2703:        assert_(f in ['x', 'y'])
numpy/lib/tests/test_io.py:2704:        assert_equal(a.shape, (3, 3))
numpy/lib/tests/test_io.py:2706:    assert_(len(z.items()) == 2)
numpy/lib/tests/test_io.py:2709:        assert_(f in ['x', 'y'])
numpy/lib/tests/test_io.py:2711:    assert_('x' in z.keys())
numpy/lib/tests/test_io.py:2730:        assert_equal(x, np.array([((0, 1), (2, 3))], dtype=dt))
numpy/lib/tests/test_arraysetops.py:23:        assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:31:        assert_array_equal(c, ed)
numpy/lib/tests/test_arraysetops.py:32:        assert_array_equal([], intersect1d([], []))
numpy/lib/tests/test_arraysetops.py:42:        assert_array_equal(res, a)
numpy/lib/tests/test_arraysetops.py:44:        assert_array_equal(res, [1, 2, 3])
numpy/lib/tests/test_arraysetops.py:52:        assert_array_equal(c, ee)
numpy/lib/tests/test_arraysetops.py:53:        assert_array_equal(a[i1], ee)
numpy/lib/tests/test_arraysetops.py:54:        assert_array_equal(b[i2], ee)
numpy/lib/tests/test_arraysetops.py:61:        assert_array_equal(c, ef)
numpy/lib/tests/test_arraysetops.py:62:        assert_array_equal(a[i1], ef)
numpy/lib/tests/test_arraysetops.py:63:        assert_array_equal(b[i2], ef)
numpy/lib/tests/test_arraysetops.py:72:        assert_array_equal(ea, a[ui1])
numpy/lib/tests/test_arraysetops.py:73:        assert_array_equal(ea, b[ui2])
numpy/lib/tests/test_arraysetops.py:82:        assert_array_equal(ea, a[ui1])
numpy/lib/tests/test_arraysetops.py:83:        assert_array_equal(ea, b[ui2])
numpy/lib/tests/test_arraysetops.py:91:        assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:98:        assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:105:        assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:107:        assert_array_equal([], setxor1d([], []))
numpy/lib/tests/test_arraysetops.py:114:        assert_array_equal([], ediff1d(zero_elem))
numpy/lib/tests/test_arraysetops.py:115:        assert_array_equal([0], ediff1d(zero_elem, to_begin=0))
numpy/lib/tests/test_arraysetops.py:116:        assert_array_equal([0], ediff1d(zero_elem, to_end=0))
numpy/lib/tests/test_arraysetops.py:117:        assert_array_equal([-1, 0], ediff1d(zero_elem, to_begin=-1, to_end=0))
numpy/lib/tests/test_arraysetops.py:118:        assert_array_equal([], ediff1d(one_elem))
numpy/lib/tests/test_arraysetops.py:119:        assert_array_equal([1], ediff1d(two_elem))
numpy/lib/tests/test_arraysetops.py:120:        assert_array_equal([7, 1, 9], ediff1d(two_elem, to_begin=7, to_end=9))
numpy/lib/tests/test_arraysetops.py:121:        assert_array_equal([5, 6, 1, 7, 8],
numpy/lib/tests/test_arraysetops.py:123:        assert_array_equal([1, 9], ediff1d(two_elem, to_end=9))
numpy/lib/tests/test_arraysetops.py:124:        assert_array_equal([1, 7, 8], ediff1d(two_elem, to_end=[7, 8]))
numpy/lib/tests/test_arraysetops.py:125:        assert_array_equal([7, 1], ediff1d(two_elem, to_begin=7))
numpy/lib/tests/test_arraysetops.py:126:        assert_array_equal([5, 6, 1], ediff1d(two_elem, to_begin=[5, 6]))
numpy/lib/tests/test_arraysetops.py:195:        assert_equal(actual, expected)
numpy/lib/tests/test_arraysetops.py:196:        assert actual.dtype == expected.dtype
numpy/lib/tests/test_arraysetops.py:210:            assert_array_equal(x, y)
numpy/lib/tests/test_arraysetops.py:215:        assert_isin_equal(a, b)
numpy/lib/tests/test_arraysetops.py:220:        assert_isin_equal(c, d)
numpy/lib/tests/test_arraysetops.py:224:        assert_isin_equal(f, b)
numpy/lib/tests/test_arraysetops.py:225:        assert_isin_equal(a, f)
numpy/lib/tests/test_arraysetops.py:226:        assert_isin_equal(f, f)
numpy/lib/tests/test_arraysetops.py:229:        assert_isin_equal(5, b)
numpy/lib/tests/test_arraysetops.py:230:        assert_isin_equal(a, 6)
numpy/lib/tests/test_arraysetops.py:231:        assert_isin_equal(5, 6)
numpy/lib/tests/test_arraysetops.py:235:        assert_isin_equal(x, b)
numpy/lib/tests/test_arraysetops.py:236:        assert_isin_equal(a, x)
numpy/lib/tests/test_arraysetops.py:237:        assert_isin_equal(x, x)
numpy/lib/tests/test_arraysetops.py:248:            assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:253:            assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:258:            assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:265:            assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:271:            assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:277:            assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:283:            assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:289:            assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:295:        assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:297:        assert_array_equal(in1d([], []), [])
numpy/lib/tests/test_arraysetops.py:306:        assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:315:            assert_array_equal(np.invert(in1d(a, b)), in1d(a, b, invert=True))
numpy/lib/tests/test_arraysetops.py:325:        assert_array_equal(in1d(a, b, assume_unique=True), ec)
numpy/lib/tests/test_arraysetops.py:326:        assert_array_equal(in1d(a, b, assume_unique=False), ec)
numpy/lib/tests/test_arraysetops.py:327:        assert_array_equal(in1d(a, long_b, assume_unique=True), ec)
numpy/lib/tests/test_arraysetops.py:328:        assert_array_equal(in1d(a, long_b, assume_unique=False), ec)
numpy/lib/tests/test_arraysetops.py:335:        assert_array_equal(result, expected)
numpy/lib/tests/test_arraysetops.py:342:        assert_array_equal(result, expected)
numpy/lib/tests/test_arraysetops.py:349:        assert_array_equal(result, expected)
numpy/lib/tests/test_arraysetops.py:359:        assert_array_equal(result, expected)
numpy/lib/tests/test_arraysetops.py:366:        assert_array_equal(result, expected)
numpy/lib/tests/test_arraysetops.py:368:        assert_array_equal(result, np.invert(expected))
numpy/lib/tests/test_arraysetops.py:381:        assert_array_equal(result, expected)
numpy/lib/tests/test_arraysetops.py:383:        assert_array_equal(result, np.invert(expected))
numpy/lib/tests/test_arraysetops.py:390:        assert_array_equal(result, expected)
numpy/lib/tests/test_arraysetops.py:392:        assert_array_equal(result, np.invert(expected))
numpy/lib/tests/test_arraysetops.py:400:        assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:408:        assert_array_equal(z, ez)
numpy/lib/tests/test_arraysetops.py:410:        assert_array_equal([], union1d([], []))
numpy/lib/tests/test_arraysetops.py:418:        assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:424:        assert_array_equal(c, ec)
numpy/lib/tests/test_arraysetops.py:426:        assert_array_equal([], setdiff1d([], []))
numpy/lib/tests/test_arraysetops.py:428:        assert_equal(setdiff1d(a, []).dtype, np.uint32)
numpy/lib/tests/test_arraysetops.py:435:        assert_equal(actual, expected)
numpy/lib/tests/test_arraysetops.py:440:        assert_array_equal(setdiff1d(a, b), np.array(['c']))
numpy/lib/tests/test_arraysetops.py:450:        assert_array_equal(c1, c2)
numpy/lib/tests/test_arraysetops.py:462:            assert_array_equal(v, b, msg)
numpy/lib/tests/test_arraysetops.py:466:            assert_array_equal(v, b, msg)
numpy/lib/tests/test_arraysetops.py:467:            assert_array_equal(j, i1, msg)
numpy/lib/tests/test_arraysetops.py:471:            assert_array_equal(v, b, msg)
numpy/lib/tests/test_arraysetops.py:472:            assert_array_equal(j, i2, msg)
numpy/lib/tests/test_arraysetops.py:476:            assert_array_equal(v, b, msg)
numpy/lib/tests/test_arraysetops.py:477:            assert_array_equal(j, c, msg)
numpy/lib/tests/test_arraysetops.py:481:            assert_array_equal(v, b, msg)
numpy/lib/tests/test_arraysetops.py:482:            assert_array_equal(j1, i1, msg)
numpy/lib/tests/test_arraysetops.py:483:            assert_array_equal(j2, i2, msg)
numpy/lib/tests/test_arraysetops.py:487:            assert_array_equal(v, b, msg)
numpy/lib/tests/test_arraysetops.py:488:            assert_array_equal(j1, i1, msg)
numpy/lib/tests/test_arraysetops.py:489:            assert_array_equal(j2, c, msg)
numpy/lib/tests/test_arraysetops.py:493:            assert_array_equal(v, b, msg)
numpy/lib/tests/test_arraysetops.py:494:            assert_array_equal(j1, i2, msg)
numpy/lib/tests/test_arraysetops.py:495:            assert_array_equal(j2, c, msg)
numpy/lib/tests/test_arraysetops.py:500:            assert_array_equal(v, b, msg)
numpy/lib/tests/test_arraysetops.py:501:            assert_array_equal(j1, i1, msg)
numpy/lib/tests/test_arraysetops.py:502:            assert_array_equal(j2, i2, msg)
numpy/lib/tests/test_arraysetops.py:503:            assert_array_equal(j3, c, msg)
numpy/lib/tests/test_arraysetops.py:538:        assert_array_equal(np.unique(aa), [1. - 1.j, 1. + 0.j])
numpy/lib/tests/test_arraysetops.py:545:        assert_array_equal(a1, unq)
numpy/lib/tests/test_arraysetops.py:547:        assert_array_equal(a2, unq)
numpy/lib/tests/test_arraysetops.py:548:        assert_array_equal(a2_inv, inv)
numpy/lib/tests/test_arraysetops.py:554:        assert_array_equal(a2_inv, np.zeros(5))
numpy/lib/tests/test_arraysetops.py:562:        assert_equal(a1_idx.dtype, np.intp)
numpy/lib/tests/test_arraysetops.py:563:        assert_equal(a2_inv.dtype, np.intp)
numpy/lib/tests/test_arraysetops.py:564:        assert_equal(a3_idx.dtype, np.intp)
numpy/lib/tests/test_arraysetops.py:565:        assert_equal(a3_inv.dtype, np.intp)
numpy/lib/tests/test_arraysetops.py:573:        assert_equal(np.unique(a), ua)
numpy/lib/tests/test_arraysetops.py:574:        assert_equal(np.unique(a, return_index=True), (ua, ua_idx))
numpy/lib/tests/test_arraysetops.py:575:        assert_equal(np.unique(a, return_inverse=True), (ua, ua_inv))
numpy/lib/tests/test_arraysetops.py:576:        assert_equal(np.unique(a, return_counts=True), (ua, ua_cnt))
numpy/lib/tests/test_arraysetops.py:584:        assert_equal(np.unique(a), ua)
numpy/lib/tests/test_arraysetops.py:585:        assert_equal(np.unique(a, return_index=True), (ua, ua_idx))
numpy/lib/tests/test_arraysetops.py:586:        assert_equal(np.unique(a, return_inverse=True), (ua, ua_inv))
numpy/lib/tests/test_arraysetops.py:587:        assert_equal(np.unique(a, return_counts=True), (ua, ua_cnt))
numpy/lib/tests/test_arraysetops.py:596:        assert_equal(np.unique(a), ua)
numpy/lib/tests/test_arraysetops.py:597:        assert_equal(np.unique(a, return_index=True), (ua, ua_idx))
numpy/lib/tests/test_arraysetops.py:598:        assert_equal(np.unique(a, return_inverse=True), (ua, ua_inv))
numpy/lib/tests/test_arraysetops.py:599:        assert_equal(np.unique(a, return_counts=True), (ua, ua_cnt))
numpy/lib/tests/test_arraysetops.py:608:        assert_equal(np.unique(a), ua)
numpy/lib/tests/test_arraysetops.py:609:        assert_equal(np.unique(a, return_index=True), (ua, ua_idx))
numpy/lib/tests/test_arraysetops.py:610:        assert_equal(np.unique(a, return_inverse=True), (ua, ua_inv))
numpy/lib/tests/test_arraysetops.py:611:        assert_equal(np.unique(a, return_counts=True), (ua, ua_cnt))
numpy/lib/tests/test_arraysetops.py:619:        assert_equal(np.unique(all_nans), ua)
numpy/lib/tests/test_arraysetops.py:620:        assert_equal(np.unique(all_nans, return_index=True), (ua, ua_idx))
numpy/lib/tests/test_arraysetops.py:621:        assert_equal(np.unique(all_nans, return_inverse=True), (ua, ua_inv))
numpy/lib/tests/test_arraysetops.py:622:        assert_equal(np.unique(all_nans, return_counts=True), (ua, ua_cnt))
numpy/lib/tests/test_arraysetops.py:625:        assert_raises(TypeError, self._run_axis_tests, object)
numpy/lib/tests/test_arraysetops.py:629:        assert_raises(np.AxisError, unique, np.arange(10), axis=2)
numpy/lib/tests/test_arraysetops.py:630:        assert_raises(np.AxisError, unique, np.arange(10), axis=-2)
numpy/lib/tests/test_arraysetops.py:636:        assert_array_equal(unique(inp, axis=0), unique(inp_arr, axis=0), msg)
numpy/lib/tests/test_arraysetops.py:637:        assert_array_equal(unique(inp, axis=1), unique(inp_arr, axis=1), msg)
numpy/lib/tests/test_arraysetops.py:654:        assert_array_equal(unique(data, axis=0), result, msg)
numpy/lib/tests/test_arraysetops.py:659:        assert_array_equal(unique(data, axis=0), result, msg)
numpy/lib/tests/test_arraysetops.py:665:        assert_array_equal(uniq, [1, 2, 3, 4])
numpy/lib/tests/test_arraysetops.py:674:        assert_equal(uniq.dtype, single_zero.dtype)
numpy/lib/tests/test_arraysetops.py:675:        assert_array_equal(uniq, np.empty(shape=(1, 0)))
numpy/lib/tests/test_arraysetops.py:676:        assert_array_equal(idx, np.array([0]))
numpy/lib/tests/test_arraysetops.py:677:        assert_array_equal(inv, np.array([0, 0]))
numpy/lib/tests/test_arraysetops.py:678:        assert_array_equal(cnt, np.array([2]))
numpy/lib/tests/test_arraysetops.py:684:        assert_equal(uniq.dtype, single_zero.dtype)
numpy/lib/tests/test_arraysetops.py:685:        assert_array_equal(uniq, np.empty(shape=(2, 0)))
numpy/lib/tests/test_arraysetops.py:686:        assert_array_equal(idx, np.array([]))
numpy/lib/tests/test_arraysetops.py:687:        assert_array_equal(inv, np.array([]))
numpy/lib/tests/test_arraysetops.py:688:        assert_array_equal(cnt, np.array([]))
numpy/lib/tests/test_arraysetops.py:700:            assert_array_equal(unique(multiple_zeros, axis=axis),
numpy/lib/tests/test_arraysetops.py:713:        assert_array_equal(v.data, v2.data, msg)
numpy/lib/tests/test_arraysetops.py:714:        assert_array_equal(v.mask, v2.mask, msg)
numpy/lib/tests/test_arraysetops.py:723:            assert_array_equal(a, b, fmt % dt)
numpy/lib/tests/test_arraysetops.py:733:        assert_array_equal(unique(data), result.astype(dtype), msg)
numpy/lib/tests/test_arraysetops.py:737:        assert_array_equal(unique(data, axis=0), result.astype(dtype), msg)
numpy/lib/tests/test_arraysetops.py:741:        assert_array_equal(unique(data, axis=1), result.astype(dtype), msg)
numpy/lib/tests/test_arraysetops.py:749:        assert_array_equal(unique(data3d, axis=2), result, msg)
numpy/lib/tests/test_arraysetops.py:754:        assert_array_equal(data[idx], uniq, msg)
numpy/lib/tests/test_arraysetops.py:756:        assert_array_equal(uniq[inv], data)
numpy/lib/tests/test_arraysetops.py:758:        assert_array_equal(cnt, np.array([2, 2]), msg)
numpy/lib/tests/test_arraysetops.py:763:        assert_array_equal(data[:, idx], uniq)
numpy/lib/tests/test_arraysetops.py:765:        assert_array_equal(uniq[:, inv], data)
numpy/lib/tests/test_arraysetops.py:767:        assert_array_equal(cnt, np.array([2, 1, 1]), msg)
numpy/lib/tests/test_function_base.py:49:        assert_raises(ValueError, rot90, np.ones(4))
numpy/lib/tests/test_function_base.py:50:        assert_raises(ValueError, rot90, np.ones((2,2,2)), axes=(0,1,2))
numpy/lib/tests/test_function_base.py:51:        assert_raises(ValueError, rot90, np.ones((2,2)), axes=(0,2))
numpy/lib/tests/test_function_base.py:52:        assert_raises(ValueError, rot90, np.ones((2,2)), axes=(1,1))
numpy/lib/tests/test_function_base.py:53:        assert_raises(ValueError, rot90, np.ones((2,2,2)), axes=(-2,1))
numpy/lib/tests/test_function_base.py:69:            assert_equal(rot90(a, k=k), b1)
numpy/lib/tests/test_function_base.py:71:            assert_equal(rot90(a, k=k), b2)
numpy/lib/tests/test_function_base.py:73:            assert_equal(rot90(a, k=k), b3)
numpy/lib/tests/test_function_base.py:75:            assert_equal(rot90(a, k=k), b4)
numpy/lib/tests/test_function_base.py:77:        assert_equal(rot90(rot90(a, axes=(0,1)), axes=(1,0)), a)
numpy/lib/tests/test_function_base.py:78:        assert_equal(rot90(a, k=1, axes=(1,0)), rot90(a, k=-1, axes=(0,1)))
numpy/lib/tests/test_function_base.py:82:        assert_equal(rot90(a).shape, (40, 50, 3))
numpy/lib/tests/test_function_base.py:83:        assert_equal(rot90(a, axes=(0,2)), rot90(a, axes=(0,-1)))
numpy/lib/tests/test_function_base.py:84:        assert_equal(rot90(a, axes=(1,2)), rot90(a, axes=(-2,-1)))
numpy/lib/tests/test_function_base.py:106:        assert_equal(rot90(a, axes=(0, 1)), a_rot90_01)
numpy/lib/tests/test_function_base.py:107:        assert_equal(rot90(a, axes=(1, 0)), a_rot90_10)
numpy/lib/tests/test_function_base.py:108:        assert_equal(rot90(a, axes=(1, 2)), a_rot90_12)
numpy/lib/tests/test_function_base.py:111:            assert_equal(rot90(a, k=k, axes=(2, 0)),
numpy/lib/tests/test_function_base.py:118:        assert_raises(np.AxisError, np.flip, np.ones(4), axis=1)
numpy/lib/tests/test_function_base.py:119:        assert_raises(np.AxisError, np.flip, np.ones((4, 4)), axis=2)
numpy/lib/tests/test_function_base.py:120:        assert_raises(np.AxisError, np.flip, np.ones((4, 4)), axis=-3)
numpy/lib/tests/test_function_base.py:121:        assert_raises(np.AxisError, np.flip, np.ones((4, 4)), axis=(0, 3))
numpy/lib/tests/test_function_base.py:126:        assert_equal(np.flip(a, 1), b)
numpy/lib/tests/test_function_base.py:131:        assert_equal(np.flip(a, 1), b)
numpy/lib/tests/test_function_base.py:136:        assert_equal(np.flip(a, 0), b)
numpy/lib/tests/test_function_base.py:141:        assert_equal(np.flip(a, 0), b)
numpy/lib/tests/test_function_base.py:154:        assert_equal(np.flip(a, 0), b)
numpy/lib/tests/test_function_base.py:167:        assert_equal(np.flip(a, 1), b)
numpy/lib/tests/test_function_base.py:180:        assert_equal(np.flip(a, 2), b)
numpy/lib/tests/test_function_base.py:185:            assert_equal(np.flip(a, i),
numpy/lib/tests/test_function_base.py:193:        assert_equal(np.flip(a), b)
numpy/lib/tests/test_function_base.py:201:        assert_equal(np.flip(a, axis=()), a)
numpy/lib/tests/test_function_base.py:208:        assert_equal(np.flip(a, axis=(0, 2)), b)
numpy/lib/tests/test_function_base.py:215:        assert_equal(np.flip(a, axis=(1, 2)), c)
numpy/lib/tests/test_function_base.py:224:        assert_(np.any(y1))
numpy/lib/tests/test_function_base.py:225:        assert_(np.any(y3))
numpy/lib/tests/test_function_base.py:226:        assert_(not np.any(y2))
numpy/lib/tests/test_function_base.py:230:        assert_(np.any(y1))
numpy/lib/tests/test_function_base.py:231:        assert_array_equal(np.sometrue(y1, axis=0), [1, 1, 0])
numpy/lib/tests/test_function_base.py:232:        assert_array_equal(np.sometrue(y1, axis=1), [0, 1, 1])
numpy/lib/tests/test_function_base.py:241:        assert_(not np.all(y1))
numpy/lib/tests/test_function_base.py:242:        assert_(np.all(y3))
numpy/lib/tests/test_function_base.py:243:        assert_(not np.all(y2))
numpy/lib/tests/test_function_base.py:244:        assert_(np.all(~np.array(y2)))
numpy/lib/tests/test_function_base.py:248:        assert_(not np.all(y1))
numpy/lib/tests/test_function_base.py:249:        assert_array_equal(np.alltrue(y1, axis=0), [0, 0, 1])
numpy/lib/tests/test_function_base.py:250:        assert_array_equal(np.alltrue(y1, axis=1), [0, 0, 1])
numpy/lib/tests/test_function_base.py:258:        assert_array_equal(a, a_copy)
numpy/lib/tests/test_function_base.py:260:        assert_equal(a[0, 0], 1)
numpy/lib/tests/test_function_base.py:261:        assert_equal(a_copy[0, 0], 10)
numpy/lib/tests/test_function_base.py:268:        assert_(a.flags.c_contiguous)
numpy/lib/tests/test_function_base.py:269:        assert_(not a.flags.f_contiguous)
numpy/lib/tests/test_function_base.py:271:        assert_(not a_fort.flags.c_contiguous)
numpy/lib/tests/test_function_base.py:272:        assert_(a_fort.flags.f_contiguous)
numpy/lib/tests/test_function_base.py:274:        assert_(a_copy.flags.c_contiguous)
numpy/lib/tests/test_function_base.py:275:        assert_(not a_copy.flags.f_contiguous)
numpy/lib/tests/test_function_base.py:277:        assert_(not a_fort_copy.flags.c_contiguous)
numpy/lib/tests/test_function_base.py:278:        assert_(a_fort_copy.flags.f_contiguous)
numpy/lib/tests/test_function_base.py:282:        assert_(not ma.isMaskedArray(np.copy(mx, subok=False)))
numpy/lib/tests/test_function_base.py:283:        assert_(ma.isMaskedArray(np.copy(mx, subok=True)))
numpy/lib/tests/test_function_base.py:285:        assert_(not ma.isMaskedArray(np.copy(mx)))
numpy/lib/tests/test_function_base.py:292:        assert_(average(y1, axis=0) == 2.)
numpy/lib/tests/test_function_base.py:294:        assert_(average(y2, axis=0) == 2.)
numpy/lib/tests/test_function_base.py:296:        assert_(average(y3, axis=0) == 0.)
numpy/lib/tests/test_function_base.py:301:        assert_almost_equal(y4.mean(0), average(y4, 0))
numpy/lib/tests/test_function_base.py:302:        assert_almost_equal(y4.mean(1), average(y4, 1))
numpy/lib/tests/test_function_base.py:305:        assert_almost_equal(y5.mean(0), average(y5, 0))
numpy/lib/tests/test_function_base.py:306:        assert_almost_equal(y5.mean(1), average(y5, 1))
numpy/lib/tests/test_function_base.py:313:        assert_almost_equal(actual, desired)
numpy/lib/tests/test_function_base.py:319:        assert_almost_equal(actual, desired)
numpy/lib/tests/test_function_base.py:324:        assert_almost_equal(actual, desired)
numpy/lib/tests/test_function_base.py:332:        assert_array_equal(average(y1, weights=w2, axis=1), desired)
numpy/lib/tests/test_function_base.py:333:        assert_equal(average(y1, weights=w2), 5.)
numpy/lib/tests/test_function_base.py:338:        assert_(np.average(y3, weights=w3).dtype == np.result_type(y3, w3))
numpy/lib/tests/test_function_base.py:345:        assert_equal(scl, 6.)
numpy/lib/tests/test_function_base.py:348:        assert_array_equal(scl, np.array([2., 2., 2.]))
numpy/lib/tests/test_function_base.py:351:        assert_array_equal(scl, np.array([3., 3.]))
numpy/lib/tests/test_function_base.py:356:        assert_array_equal(scl, np.array([3., 3., 3.]))
numpy/lib/tests/test_function_base.py:360:        assert_array_equal(scl, np.array([6., 6.]))
numpy/lib/tests/test_function_base.py:364:        assert_array_equal(scl, np.array([1., 6.]))
numpy/lib/tests/test_function_base.py:372:        assert_equal(type(np.average(a)), subclass)
numpy/lib/tests/test_function_base.py:373:        assert_equal(type(np.average(a, weights=w)), subclass)
numpy/lib/tests/test_function_base.py:381:            assert_equal(np.average(a, weights=w).dtype, np.dtype(rt))
numpy/lib/tests/test_function_base.py:387:        assert_almost_equal(a.mean(0), average(a, weights=w))
numpy/lib/tests/test_function_base.py:406:        assert_array_equal(select(conditions, choices, default=15),
numpy/lib/tests/test_function_base.py:409:        assert_equal(len(choices), 3)
numpy/lib/tests/test_function_base.py:410:        assert_equal(len(conditions), 3)
numpy/lib/tests/test_function_base.py:415:        assert_array_equal(select(conditions, choices), np.ones((4, 3)))
numpy/lib/tests/test_function_base.py:417:        assert_equal(select([True], [0], default=[0]).shape, (1,))
numpy/lib/tests/test_function_base.py:420:        assert_equal(select(self.conditions, self.choices, 1j).dtype,
numpy/lib/tests/test_function_base.py:425:        assert_equal(select(self.conditions, choices).dtype, np.int8)
numpy/lib/tests/test_function_base.py:429:        assert_equal(select([m], [d]), [0, 0, 0, np.nan, 0, 0])
numpy/lib/tests/test_function_base.py:432:        assert_raises(ValueError, select, [], [], 3j)
numpy/lib/tests/test_function_base.py:433:        assert_raises(ValueError, select, [], [])
numpy/lib/tests/test_function_base.py:439:        assert_raises(TypeError, select, conditions, choices)
numpy/lib/tests/test_function_base.py:441:        assert_raises(TypeError, select, conditions, choices)
numpy/lib/tests/test_function_base.py:442:        assert_raises(TypeError, select, conditions, choices)
numpy/lib/tests/test_function_base.py:455:        assert_equal(insert(a, 0, 1), [1, 1, 2, 3])
numpy/lib/tests/test_function_base.py:456:        assert_equal(insert(a, 3, 1), [1, 2, 3, 1])
numpy/lib/tests/test_function_base.py:457:        assert_equal(insert(a, [1, 1, 1], [1, 2, 3]), [1, 1, 2, 3, 2, 3])
numpy/lib/tests/test_function_base.py:458:        assert_equal(insert(a, 1, [1, 2, 3]), [1, 1, 2, 3, 2, 3])
numpy/lib/tests/test_function_base.py:459:        assert_equal(insert(a, [1, -1, 3], 9), [1, 9, 2, 9, 3, 9])
numpy/lib/tests/test_function_base.py:460:        assert_equal(insert(a, slice(-1, None, -1), 9), [9, 1, 9, 2, 9, 3])
numpy/lib/tests/test_function_base.py:461:        assert_equal(insert(a, [-1, 1, 3], [7, 8, 9]), [1, 8, 2, 7, 3, 9])
numpy/lib/tests/test_function_base.py:463:        assert_equal(insert(b, 0, b[0]), [0., 0., 1.])
numpy/lib/tests/test_function_base.py:464:        assert_equal(insert(b, [], []), b)
numpy/lib/tests/test_function_base.py:471:            assert_(w[0].category is FutureWarning)
numpy/lib/tests/test_function_base.py:477:        assert_equal(insert(a, 0, [1]), [1, 1, 1, 1])
numpy/lib/tests/test_function_base.py:478:        assert_equal(insert(a, 0, [2, 2, 2], axis=0), r)
numpy/lib/tests/test_function_base.py:479:        assert_equal(insert(a, 0, 2, axis=0), r)
numpy/lib/tests/test_function_base.py:480:        assert_equal(insert(a, 2, 2, axis=1), [[1, 1, 2, 1]])
numpy/lib/tests/test_function_base.py:487:        assert_equal(insert(a, [1], [[1], [2], [3]], axis=1), b)
numpy/lib/tests/test_function_base.py:488:        assert_equal(insert(a, [1], [1, 2, 3], axis=1), c)
numpy/lib/tests/test_function_base.py:490:        assert_equal(insert(a, 1, [1, 2, 3], axis=1), b)
numpy/lib/tests/test_function_base.py:491:        assert_equal(insert(a, 1, [[1], [2], [3]], axis=1), c)
numpy/lib/tests/test_function_base.py:494:        assert_equal(insert(a[:, :1], 1, a[:, 1], axis=1), a)
numpy/lib/tests/test_function_base.py:495:        assert_equal(insert(a[:1,:], 1, a[1,:], axis=0), a)
numpy/lib/tests/test_function_base.py:499:        assert_equal(insert(a, 1, a[:,:, 3], axis=-1),
numpy/lib/tests/test_function_base.py:501:        assert_equal(insert(a, 1, a[:, 2,:], axis=-2),
numpy/lib/tests/test_function_base.py:505:        assert_raises(np.AxisError, insert, a, 1, a[:, 2, :], axis=3)
numpy/lib/tests/test_function_base.py:506:        assert_raises(np.AxisError, insert, a, 1, a[:, 2, :], axis=-4)
numpy/lib/tests/test_function_base.py:510:        assert_equal(insert(a, 1, a[:, :, 3], axis=-1),
numpy/lib/tests/test_function_base.py:512:        assert_equal(insert(a, 1, a[:, 2, :], axis=-2),
numpy/lib/tests/test_function_base.py:526:        assert_(isinstance(np.insert(a, 0, [0]), SubClass))
numpy/lib/tests/test_function_base.py:527:        assert_(isinstance(np.insert(a, [], []), SubClass))
numpy/lib/tests/test_function_base.py:528:        assert_(isinstance(np.insert(a, [0, 1], [1, 2]), SubClass))
numpy/lib/tests/test_function_base.py:529:        assert_(isinstance(np.insert(a, slice(1, 2), [1, 2]), SubClass))
numpy/lib/tests/test_function_base.py:530:        assert_(isinstance(np.insert(a, slice(1, -2, -1), []), SubClass))
numpy/lib/tests/test_function_base.py:533:        assert_(isinstance(np.insert(a, 0, [0]), SubClass))
numpy/lib/tests/test_function_base.py:538:        assert_equal(x, np.array([1, 1, 1]))
numpy/lib/tests/test_function_base.py:545:        assert_array_equal(b[0], np.array(val, dtype=b.dtype))
numpy/lib/tests/test_function_base.py:548:        assert_array_equal(b[[0, 3]], np.array(val, dtype=b.dtype))
numpy/lib/tests/test_function_base.py:566:        assert_equal(np.amax(a), 10.0)
numpy/lib/tests/test_function_base.py:570:        assert_equal(np.amax(b, axis=0), [8.0, 10.0, 9.0])
numpy/lib/tests/test_function_base.py:571:        assert_equal(np.amax(b, axis=1), [9.0, 10.0, 8.0])
numpy/lib/tests/test_function_base.py:578:        assert_equal(np.amin(a), -5.0)
numpy/lib/tests/test_function_base.py:582:        assert_equal(np.amin(b, axis=0), [3.0, 3.0, 2.0])
numpy/lib/tests/test_function_base.py:583:        assert_equal(np.amin(b, axis=1), [3.0, 4.0, 2.0])
numpy/lib/tests/test_function_base.py:590:        assert_equal(a.ptp(axis=0), 15.0)
numpy/lib/tests/test_function_base.py:594:        assert_equal(b.ptp(axis=0), [5.0, 7.0, 7.0])
numpy/lib/tests/test_function_base.py:595:        assert_equal(b.ptp(axis=-1), [6.0, 6.0, 6.0])
numpy/lib/tests/test_function_base.py:597:        assert_equal(b.ptp(axis=0, keepdims=True), [[5.0, 7.0, 7.0]])
numpy/lib/tests/test_function_base.py:598:        assert_equal(b.ptp(axis=(0,1), keepdims=True), [[8.0]])
numpy/lib/tests/test_function_base.py:613:            assert_array_equal(np.cumsum(a, axis=0), tgt)
numpy/lib/tests/test_function_base.py:617:            assert_array_equal(np.cumsum(a2, axis=0), tgt)
numpy/lib/tests/test_function_base.py:621:            assert_array_equal(np.cumsum(a2, axis=1), tgt)
numpy/lib/tests/test_function_base.py:634:                assert_raises(ArithmeticError, np.prod, a)
numpy/lib/tests/test_function_base.py:635:                assert_raises(ArithmeticError, np.prod, a2, 1)
numpy/lib/tests/test_function_base.py:637:                assert_equal(a.prod(axis=0), 26400)
numpy/lib/tests/test_function_base.py:638:                assert_array_equal(a2.prod(axis=0),
numpy/lib/tests/test_function_base.py:640:                assert_array_equal(a2.prod(axis=-1),
numpy/lib/tests/test_function_base.py:654:                assert_raises(ArithmeticError, np.cumprod, a)
numpy/lib/tests/test_function_base.py:655:                assert_raises(ArithmeticError, np.cumprod, a2, 1)
numpy/lib/tests/test_function_base.py:656:                assert_raises(ArithmeticError, np.cumprod, a)
numpy/lib/tests/test_function_base.py:658:                assert_array_equal(np.cumprod(a, axis=-1),
numpy/lib/tests/test_function_base.py:661:                assert_array_equal(np.cumprod(a2, axis=0),
numpy/lib/tests/test_function_base.py:665:                assert_array_equal(np.cumprod(a2, axis=-1),
numpy/lib/tests/test_function_base.py:678:        assert_array_equal(diff(x), out)
numpy/lib/tests/test_function_base.py:679:        assert_array_equal(diff(x, n=2), out2)
numpy/lib/tests/test_function_base.py:680:        assert_array_equal(diff(x, n=3), out3)
numpy/lib/tests/test_function_base.py:684:        assert_almost_equal(diff(x), out)
numpy/lib/tests/test_function_base.py:689:        assert_array_equal(diff(x), out)
numpy/lib/tests/test_function_base.py:690:        assert_array_equal(diff(x, n=2), out2)
numpy/lib/tests/test_function_base.py:697:        assert_array_equal(diff(x), np.zeros((10, 20, 29)))
numpy/lib/tests/test_function_base.py:698:        assert_array_equal(diff(x, axis=-1), np.zeros((10, 20, 29)))
numpy/lib/tests/test_function_base.py:699:        assert_array_equal(diff(x, axis=0), np.zeros((9, 20, 30)))
numpy/lib/tests/test_function_base.py:700:        assert_array_equal(diff(x, axis=1), exp)
numpy/lib/tests/test_function_base.py:701:        assert_array_equal(diff(x, axis=-2), exp)
numpy/lib/tests/test_function_base.py:702:        assert_raises(np.AxisError, diff, x, axis=3)
numpy/lib/tests/test_function_base.py:703:        assert_raises(np.AxisError, diff, x, axis=-4)
numpy/lib/tests/test_function_base.py:706:        assert_raises(ValueError, diff, x)
numpy/lib/tests/test_function_base.py:714:        assert_array_equal(diff(x), out1)
numpy/lib/tests/test_function_base.py:715:        assert_array_equal(diff(x, n=2), out2)
numpy/lib/tests/test_function_base.py:716:        assert_array_equal(diff(x, axis=0), out3)
numpy/lib/tests/test_function_base.py:717:        assert_array_equal(diff(x, n=2, axis=0), out4)
numpy/lib/tests/test_function_base.py:721:        assert_raises(ValueError, diff, x, n=-1)
numpy/lib/tests/test_function_base.py:724:        assert_(diff(x, n=0) is x)
numpy/lib/tests/test_function_base.py:726:            assert_(type(out) is np.ndarray)
numpy/lib/tests/test_function_base.py:727:            assert_array_equal(out, expected)
numpy/lib/tests/test_function_base.py:728:            assert_equal(out.dtype, np.int_)
numpy/lib/tests/test_function_base.py:729:            assert_equal(len(out), max(0, len(x) - n))
numpy/lib/tests/test_function_base.py:740:            assert_array_equal(out, exp)
numpy/lib/tests/test_function_base.py:741:            assert_equal(out.dtype, exp.dtype)
numpy/lib/tests/test_function_base.py:748:        assert_array_equal(out.data, [[1], [1], [1], [1], [1]])
numpy/lib/tests/test_function_base.py:749:        assert_array_equal(out.mask, [[False], [True],
numpy/lib/tests/test_function_base.py:751:        assert_(type(out) is type(x))
numpy/lib/tests/test_function_base.py:754:        assert_array_equal(out3.data, [[], [], [], [], []])
numpy/lib/tests/test_function_base.py:755:        assert_array_equal(out3.mask, [[], [], [], [], []])
numpy/lib/tests/test_function_base.py:756:        assert_(type(out3) is type(x))
numpy/lib/tests/test_function_base.py:760:        assert_array_equal(diff(x, prepend=0), np.ones(5))
numpy/lib/tests/test_function_base.py:761:        assert_array_equal(diff(x, prepend=[0]), np.ones(5))
numpy/lib/tests/test_function_base.py:762:        assert_array_equal(np.cumsum(np.diff(x, prepend=0)), x)
numpy/lib/tests/test_function_base.py:763:        assert_array_equal(diff(x, prepend=[-1, 0]), np.ones(6))
numpy/lib/tests/test_function_base.py:768:        assert_array_equal(result, expected)
numpy/lib/tests/test_function_base.py:770:        assert_array_equal(result, expected)
numpy/lib/tests/test_function_base.py:774:        assert_array_equal(result, expected)
numpy/lib/tests/test_function_base.py:776:        assert_array_equal(result, expected)
numpy/lib/tests/test_function_base.py:778:        assert_raises(ValueError, np.diff, x, prepend=np.zeros((3,3)))
numpy/lib/tests/test_function_base.py:780:        assert_raises(np.AxisError, diff, x, prepend=0, axis=3)
numpy/lib/tests/test_function_base.py:786:        assert_array_equal(result, expected)
numpy/lib/tests/test_function_base.py:788:        assert_array_equal(result, expected)
numpy/lib/tests/test_function_base.py:791:        assert_array_equal(result, expected)
numpy/lib/tests/test_function_base.py:796:        assert_array_equal(result, expected)
numpy/lib/tests/test_function_base.py:798:        assert_array_equal(result, expected)
numpy/lib/tests/test_function_base.py:802:        assert_array_equal(result, expected)
numpy/lib/tests/test_function_base.py:804:        assert_array_equal(result, expected)
numpy/lib/tests/test_function_base.py:806:        assert_raises(ValueError, np.diff, x, append=np.zeros((3,3)))
numpy/lib/tests/test_function_base.py:808:        assert_raises(np.AxisError, diff, x, append=0, axis=3)
numpy/lib/tests/test_function_base.py:821:        assert_array_equal(setxor1d(a_del, self.a[indices, ]), self.a,
numpy/lib/tests/test_function_base.py:824:        assert_array_equal(xor, self.nd_a[0,:, 0], err_msg=msg)
numpy/lib/tests/test_function_base.py:871:        assert_(isinstance(delete(a, 0), SubClass))
numpy/lib/tests/test_function_base.py:872:        assert_(isinstance(delete(a, []), SubClass))
numpy/lib/tests/test_function_base.py:873:        assert_(isinstance(delete(a, [0, 1]), SubClass))
numpy/lib/tests/test_function_base.py:874:        assert_(isinstance(delete(a, slice(1, 2)), SubClass))
numpy/lib/tests/test_function_base.py:875:        assert_(isinstance(delete(a, slice(1, -2)), SubClass))
numpy/lib/tests/test_function_base.py:884:        assert_equal(m.flags.c_contiguous, k.flags.c_contiguous)
numpy/lib/tests/test_function_base.py:885:        assert_equal(m.flags.f_contiguous, k.flags.f_contiguous)
numpy/lib/tests/test_function_base.py:898:        assert_equal(a_del, a_del_arr, a_del_lst, a_del_obj)
numpy/lib/tests/test_function_base.py:904:        assert_equal(nd_a_del, nd_a_del_arr, nd_a_del_lst, nd_a_del_obj)
numpy/lib/tests/test_function_base.py:914:        assert_array_equal(gradient(x), dx)
numpy/lib/tests/test_function_base.py:915:        assert_array_equal(gradient(v), dx)
numpy/lib/tests/test_function_base.py:939:        assert_raises_regex(ValueError, '.*scalars or 1d',
numpy/lib/tests/test_function_base.py:947:        assert_raises(ValueError, gradient, f_2d, x, np.ones(2))
numpy/lib/tests/test_function_base.py:948:        assert_raises(ValueError, gradient, f_2d, 1, np.ones(2))
numpy/lib/tests/test_function_base.py:949:        assert_raises(ValueError, gradient, f_2d, np.ones(2), np.ones(2))
numpy/lib/tests/test_function_base.py:951:        assert_raises(TypeError, gradient, f_2d, x)
numpy/lib/tests/test_function_base.py:952:        assert_raises(TypeError, gradient, f_2d, x, axis=(0,1))
numpy/lib/tests/test_function_base.py:953:        assert_raises(TypeError, gradient, f_2d, x, x, x)
numpy/lib/tests/test_function_base.py:954:        assert_raises(TypeError, gradient, f_2d, 1, 1, 1)
numpy/lib/tests/test_function_base.py:955:        assert_raises(TypeError, gradient, f_2d, x, x, axis=1)
numpy/lib/tests/test_function_base.py:956:        assert_raises(TypeError, gradient, f_2d, 1, 1, axis=1)
numpy/lib/tests/test_function_base.py:967:        assert_array_equal(gradient(x), dx)
numpy/lib/tests/test_function_base.py:968:        assert_(dx.dtype == np.dtype('timedelta64[D]'))
numpy/lib/tests/test_function_base.py:975:        assert_equal(type(out), type(x))
numpy/lib/tests/test_function_base.py:978:        assert_(x._mask is not out._mask)
numpy/lib/tests/test_function_base.py:983:        assert_array_equal(x2.mask, [False, False, True, False, False])
numpy/lib/tests/test_function_base.py:995:        assert_(np.all(num_error < 0.03) == True)
numpy/lib/tests/test_function_base.py:1003:        assert_(np.all(num_error < 0.03) == True)
numpy/lib/tests/test_function_base.py:1023:            assert_array_equal(res1, res2)
numpy/lib/tests/test_function_base.py:1024:            assert_array_equal(res2, res3)
numpy/lib/tests/test_function_base.py:1025:            assert_almost_equal(res1[0], exp_res.T)
numpy/lib/tests/test_function_base.py:1026:            assert_almost_equal(res1[1], exp_res)
numpy/lib/tests/test_function_base.py:1030:            assert_(res1.shape == res2.shape)
numpy/lib/tests/test_function_base.py:1031:            assert_almost_equal(res2, exp_res.T)
numpy/lib/tests/test_function_base.py:1035:            assert_(res1.shape == res2.shape)
numpy/lib/tests/test_function_base.py:1036:            assert_array_equal(res2, exp_res)
numpy/lib/tests/test_function_base.py:1044:            assert_array_equal(res1, res2)
numpy/lib/tests/test_function_base.py:1045:            assert_almost_equal(res1[0], exp_res.T)
numpy/lib/tests/test_function_base.py:1046:            assert_almost_equal(res1[1], exp_res)
numpy/lib/tests/test_function_base.py:1049:            assert_almost_equal(res1, exp_res.T)
numpy/lib/tests/test_function_base.py:1052:            assert_almost_equal(res1, exp_res)
numpy/lib/tests/test_function_base.py:1057:        assert_array_equal(res1[0], res2[1])
numpy/lib/tests/test_function_base.py:1058:        assert_array_equal(res1[1], res2[0])
numpy/lib/tests/test_function_base.py:1059:        assert_almost_equal(res1[0], fdx_even_ord1.T)
numpy/lib/tests/test_function_base.py:1060:        assert_almost_equal(res1[1], fdx_uneven_ord1)
numpy/lib/tests/test_function_base.py:1064:        assert_array_equal(res1[0], res2[1])
numpy/lib/tests/test_function_base.py:1065:        assert_array_equal(res1[1], res2[0])
numpy/lib/tests/test_function_base.py:1066:        assert_almost_equal(res1[0], fdx_even_ord2.T)
numpy/lib/tests/test_function_base.py:1067:        assert_almost_equal(res1[1], fdx_uneven_ord2)
numpy/lib/tests/test_function_base.py:1075:        assert_array_equal(gradient(x, axis=0), dx[0])
numpy/lib/tests/test_function_base.py:1076:        assert_array_equal(gradient(x, axis=1), dx[1])
numpy/lib/tests/test_function_base.py:1077:        assert_array_equal(gradient(x, axis=-1), dx[1])
numpy/lib/tests/test_function_base.py:1078:        assert_array_equal(gradient(x, axis=(1, 0)), [dx[1], dx[0]])
numpy/lib/tests/test_function_base.py:1081:        assert_almost_equal(gradient(x, axis=None), [dx[0], dx[1]])
numpy/lib/tests/test_function_base.py:1083:        assert_almost_equal(gradient(x, axis=None), gradient(x))
numpy/lib/tests/test_function_base.py:1086:        assert_array_equal(gradient(x, 2, 3, axis=(1, 0)),
numpy/lib/tests/test_function_base.py:1089:        assert_raises(TypeError, gradient, x, 1, 2, axis=1)
numpy/lib/tests/test_function_base.py:1091:        assert_raises(np.AxisError, gradient, x, axis=3)
numpy/lib/tests/test_function_base.py:1092:        assert_raises(np.AxisError, gradient, x, axis=-3)
numpy/lib/tests/test_function_base.py:1103:        assert_array_equal(gradient(x), dx)
numpy/lib/tests/test_function_base.py:1104:        assert_(dx.dtype == np.dtype('timedelta64[D]'))
numpy/lib/tests/test_function_base.py:1110:            assert_equal(gradient(x).dtype, np.diff(x).dtype)
numpy/lib/tests/test_function_base.py:1118:        assert_raises(ValueError, gradient, np.arange(0), edge_order=1)
numpy/lib/tests/test_function_base.py:1119:        assert_raises(ValueError, gradient, np.arange(0), edge_order=2)
numpy/lib/tests/test_function_base.py:1120:        assert_raises(ValueError, gradient, np.arange(1), edge_order=1)
numpy/lib/tests/test_function_base.py:1121:        assert_raises(ValueError, gradient, np.arange(1), edge_order=2)
numpy/lib/tests/test_function_base.py:1122:        assert_raises(ValueError, gradient, np.arange(2), edge_order=2)
numpy/lib/tests/test_function_base.py:1129:        assert_array_equal(g, [-1]*len(f))
numpy/lib/tests/test_function_base.py:1138:        assert_array_equal(dfdx, [(maxint + 1) // 2]*2)
numpy/lib/tests/test_function_base.py:1146:        assert_array_equal(dfdx, [-2]*len(x))
numpy/lib/tests/test_function_base.py:1156:        assert_array_equal(dfdx, [0.5, 0.5])
numpy/lib/tests/test_function_base.py:1171:        assert_array_almost_equal(y, yo, 11)
numpy/lib/tests/test_function_base.py:1172:        assert_array_almost_equal(z, zo, 11)
numpy/lib/tests/test_function_base.py:1180:        assert_equal(type(actual), type(expected))
numpy/lib/tests/test_function_base.py:1181:        assert_equal(actual.mask, expected.mask)
numpy/lib/tests/test_function_base.py:1182:        assert_equal(actual, expected)
numpy/lib/tests/test_function_base.py:1200:            assert_array_equal(res, arr[slc])
numpy/lib/tests/test_function_base.py:1206:            assert_array_equal(res, arr[slc])
numpy/lib/tests/test_function_base.py:1212:            assert_array_equal(res, arr[slc])
numpy/lib/tests/test_function_base.py:1219:            assert len(res1) == 0
numpy/lib/tests/test_function_base.py:1222:            assert len(res2) == 0
numpy/lib/tests/test_function_base.py:1227:        assert_array_equal(arr, res)
numpy/lib/tests/test_function_base.py:1238:        assert_array_equal(res, arr[slc])
numpy/lib/tests/test_function_base.py:1243:        assert_array_equal(arr, res)
numpy/lib/tests/test_function_base.py:1248:        assert isinstance(res, list)
numpy/lib/tests/test_function_base.py:1255:        assert_array_equal(b, [3, 2, 2, 3, 3])
numpy/lib/tests/test_function_base.py:1260:        assert_raises(TypeError, place, [1, 2, 3], [True, False], [0, 1])
numpy/lib/tests/test_function_base.py:1264:        assert_array_equal(a, [1, 2, 3, 4, 5, 6, 7])
numpy/lib/tests/test_function_base.py:1267:        assert_array_equal(a, np.arange(1, 8))
numpy/lib/tests/test_function_base.py:1270:        assert_array_equal(a, [8, 2, 9, 4, 8, 6, 9])
numpy/lib/tests/test_function_base.py:1271:        assert_raises_regex(ValueError, "Cannot insert from an empty array",
numpy/lib/tests/test_function_base.py:1277:        assert_array_equal(a, ['12', '9'])
numpy/lib/tests/test_function_base.py:1286:        assert_array_equal(a, ac)
numpy/lib/tests/test_function_base.py:1310:        assert_array_equal(r, [1, 6, 1, 2])
numpy/lib/tests/test_function_base.py:1321:        assert_array_equal(r, [5, 8, 1, 4])
numpy/lib/tests/test_function_base.py:1327:        assert_array_equal(y, x)
numpy/lib/tests/test_function_base.py:1334:        assert_array_almost_equal(r1, r2)
numpy/lib/tests/test_function_base.py:1345:        assert_array_equal(r1, r2)
numpy/lib/tests/test_function_base.py:1348:        assert_array_equal(r1, r2)
numpy/lib/tests/test_function_base.py:1358:        assert_array_equal(r1, r2)
numpy/lib/tests/test_function_base.py:1369:        assert_array_equal(r1, r2)
numpy/lib/tests/test_function_base.py:1380:        assert_array_equal(r1, r2)
numpy/lib/tests/test_function_base.py:1381:        assert_array_equal(r1, r3)
numpy/lib/tests/test_function_base.py:1392:        assert_equal(r1, _foo2(10.4, z=100))
numpy/lib/tests/test_function_base.py:1393:        assert_equal(r2, _foo2(10.4, y=-1))
numpy/lib/tests/test_function_base.py:1394:        assert_equal(r3, _foo2(10.4))
numpy/lib/tests/test_function_base.py:1404:        assert_equal(r1, _foo2(z=100, x=10.4, y=-1))
numpy/lib/tests/test_function_base.py:1405:        assert_equal(r2, _foo2(1, 2, 3))
numpy/lib/tests/test_function_base.py:1427:        assert_array_equal(r1, r2)
numpy/lib/tests/test_function_base.py:1429:        assert_array_equal(r1, r2)
numpy/lib/tests/test_function_base.py:1432:        assert_array_equal(r1, r2)
numpy/lib/tests/test_function_base.py:1445:        assert_array_equal(ans, vpolyval(x=[0, 1], p=[1, 2, 3]))
numpy/lib/tests/test_function_base.py:1446:        assert_array_equal(ans, vpolyval([0, 1], p=[1, 2, 3]))
numpy/lib/tests/test_function_base.py:1447:        assert_array_equal(ans, vpolyval([0, 1], [1, 2, 3]))
numpy/lib/tests/test_function_base.py:1458:        assert_array_equal(f(a=[1, 2], b=[3, 4]), [3, 8])
numpy/lib/tests/test_function_base.py:1466:        assert_array_equal(f([1, 2], [3, 4]), [3, 8])
numpy/lib/tests/test_function_base.py:1473:        assert_array_equal(f(), 1)
numpy/lib/tests/test_function_base.py:1481:        assert_equal(f.__doc__, foo.__doc__)
numpy/lib/tests/test_function_base.py:1485:        assert_equal(f.__doc__, doc)
numpy/lib/tests/test_function_base.py:1495:        assert_array_equal(vectorize(Foo().bar)(np.arange(9)),
numpy/lib/tests/test_function_base.py:1497:        assert_array_equal(vectorize(Foo.bar)(Foo(), np.arange(9)),
numpy/lib/tests/test_function_base.py:1508:        assert_equal(res1a, res2a)
numpy/lib/tests/test_function_base.py:1509:        assert_equal(res1b, res2b)
numpy/lib/tests/test_function_base.py:1515:        assert_equal(s, f(s))
numpy/lib/tests/test_function_base.py:1528:        assert_array_equal(f(x), x * x)
numpy/lib/tests/test_function_base.py:1529:        assert_equal(_calls[0], len(x))
numpy/lib/tests/test_function_base.py:1535:        assert_array_equal(f(x), x)
numpy/lib/tests/test_function_base.py:1538:        assert_equal(nfb._parse_gufunc_signature('(x)->()'), ([('x',)], [()]))
numpy/lib/tests/test_function_base.py:1539:        assert_equal(nfb._parse_gufunc_signature('(x,y)->()'),
numpy/lib/tests/test_function_base.py:1541:        assert_equal(nfb._parse_gufunc_signature('(x),(y)->()'),
numpy/lib/tests/test_function_base.py:1543:        assert_equal(nfb._parse_gufunc_signature('(x)->(y)'),
numpy/lib/tests/test_function_base.py:1545:        assert_equal(nfb._parse_gufunc_signature('(x)->(y),()'),
numpy/lib/tests/test_function_base.py:1547:        assert_equal(nfb._parse_gufunc_signature('(),(a,b,c),(d)->(d,e)'),
numpy/lib/tests/test_function_base.py:1551:        assert_equal(nfb._parse_gufunc_signature('(x )->()'), ([('x',)], [()]))
numpy/lib/tests/test_function_base.py:1552:        assert_equal(nfb._parse_gufunc_signature('( x , y )->(  )'),
numpy/lib/tests/test_function_base.py:1554:        assert_equal(nfb._parse_gufunc_signature('(x),( y) ->()'),
numpy/lib/tests/test_function_base.py:1556:        assert_equal(nfb._parse_gufunc_signature('(  x)-> (y )  '),
numpy/lib/tests/test_function_base.py:1558:        assert_equal(nfb._parse_gufunc_signature(' (x)->( y),( )'),
numpy/lib/tests/test_function_base.py:1580:        assert_array_equal(r, [1, 6, 1, 2])
numpy/lib/tests/test_function_base.py:1588:        assert_array_equal(r, [2, 3])
numpy/lib/tests/test_function_base.py:1596:        assert_array_equal(r, [[-1, 1], [-1, 1]])
numpy/lib/tests/test_function_base.py:1601:        assert_(isinstance(r, tuple) and len(r) == 2)
numpy/lib/tests/test_function_base.py:1602:        assert_array_equal(r[0], [1, 2, 3])
numpy/lib/tests/test_function_base.py:1603:        assert_array_equal(r[1], [1, 2, 3])
numpy/lib/tests/test_function_base.py:1608:        assert_array_equal(r, [[1, 2, 3], [2, 4, 6]])
numpy/lib/tests/test_function_base.py:1611:        assert_array_equal(r, [[[[1, 2, 3], [2, 4, 6]]]])
numpy/lib/tests/test_function_base.py:1614:        assert_array_equal(r, [[[1, 2, 3], [0, 0, 0]],
numpy/lib/tests/test_function_base.py:1618:        assert_array_equal(r, [[[1, 2, 3], [2, 4, 6]],
numpy/lib/tests/test_function_base.py:1624:        assert_array_equal(r, [1, 2])
numpy/lib/tests/test_function_base.py:1627:        assert_array_equal(r, [[1, 2], [2, 3]])
numpy/lib/tests/test_function_base.py:1635:        assert_array_equal(f([1, 2, 3]), [2, 3, 4])
numpy/lib/tests/test_function_base.py:1636:        assert_array_equal(f([1, 2, 3], b=0), [1, 2, 3])
numpy/lib/tests/test_function_base.py:1641:        assert_equal(r.dtype, np.dtype('float64'))
numpy/lib/tests/test_function_base.py:1642:        assert_array_equal(r, [1, 2, 3])
numpy/lib/tests/test_function_base.py:1682:        assert_array_equal(f(x), x)
numpy/lib/tests/test_function_base.py:1689:        assert_array_equal(f(x), x)
numpy/lib/tests/test_function_base.py:1692:        assert_array_equal(f(x), x)
numpy/lib/tests/test_function_base.py:1695:        assert_array_equal(f(x.T), x.T)
numpy/lib/tests/test_function_base.py:1712:        assert_equal(type(r), subclass)
numpy/lib/tests/test_function_base.py:1713:        assert_equal(r, [[1., 3., 2.], [4., 6., 5.], [7., 9., 8.]])
numpy/lib/tests/test_function_base.py:1718:        assert_equal(type(r), subclass)
numpy/lib/tests/test_function_base.py:1719:        assert_equal(r, m * v)
numpy/lib/tests/test_function_base.py:1755:            assert_equal(sys.getrefcount(A_func), refcount + incr)
numpy/lib/tests/test_function_base.py:1758:            assert_equal(sys.getrefcount(A_func), refcount)
numpy/lib/tests/test_function_base.py:1767:        assert_array_equal(digitize(x, bins), np.arange(11))
numpy/lib/tests/test_function_base.py:1772:        assert_array_equal(digitize(x, bins), np.arange(11))
numpy/lib/tests/test_function_base.py:1777:        assert_(np.all(digitize(x, bin) != 0))
numpy/lib/tests/test_function_base.py:1783:        assert_array_equal(digitize(x, bins), default_answer)
numpy/lib/tests/test_function_base.py:1785:        assert_array_equal(digitize(x, bins, True), right_answer)
numpy/lib/tests/test_function_base.py:1790:        assert_array_equal(digitize(x, bins, True), np.arange(11))
numpy/lib/tests/test_function_base.py:1795:        assert_array_equal(digitize(x, bins, True), np.arange(11))
numpy/lib/tests/test_function_base.py:1800:        assert_(np.all(digitize(x, bins, True) != 10))
numpy/lib/tests/test_function_base.py:1805:        assert_array_equal(digitize(x, bins, False), [0, 2, 3, 3])
numpy/lib/tests/test_function_base.py:1806:        assert_array_equal(digitize(x, bins, True), [0, 0, 2, 3])
numpy/lib/tests/test_function_base.py:1808:        assert_array_equal(digitize(x, bins, False), [3, 2, 0, 0])
numpy/lib/tests/test_function_base.py:1809:        assert_array_equal(digitize(x, bins, True), [3, 3, 2, 0])
numpy/lib/tests/test_function_base.py:1811:        assert_array_equal(digitize(x, bins, False), [0, 0, 4, 4])
numpy/lib/tests/test_function_base.py:1812:        assert_array_equal(digitize(x, bins, True), [0, 0, 0, 4])
numpy/lib/tests/test_function_base.py:1814:        assert_raises(ValueError, digitize, x, bins)
numpy/lib/tests/test_function_base.py:1816:        assert_raises(ValueError, digitize, x, bins)
numpy/lib/tests/test_function_base.py:1821:        assert_raises(TypeError, digitize, x, bins)
numpy/lib/tests/test_function_base.py:1823:        assert_raises(TypeError, digitize, x, bins)
numpy/lib/tests/test_function_base.py:1831:        assert_(not isinstance(digitize(b, a, False), A))
numpy/lib/tests/test_function_base.py:1832:        assert_(not isinstance(digitize(b, a, True), A))
numpy/lib/tests/test_function_base.py:1837:        assert_equal(np.digitize(x, [x - 1, x + 1]), 1)
numpy/lib/tests/test_function_base.py:1844:        assert_equal(np.digitize(x, [x + 1, x - 1]), 1)
numpy/lib/tests/test_function_base.py:1851:        assert_array_equal(unwrap([1, 1 + 2 * np.pi]), [1, 1])
numpy/lib/tests/test_function_base.py:1853:        assert_(np.all(diff(unwrap(rand(10) * 100)) < np.pi))
numpy/lib/tests/test_function_base.py:1857:        assert_array_equal(unwrap([1, 1 + 256], period=255), [1, 2])
numpy/lib/tests/test_function_base.py:1859:        assert_(np.all(diff(unwrap(rand(10) * 1000, period=255)) < 255))
numpy/lib/tests/test_function_base.py:1863:        assert_array_equal(unwrap(wrap_seq, period=255), simple_seq)
numpy/lib/tests/test_function_base.py:1868:        assert_array_equal(no_discont, [0, 75, 150, 225, 300, 180])
numpy/lib/tests/test_function_base.py:1870:        assert_array_equal(sm_discont, [0, 75, 150, 225, 300, 430])
numpy/lib/tests/test_function_base.py:1871:        assert sm_discont.dtype == wrap_uneven.dtype
numpy/lib/tests/test_function_base.py:1888:        assert w.dtype == ref_dtype
numpy/lib/tests/test_function_base.py:1891:        assert_equal(w, flipud(w))
numpy/lib/tests/test_function_base.py:1895:            assert_array_equal(w, np.array([]))
numpy/lib/tests/test_function_base.py:1897:            assert_array_equal(w, np.ones(1))
numpy/lib/tests/test_function_base.py:1899:            assert_almost_equal(np.sum(w, axis=0), 4.500, 4)
numpy/lib/tests/test_function_base.py:1909:        assert w.dtype == ref_dtype
numpy/lib/tests/test_function_base.py:1912:        assert_equal(w, flipud(w))
numpy/lib/tests/test_function_base.py:1916:            assert_array_equal(w, np.array([]))
numpy/lib/tests/test_function_base.py:1918:            assert_array_equal(w, np.ones(1))
numpy/lib/tests/test_function_base.py:1920:            assert_almost_equal(np.sum(w, axis=0), 4.9400, 4)
numpy/lib/tests/test_function_base.py:1930:        assert w.dtype == ref_dtype
numpy/lib/tests/test_function_base.py:1933:        assert_equal(w, flipud(w))
numpy/lib/tests/test_function_base.py:1937:            assert_array_equal(w, np.array([]))
numpy/lib/tests/test_function_base.py:1939:            assert_array_equal(w, np.ones(1))
numpy/lib/tests/test_function_base.py:1941:            assert_almost_equal(np.sum(w, axis=0), 4.4444, 4)
numpy/lib/tests/test_function_base.py:1951:        assert w.dtype == ref_dtype
numpy/lib/tests/test_function_base.py:1954:        assert_equal(w, flipud(w))
numpy/lib/tests/test_function_base.py:1958:            assert_array_equal(w, np.array([]))
numpy/lib/tests/test_function_base.py:1960:            assert_array_equal(w, np.ones(1))
numpy/lib/tests/test_function_base.py:1962:            assert_almost_equal(np.sum(w, axis=0), 3.7800, 4)
numpy/lib/tests/test_function_base.py:1972:        assert w.dtype == ref_dtype
numpy/lib/tests/test_function_base.py:1975:        assert_equal(w, flipud(w))
numpy/lib/tests/test_function_base.py:1979:            assert_array_equal(w, np.array([]))
numpy/lib/tests/test_function_base.py:1981:            assert_array_equal(w, np.ones(1))
numpy/lib/tests/test_function_base.py:1983:            assert_almost_equal(np.sum(w, axis=0), 10, 15)
numpy/lib/tests/test_function_base.py:1992:        assert_almost_equal(r, 1, 7)
numpy/lib/tests/test_function_base.py:2017:        assert_almost_equal(r, qx)
numpy/lib/tests/test_function_base.py:2019:        assert_almost_equal(r, qy)
numpy/lib/tests/test_function_base.py:2021:        assert_almost_equal(r, qz)
numpy/lib/tests/test_function_base.py:2025:        assert_almost_equal(r, qx)
numpy/lib/tests/test_function_base.py:2027:        assert_almost_equal(r, qy)
numpy/lib/tests/test_function_base.py:2029:        assert_almost_equal(r, qz)
numpy/lib/tests/test_function_base.py:2039:        assert_almost_equal(trapz(ym, x), r)
numpy/lib/tests/test_function_base.py:2042:        assert_almost_equal(trapz(ym, xm), r)
numpy/lib/tests/test_function_base.py:2045:        assert_almost_equal(trapz(y, xm), r)
numpy/lib/tests/test_function_base.py:2051:        assert_(sinc(0) == 1)
numpy/lib/tests/test_function_base.py:2054:        assert_array_almost_equal(w, flipud(w), 7)
numpy/lib/tests/test_function_base.py:2061:        assert_array_equal(y1, y2)
numpy/lib/tests/test_function_base.py:2062:        assert_array_equal(y1, y3)
numpy/lib/tests/test_function_base.py:2069:        assert_(np.all(unique(x) == [0, 1, 2, 3, 4]))
numpy/lib/tests/test_function_base.py:2070:        assert_(unique(np.array([1, 1, 1, 1, 1])) == np.array([1]))
numpy/lib/tests/test_function_base.py:2072:        assert_(np.all(unique(x) == ['bar', 'foo', 'ham', 'widget']))
numpy/lib/tests/test_function_base.py:2074:        assert_(np.all(unique(x) == [1 + 1j, 1 + 10j, 5 + 6j, 10]))
numpy/lib/tests/test_function_base.py:2084:        assert_raises(ValueError, np.lib.asarray_chkfinite, b)
numpy/lib/tests/test_function_base.py:2085:        assert_raises(ValueError, np.lib.asarray_chkfinite, c)
numpy/lib/tests/test_function_base.py:2091:        assert_(a.dtype == np.float64)
numpy/lib/tests/test_function_base.py:2116:        assert_almost_equal(np.corrcoef([0, 1, 0], [1, 0, 1]),
numpy/lib/tests/test_function_base.py:2121:        assert_almost_equal(tgt1, self.res1)
numpy/lib/tests/test_function_base.py:2122:        assert_(np.all(np.abs(tgt1) <= 1.0))
numpy/lib/tests/test_function_base.py:2125:        assert_almost_equal(tgt2, self.res2)
numpy/lib/tests/test_function_base.py:2126:        assert_(np.all(np.abs(tgt2) <= 1.0))
numpy/lib/tests/test_function_base.py:2132:            assert_warns(DeprecationWarning, corrcoef, self.A, ddof=-1)
numpy/lib/tests/test_function_base.py:2135:            assert_almost_equal(corrcoef(self.A, ddof=-1), self.res1)
numpy/lib/tests/test_function_base.py:2136:            assert_almost_equal(corrcoef(self.A, self.B, ddof=-1), self.res2)
numpy/lib/tests/test_function_base.py:2137:            assert_almost_equal(corrcoef(self.A, ddof=3), self.res1)
numpy/lib/tests/test_function_base.py:2138:            assert_almost_equal(corrcoef(self.A, self.B, ddof=3), self.res2)
numpy/lib/tests/test_function_base.py:2144:            assert_warns(DeprecationWarning, corrcoef, self.A, self.B, 1, 0)
numpy/lib/tests/test_function_base.py:2145:            assert_warns(DeprecationWarning, corrcoef, self.A, bias=0)
numpy/lib/tests/test_function_base.py:2148:            assert_almost_equal(corrcoef(self.A, bias=1), self.res1)
numpy/lib/tests/test_function_base.py:2154:        assert_allclose(res, tgt)
numpy/lib/tests/test_function_base.py:2155:        assert_(np.all(np.abs(res) <= 1.0))
numpy/lib/tests/test_function_base.py:2160:        assert_allclose(np.corrcoef(x, y), np.array([[1., -1.j], [1.j, 1.]]))
numpy/lib/tests/test_function_base.py:2165:            assert_array_equal(corrcoef(np.array([])), np.nan)
numpy/lib/tests/test_function_base.py:2166:            assert_array_equal(corrcoef(np.array([]).reshape(0, 2)),
numpy/lib/tests/test_function_base.py:2168:            assert_array_equal(corrcoef(np.array([]).reshape(2, 0)),
numpy/lib/tests/test_function_base.py:2175:        assert_array_almost_equal(c, np.array([[1., -1.], [-1., 1.]]))
numpy/lib/tests/test_function_base.py:2176:        assert_(np.all(np.abs(c) <= 1.0))
numpy/lib/tests/test_function_base.py:2182:        assert test_type == res.dtype
numpy/lib/tests/test_function_base.py:2199:        assert_allclose(cov(self.x1), self.res1)
numpy/lib/tests/test_function_base.py:2204:        assert_allclose(cov(x), res)
numpy/lib/tests/test_function_base.py:2205:        assert_allclose(cov(x, aweights=np.ones(3)), res)
numpy/lib/tests/test_function_base.py:2210:        assert_allclose(cov(x, y), np.array([[1., -1.j], [1.j, 1.]]))
numpy/lib/tests/test_function_base.py:2215:            assert_array_equal(cov(np.array([])), np.nan)
numpy/lib/tests/test_function_base.py:2216:            assert_array_equal(cov(np.array([]).reshape(0, 2)),
numpy/lib/tests/test_function_base.py:2218:            assert_array_equal(cov(np.array([]).reshape(2, 0)),
numpy/lib/tests/test_function_base.py:2224:            assert_array_equal(cov(self.x1, ddof=5),
numpy/lib/tests/test_function_base.py:2229:        assert_allclose(cov(self.x3), cov(self.x3, rowvar=False))
numpy/lib/tests/test_function_base.py:2231:        assert_allclose(cov(self.x3, y), cov(self.x3, y, rowvar=False))
numpy/lib/tests/test_function_base.py:2234:        assert_allclose(cov(self.x3, ddof=1), np.var(self.x3, ddof=1))
numpy/lib/tests/test_function_base.py:2237:        assert_allclose(cov(self.x2, fweights=self.frequencies),
numpy/lib/tests/test_function_base.py:2239:        assert_allclose(cov(self.x1, fweights=self.frequencies),
numpy/lib/tests/test_function_base.py:2241:        assert_allclose(cov(self.x1, fweights=self.unit_frequencies),
numpy/lib/tests/test_function_base.py:2244:        assert_raises(TypeError, cov, self.x1, fweights=nonint)
numpy/lib/tests/test_function_base.py:2246:        assert_raises(RuntimeError, cov, self.x1, fweights=f)
numpy/lib/tests/test_function_base.py:2248:        assert_raises(RuntimeError, cov, self.x1, fweights=f)
numpy/lib/tests/test_function_base.py:2250:        assert_raises(ValueError, cov, self.x1, fweights=f)
numpy/lib/tests/test_function_base.py:2253:        assert_allclose(cov(self.x1, aweights=self.weights), self.res3)
numpy/lib/tests/test_function_base.py:2254:        assert_allclose(cov(self.x1, aweights=3.0 * self.weights),
numpy/lib/tests/test_function_base.py:2256:        assert_allclose(cov(self.x1, aweights=self.unit_weights), self.res1)
numpy/lib/tests/test_function_base.py:2258:        assert_raises(RuntimeError, cov, self.x1, aweights=w)
numpy/lib/tests/test_function_base.py:2260:        assert_raises(RuntimeError, cov, self.x1, aweights=w)
numpy/lib/tests/test_function_base.py:2262:        assert_raises(ValueError, cov, self.x1, aweights=w)
numpy/lib/tests/test_function_base.py:2288:        assert test_type == res.dtype
numpy/lib/tests/test_function_base.py:2294:        assert_almost_equal(
numpy/lib/tests/test_function_base.py:2301:        assert_almost_equal(i0(A), expected)
numpy/lib/tests/test_function_base.py:2302:        assert_almost_equal(i0(-A), expected)
numpy/lib/tests/test_function_base.py:2309:        assert_almost_equal(
numpy/lib/tests/test_function_base.py:2318:        assert_equal(i0_0.shape, (1,))
numpy/lib/tests/test_function_base.py:2319:        assert_array_equal(np.i0([0.]), np.array([1.]))
numpy/lib/tests/test_function_base.py:2331:        assert isinstance(np.abs(array_like()), array_like)
numpy/lib/tests/test_function_base.py:2335:        assert_array_equal(exp, res)
numpy/lib/tests/test_function_base.py:2345:        assert_(np.isfinite(kaiser(1, 1.0)))
numpy/lib/tests/test_function_base.py:2346:        assert_almost_equal(kaiser(0, 1.0),
numpy/lib/tests/test_function_base.py:2348:        assert_almost_equal(kaiser(2, 1.0),
numpy/lib/tests/test_function_base.py:2350:        assert_almost_equal(kaiser(5, 1.0),
numpy/lib/tests/test_function_base.py:2353:        assert_almost_equal(kaiser(5, 1.56789),
numpy/lib/tests/test_function_base.py:2367:        assert_almost_equal(
numpy/lib/tests/test_function_base.py:2378:        assert_array_equal(X, np.array([[1, 2, 3],
numpy/lib/tests/test_function_base.py:2382:        assert_array_equal(Y, np.array([[4, 4, 4],
numpy/lib/tests/test_function_base.py:2389:        assert_array_equal(X, np.array([1, 2, 3, 4]))
numpy/lib/tests/test_function_base.py:2393:        assert_array_equal([], meshgrid(*args))
numpy/lib/tests/test_function_base.py:2394:        assert_array_equal([], meshgrid(*args, copy=False))
numpy/lib/tests/test_function_base.py:2400:        assert_array_equal(X, np.array([[1, 1, 1, 1],
numpy/lib/tests/test_function_base.py:2403:        assert_array_equal(Y, np.array([[4, 5, 6, 7],
numpy/lib/tests/test_function_base.py:2409:        assert_(meshgrid(x, y)[0].shape == (4, 3))
numpy/lib/tests/test_function_base.py:2410:        assert_(meshgrid(x, y, indexing='ij')[0].shape == (3, 4))
numpy/lib/tests/test_function_base.py:2411:        assert_(meshgrid(x, y, z)[0].shape == (4, 3, 2))
numpy/lib/tests/test_function_base.py:2412:        assert_(meshgrid(x, y, z, indexing='ij')[0].shape == (3, 4, 2))
numpy/lib/tests/test_function_base.py:2414:        assert_raises(ValueError, meshgrid, x, y, indexing='notvalid')
numpy/lib/tests/test_function_base.py:2418:        assert_array_equal(X, np.array([[1, 2, 3]]))
numpy/lib/tests/test_function_base.py:2419:        assert_array_equal(Y, np.array([[4], [5], [6], [7]]))
numpy/lib/tests/test_function_base.py:2437:        assert_(X.dtype == x.dtype)
numpy/lib/tests/test_function_base.py:2438:        assert_(Y.dtype == y.dtype)
numpy/lib/tests/test_function_base.py:2443:        assert_(X.dtype == x.dtype)
numpy/lib/tests/test_function_base.py:2444:        assert_(Y.dtype == y.dtype)
numpy/lib/tests/test_function_base.py:2449:        assert_(X.dtype == x.dtype)
numpy/lib/tests/test_function_base.py:2450:        assert_(Y.dtype == y.dtype)
numpy/lib/tests/test_function_base.py:2459:        assert_equal(x[0, :], 0)
numpy/lib/tests/test_function_base.py:2460:        assert_equal(x[1, :], X)
numpy/lib/tests/test_function_base.py:2465:        assert_equal(a.shape, expected_shape)
numpy/lib/tests/test_function_base.py:2466:        assert_equal(b.shape, expected_shape)
numpy/lib/tests/test_function_base.py:2467:        assert_equal(c.shape, expected_shape)
numpy/lib/tests/test_function_base.py:2468:        assert_equal(d.shape, expected_shape)
numpy/lib/tests/test_function_base.py:2469:        assert_equal(e.shape, expected_shape)
numpy/lib/tests/test_function_base.py:2473:        assert_equal(a, [[[0, 0, 0]], [[0, 0, 0]]])
numpy/lib/tests/test_function_base.py:2474:        assert_equal(b, [[[1, 1, 1]], [[2, 2, 2]]])
numpy/lib/tests/test_function_base.py:2475:        assert_equal(c, [[[3, 4, 5]], [[3, 4, 5]]])
numpy/lib/tests/test_function_base.py:2479:        assert_equal(a, [[[0, 0, 0], [0, 0, 0]]])
numpy/lib/tests/test_function_base.py:2480:        assert_equal(b, [[[1, 1, 1], [2, 2, 2]]])
numpy/lib/tests/test_function_base.py:2481:        assert_equal(c, [[[3, 4, 5], [3, 4, 5]]])
numpy/lib/tests/test_function_base.py:2489:        assert_array_equal(x, [1, 0])
numpy/lib/tests/test_function_base.py:2493:        assert_array_equal(x, [1, 0])
numpy/lib/tests/test_function_base.py:2497:        assert_array_equal(x, [1, 0])
numpy/lib/tests/test_function_base.py:2501:        assert_array_equal(x, [1, 0])
numpy/lib/tests/test_function_base.py:2505:        assert_array_equal(x, [1, 0])
numpy/lib/tests/test_function_base.py:2508:        assert_array_equal(x, [0, -1])
numpy/lib/tests/test_function_base.py:2510:        assert_raises_regex(ValueError, '1 or 2 functions are expected',
numpy/lib/tests/test_function_base.py:2512:        assert_raises_regex(ValueError, '1 or 2 functions are expected',
numpy/lib/tests/test_function_base.py:2517:        assert_array_equal(x, [3, 4])
numpy/lib/tests/test_function_base.py:2521:        assert_equal(x, 4)
numpy/lib/tests/test_function_base.py:2526:        assert_array_equal(x, [2, 0])
numpy/lib/tests/test_function_base.py:2530:        assert_array_equal(x, [2, 3])
numpy/lib/tests/test_function_base.py:2535:        assert_(y.ndim == 0)
numpy/lib/tests/test_function_base.py:2536:        assert_(y == 0)
numpy/lib/tests/test_function_base.py:2540:        assert_(y.ndim == 0)
numpy/lib/tests/test_function_base.py:2541:        assert_(y == 1)
numpy/lib/tests/test_function_base.py:2545:        assert_array_equal(y, 3)
numpy/lib/tests/test_function_base.py:2550:        assert_equal(y, 4)
numpy/lib/tests/test_function_base.py:2555:        assert_array_equal(y, 2)
numpy/lib/tests/test_function_base.py:2557:        assert_raises_regex(ValueError, '2 or 3 functions are expected',
numpy/lib/tests/test_function_base.py:2559:        assert_raises_regex(ValueError, '2 or 3 functions are expected',
numpy/lib/tests/test_function_base.py:2566:        assert_equal(y, 2)
numpy/lib/tests/test_function_base.py:2572:        assert_array_equal(y, np.array([[-1., -1., -1.],
numpy/lib/tests/test_function_base.py:2580:        assert_equal(type(r), subclass)
numpy/lib/tests/test_function_base.py:2581:        assert_equal(r, [-1., -1., 0., 0., 1.])
numpy/lib/tests/test_function_base.py:2588:        assert_array_equal(y, np.ones(4))
numpy/lib/tests/test_function_base.py:2592:        assert_array_equal(y, np.array([0, 2, 1, 0, 1, 1]))
numpy/lib/tests/test_function_base.py:2598:        assert_array_equal(y, w)
numpy/lib/tests/test_function_base.py:2604:        assert_array_equal(y, np.array([0, 0.2, 0.5, 0, 0.5, 0.1]))
numpy/lib/tests/test_function_base.py:2609:        assert_array_equal(y, np.array([2, 3, 0]))
numpy/lib/tests/test_function_base.py:2612:        assert_array_equal(y, np.array([]))
numpy/lib/tests/test_function_base.py:2617:        assert_array_equal(y, np.array([1, 2, 2, 2]))
numpy/lib/tests/test_function_base.py:2619:        assert_array_equal(y, np.array([1, 2, 2, 2]))
numpy/lib/tests/test_function_base.py:2625:        assert_array_equal(y, np.array([0, 0.2, 0.5, 0, 0.5, 0.1, 0, 0]))
numpy/lib/tests/test_function_base.py:2630:        assert_array_equal(x, y)
numpy/lib/tests/test_function_base.py:2635:        assert_array_equal(y, np.zeros(5, dtype=int))
numpy/lib/tests/test_function_base.py:2639:        assert_raises_regex(TypeError,
numpy/lib/tests/test_function_base.py:2642:        assert_raises_regex(ValueError,
numpy/lib/tests/test_function_base.py:2647:        assert_raises_regex(TypeError,
numpy/lib/tests/test_function_base.py:2650:        assert_raises_regex(ValueError,
numpy/lib/tests/test_function_base.py:2662:        assert_equal(sys.getrefcount(np.dtype(np.intp)), intp_refcount)
numpy/lib/tests/test_function_base.py:2663:        assert_equal(sys.getrefcount(np.dtype(np.double)), double_refcount)
numpy/lib/tests/test_function_base.py:2667:        assert_equal(sys.getrefcount(np.dtype(np.intp)), intp_refcount)
numpy/lib/tests/test_function_base.py:2668:        assert_equal(sys.getrefcount(np.dtype(np.double)), double_refcount)
numpy/lib/tests/test_function_base.py:2683:        assert_raises(ValueError, interp, 0, [], [])
numpy/lib/tests/test_function_base.py:2684:        assert_raises(ValueError, interp, 0, [0], [1, 2])
numpy/lib/tests/test_function_base.py:2685:        assert_raises(ValueError, interp, 0, [0, 1], [1, 2], period=0)
numpy/lib/tests/test_function_base.py:2686:        assert_raises(ValueError, interp, 0, [], [], period=360)
numpy/lib/tests/test_function_base.py:2687:        assert_raises(ValueError, interp, 0, [0], [1, 2], period=360)
numpy/lib/tests/test_function_base.py:2693:        assert_almost_equal(np.interp(x0, x, y), x0)
numpy/lib/tests/test_function_base.py:2709:            assert_equal(incres, inctgt)
numpy/lib/tests/test_function_base.py:2710:            assert_equal(decres, dectgt)
numpy/lib/tests/test_function_base.py:2716:            assert_equal(incres, inctgt)
numpy/lib/tests/test_function_base.py:2717:            assert_equal(decres, dectgt)
numpy/lib/tests/test_function_base.py:2723:            assert_equal(incres, inctgt)
numpy/lib/tests/test_function_base.py:2724:            assert_equal(decres, dectgt)
numpy/lib/tests/test_function_base.py:2730:            assert_equal(incres, inctgt)
numpy/lib/tests/test_function_base.py:2731:            assert_equal(decres, dectgt)
numpy/lib/tests/test_function_base.py:2737:        assert_almost_equal(np.interp(x0, x, y), x0)
numpy/lib/tests/test_function_base.py:2739:        assert_almost_equal(np.interp(x0, x, y), x0)
numpy/lib/tests/test_function_base.py:2741:        assert_almost_equal(np.interp(x0, x, y), x0)
numpy/lib/tests/test_function_base.py:2743:        assert_almost_equal(np.interp(x0, x, y), x0)
numpy/lib/tests/test_function_base.py:2745:        assert_almost_equal(np.interp(x0, x, y), x0)
numpy/lib/tests/test_function_base.py:2751:        assert_almost_equal(np.interp(x, xp, fp), [1, 2, np.inf, np.inf, 4])
numpy/lib/tests/test_function_base.py:2753:        assert_almost_equal(np.interp(x, xp, fp), [1, 2, np.nan, np.nan, 4])
numpy/lib/tests/test_function_base.py:2772:        assert_equal(np.interp(0.5, [np.nan,      1], sc([     0,     10])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2773:        assert_equal(np.interp(0.5, [     0, np.nan], sc([     0,     10])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2774:        assert_equal(np.interp(0.5, [     0,      1], sc([np.nan,     10])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2775:        assert_equal(np.interp(0.5, [     0,      1], sc([     0, np.nan])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2779:        assert_equal(np.interp(0.5, [-np.inf, +np.inf], sc([      0,      10])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2780:        assert_equal(np.interp(0.5, [      0,       1], sc([-np.inf, +np.inf])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2781:        assert_equal(np.interp(0.5, [      0,       1], sc([+np.inf, -np.inf])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2784:        assert_equal(np.interp(0.5, [-np.inf, +np.inf], sc([     10,      10])), sc(10))
numpy/lib/tests/test_function_base.py:2788:        assert_equal(np.interp(0.5, [-np.inf,       1], sc([-np.inf,      10])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2789:        assert_equal(np.interp(0.5, [-np.inf,       1], sc([+np.inf,      10])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2790:        assert_equal(np.interp(0.5, [-np.inf,       1], sc([      0, -np.inf])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2791:        assert_equal(np.interp(0.5, [-np.inf,       1], sc([      0, +np.inf])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2792:        assert_equal(np.interp(0.5, [      0, +np.inf], sc([-np.inf,      10])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2793:        assert_equal(np.interp(0.5, [      0, +np.inf], sc([+np.inf,      10])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2794:        assert_equal(np.interp(0.5, [      0, +np.inf], sc([      0, -np.inf])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2795:        assert_equal(np.interp(0.5, [      0, +np.inf], sc([      0, +np.inf])), sc(np.nan))
numpy/lib/tests/test_function_base.py:2799:        assert_equal(np.interp(0.5, [-np.inf, -np.inf], sc([0, 10])), sc(10))
numpy/lib/tests/test_function_base.py:2800:        assert_equal(np.interp(0.5, [-np.inf, 1      ], sc([0, 10])), sc(10))
numpy/lib/tests/test_function_base.py:2801:        assert_equal(np.interp(0.5, [      0, +np.inf], sc([0, 10])), sc(0))
numpy/lib/tests/test_function_base.py:2802:        assert_equal(np.interp(0.5, [+np.inf, +np.inf], sc([0, 10])), sc(0))
numpy/lib/tests/test_function_base.py:2806:        assert_equal(np.interp(0.5, [0, 1], sc([      0, -np.inf])), sc(-np.inf))
numpy/lib/tests/test_function_base.py:2807:        assert_equal(np.interp(0.5, [0, 1], sc([      0, +np.inf])), sc(+np.inf))
numpy/lib/tests/test_function_base.py:2808:        assert_equal(np.interp(0.5, [0, 1], sc([-np.inf,      10])), sc(-np.inf))
numpy/lib/tests/test_function_base.py:2809:        assert_equal(np.interp(0.5, [0, 1], sc([+np.inf,      10])), sc(+np.inf))
numpy/lib/tests/test_function_base.py:2810:        assert_equal(np.interp(0.5, [0, 1], sc([-np.inf, -np.inf])), sc(-np.inf))
numpy/lib/tests/test_function_base.py:2811:        assert_equal(np.interp(0.5, [0, 1], sc([+np.inf, +np.inf])), sc(+np.inf))
numpy/lib/tests/test_function_base.py:2819:        assert_almost_equal(np.interp(x0, x, y), y0)
numpy/lib/tests/test_function_base.py:2823:        assert_almost_equal(np.interp(x0, x, y, left=left), left)
numpy/lib/tests/test_function_base.py:2826:        assert_almost_equal(np.interp(x0, x, y, right=right), right)
numpy/lib/tests/test_function_base.py:2832:        assert_almost_equal(np.interp(x, xp, fp), y)
numpy/lib/tests/test_function_base.py:2839:        assert_almost_equal(np.interp(x, xp, fp, period=360), y)
numpy/lib/tests/test_function_base.py:2845:        assert_almost_equal(np.interp(x0, x, y), x0)
numpy/lib/tests/test_function_base.py:2851:        assert_equal(actual, 0)
numpy/lib/tests/test_function_base.py:2852:        assert_(isinstance(actual, np.float64))
numpy/lib/tests/test_function_base.py:2855:        assert_equal(actual, 0.5)
numpy/lib/tests/test_function_base.py:2856:        assert_(isinstance(actual, np.float64))
numpy/lib/tests/test_function_base.py:2861:        assert_almost_equal(np.interp(np.pi, xp, fp), 0.0)
numpy/lib/tests/test_function_base.py:2868:        assert_almost_equal(np.interp(x, xp, fp, period=360), y)
numpy/lib/tests/test_function_base.py:2871:        assert_almost_equal(np.interp(x, xp, fp, period=360), y)
numpy/lib/tests/test_function_base.py:2878:        assert_equal(np.percentile(x, 0), 0.)
numpy/lib/tests/test_function_base.py:2879:        assert_equal(np.percentile(x, 100), 3.5)
numpy/lib/tests/test_function_base.py:2880:        assert_equal(np.percentile(x, 50), 1.75)
numpy/lib/tests/test_function_base.py:2882:        assert_equal(np.percentile(x, 0), np.nan)
numpy/lib/tests/test_function_base.py:2883:        assert_equal(np.percentile(x, 0, method='nearest'), np.nan)
numpy/lib/tests/test_function_base.py:2889:        assert_equal(p, Fraction(0))
numpy/lib/tests/test_function_base.py:2890:        assert_equal(type(p), Fraction)
numpy/lib/tests/test_function_base.py:2893:        assert_equal(p, Fraction(7, 2))
numpy/lib/tests/test_function_base.py:2894:        assert_equal(type(p), Fraction)
numpy/lib/tests/test_function_base.py:2897:        assert_equal(p, Fraction(7, 4))
numpy/lib/tests/test_function_base.py:2898:        assert_equal(type(p), Fraction)
numpy/lib/tests/test_function_base.py:2901:        assert_equal(p, np.array([Fraction(7, 4)]))
numpy/lib/tests/test_function_base.py:2902:        assert_equal(type(p), np.ndarray)
numpy/lib/tests/test_function_base.py:2917:        assert_array_equal(np.percentile(x, 50, axis=0), [1, 1, 1])
numpy/lib/tests/test_function_base.py:2977:        assert_equal(np.percentile(np.arange(10, dtype=dtype), 50,
numpy/lib/tests/test_function_base.py:2979:        assert_equal(np.percentile(np.arange(10, dtype=dtype), 50,
numpy/lib/tests/test_function_base.py:2984:        assert_equal(np.percentile(np.arange(10, dtype=dtype), 51,
numpy/lib/tests/test_function_base.py:2986:        assert_equal(np.percentile(np.arange(9, dtype=dtype) + 1, 50,
numpy/lib/tests/test_function_base.py:2988:        assert_equal(np.percentile(np.arange(11, dtype=dtype), 51,
numpy/lib/tests/test_function_base.py:2990:        assert_equal(np.percentile(np.arange(11, dtype=dtype), 50,
numpy/lib/tests/test_function_base.py:2995:        assert_equal(np.percentile(np.arange(10, dtype=dtype), 51,
numpy/lib/tests/test_function_base.py:2997:        assert_equal(np.percentile(np.arange(10, dtype=dtype), 49,
numpy/lib/tests/test_function_base.py:3011:        assert_equal(np.percentile(x, [0, 100, 50]), [0, 3.5, 1.75])
numpy/lib/tests/test_function_base.py:3016:        assert_equal(np.percentile(x, (25, 50, 100)), [2.75, 5.5, 11.0])
numpy/lib/tests/test_function_base.py:3019:        assert_equal(np.percentile(x, (25, 50, 100), axis=0), r0)
numpy/lib/tests/test_function_base.py:3022:        assert_equal(np.percentile(x, (25, 50, 100), axis=1), np.array(r1).T)
numpy/lib/tests/test_function_base.py:3026:        assert_equal(np.percentile(x, (25, 50)).shape, (2,))
numpy/lib/tests/test_function_base.py:3027:        assert_equal(np.percentile(x, (25, 50, 75)).shape, (3,))
numpy/lib/tests/test_function_base.py:3028:        assert_equal(np.percentile(x, (25, 50), axis=0).shape, (2, 4, 5, 6))
numpy/lib/tests/test_function_base.py:3029:        assert_equal(np.percentile(x, (25, 50), axis=1).shape, (2, 3, 5, 6))
numpy/lib/tests/test_function_base.py:3030:        assert_equal(np.percentile(x, (25, 50), axis=2).shape, (2, 3, 4, 6))
numpy/lib/tests/test_function_base.py:3031:        assert_equal(np.percentile(x, (25, 50), axis=3).shape, (2, 3, 4, 5))
numpy/lib/tests/test_function_base.py:3034:        assert_equal(np.percentile(x, (25, 50),
numpy/lib/tests/test_function_base.py:3036:        assert_equal(np.percentile(x, (25, 50, 75),
numpy/lib/tests/test_function_base.py:3038:        assert_equal(np.percentile(x, (25, 50), axis=0,
numpy/lib/tests/test_function_base.py:3040:        assert_equal(np.percentile(x, (25, 50), axis=1,
numpy/lib/tests/test_function_base.py:3042:        assert_equal(np.percentile(x, (25, 50), axis=2,
numpy/lib/tests/test_function_base.py:3044:        assert_equal(np.percentile(x, (25, 50), axis=3,
numpy/lib/tests/test_function_base.py:3046:        assert_equal(np.percentile(x, (25, 50, 75), axis=1,
numpy/lib/tests/test_function_base.py:3052:        assert_equal(np.percentile(x, 50), 5.5)
numpy/lib/tests/test_function_base.py:3053:        assert_(np.isscalar(np.percentile(x, 50)))
numpy/lib/tests/test_function_base.py:3055:        assert_equal(np.percentile(x, 50, axis=0), r0)
numpy/lib/tests/test_function_base.py:3056:        assert_equal(np.percentile(x, 50, axis=0).shape, r0.shape)
numpy/lib/tests/test_function_base.py:3058:        assert_almost_equal(np.percentile(x, 50, axis=1), r1)
numpy/lib/tests/test_function_base.py:3059:        assert_equal(np.percentile(x, 50, axis=1).shape, r1.shape)
numpy/lib/tests/test_function_base.py:3062:        assert_equal(np.percentile(x, 50, out=out), 5.5)
numpy/lib/tests/test_function_base.py:3063:        assert_equal(out, 5.5)
numpy/lib/tests/test_function_base.py:3065:        assert_equal(np.percentile(x, 50, axis=0, out=out), r0)
numpy/lib/tests/test_function_base.py:3066:        assert_equal(out, r0)
numpy/lib/tests/test_function_base.py:3068:        assert_equal(np.percentile(x, 50, axis=1, out=out), r1)
numpy/lib/tests/test_function_base.py:3069:        assert_equal(out, r1)
numpy/lib/tests/test_function_base.py:3073:        assert_equal(np.percentile(x, 50, method='lower'), 5.)
numpy/lib/tests/test_function_base.py:3074:        assert_(np.isscalar(np.percentile(x, 50)))
numpy/lib/tests/test_function_base.py:3077:        assert_equal(c0, r0)
numpy/lib/tests/test_function_base.py:3078:        assert_equal(c0.shape, r0.shape)
numpy/lib/tests/test_function_base.py:3081:        assert_almost_equal(c1, r1)
numpy/lib/tests/test_function_base.py:3082:        assert_equal(c1.shape, r1.shape)
numpy/lib/tests/test_function_base.py:3086:        assert_equal(c, 5)
numpy/lib/tests/test_function_base.py:3087:        assert_equal(out, 5)
numpy/lib/tests/test_function_base.py:3090:        assert_equal(c, r0)
numpy/lib/tests/test_function_base.py:3091:        assert_equal(out, r0)
numpy/lib/tests/test_function_base.py:3094:        assert_equal(c, r1)
numpy/lib/tests/test_function_base.py:3095:        assert_equal(out, r1)
numpy/lib/tests/test_function_base.py:3100:        assert_raises(ValueError, np.percentile, [1], 101)
numpy/lib/tests/test_function_base.py:3101:        assert_raises(ValueError, np.percentile, [1], -1)
numpy/lib/tests/test_function_base.py:3102:        assert_raises(ValueError, np.percentile, [1], list(range(50)) + [101])
numpy/lib/tests/test_function_base.py:3103:        assert_raises(ValueError, np.percentile, [1], list(range(50)) + [-0.1])
numpy/lib/tests/test_function_base.py:3106:        assert_equal(np.percentile([1, 2, 3], 0), 1)
numpy/lib/tests/test_function_base.py:3113:        assert_equal(np.percentile(x, p), y)
numpy/lib/tests/test_function_base.py:3120:        assert_equal(np.percentile(x, p, axis=0), y)
numpy/lib/tests/test_function_base.py:3124:        assert_equal(np.percentile(x, p, axis=1), y)
numpy/lib/tests/test_function_base.py:3130:        assert_equal(np.percentile(x, (25, 50), axis=0, out=out), r0)
numpy/lib/tests/test_function_base.py:3131:        assert_equal(out, r0)
numpy/lib/tests/test_function_base.py:3134:        assert_equal(np.percentile(x, (25, 50), axis=1, out=out), r1)
numpy/lib/tests/test_function_base.py:3135:        assert_equal(out, r1)
numpy/lib/tests/test_function_base.py:3141:        assert_equal(c, r0)
numpy/lib/tests/test_function_base.py:3142:        assert_equal(out, r0)
numpy/lib/tests/test_function_base.py:3146:        assert_equal(c, r1)
numpy/lib/tests/test_function_base.py:3147:        assert_equal(out, r1)
numpy/lib/tests/test_function_base.py:3152:        assert_array_equal(np.percentile(d, 50, axis=0).shape, (1, 2, 1))
numpy/lib/tests/test_function_base.py:3153:        assert_array_equal(np.percentile(d, 50, axis=1).shape, (11, 2, 1))
numpy/lib/tests/test_function_base.py:3154:        assert_array_equal(np.percentile(d, 50, axis=2).shape, (11, 1, 1))
numpy/lib/tests/test_function_base.py:3155:        assert_array_equal(np.percentile(d, 50, axis=3).shape, (11, 1, 2))
numpy/lib/tests/test_function_base.py:3156:        assert_array_equal(np.percentile(d, 50, axis=-1).shape, (11, 1, 2))
numpy/lib/tests/test_function_base.py:3157:        assert_array_equal(np.percentile(d, 50, axis=-2).shape, (11, 1, 1))
numpy/lib/tests/test_function_base.py:3158:        assert_array_equal(np.percentile(d, 50, axis=-3).shape, (11, 2, 1))
numpy/lib/tests/test_function_base.py:3159:        assert_array_equal(np.percentile(d, 50, axis=-4).shape, (1, 2, 1))
numpy/lib/tests/test_function_base.py:3161:        assert_array_equal(np.percentile(d, 50, axis=2,
numpy/lib/tests/test_function_base.py:3164:        assert_array_equal(np.percentile(d, 50, axis=-2,
numpy/lib/tests/test_function_base.py:3168:        assert_array_equal(np.array(np.percentile(d, [10, 50], axis=0)).shape,
numpy/lib/tests/test_function_base.py:3170:        assert_array_equal(np.array(np.percentile(d, [10, 50], axis=1)).shape,
numpy/lib/tests/test_function_base.py:3172:        assert_array_equal(np.array(np.percentile(d, [10, 50], axis=2)).shape,
numpy/lib/tests/test_function_base.py:3174:        assert_array_equal(np.array(np.percentile(d, [10, 50], axis=3)).shape,
numpy/lib/tests/test_function_base.py:3180:        assert_equal(a, np.array([2, 3, 4, 1]))
numpy/lib/tests/test_function_base.py:3184:        assert_equal(a, np.array([2, 3, 4, 1]))
numpy/lib/tests/test_function_base.py:3189:        assert_array_equal(p, np.linspace(0., 100., num=5))
numpy/lib/tests/test_function_base.py:3192:        assert_array_equal(p, np.linspace(0., 100., num=5).tolist())
numpy/lib/tests/test_function_base.py:3197:        assert_equal(b, np.array([2.5]))
numpy/lib/tests/test_function_base.py:3200:        assert_equal(b, np.array([2.5]))
numpy/lib/tests/test_function_base.py:3205:        assert_equal(np.percentile(x, 30, axis=(0, 1)), np.percentile(o, 30))
numpy/lib/tests/test_function_base.py:3207:        assert_equal(np.percentile(x, 30, axis=(-2, -1)), np.percentile(o, 30))
numpy/lib/tests/test_function_base.py:3209:        assert_equal(np.percentile(x, 30, axis=(0, -1)), np.percentile(o, 30))
numpy/lib/tests/test_function_base.py:3212:        assert_equal(np.percentile(x, [25, 60], axis=(0, 1, 2)),
numpy/lib/tests/test_function_base.py:3214:        assert_equal(np.percentile(x, [25, 60], axis=(0,)),
numpy/lib/tests/test_function_base.py:3219:        assert_equal(np.percentile(d, 25,  axis=(0, 1, 2))[0],
numpy/lib/tests/test_function_base.py:3221:        assert_equal(np.percentile(d, [10, 90], axis=(0, 1, 3))[:, 1],
numpy/lib/tests/test_function_base.py:3223:        assert_equal(np.percentile(d, 25, axis=(3, 1, -4))[2],
numpy/lib/tests/test_function_base.py:3225:        assert_equal(np.percentile(d, 25, axis=(3, 1, 2))[2],
numpy/lib/tests/test_function_base.py:3227:        assert_equal(np.percentile(d, 25, axis=(3, 2))[2, 1],
numpy/lib/tests/test_function_base.py:3229:        assert_equal(np.percentile(d, 25, axis=(1, -2))[2, 1],
numpy/lib/tests/test_function_base.py:3231:        assert_equal(np.percentile(d, 25, axis=(1, 3))[2, 2],
numpy/lib/tests/test_function_base.py:3236:        assert_raises(np.AxisError, np.percentile, d, axis=-5, q=25)
numpy/lib/tests/test_function_base.py:3237:        assert_raises(np.AxisError, np.percentile, d, axis=(0, -5), q=25)
numpy/lib/tests/test_function_base.py:3238:        assert_raises(np.AxisError, np.percentile, d, axis=4, q=25)
numpy/lib/tests/test_function_base.py:3239:        assert_raises(np.AxisError, np.percentile, d, axis=(0, 4), q=25)
numpy/lib/tests/test_function_base.py:3241:        assert_raises(ValueError, np.percentile, d, axis=(1, 1), q=25)
numpy/lib/tests/test_function_base.py:3242:        assert_raises(ValueError, np.percentile, d, axis=(-1, -1), q=25)
numpy/lib/tests/test_function_base.py:3243:        assert_raises(ValueError, np.percentile, d, axis=(3, -1), q=25)
numpy/lib/tests/test_function_base.py:3247:        assert_equal(np.percentile(d, 7, axis=None, keepdims=True).shape,
numpy/lib/tests/test_function_base.py:3249:        assert_equal(np.percentile(d, 7, axis=(0, 1), keepdims=True).shape,
numpy/lib/tests/test_function_base.py:3251:        assert_equal(np.percentile(d, 7, axis=(0, 3), keepdims=True).shape,
numpy/lib/tests/test_function_base.py:3253:        assert_equal(np.percentile(d, 7, axis=(1,), keepdims=True).shape,
numpy/lib/tests/test_function_base.py:3255:        assert_equal(np.percentile(d, 7, (0, 1, 2, 3), keepdims=True).shape,
numpy/lib/tests/test_function_base.py:3257:        assert_equal(np.percentile(d, 7, axis=(0, 1, 3), keepdims=True).shape,
numpy/lib/tests/test_function_base.py:3260:        assert_equal(np.percentile(d, [1, 7], axis=(0, 1, 3),
numpy/lib/tests/test_function_base.py:3262:        assert_equal(np.percentile(d, [1, 7], axis=(0, 3),
numpy/lib/tests/test_function_base.py:3268:        assert_equal(np.percentile(d, 0, 0, out=o), o)
numpy/lib/tests/test_function_base.py:3269:        assert_equal(np.percentile(d, 0, 0, method='nearest', out=o), o)
numpy/lib/tests/test_function_base.py:3271:        assert_equal(np.percentile(d, 1, 1, out=o), o)
numpy/lib/tests/test_function_base.py:3272:        assert_equal(np.percentile(d, 1, 1, method='nearest', out=o), o)
numpy/lib/tests/test_function_base.py:3275:        assert_equal(np.percentile(d, 2, out=o), o)
numpy/lib/tests/test_function_base.py:3276:        assert_equal(np.percentile(d, 2, method='nearest', out=o), o)
numpy/lib/tests/test_function_base.py:3284:            assert_equal(np.percentile(d, 0, 0, out=o), o)
numpy/lib/tests/test_function_base.py:3288:            assert_equal(np.percentile(d, 1, 1, out=o), o)
numpy/lib/tests/test_function_base.py:3292:            assert_equal(np.percentile(d, 1, out=o), o)
numpy/lib/tests/test_function_base.py:3299:        assert_equal(np.percentile(a, 0.3), np.nan)
numpy/lib/tests/test_function_base.py:3300:        assert_equal(np.percentile(a, 0.3, axis=0), np.nan)
numpy/lib/tests/test_function_base.py:3301:        assert_equal(np.percentile(a, [0.3, 0.6], axis=0),
numpy/lib/tests/test_function_base.py:3309:        assert_equal(np.percentile(a, 0.3), np.nan)
numpy/lib/tests/test_function_base.py:3310:        assert_equal(np.percentile(a, 0.3).ndim, 0)
numpy/lib/tests/test_function_base.py:3316:        assert_equal(np.percentile(a, 0.3, 0), b)
numpy/lib/tests/test_function_base.py:3323:        assert_equal(np.percentile(a, [0.3, 0.6], 0), b)
numpy/lib/tests/test_function_base.py:3329:        assert_equal(np.percentile(a, 0.3, 1), b)
numpy/lib/tests/test_function_base.py:3335:        assert_equal(np.percentile(a, [0.3, 0.6], 1), b)
numpy/lib/tests/test_function_base.py:3342:        assert_equal(np.percentile(a, 0.3, (0, 2)), b)
numpy/lib/tests/test_function_base.py:3348:        assert_equal(np.percentile(a, [0.3, 0.6], (0, 2)), b)
numpy/lib/tests/test_function_base.py:3382:        assert_equal(np.quantile(x, 0), 0.)
numpy/lib/tests/test_function_base.py:3383:        assert_equal(np.quantile(x, 1), 3.5)
numpy/lib/tests/test_function_base.py:3384:        assert_equal(np.quantile(x, 0.5), 1.75)
numpy/lib/tests/test_function_base.py:3390:        assert_equal(tf_quant, a[0])
numpy/lib/tests/test_function_base.py:3391:        assert_equal(type(tf_quant), a.dtype)
numpy/lib/tests/test_function_base.py:3394:        assert_array_equal(quant_res, a)
numpy/lib/tests/test_function_base.py:3395:        assert_equal(quant_res.dtype, a.dtype)
numpy/lib/tests/test_function_base.py:3401:        assert_equal(q, 0)
numpy/lib/tests/test_function_base.py:3402:        assert_equal(type(q), Fraction)
numpy/lib/tests/test_function_base.py:3405:        assert_equal(q, Fraction(7, 2))
numpy/lib/tests/test_function_base.py:3406:        assert_equal(type(q), Fraction)
numpy/lib/tests/test_function_base.py:3409:        assert_equal(q, Fraction(7, 4))
numpy/lib/tests/test_function_base.py:3410:        assert_equal(type(q), Fraction)
numpy/lib/tests/test_function_base.py:3413:        assert_equal(q, np.array([Fraction(7, 4)]))
numpy/lib/tests/test_function_base.py:3414:        assert_equal(type(q), np.ndarray)
numpy/lib/tests/test_function_base.py:3417:        assert_equal(q, np.array([[Fraction(7, 4)]]))
numpy/lib/tests/test_function_base.py:3418:        assert_equal(type(q), np.ndarray)
numpy/lib/tests/test_function_base.py:3422:        assert_equal(np.quantile(x, Fraction(1, 2)), Fraction(7, 2))
numpy/lib/tests/test_function_base.py:3429:        assert_array_equal(p, p0)
numpy/lib/tests/test_function_base.py:3434:        assert_array_equal(p, p0)
numpy/lib/tests/test_function_base.py:3440:        assert res.dtype == dtype
numpy/lib/tests/test_function_base.py:3454:        assert_equal(np.sort(quantile), quantile)
numpy/lib/tests/test_function_base.py:3458:        assert_equal(np.sort(quantile), quantile)
numpy/lib/tests/test_function_base.py:3468:        assert_equal(np.sort(quantile), quantile)
numpy/lib/tests/test_function_base.py:3474:        assert np.isscalar(actual)
numpy/lib/tests/test_function_base.py:3475:        assert_equal(np.quantile(a, 0.5), np.nan)
numpy/lib/tests/test_function_base.py:3490:            assert l0 == l1  # uninteresting
numpy/lib/tests/test_function_base.py:3504:            assert a <= nfb._lerp(a, b, t) <= b
numpy/lib/tests/test_function_base.py:3506:            assert b <= nfb._lerp(a, b, t) <= a
numpy/lib/tests/test_function_base.py:3518:        assert left == right
numpy/lib/tests/test_function_base.py:3524:        assert nfb._lerp(a, b, t) == 2.6
numpy/lib/tests/test_function_base.py:3533:        assert_equal(np.median(a0), 1)
numpy/lib/tests/test_function_base.py:3534:        assert_allclose(np.median(a1), 0.5)
numpy/lib/tests/test_function_base.py:3535:        assert_allclose(np.median(a2), 2.5)
numpy/lib/tests/test_function_base.py:3536:        assert_allclose(np.median(a2, axis=0), [1.5,  2.5,  3.5])
numpy/lib/tests/test_function_base.py:3537:        assert_equal(np.median(a2, axis=1), [1, 4])
numpy/lib/tests/test_function_base.py:3538:        assert_allclose(np.median(a2, axis=None), 2.5)
numpy/lib/tests/test_function_base.py:3541:        assert_almost_equal((a[1] + a[3]) / 2., np.median(a))
numpy/lib/tests/test_function_base.py:3543:        assert_equal(a[0], np.median(a))
numpy/lib/tests/test_function_base.py:3545:        assert_equal(a[-1], np.median(a))
numpy/lib/tests/test_function_base.py:3547:        assert_equal(np.median(a).ndim, 0)
numpy/lib/tests/test_function_base.py:3549:        assert_equal(np.median(a).ndim, 0)
numpy/lib/tests/test_function_base.py:3561:            assert_array_equal(a, orig)
numpy/lib/tests/test_function_base.py:3563:        assert_allclose(np.median(a3, axis=0), [3,  4])
numpy/lib/tests/test_function_base.py:3564:        assert_allclose(np.median(a3.T, axis=1), [3,  4])
numpy/lib/tests/test_function_base.py:3565:        assert_allclose(np.median(a3), 3.5)
numpy/lib/tests/test_function_base.py:3566:        assert_allclose(np.median(a3, axis=None), 3.5)
numpy/lib/tests/test_function_base.py:3567:        assert_allclose(np.median(a3.T), 3.5)
numpy/lib/tests/test_function_base.py:3577:        assert_allclose(np.median(a0.copy(), overwrite_input=True), 1)
numpy/lib/tests/test_function_base.py:3578:        assert_allclose(np.median(a1.copy(), overwrite_input=True), 0.5)
numpy/lib/tests/test_function_base.py:3579:        assert_allclose(np.median(a2.copy(), overwrite_input=True), 2.5)
numpy/lib/tests/test_function_base.py:3580:        assert_allclose(np.median(a2.copy(), overwrite_input=True, axis=0),
numpy/lib/tests/test_function_base.py:3588:        assert_allclose(np.median(a3.T.copy(), overwrite_input=True, axis=1),
numpy/lib/tests/test_function_base.py:3593:        assert_allclose(np.median(a4, axis=None),
numpy/lib/tests/test_function_base.py:3595:        assert_allclose(np.median(a4, axis=0),
numpy/lib/tests/test_function_base.py:3597:        assert_allclose(np.median(a4, axis=1),
numpy/lib/tests/test_function_base.py:3599:        assert_allclose(np.median(a4, axis=2),
numpy/lib/tests/test_function_base.py:3604:        assert_almost_equal(np.median(x), 2)
numpy/lib/tests/test_function_base.py:3606:        assert_almost_equal(np.median(x2), 2)
numpy/lib/tests/test_function_base.py:3607:        assert_allclose(np.median(x2, axis=0), x)
numpy/lib/tests/test_function_base.py:3622:        assert_equal(np.median(a), -7)
numpy/lib/tests/test_function_base.py:3632:        assert isinstance(m, MySubclass)
numpy/lib/tests/test_function_base.py:3637:        assert_equal(np.median(d, 0, out=o), o)
numpy/lib/tests/test_function_base.py:3639:        assert_equal(np.median(d, 1, out=o), o)
numpy/lib/tests/test_function_base.py:3641:        assert_equal(np.median(d, out=o), o)
numpy/lib/tests/test_function_base.py:3649:            assert_equal(np.median(d, 0, out=o), o)
numpy/lib/tests/test_function_base.py:3651:            assert_equal(np.median(d, 1, out=o), o)
numpy/lib/tests/test_function_base.py:3653:            assert_equal(np.median(d, out=o), o)
numpy/lib/tests/test_function_base.py:3658:        assert_equal(np.median(a), np.nan)
numpy/lib/tests/test_function_base.py:3659:        assert_equal(np.median(a, axis=0), np.nan)
numpy/lib/tests/test_function_base.py:3666:        assert_equal(np.median(a), np.nan)
numpy/lib/tests/test_function_base.py:3667:        assert_equal(np.median(a).ndim, 0)
numpy/lib/tests/test_function_base.py:3673:        assert_equal(np.median(a, 0), b)
numpy/lib/tests/test_function_base.py:3679:        assert_equal(np.median(a, 1), b)
numpy/lib/tests/test_function_base.py:3685:        assert_equal(np.median(a, (0, 2)), b)
numpy/lib/tests/test_function_base.py:3692:            assert_equal(np.median(a), np.nan)
numpy/lib/tests/test_function_base.py:3693:            assert_(w[0].category is RuntimeWarning)
numpy/lib/tests/test_function_base.py:3694:            assert_equal(len(w), 2)
numpy/lib/tests/test_function_base.py:3701:            assert_equal(np.median(a), np.nan)
numpy/lib/tests/test_function_base.py:3702:            assert_(w[0].category is RuntimeWarning)
numpy/lib/tests/test_function_base.py:3706:        assert_equal(np.median(a, axis=0), b)
numpy/lib/tests/test_function_base.py:3707:        assert_equal(np.median(a, axis=1), b)
numpy/lib/tests/test_function_base.py:3713:            assert_equal(np.median(a, axis=2), b)
numpy/lib/tests/test_function_base.py:3714:            assert_(w[0].category is RuntimeWarning)
numpy/lib/tests/test_function_base.py:3718:        assert_(type(np.median(o.astype(object))), float)
numpy/lib/tests/test_function_base.py:3720:        assert_(type(np.median(o.astype(object))), float)
numpy/lib/tests/test_function_base.py:3725:        assert_equal(np.median(x, axis=(0, 1)), np.median(o))
numpy/lib/tests/test_function_base.py:3727:        assert_equal(np.median(x, axis=(-2, -1)), np.median(o))
numpy/lib/tests/test_function_base.py:3729:        assert_equal(np.median(x, axis=(0, -1)), np.median(o))
numpy/lib/tests/test_function_base.py:3731:        assert_equal(np.median(x, axis=(0, 1, 2)), np.median(x, axis=None))
numpy/lib/tests/test_function_base.py:3732:        assert_equal(np.median(x, axis=(0, )), np.median(x, axis=0))
numpy/lib/tests/test_function_base.py:3733:        assert_equal(np.median(x, axis=(-1, )), np.median(x, axis=-1))
numpy/lib/tests/test_function_base.py:3737:        assert_equal(np.median(d, axis=(0, 1, 2))[0],
numpy/lib/tests/test_function_base.py:3739:        assert_equal(np.median(d, axis=(0, 1, 3))[1],
numpy/lib/tests/test_function_base.py:3741:        assert_equal(np.median(d, axis=(3, 1, -4))[2],
numpy/lib/tests/test_function_base.py:3743:        assert_equal(np.median(d, axis=(3, 1, 2))[2],
numpy/lib/tests/test_function_base.py:3745:        assert_equal(np.median(d, axis=(3, 2))[2, 1],
numpy/lib/tests/test_function_base.py:3747:        assert_equal(np.median(d, axis=(1, -2))[2, 1],
numpy/lib/tests/test_function_base.py:3749:        assert_equal(np.median(d, axis=(1, 3))[2, 2],
numpy/lib/tests/test_function_base.py:3754:        assert_raises(np.AxisError, np.median, d, axis=-5)
numpy/lib/tests/test_function_base.py:3755:        assert_raises(np.AxisError, np.median, d, axis=(0, -5))
numpy/lib/tests/test_function_base.py:3756:        assert_raises(np.AxisError, np.median, d, axis=4)
numpy/lib/tests/test_function_base.py:3757:        assert_raises(np.AxisError, np.median, d, axis=(0, 4))
numpy/lib/tests/test_function_base.py:3758:        assert_raises(ValueError, np.median, d, axis=(1, 1))
numpy/lib/tests/test_function_base.py:3762:        assert_equal(np.median(d, axis=None, keepdims=True).shape,
numpy/lib/tests/test_function_base.py:3764:        assert_equal(np.median(d, axis=(0, 1), keepdims=True).shape,
numpy/lib/tests/test_function_base.py:3766:        assert_equal(np.median(d, axis=(0, 3), keepdims=True).shape,
numpy/lib/tests/test_function_base.py:3768:        assert_equal(np.median(d, axis=(1,), keepdims=True).shape,
numpy/lib/tests/test_function_base.py:3770:        assert_equal(np.median(d, axis=(0, 1, 2, 3), keepdims=True).shape,
numpy/lib/tests/test_function_base.py:3772:        assert_equal(np.median(d, axis=(0, 1, 3), keepdims=True).shape,
numpy/lib/tests/test_function_base.py:3779:        assert_raises(TypeError, add_newdoc_ufunc, 2, "blah")
numpy/lib/tests/test_function_base.py:3780:        assert_raises(ValueError, add_newdoc_ufunc, np.add, "blah")
numpy/lib/tests/test_function_base.py:3783:        assert_raises(TypeError, add_newdoc_ufunc, np.add, 3)
numpy/lib/tests/test_function_base.py:3793:        assert_equal(np.core.flatiter.index.__doc__[:len(tgt)], tgt)
numpy/lib/tests/test_function_base.py:3794:        assert_(len(np.core.ufunc.identity.__doc__) > 300)
numpy/lib/tests/test_function_base.py:3795:        assert_(len(np.lib.index_tricks.mgrid.__doc__) > 300)
numpy/lib/tests/test_function_base.py:3803:        assert prev_doc == np.core.flatiter.index.__doc__
numpy/lib/tests/test_function_base.py:3850:        assert_equal(actual, expected)
numpy/lib/tests/test_function_base.py:3851:        assert_equal(actual.dtype, expected.dtype)
numpy/lib/tests/test_function_base.py:3858:        assert_equal(actual, expected)
numpy/lib/tests/test_function_base.py:3859:        assert_equal(actual.dtype, expected.dtype)
numpy/lib/tests/test_arraypad.py:38:            assert_equal(result, expected)
numpy/lib/tests/test_arraypad.py:52:            assert_equal(result, expected)
numpy/lib/tests/test_arraypad.py:120:        assert_array_equal(test, np.pad(test, pad_amt, mode=mode))
numpy/lib/tests/test_arraypad.py:126:        assert_array_equal(np.pad(test, pad_amt, mode='edge'),
numpy/lib/tests/test_arraypad.py:133:        assert_array_equal(np.pad(test, pad_amt, mode=mode),
numpy/lib/tests/test_arraypad.py:160:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:184:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:208:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:232:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:256:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:280:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:304:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:328:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:342:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:356:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:382:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:404:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:428:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:442:        assert_equal(a[0], a[-1])
numpy/lib/tests/test_arraypad.py:473:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:484:        assert_equal(arr, expected)
numpy/lib/tests/test_arraypad.py:522:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:546:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:566:        assert_allclose(test, expected)
numpy/lib/tests/test_arraypad.py:587:        assert_allclose(test, expected)
numpy/lib/tests/test_arraypad.py:611:        assert_allclose(a, b)
numpy/lib/tests/test_arraypad.py:628:        assert_allclose(test, expected)
numpy/lib/tests/test_arraypad.py:641:        assert_allclose(test, expected)
numpy/lib/tests/test_arraypad.py:648:        assert_array_equal(test, expected)
numpy/lib/tests/test_arraypad.py:654:        assert_array_equal(test, expected)
numpy/lib/tests/test_arraypad.py:670:        assert_array_equal(arr, expected)
numpy/lib/tests/test_arraypad.py:675:        assert result.shape == (3, 4, 4)
numpy/lib/tests/test_arraypad.py:701:        assert_allclose(a, b, rtol=1e-5, atol=1e-5)
numpy/lib/tests/test_arraypad.py:715:        assert_allclose(test, expected)
numpy/lib/tests/test_arraypad.py:734:        assert_equal(actual, expected)
numpy/lib/tests/test_arraypad.py:739:        assert_equal(a[:, 0], 0.)
numpy/lib/tests/test_arraypad.py:740:        assert_equal(a[:, -1], 0.)
numpy/lib/tests/test_arraypad.py:741:        assert_equal(a[0, :], 0.)
numpy/lib/tests/test_arraypad.py:742:        assert_equal(a[-1, :], 0.)
numpy/lib/tests/test_arraypad.py:755:        assert_equal(result, expected)
numpy/lib/tests/test_arraypad.py:760:        assert_equal(result, expected)
numpy/lib/tests/test_arraypad.py:786:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:810:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:833:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:855:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:860:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:865:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:870:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:894:        assert result.shape == (8, 0, 4)
numpy/lib/tests/test_arraypad.py:920:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:944:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:968:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:991:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1013:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1018:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1023:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1028:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1054:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1114:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1119:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1124:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1129:        assert_array_equal(a, b[:-5, :-5])
numpy/lib/tests/test_arraypad.py:1138:        assert_array_equal(np.r_[a, a, a, a][3:], b)
numpy/lib/tests/test_arraypad.py:1142:        assert_array_equal(np.r_[a, a, a, a][:-3], b)
numpy/lib/tests/test_arraypad.py:1163:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1171:        assert_array_equal(padded, expected)
numpy/lib/tests/test_arraypad.py:1176:        assert_array_equal(padded, expected)
numpy/lib/tests/test_arraypad.py:1181:        assert_array_equal(padded, expected)
numpy/lib/tests/test_arraypad.py:1188:        assert result.shape == (9, 10)
numpy/lib/tests/test_arraypad.py:1189:        assert_equal(arr, result[2:-3, 3:-1])
numpy/lib/tests/test_arraypad.py:1194:        assert result.shape == (3, 4, 4)
numpy/lib/tests/test_arraypad.py:1214:    assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1220:    assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1229:    assert_array_equal(np.pad(a, pad_amt, mode=mode), b)
numpy/lib/tests/test_arraypad.py:1304:        assert_array_equal(a, b)
numpy/lib/tests/test_arraypad.py:1310:        assert_array_equal(arr, np.pad(arr, pad_width, mode=mode))
numpy/lib/tests/test_arraypad.py:1332:    assert_array_equal(np.pad(arr, 2), [0, 0, 1, 1, 0, 0])
numpy/lib/tests/test_arraypad.py:1346:    assert result.shape == (7, 8)
numpy/lib/tests/test_arraypad.py:1347:    assert_equal(result[2:-3, 2:-3], arr)
numpy/lib/tests/test_arraypad.py:1354:    assert np.pad(x, 5, mode).flags["C_CONTIGUOUS"]
numpy/lib/tests/test_arraypad.py:1356:    assert np.pad(x, 5, mode).flags["F_CONTIGUOUS"]
numpy/lib/tests/test_arraypad.py:1364:    assert result.dtype == dtype
numpy/lib/tests/test_mixins.py:60:    assert_equal(type(result), type(expected), err_msg=err_msg)
numpy/lib/tests/test_mixins.py:62:        assert_equal(len(result), len(expected), err_msg=err_msg)
numpy/lib/tests/test_mixins.py:66:        assert_equal(result.value, expected.value, err_msg=err_msg)
numpy/lib/tests/test_mixins.py:67:        assert_equal(getattr(result.value, 'dtype', None),
numpy/lib/tests/test_mixins.py:138:        assert_(array_like + opt_out is opt_out)
numpy/lib/tests/test_mixins.py:139:        assert_(opt_out + array_like is opt_out)
numpy/lib/tests/test_mixins.py:207:        assert_(np.negative.at(array, np.array([0, 1])) is None)
numpy/lib/tests/test_packbits.py:13:        assert_equal(b.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:14:        assert_array_equal(b, np.array([[[160], [64]], [[192], [32]]]))
numpy/lib/tests/test_packbits.py:16:    assert_raises(TypeError, np.packbits, np.array(a, dtype=float))
numpy/lib/tests/test_packbits.py:28:            assert_equal(b.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:29:            assert_equal(b.shape, (0,))
numpy/lib/tests/test_packbits.py:49:                assert_equal(b.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:50:                assert_equal(b.shape, out_shape)
numpy/lib/tests/test_packbits.py:74:        assert_equal(b.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:84:            assert_array_equal(b, r)
numpy/lib/tests/test_packbits.py:86:        assert_array_equal(np.unpackbits(b, bitorder=bitorder)[:-4], a)
numpy/lib/tests/test_packbits.py:90:        assert_array_equal(b, [128, 128, 128, 31, 30, 28, 24, 16, 0, 0, 0, 199,
numpy/lib/tests/test_packbits.py:96:        assert_equal(b.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:97:        assert_array_equal(b, [[190, 186, 178, 178, 150, 215, 87, 83, 83, 195,
numpy/lib/tests/test_packbits.py:114:        assert_equal(b.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:115:        assert_array_equal(b, [[252, 127, 192,   0],
numpy/lib/tests/test_packbits.py:154:        assert_equal(b.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:155:        assert_array_equal(b, [[252, 7, 240, 255, 192, 142, 255, 7, 126, 255,
numpy/lib/tests/test_packbits.py:172:        assert_equal(b.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:173:        assert_array_equal(b, [[190,  72, 113, 214,   0],
numpy/lib/tests/test_packbits.py:209:        assert_array_equal(np.unpackbits(b)[:-4], a)
numpy/lib/tests/test_packbits.py:211:    assert_raises(TypeError, np.packbits, np.array(a, dtype=float))
numpy/lib/tests/test_packbits.py:227:    assert_equal(b.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:228:    assert_array_equal(b, np.array([[0, 0, 0, 0, 0, 0, 1, 0],
numpy/lib/tests/test_packbits.py:235:    assert_equal(b.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:238:    assert_array_equal(b, b_big)
numpy/lib/tests/test_packbits.py:239:    assert_array_equal(a, np.packbits(b_little, axis=1, bitorder='little'))
numpy/lib/tests/test_packbits.py:240:    assert_array_equal(b[:,::-1], b_little)
numpy/lib/tests/test_packbits.py:241:    assert_array_equal(a, np.packbits(b_big, axis=1, bitorder='big'))
numpy/lib/tests/test_packbits.py:242:    assert_raises(ValueError, np.unpackbits, a, bitorder='r')
numpy/lib/tests/test_packbits.py:243:    assert_raises(TypeError, np.unpackbits, a, bitorder=10)
numpy/lib/tests/test_packbits.py:250:    assert_equal(b.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:251:    assert_array_equal(b, np.empty((0,)))
numpy/lib/tests/test_packbits.py:270:            assert_equal(b.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:271:            assert_equal(b.shape, out_shape)
numpy/lib/tests/test_packbits.py:277:    assert_array_equal(np.packbits(np.unpackbits(d)), d)
numpy/lib/tests/test_packbits.py:278:    assert_array_equal(np.packbits(np.unpackbits(d[::2])), d[::2])
numpy/lib/tests/test_packbits.py:280:    assert_array_equal(np.packbits(np.unpackbits(d, axis=1), axis=1), d)
numpy/lib/tests/test_packbits.py:282:    assert_array_equal(np.packbits(np.unpackbits(d, axis=0), axis=0), d)
numpy/lib/tests/test_packbits.py:313:        assert_equal(unpacked.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:314:        assert_array_equal(unpacked, self.padded1[:cutoff])
numpy/lib/tests/test_packbits.py:322:        assert_equal(unpacked.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:323:        assert_array_equal(unpacked, self.padded1[:-1])
numpy/lib/tests/test_packbits.py:337:        assert_equal(unpacked0.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:338:        assert_array_equal(unpacked0, self.padded2[:cutoff, :self.x.shape[1]])
numpy/lib/tests/test_packbits.py:343:        assert_equal(unpacked1.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:344:        assert_array_equal(unpacked1, self.padded2[:self.x.shape[0], :cutoff])
numpy/lib/tests/test_packbits.py:356:        assert_equal(unpacked0.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:358:            assert_array_equal(unpacked0, self.padded2[:-1, :self.x.shape[1]])
numpy/lib/tests/test_packbits.py:360:            assert_array_equal(unpacked0[::-1, :], self.padded2[:-1, :self.x.shape[1]])
numpy/lib/tests/test_packbits.py:364:        assert_equal(unpacked1.dtype, np.uint8)
numpy/lib/tests/test_packbits.py:366:            assert_array_equal(unpacked1, self.padded2[:self.x.shape[0], :-1])
numpy/lib/tests/test_packbits.py:368:            assert_array_equal(unpacked1[:, ::-1], self.padded2[:self.x.shape[0], :-1])
numpy/lib/tests/test_packbits.py:372:        assert_raises(ValueError, np.unpackbits, packed0, axis=0, count=-9)
numpy/lib/tests/test_packbits.py:374:        assert_raises(ValueError, np.unpackbits, packed1, axis=1, count=-9)
numpy/lib/tests/test_packbits.py:376:        assert_raises(ValueError, np.unpackbits, packed, count=-57)
numpy/lib/tests/test__datasource.py:100:        assert_(fh)
numpy/lib/tests/test__datasource.py:105:        assert_raises(OSError, self.ds.open, url)
numpy/lib/tests/test__datasource.py:110:            assert_(e.errno is None)
numpy/lib/tests/test__datasource.py:113:        assert_raises(URLError, self.ds._cache, invalid_httpurl())
numpy/lib/tests/test__datasource.py:118:        assert_(fh)
numpy/lib/tests/test__datasource.py:123:        assert_raises(OSError, self.ds.open, invalid_file)
numpy/lib/tests/test__datasource.py:139:        assert_equal(magic_line, result)
numpy/lib/tests/test__datasource.py:155:        assert_equal(magic_line, result)
numpy/lib/tests/test__datasource.py:168:        assert_(self.ds.exists(valid_httpurl()))
numpy/lib/tests/test__datasource.py:171:        assert_equal(self.ds.exists(invalid_httpurl()), False)
numpy/lib/tests/test__datasource.py:176:        assert_(self.ds.exists(tmpfile))
numpy/lib/tests/test__datasource.py:180:        assert_(self.ds.exists(tmpfile))
numpy/lib/tests/test__datasource.py:185:        assert_equal(self.ds.exists(tmpfile), False)
numpy/lib/tests/test__datasource.py:201:        assert_equal(local_path, self.ds.abspath(valid_httpurl()))
numpy/lib/tests/test__datasource.py:207:        assert_equal(tmpfile, self.ds.abspath(tmpfilename))
numpy/lib/tests/test__datasource.py:209:        assert_equal(tmpfile, self.ds.abspath(tmpfile))
numpy/lib/tests/test__datasource.py:215:        assert_(invalidhttp != self.ds.abspath(valid_httpurl()))
numpy/lib/tests/test__datasource.py:222:        assert_(invalidfile != self.ds.abspath(tmpfilename))
numpy/lib/tests/test__datasource.py:224:        assert_(invalidfile != self.ds.abspath(tmpfile))
numpy/lib/tests/test__datasource.py:232:        assert_(tmp_path(valid_httpurl()).startswith(self.tmpdir))
numpy/lib/tests/test__datasource.py:233:        assert_(tmp_path(invalid_httpurl()).startswith(self.tmpdir))
numpy/lib/tests/test__datasource.py:234:        assert_(tmp_path(tmpfile).startswith(self.tmpdir))
numpy/lib/tests/test__datasource.py:235:        assert_(tmp_path(tmpfilename).startswith(self.tmpdir))
numpy/lib/tests/test__datasource.py:237:            assert_(tmp_path(http_path+fn).startswith(self.tmpdir))
numpy/lib/tests/test__datasource.py:238:            assert_(tmp_path(fn).startswith(self.tmpdir))
numpy/lib/tests/test__datasource.py:267:        assert_equal(local_path, filepath)
numpy/lib/tests/test__datasource.py:271:        assert_(tmp_path(valid_httpfile()).startswith(self.tmpdir))
numpy/lib/tests/test__datasource.py:273:            assert_(tmp_path(http_path+fn).startswith(self.tmpdir))
numpy/lib/tests/test__datasource.py:274:            assert_(tmp_path(fn).startswith(self.tmpdir))
numpy/lib/tests/test__datasource.py:298:        assert_(self.repos.exists(tmpfile))
numpy/lib/tests/test__datasource.py:302:        assert_equal(self.repos.exists(tmpfile), False)
numpy/lib/tests/test__datasource.py:305:        assert_(self.repos.exists(valid_httpurl()))
numpy/lib/tests/test__datasource.py:316:        assert_(self.repos.exists(tmpfile))
numpy/lib/tests/test__datasource.py:330:        assert_(fp)
numpy/lib/tests/test__datasource.py:334:        assert_(fp)
numpy/lib/tests/test_stride_tricks.py:22:    assert_equal(outshapes, expected)
numpy/lib/tests/test_stride_tricks.py:30:    assert_raises(ValueError, broadcast_arrays, *inarrays)
numpy/lib/tests/test_stride_tricks.py:52:    assert_array_equal(y, b1)
numpy/lib/tests/test_stride_tricks.py:59:    assert_array_equal(x, bx)
numpy/lib/tests/test_stride_tricks.py:60:    assert_array_equal(y, by)
numpy/lib/tests/test_stride_tricks.py:79:    assert_array_equal(bx0, bx)
numpy/lib/tests/test_stride_tricks.py:80:    assert_array_equal(by0, by)
numpy/lib/tests/test_stride_tricks.py:101:        assert_shapes_correct(input_shapes, shape)
numpy/lib/tests/test_stride_tricks.py:104:        assert_shapes_correct(input_shapes2, shape)
numpy/lib/tests/test_stride_tricks.py:107:        assert_shapes_correct(input_shapes3, shape)
numpy/lib/tests/test_stride_tricks.py:130:        assert_shapes_correct(input_shapes, expected_shape)
numpy/lib/tests/test_stride_tricks.py:132:        assert_shapes_correct(input_shapes[::-1], expected_shape)
numpy/lib/tests/test_stride_tricks.py:162:        assert_shapes_correct(input_shapes, expected_shape)
numpy/lib/tests/test_stride_tricks.py:164:        assert_shapes_correct(input_shapes[::-1], expected_shape)
numpy/lib/tests/test_stride_tricks.py:177:        assert_incompatible_shapes_raise(input_shapes)
numpy/lib/tests/test_stride_tricks.py:179:        assert_incompatible_shapes_raise(input_shapes[::-1])
numpy/lib/tests/test_stride_tricks.py:221:        assert_same_as_ufunc(input_shapes[0], input_shapes[1],
numpy/lib/tests/test_stride_tricks.py:224:        assert_same_as_ufunc(input_shapes[1], input_shapes[0])
numpy/lib/tests/test_stride_tricks.py:226:        assert_same_as_ufunc(input_shapes[0], input_shapes[1], True)
numpy/lib/tests/test_stride_tricks.py:230:            assert_same_as_ufunc(input_shapes[0], input_shapes[1], False, True)
numpy/lib/tests/test_stride_tricks.py:231:            assert_same_as_ufunc(input_shapes[0], input_shapes[1], True, True)
numpy/lib/tests/test_stride_tricks.py:257:        assert_array_equal(expected, actual)
numpy/lib/tests/test_stride_tricks.py:276:        assert_raises(ValueError, lambda: broadcast_to(arr, target_shape))
numpy/lib/tests/test_stride_tricks.py:283:    assert_equal(_broadcast_shape(), ())
numpy/lib/tests/test_stride_tricks.py:284:    assert_equal(_broadcast_shape([1, 2]), (2,))
numpy/lib/tests/test_stride_tricks.py:285:    assert_equal(_broadcast_shape(np.ones((1, 1))), (1, 1))
numpy/lib/tests/test_stride_tricks.py:286:    assert_equal(_broadcast_shape(np.ones((1, 1)), np.ones((3, 4))), (3, 4))
numpy/lib/tests/test_stride_tricks.py:287:    assert_equal(_broadcast_shape(*([np.ones((1, 2))] * 32)), (1, 2))
numpy/lib/tests/test_stride_tricks.py:288:    assert_equal(_broadcast_shape(*([np.ones((1, 2))] * 100)), (1, 2))
numpy/lib/tests/test_stride_tricks.py:291:    assert_equal(_broadcast_shape(*([np.ones(2)] * 32 + [1])), (2,))
numpy/lib/tests/test_stride_tricks.py:293:    assert_raises(ValueError, lambda: _broadcast_shape(*bad_args))
numpy/lib/tests/test_stride_tricks.py:328:        assert_equal(broadcast_shapes(*input_shapes), target_shape)
numpy/lib/tests/test_stride_tricks.py:330:    assert_equal(broadcast_shapes(*([(1, 2)] * 32)), (1, 2))
numpy/lib/tests/test_stride_tricks.py:331:    assert_equal(broadcast_shapes(*([(1, 2)] * 100)), (1, 2))
numpy/lib/tests/test_stride_tricks.py:334:    assert_equal(broadcast_shapes(*([(2,)] * 32)), (2,))
numpy/lib/tests/test_stride_tricks.py:348:        assert_raises(ValueError, lambda: broadcast_shapes(*input_shapes))
numpy/lib/tests/test_stride_tricks.py:351:    assert_raises(ValueError, lambda: broadcast_shapes(*bad_args))
numpy/lib/tests/test_stride_tricks.py:358:    assert_array_equal(a_view, np.array([None]))
numpy/lib/tests/test_stride_tricks.py:363:    assert_array_equal(a_view, expected)
numpy/lib/tests/test_stride_tricks.py:368:    assert_array_equal(a_view, expected)
numpy/lib/tests/test_stride_tricks.py:377:    assert_equal(a_view.dtype, dt)
numpy/lib/tests/test_stride_tricks.py:378:    assert_array_equal(expected_num, a_view['num'])
numpy/lib/tests/test_stride_tricks.py:379:    assert_array_equal(expected_obj, a_view['obj'])
numpy/lib/tests/test_stride_tricks.py:384:    assert_equal(a.dtype, a_view.dtype)
numpy/lib/tests/test_stride_tricks.py:390:    assert_equal(a.dtype, a_view.dtype)
numpy/lib/tests/test_stride_tricks.py:396:    assert_equal(a.dtype, a_view.dtype)
numpy/lib/tests/test_stride_tricks.py:397:    assert_array_equal([r] * 3, a_view)
numpy/lib/tests/test_stride_tricks.py:408:        assert_array_equal(arr_view, expected)
numpy/lib/tests/test_stride_tricks.py:421:        assert_array_equal(arr_view, expected)
numpy/lib/tests/test_stride_tricks.py:431:        assert_array_equal(arr_view, expected)
numpy/lib/tests/test_stride_tricks.py:443:        assert_array_equal(arr_view, expected)
numpy/lib/tests/test_stride_tricks.py:456:        assert_array_equal(arr_view, expected)
numpy/lib/tests/test_stride_tricks.py:479:        assert_(not view.flags.writeable)
numpy/lib/tests/test_stride_tricks.py:485:        assert_(view.flags.writeable)
numpy/lib/tests/test_stride_tricks.py:487:        assert_array_equal(arr, np.array([0, 3, 2, 3, 4]))
numpy/lib/tests/test_stride_tricks.py:497:        assert_(isinstance(sliding_window_view(arr, 2, subok=True), MyArray))
numpy/lib/tests/test_stride_tricks.py:499:        assert_(not isinstance(sliding_window_view(arr, 2), MyArray))
numpy/lib/tests/test_stride_tricks.py:505:    assert_(not view.flags.writeable)
numpy/lib/tests/test_stride_tricks.py:509:    assert_(view.flags.writeable)
numpy/lib/tests/test_stride_tricks.py:511:    assert_array_equal(arr, np.full_like(arr, 3))
numpy/lib/tests/test_stride_tricks.py:517:    assert_(not view.flags.writeable)
numpy/lib/tests/test_stride_tricks.py:538:    assert_(type(a) is VerySimpleSubClass)
numpy/lib/tests/test_stride_tricks.py:540:    assert_(type(a_view) is np.ndarray)
numpy/lib/tests/test_stride_tricks.py:542:    assert_(type(a_view) is VerySimpleSubClass)
numpy/lib/tests/test_stride_tricks.py:546:    assert_(type(a_view) is SimpleSubClass)
numpy/lib/tests/test_stride_tricks.py:547:    assert_(a_view.info == 'simple finalized')
numpy/lib/tests/test_stride_tricks.py:552:    assert_(type(a_view) is np.ndarray)
numpy/lib/tests/test_stride_tricks.py:553:    assert_(type(b_view) is np.ndarray)
numpy/lib/tests/test_stride_tricks.py:554:    assert_(a_view.shape == b_view.shape)
numpy/lib/tests/test_stride_tricks.py:556:    assert_(type(a_view) is SimpleSubClass)
numpy/lib/tests/test_stride_tricks.py:557:    assert_(a_view.info == 'simple finalized')
numpy/lib/tests/test_stride_tricks.py:558:    assert_(type(b_view) is np.ndarray)
numpy/lib/tests/test_stride_tricks.py:559:    assert_(a_view.shape == b_view.shape)
numpy/lib/tests/test_stride_tricks.py:564:    assert_(type(a_view) is np.ndarray)
numpy/lib/tests/test_stride_tricks.py:565:    assert_(a_view.shape == shape)
numpy/lib/tests/test_stride_tricks.py:567:    assert_(type(a_view) is SimpleSubClass)
numpy/lib/tests/test_stride_tricks.py:568:    assert_(a_view.info == 'simple finalized')
numpy/lib/tests/test_stride_tricks.py:569:    assert_(a_view.shape == shape)
numpy/lib/tests/test_stride_tricks.py:576:    assert_equal(result.flags.writeable, False)
numpy/lib/tests/test_stride_tricks.py:577:    assert_raises(ValueError, result.__setitem__, slice(None), 0)
numpy/lib/tests/test_stride_tricks.py:587:                    assert_equal(result.flags.writeable, True)
numpy/lib/tests/test_stride_tricks.py:591:                assert_equal(result.flags.writeable, True)
numpy/lib/tests/test_stride_tricks.py:594:                assert_equal(result.flags.writeable, True)
numpy/lib/tests/test_stride_tricks.py:602:            assert_equal(result.flags.writeable, True)
numpy/lib/tests/test_stride_tricks.py:608:    assert_equal(result.flags.writeable, False)
numpy/lib/tests/test_stride_tricks.py:616:    assert_(first.shape == second.shape)
numpy/lib/tests/test_stride_tricks.py:633:                assert memoryview(result).readonly
numpy/lib/tests/test_stride_tricks.py:635:                assert not memoryview(result).readonly
numpy/lib/tests/test_stride_tricks.py:642:    assert_array_equal(expected, actual)
numpy/lib/tests/test_stride_tricks.py:645:    assert_array_equal(expected, actual)
numpy/lib/tests/test_recfunctions.py:74:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:79:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:85:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:90:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:95:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:105:        assert_equal(test.dtype, newdtype)
numpy/lib/tests/test_recfunctions.py:106:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:112:        assert_equal(test, ('A', 'B'))
numpy/lib/tests/test_recfunctions.py:116:        assert_equal(test, ('a', ('b', ('ba', 'bb'))))
numpy/lib/tests/test_recfunctions.py:120:        assert_equal(test, ('a', ('b', ())))
numpy/lib/tests/test_recfunctions.py:124:        assert_equal(test, ())
numpy/lib/tests/test_recfunctions.py:130:        assert_equal(test, ('A', 'B'))
numpy/lib/tests/test_recfunctions.py:134:        assert_equal(test, ('a', 'b', 'ba', 'bb'))
numpy/lib/tests/test_recfunctions.py:138:        assert_equal(test, ('a', 'b'))
numpy/lib/tests/test_recfunctions.py:142:        assert_equal(test, ())
numpy/lib/tests/test_recfunctions.py:150:        assert_equal(test, {'A': [], 'B': []})
numpy/lib/tests/test_recfunctions.py:155:        assert_equal(test, {'A': [], 'B': [], 'BA': ['B', ], 'BB': ['B']})
numpy/lib/tests/test_recfunctions.py:164:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:169:        assert_equal(test, {})
numpy/lib/tests/test_recfunctions.py:181:        assert_equal(sorted(test[-1]), control)
numpy/lib/tests/test_recfunctions.py:182:        assert_equal(test[0], a[test[-1]])
numpy/lib/tests/test_recfunctions.py:186:        assert_equal(sorted(test[-1]), control)
numpy/lib/tests/test_recfunctions.py:187:        assert_equal(test[0], a[test[-1]])
numpy/lib/tests/test_recfunctions.py:191:        assert_equal(sorted(test[-1]), control)
numpy/lib/tests/test_recfunctions.py:192:        assert_equal(test[0], a[test[-1]])
numpy/lib/tests/test_recfunctions.py:196:        assert_equal(sorted(test[-1]), control)
numpy/lib/tests/test_recfunctions.py:197:        assert_equal(test[0], a[test[-1]])
numpy/lib/tests/test_recfunctions.py:201:        assert_equal(sorted(test[-1]), control)
numpy/lib/tests/test_recfunctions.py:202:        assert_equal(test[0], a[test[-1]])
numpy/lib/tests/test_recfunctions.py:211:        assert_equal(sorted(test[-1]), control)
numpy/lib/tests/test_recfunctions.py:212:        assert_equal(test[0], a[test[-1]])
numpy/lib/tests/test_recfunctions.py:216:        assert_equal(sorted(test[-1]), control)
numpy/lib/tests/test_recfunctions.py:217:        assert_equal(test[0], a[test[-1]])
numpy/lib/tests/test_recfunctions.py:223:        assert_equal(repack_fields(dt), np.dtype('u1,f4,i8'))
numpy/lib/tests/test_recfunctions.py:224:        assert_equal(repack_fields(a).itemsize, 13)
numpy/lib/tests/test_recfunctions.py:225:        assert_equal(repack_fields(repack_fields(dt), align=True), dt)
numpy/lib/tests/test_recfunctions.py:229:        assert_(repack_fields(dt).type is np.record)
numpy/lib/tests/test_recfunctions.py:234:        assert_equal(out, np.zeros((4,5), dtype='f8'))
numpy/lib/tests/test_recfunctions.py:239:        assert_equal(out, np.array([ 3. ,  5.5,  9. , 11. ]))
numpy/lib/tests/test_recfunctions.py:241:        assert_equal(out, np.array([ 1. ,  4. ,  7. , 10. ]))
numpy/lib/tests/test_recfunctions.py:252:        assert_equal(out, want)
numpy/lib/tests/test_recfunctions.py:256:        assert_equal(apply_along_fields(np.mean, d),
numpy/lib/tests/test_recfunctions.py:258:        assert_equal(apply_along_fields(np.mean, d[['x', 'z']]),
numpy/lib/tests/test_recfunctions.py:266:        assert_(dd.base is d)
numpy/lib/tests/test_recfunctions.py:267:        assert_(ddd.base is d)
numpy/lib/tests/test_recfunctions.py:276:        assert_(dd.base is d)
numpy/lib/tests/test_recfunctions.py:277:        assert_(ddd.base is d)
numpy/lib/tests/test_recfunctions.py:284:        assert_equal(res, np.zeros((10, 6), dtype=int))
numpy/lib/tests/test_recfunctions.py:301:        assert_equal(inspect(dt), ((6,), np.int32, dt))
numpy/lib/tests/test_recfunctions.py:304:        assert_equal(inspect(dt), ((4,), np.int32, dt))
numpy/lib/tests/test_recfunctions.py:307:        assert_equal(inspect(dt), ((1,), np.int32, dt))
numpy/lib/tests/test_recfunctions.py:310:        assert_equal(inspect(dt), ((5,), np.int32, dt))
numpy/lib/tests/test_recfunctions.py:313:        assert_raises(ValueError, structured_to_unstructured, np.zeros(3, dt))
numpy/lib/tests/test_recfunctions.py:325:        assert_equal(require_fields(a, newdt), np.ones(2, newdt))
numpy/lib/tests/test_recfunctions.py:329:        assert_equal(a, np.array([(1,1,2),(1,3,4)], dtype=a.dtype))
numpy/lib/tests/test_recfunctions.py:331:        assert_equal(a, np.array([(0,1,2),(0,3,4)], dtype=a.dtype))
numpy/lib/tests/test_recfunctions.py:336:        assert_equal(require_fields(a, newdt), np.ones(2, newdt))
numpy/lib/tests/test_recfunctions.py:339:        assert_equal(a, np.array([((1,2),), ((1,3),)], dtype=a.dtype))
numpy/lib/tests/test_recfunctions.py:341:        assert_equal(a, np.array([((0,2),), ((0,3),)], dtype=a.dtype))
numpy/lib/tests/test_recfunctions.py:346:        assert_equal(b[()], 3)
numpy/lib/tests/test_recfunctions.py:358:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:369:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:391:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:393:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:396:        assert_equal(test, z)
numpy/lib/tests/test_recfunctions.py:398:        assert_equal(test, z)
numpy/lib/tests/test_recfunctions.py:404:        assert_equal(test, w)
numpy/lib/tests/test_recfunctions.py:409:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:418:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:424:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:425:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_recfunctions.py:433:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:439:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:448:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:456:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:466:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:468:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:469:        assert_(isinstance(test, MaskedRecords))
numpy/lib/tests/test_recfunctions.py:478:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:502:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:524:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:533:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:542:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:556:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:574:        assert_equal(test, x)
numpy/lib/tests/test_recfunctions.py:575:        assert_(test is x)
numpy/lib/tests/test_recfunctions.py:578:        assert_equal(test, x)
numpy/lib/tests/test_recfunctions.py:579:        assert_(test is x)
numpy/lib/tests/test_recfunctions.py:587:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:591:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:595:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:607:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:608:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_recfunctions.py:616:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:617:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_recfunctions.py:627:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:641:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:642:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_recfunctions.py:654:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:655:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_recfunctions.py:670:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:671:        assert_equal(test.data, control.data)
numpy/lib/tests/test_recfunctions.py:672:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_recfunctions.py:683:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:684:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_recfunctions.py:697:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:698:        assert_equal(test.mask, control.mask)
numpy/lib/tests/test_recfunctions.py:725:        assert_equal(res.dtype, expected.dtype)
numpy/lib/tests/test_recfunctions.py:726:        assert_equal(res, expected)
numpy/lib/tests/test_recfunctions.py:727:        assert_equal(res.mask, expected.mask)
numpy/lib/tests/test_recfunctions.py:749:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:778:        assert_equal(res, bar.view(ma.MaskedArray))
numpy/lib/tests/test_recfunctions.py:806:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:823:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:831:        assert_equal(j.dtype.names, ['b', 'c', 'a1', 'a2'])
numpy/lib/tests/test_recfunctions.py:836:        assert_raises(ValueError, join_by, ['a', 'b', 'b'], a, b)
numpy/lib/tests/test_recfunctions.py:849:        assert_equal(res.dtype, expected_dtype)
numpy/lib/tests/test_recfunctions.py:862:        assert_equal(res.dtype, expected_dtype)
numpy/lib/tests/test_recfunctions.py:875:        assert_equal(res.dtype, expected_dtype)
numpy/lib/tests/test_recfunctions.py:876:        assert_equal(res, expected)
numpy/lib/tests/test_recfunctions.py:881:        assert_(len(dt.descr), 3)  # padding field is inserted
numpy/lib/tests/test_recfunctions.py:892:        assert_equal(res.dtype, expected_dtype)
numpy/lib/tests/test_recfunctions.py:918:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:937:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:957:        assert_equal(test.dtype, control.dtype)
numpy/lib/tests/test_recfunctions.py:958:        assert_equal(test, control)
numpy/lib/tests/test_recfunctions.py:979:        assert_equal(test, control)
numpy/lib/tests/test_nanfunctions.py:96:            assert_equal(ndat, _ndat)
numpy/lib/tests/test_nanfunctions.py:104:                assert_(res.ndim == tgt.ndim)
numpy/lib/tests/test_nanfunctions.py:112:            assert_almost_equal(res, resout)
numpy/lib/tests/test_nanfunctions.py:113:            assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:122:                assert_(res is tgt)
numpy/lib/tests/test_nanfunctions.py:126:                assert_(res is tgt)
numpy/lib/tests/test_nanfunctions.py:132:            assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:149:            assert np.isnan(out).all()
numpy/lib/tests/test_nanfunctions.py:150:            assert out.dtype == array.dtype
numpy/lib/tests/test_nanfunctions.py:158:            assert_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:159:            assert_equal(mat._mask, msk)
numpy/lib/tests/test_nanfunctions.py:160:            assert_(not np.isinf(mat).any())
numpy/lib/tests/test_nanfunctions.py:164:            assert_(f(0.) == 0.)
numpy/lib/tests/test_nanfunctions.py:175:            assert_(isinstance(res, MyNDArray))
numpy/lib/tests/test_nanfunctions.py:176:            assert_(res.shape == (3,))
numpy/lib/tests/test_nanfunctions.py:178:            assert_(isinstance(res, MyNDArray))
numpy/lib/tests/test_nanfunctions.py:179:            assert_(res.shape == (3,))
numpy/lib/tests/test_nanfunctions.py:181:            assert_(res.shape == ())
numpy/lib/tests/test_nanfunctions.py:189:                assert_(isinstance(res, MyNDArray))
numpy/lib/tests/test_nanfunctions.py:190:                assert_(not np.any(np.isnan(res)))
numpy/lib/tests/test_nanfunctions.py:191:                assert_(len(w) == 0)
numpy/lib/tests/test_nanfunctions.py:196:                assert_(isinstance(res, MyNDArray))
numpy/lib/tests/test_nanfunctions.py:197:                assert_(np.isnan(res[1]) and not np.isnan(res[0])
numpy/lib/tests/test_nanfunctions.py:199:                assert_(len(w) == 1, 'no warning raised')
numpy/lib/tests/test_nanfunctions.py:200:                assert_(issubclass(w[0].category, RuntimeWarning))
numpy/lib/tests/test_nanfunctions.py:205:                assert_(res.shape == ())
numpy/lib/tests/test_nanfunctions.py:206:                assert_(res != np.nan)
numpy/lib/tests/test_nanfunctions.py:207:                assert_(len(w) == 0)
numpy/lib/tests/test_nanfunctions.py:211:        assert_equal(np.nanmin(arr), 1.0)
numpy/lib/tests/test_nanfunctions.py:212:        assert_equal(np.nanmin(arr, axis=0), [1.0, 2.0])
numpy/lib/tests/test_nanfunctions.py:217:            assert_equal(list(np.nanmin(arr, axis=1)), [1.0, 4.0, np.nan])
numpy/lib/tests/test_nanfunctions.py:218:            assert_(len(w) == 1, 'no warning raised')
numpy/lib/tests/test_nanfunctions.py:219:            assert_(issubclass(w[0].category, RuntimeWarning))
numpy/lib/tests/test_nanfunctions.py:233:            assert ret1.dtype == dtype
numpy/lib/tests/test_nanfunctions.py:234:            assert ret1 == initial
numpy/lib/tests/test_nanfunctions.py:237:            assert ret2.dtype == dtype
numpy/lib/tests/test_nanfunctions.py:238:            assert ret2 == initial
numpy/lib/tests/test_nanfunctions.py:254:            assert ret1.dtype == dtype
numpy/lib/tests/test_nanfunctions.py:255:            assert ret1 == reference
numpy/lib/tests/test_nanfunctions.py:258:            assert ret2.dtype == dtype
numpy/lib/tests/test_nanfunctions.py:259:            assert ret2 == reference
numpy/lib/tests/test_nanfunctions.py:271:            assert_equal(ndat, _ndat)
numpy/lib/tests/test_nanfunctions.py:282:                    assert_(not np.isnan(val))
numpy/lib/tests/test_nanfunctions.py:283:                    assert_(not fcmp(val, row).any())
numpy/lib/tests/test_nanfunctions.py:284:                    assert_(not np.equal(val, row[:ind]).any())
numpy/lib/tests/test_nanfunctions.py:305:                assert_raises(ValueError, f, mat, axis=axis)
numpy/lib/tests/test_nanfunctions.py:308:                assert_equal(res, np.zeros(0))
numpy/lib/tests/test_nanfunctions.py:312:            assert_(f(0.) == 0.)
numpy/lib/tests/test_nanfunctions.py:323:            assert_(isinstance(res, MyNDArray))
numpy/lib/tests/test_nanfunctions.py:324:            assert_(res.shape == (3,))
numpy/lib/tests/test_nanfunctions.py:326:            assert_(isinstance(res, MyNDArray))
numpy/lib/tests/test_nanfunctions.py:327:            assert_(res.shape == (3,))
numpy/lib/tests/test_nanfunctions.py:329:            assert_(res.shape == ())
numpy/lib/tests/test_nanfunctions.py:339:            assert ret.ndim == ar.ndim
numpy/lib/tests/test_nanfunctions.py:340:            assert ret == reference
numpy/lib/tests/test_nanfunctions.py:351:            assert ret is out
numpy/lib/tests/test_nanfunctions.py:352:            assert ret == reference
numpy/lib/tests/test_nanfunctions.py:393:        assert_almost_equal(out, tgt)
numpy/lib/tests/test_nanfunctions.py:395:            assert type(out) is type(tgt)
numpy/lib/tests/test_nanfunctions.py:397:            assert out.dtype == tgt.dtype
numpy/lib/tests/test_nanfunctions.py:409:        assert_almost_equal(out, tgt)
numpy/lib/tests/test_nanfunctions.py:411:            assert type(out) is type(tgt)
numpy/lib/tests/test_nanfunctions.py:413:            assert out.dtype == tgt.dtype
numpy/lib/tests/test_nanfunctions.py:425:        assert_almost_equal(out, tgt)
numpy/lib/tests/test_nanfunctions.py:427:            assert type(out) is type(tgt)
numpy/lib/tests/test_nanfunctions.py:429:            assert out.dtype == tgt.dtype
numpy/lib/tests/test_nanfunctions.py:438:            assert_equal(ndat, _ndat)
numpy/lib/tests/test_nanfunctions.py:446:                assert_(res.ndim == tgt.ndim)
numpy/lib/tests/test_nanfunctions.py:454:            assert_almost_equal(res, resout)
numpy/lib/tests/test_nanfunctions.py:455:            assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:468:                    assert_(res is tgt)
numpy/lib/tests/test_nanfunctions.py:472:                    assert_(res is tgt)
numpy/lib/tests/test_nanfunctions.py:485:                    assert_(res is tgt)
numpy/lib/tests/test_nanfunctions.py:489:                    assert_(res is tgt)
numpy/lib/tests/test_nanfunctions.py:498:                assert_(res is tgt, "res %s, tgt %s" % (res, tgt))
numpy/lib/tests/test_nanfunctions.py:502:                assert_(res is tgt)
numpy/lib/tests/test_nanfunctions.py:508:            assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:512:            assert_(f(0.) == 0.)
numpy/lib/tests/test_nanfunctions.py:525:            assert_(isinstance(res, MyNDArray))
numpy/lib/tests/test_nanfunctions.py:526:            assert_(res.shape == expected_shape)
numpy/lib/tests/test_nanfunctions.py:529:            assert_(isinstance(res, MyNDArray))
numpy/lib/tests/test_nanfunctions.py:530:            assert_(res.shape == expected_shape)
numpy/lib/tests/test_nanfunctions.py:533:            assert_(isinstance(res, MyNDArray))
numpy/lib/tests/test_nanfunctions.py:534:            assert_(res.shape == expected_shape)
numpy/lib/tests/test_nanfunctions.py:555:            assert np.all(out == identity)
numpy/lib/tests/test_nanfunctions.py:556:            assert out.dtype == array.dtype
numpy/lib/tests/test_nanfunctions.py:563:            assert_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:566:            assert_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:569:            assert_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:579:            assert ret.dtype == dtype
numpy/lib/tests/test_nanfunctions.py:580:            assert ret == reference
numpy/lib/tests/test_nanfunctions.py:592:            assert ret.dtype == dtype
numpy/lib/tests/test_nanfunctions.py:593:            assert ret == reference
numpy/lib/tests/test_nanfunctions.py:614:            assert np.all(out == identity)
numpy/lib/tests/test_nanfunctions.py:615:            assert out.dtype == array.dtype
numpy/lib/tests/test_nanfunctions.py:622:            assert_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:625:            assert_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:628:            assert_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:636:                assert_(res.ndim == tgt.ndim)
numpy/lib/tests/test_nanfunctions.py:644:            assert_equal(res.shape, (1155,))
numpy/lib/tests/test_nanfunctions.py:647:                assert_equal(res.shape, (3, 5, 7, 11))
numpy/lib/tests/test_nanfunctions.py:653:            assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:656:            assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:665:                assert_almost_equal(res, resout)
numpy/lib/tests/test_nanfunctions.py:666:                assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:677:                assert_raises(TypeError, f, _ndat, axis=1, dtype=dtype)
numpy/lib/tests/test_nanfunctions.py:683:                assert_raises(TypeError, f, _ndat, axis=1, out=out)
numpy/lib/tests/test_nanfunctions.py:692:                assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:705:                    assert_equal(np.isnan(res), tgt)
numpy/lib/tests/test_nanfunctions.py:707:                        assert_(len(sup.log) == 1)
numpy/lib/tests/test_nanfunctions.py:709:                        assert_(len(sup.log) == 0)
numpy/lib/tests/test_nanfunctions.py:726:            assert np.isnan(out).all()
numpy/lib/tests/test_nanfunctions.py:731:                assert out.dtype == array.dtype
numpy/lib/tests/test_nanfunctions.py:733:                assert out.dtype == np.abs(array).dtype
numpy/lib/tests/test_nanfunctions.py:741:                    assert_(np.isnan(f(mat, axis=axis)).all())
numpy/lib/tests/test_nanfunctions.py:742:                    assert_(len(w) == 1)
numpy/lib/tests/test_nanfunctions.py:743:                    assert_(issubclass(w[0].category, RuntimeWarning))
numpy/lib/tests/test_nanfunctions.py:747:                    assert_equal(f(mat, axis=axis), np.zeros([]))
numpy/lib/tests/test_nanfunctions.py:748:                    assert_(len(w) == 0)
numpy/lib/tests/test_nanfunctions.py:762:            assert ret.dtype == dtype_reference
numpy/lib/tests/test_nanfunctions.py:781:        assert_equal(ndat, _ndat)
numpy/lib/tests/test_nanfunctions.py:788:            assert_(res.ndim == tgt.ndim)
numpy/lib/tests/test_nanfunctions.py:798:            assert_equal(res.shape, (1, 1, 1, 1))
numpy/lib/tests/test_nanfunctions.py:800:            assert_equal(res.shape, (1, 1, 7, 11))
numpy/lib/tests/test_nanfunctions.py:802:            assert_equal(res.shape, (1, 5, 7, 1))
numpy/lib/tests/test_nanfunctions.py:804:            assert_equal(res.shape, (3, 1, 7, 11))
numpy/lib/tests/test_nanfunctions.py:806:            assert_equal(res.shape, (1, 1, 1, 1))
numpy/lib/tests/test_nanfunctions.py:808:            assert_equal(res.shape, (1, 1, 7, 1))
numpy/lib/tests/test_nanfunctions.py:816:        assert_almost_equal(res, resout)
numpy/lib/tests/test_nanfunctions.py:817:        assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:822:        assert_almost_equal(res, resout)
numpy/lib/tests/test_nanfunctions.py:823:        assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:825:        assert_almost_equal(res, resout)
numpy/lib/tests/test_nanfunctions.py:826:        assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:842:            assert_array_equal(np.nanmedian(d, axis=-1), tgt)
numpy/lib/tests/test_nanfunctions.py:847:            assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:857:            assert output.dtype == mat.dtype
numpy/lib/tests/test_nanfunctions.py:858:            assert np.isnan(output).all()
numpy/lib/tests/test_nanfunctions.py:861:                assert_(len(sup.log) == 1)
numpy/lib/tests/test_nanfunctions.py:863:                assert_(len(sup.log) == 3)
numpy/lib/tests/test_nanfunctions.py:868:            assert output_scalar.dtype == scalar.dtype
numpy/lib/tests/test_nanfunctions.py:869:            assert np.isnan(output_scalar)
numpy/lib/tests/test_nanfunctions.py:872:                assert_(len(sup.log) == 2)
numpy/lib/tests/test_nanfunctions.py:874:                assert_(len(sup.log) == 4)
numpy/lib/tests/test_nanfunctions.py:881:                assert_(np.isnan(np.nanmedian(mat, axis=axis)).all())
numpy/lib/tests/test_nanfunctions.py:882:                assert_(len(w) == 1)
numpy/lib/tests/test_nanfunctions.py:883:                assert_(issubclass(w[0].category, RuntimeWarning))
numpy/lib/tests/test_nanfunctions.py:887:                assert_equal(np.nanmedian(mat, axis=axis), np.zeros([]))
numpy/lib/tests/test_nanfunctions.py:888:                assert_(len(w) == 0)
numpy/lib/tests/test_nanfunctions.py:891:        assert_(np.nanmedian(0.) == 0.)
numpy/lib/tests/test_nanfunctions.py:895:        assert_raises(np.AxisError, np.nanmedian, d, axis=-5)
numpy/lib/tests/test_nanfunctions.py:896:        assert_raises(np.AxisError, np.nanmedian, d, axis=(0, -5))
numpy/lib/tests/test_nanfunctions.py:897:        assert_raises(np.AxisError, np.nanmedian, d, axis=4)
numpy/lib/tests/test_nanfunctions.py:898:        assert_raises(np.AxisError, np.nanmedian, d, axis=(0, 4))
numpy/lib/tests/test_nanfunctions.py:899:        assert_raises(ValueError, np.nanmedian, d, axis=(1, 1))
numpy/lib/tests/test_nanfunctions.py:906:                assert_equal(np.nanmedian(a, axis=0), [inf,  np.nan])
numpy/lib/tests/test_nanfunctions.py:907:                assert_equal(np.nanmedian(a, axis=1), [inf,  np.nan])
numpy/lib/tests/test_nanfunctions.py:908:                assert_equal(np.nanmedian(a), inf)
numpy/lib/tests/test_nanfunctions.py:913:                assert_equal(np.nanmedian(a), inf)
numpy/lib/tests/test_nanfunctions.py:914:                assert_equal(np.nanmedian(a, axis=0), [np.nan, np.nan, inf])
numpy/lib/tests/test_nanfunctions.py:915:                assert_equal(np.nanmedian(a, axis=1), inf)
numpy/lib/tests/test_nanfunctions.py:919:                assert_equal(np.nanmedian(a, axis=1), inf)
numpy/lib/tests/test_nanfunctions.py:926:                    assert_equal(np.nanmedian(a, axis=0), [4., 7., -inf, 5.])
numpy/lib/tests/test_nanfunctions.py:927:                    assert_equal(np.nanmedian(a), 4.5)
numpy/lib/tests/test_nanfunctions.py:929:                    assert_equal(np.nanmedian(a, axis=0), [-10., 7., -inf, -9.])
numpy/lib/tests/test_nanfunctions.py:930:                    assert_equal(np.nanmedian(a), -2.5)
numpy/lib/tests/test_nanfunctions.py:931:                assert_equal(np.nanmedian(a, axis=-1), [-1., -2.5, inf])
numpy/lib/tests/test_nanfunctions.py:936:                        assert_equal(np.nanmedian(a), inf)
numpy/lib/tests/test_nanfunctions.py:937:                        assert_equal(np.nanmedian(a, axis=1), inf)
numpy/lib/tests/test_nanfunctions.py:938:                        assert_equal(np.nanmedian(a, axis=0),
numpy/lib/tests/test_nanfunctions.py:942:                        assert_equal(np.nanmedian(a), -inf)
numpy/lib/tests/test_nanfunctions.py:943:                        assert_equal(np.nanmedian(a, axis=1), -inf)
numpy/lib/tests/test_nanfunctions.py:944:                        assert_equal(np.nanmedian(a, axis=0),
numpy/lib/tests/test_nanfunctions.py:954:        assert_equal(ndat, _ndat)
numpy/lib/tests/test_nanfunctions.py:963:            assert_(res.ndim == tgt.ndim)
numpy/lib/tests/test_nanfunctions.py:973:            assert_equal(res.shape, (1, 1, 1, 1))
numpy/lib/tests/test_nanfunctions.py:975:            assert_equal(res.shape, (1, 1, 7, 11))
numpy/lib/tests/test_nanfunctions.py:977:            assert_equal(res.shape, (1, 5, 7, 1))
numpy/lib/tests/test_nanfunctions.py:979:            assert_equal(res.shape, (3, 1, 7, 11))
numpy/lib/tests/test_nanfunctions.py:981:            assert_equal(res.shape, (1, 1, 1, 1))
numpy/lib/tests/test_nanfunctions.py:983:            assert_equal(res.shape, (1, 1, 7, 1))
numpy/lib/tests/test_nanfunctions.py:991:        assert_almost_equal(res, resout)
numpy/lib/tests/test_nanfunctions.py:992:        assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:997:        assert_almost_equal(res, resout)
numpy/lib/tests/test_nanfunctions.py:998:        assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:1000:        assert_almost_equal(res, resout)
numpy/lib/tests/test_nanfunctions.py:1001:        assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:1006:        assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:1010:        assert_almost_equal(res, tgt)
numpy/lib/tests/test_nanfunctions.py:1025:        assert np.isnan(out).all()
numpy/lib/tests/test_nanfunctions.py:1026:        assert out.dtype == array.dtype
numpy/lib/tests/test_nanfunctions.py:1033:                assert_(np.isnan(np.nanpercentile(mat, 40, axis=axis)).all())
numpy/lib/tests/test_nanfunctions.py:1034:                assert_(len(w) == 1)
numpy/lib/tests/test_nanfunctions.py:1035:                assert_(issubclass(w[0].category, RuntimeWarning))
numpy/lib/tests/test_nanfunctions.py:1039:                assert_equal(np.nanpercentile(mat, 40, axis=axis), np.zeros([]))
numpy/lib/tests/test_nanfunctions.py:1040:                assert_(len(w) == 0)
numpy/lib/tests/test_nanfunctions.py:1043:        assert_equal(np.nanpercentile(0., 100), 0.)
numpy/lib/tests/test_nanfunctions.py:1046:        assert_equal(r, 2.5)
numpy/lib/tests/test_nanfunctions.py:1047:        assert_(np.isscalar(r))
numpy/lib/tests/test_nanfunctions.py:1051:        assert_raises(np.AxisError, np.nanpercentile, d, q=5, axis=-5)
numpy/lib/tests/test_nanfunctions.py:1052:        assert_raises(np.AxisError, np.nanpercentile, d, q=5, axis=(0, -5))
numpy/lib/tests/test_nanfunctions.py:1053:        assert_raises(np.AxisError, np.nanpercentile, d, q=5, axis=4)
numpy/lib/tests/test_nanfunctions.py:1054:        assert_raises(np.AxisError, np.nanpercentile, d, q=5, axis=(0, 4))
numpy/lib/tests/test_nanfunctions.py:1055:        assert_raises(ValueError, np.nanpercentile, d, q=5, axis=(1, 1))
numpy/lib/tests/test_nanfunctions.py:1072:                    assert_equal(nan_val.shape, val.shape)
numpy/lib/tests/test_nanfunctions.py:1078:                    assert_equal(nan_val, val)
numpy/lib/tests/test_nanfunctions.py:1081:        assert_equal(np.nanpercentile(megamat, perc, axis=(1, 2)).shape, (2, 3, 6))
numpy/lib/tests/test_nanfunctions.py:1091:        assert_equal(np.nanquantile(ar, q=0.5), np.nanpercentile(ar, q=50))
numpy/lib/tests/test_nanfunctions.py:1092:        assert_equal(np.nanquantile(ar, q=0.5, axis=0),
numpy/lib/tests/test_nanfunctions.py:1094:        assert_equal(np.nanquantile(ar, q=0.5, axis=1),
numpy/lib/tests/test_nanfunctions.py:1096:        assert_equal(np.nanquantile(ar, q=[0.5], axis=1),
numpy/lib/tests/test_nanfunctions.py:1098:        assert_equal(np.nanquantile(ar, q=[0.25, 0.5, 0.75], axis=1),
numpy/lib/tests/test_nanfunctions.py:1103:        assert_equal(np.nanquantile(x, 0), 0.)
numpy/lib/tests/test_nanfunctions.py:1104:        assert_equal(np.nanquantile(x, 1), 3.5)
numpy/lib/tests/test_nanfunctions.py:1105:        assert_equal(np.nanquantile(x, 0.5), 1.75)
numpy/lib/tests/test_nanfunctions.py:1112:        assert_array_equal(p, p0)
numpy/lib/tests/test_nanfunctions.py:1117:        assert_array_equal(p, p0)
numpy/lib/tests/test_nanfunctions.py:1132:        assert np.isnan(out).all()
numpy/lib/tests/test_nanfunctions.py:1133:        assert out.dtype == array.dtype
numpy/lib/tests/test_nanfunctions.py:1154:        assert_equal(actual, expected)
numpy/lib/tests/test_nanfunctions.py:1159:            assert actual is True
numpy/lib/tests/test_nanfunctions.py:1169:        assert mask is None
numpy/lib/tests/test_nanfunctions.py:1171:        assert result is arr
numpy/lib/tests/test_nanfunctions.py:1176:        assert (mask == False).all()
numpy/lib/tests/test_nanfunctions.py:1178:        assert result is not arr
numpy/lib/tests/test_nanfunctions.py:1179:        assert_equal(result, arr)
numpy/lib/tests/test_nanfunctions.py:1183:        assert_equal(mask_nan, np.array([False, False, True]))
numpy/lib/tests/test_nanfunctions.py:1184:        assert result_nan is not arr_nan
numpy/lib/tests/test_nanfunctions.py:1185:        assert_equal(result_nan, np.array([0, 1, 2]))
numpy/lib/tests/test_nanfunctions.py:1186:        assert np.isnan(arr_nan[-1])
numpy/lib/tests/test_loadtxt.py:30:    assert_array_equal(np.loadtxt(data, delimiter=","), expected)
numpy/lib/tests/test_loadtxt.py:38:    assert_equal(a, [[1.5, 2.5], [3.0, 4.0], [5.5, 6.0]])
numpy/lib/tests/test_loadtxt.py:79:    assert_array_equal(a, expected[skiprows:])
numpy/lib/tests/test_loadtxt.py:86:    assert_array_equal(a, expected["f0"])
numpy/lib/tests/test_loadtxt.py:87:    assert_array_equal(b, expected["f1"])
numpy/lib/tests/test_loadtxt.py:88:    assert_array_equal(c, expected["f2"])
numpy/lib/tests/test_loadtxt.py:89:    assert_array_equal(d, expected["f3"])
numpy/lib/tests/test_loadtxt.py:96:    assert_array_equal(np.loadtxt(data, delimiter=",", dtype=dtype), expected)
numpy/lib/tests/test_loadtxt.py:103:    assert_array_equal(np.loadtxt(data, dtype=dtype), expected)
numpy/lib/tests/test_loadtxt.py:118:    assert_array_equal(np.loadtxt(data, dtype=dt, delimiter=","), expected)
numpy/lib/tests/test_loadtxt.py:126:    assert_array_equal(np.loadtxt(data, delimiter=",", dtype=dt), expected)
numpy/lib/tests/test_loadtxt.py:153:    assert_array_equal(np.loadtxt(StringIO(data), dtype=int), arr)
numpy/lib/tests/test_loadtxt.py:154:    assert_array_equal(np.loadtxt(StringIO(data), dtype=int, ndmin=0), arr)
numpy/lib/tests/test_loadtxt.py:155:    assert_array_equal(np.loadtxt(StringIO(data), dtype=int, ndmin=1), arr)
numpy/lib/tests/test_loadtxt.py:156:    assert_array_equal(np.loadtxt(StringIO(data), dtype=int, ndmin=2), arr2d)
numpy/lib/tests/test_loadtxt.py:203:    assert_equal(res.dtype, dtype)
numpy/lib/tests/test_loadtxt.py:204:    assert_equal(res, np.array([["1.5", "2.5"], ["3.0", "4.0"]], dtype=dtype))
numpy/lib/tests/test_loadtxt.py:224:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:239:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:244:    assert_array_equal(res, [[0, -1], [0, -1]])
numpy/lib/tests/test_loadtxt.py:251:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:263:    assert res.shape == (3,)
numpy/lib/tests/test_loadtxt.py:264:    assert res.dtype == np.dtype([])
numpy/lib/tests/test_loadtxt.py:277:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:291:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:302:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:319:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:327:    assert_equal(res, np.tile([1.5, 2.5], (2, 50000)))
numpy/lib/tests/test_loadtxt.py:336:    assert value == dtype.type("0.123456789")
numpy/lib/tests/test_loadtxt.py:357:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:358:    assert_equal(res.dtype, expected_dtype)
numpy/lib/tests/test_loadtxt.py:377:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:384:    assert res.dtype == bool
numpy/lib/tests/test_loadtxt.py:385:    assert_array_equal(res, [[True, False], [True, True]])
numpy/lib/tests/test_loadtxt.py:387:    assert_array_equal(res.view(np.uint8), [[1, 0], [1, 1]])
numpy/lib/tests/test_loadtxt.py:395:    assert np.loadtxt(["+2"], dtype=dtype) == 2
numpy/lib/tests/test_loadtxt.py:400:        assert np.loadtxt(["-2\n"], dtype=dtype) == -2
numpy/lib/tests/test_loadtxt.py:426:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:436:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:446:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:476:    assert sys.getrefcount(sentinel) == 2
numpy/lib/tests/test_loadtxt.py:531:    assert_array_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:547:    assert_array_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:572:    assert_equal(res, [[1, 2], [3, 4]])
numpy/lib/tests/test_loadtxt.py:601:    assert_array_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:608:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:616:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:622:    assert_equal(res, expected)
numpy/lib/tests/test_loadtxt.py:640:    assert res.shape == expected_shape
numpy/lib/tests/test_loadtxt.py:647:        assert res.shape == expected_shape
numpy/lib/tests/test_loadtxt.py:683:    assert full_dt.fields["b"][1] == 1
numpy/lib/tests/test_loadtxt.py:686:    assert res["b"] == dtype.type(value)
numpy/lib/tests/test_loadtxt.py:698:    assert_array_equal(res, np.array([3, 2]).astype(dtype))
numpy/lib/tests/test_loadtxt.py:708:    assert_array_equal(res, np.array([[1, 2+3j, 4+5j, 6-7j, 8j, 9j]] * 2))
numpy/lib/tests/test_loadtxt.py:747:    assert int("1_1") == float("1_1") == complex("1_1") == 11
numpy/lib/tests/test_loadtxt.py:773:    assert_array_equal(res, [[1., 2.], [2., 3.]])
numpy/lib/tests/test_loadtxt.py:784:    assert_array_equal(res, [['1', f'2{newline}'], ['3', f'4{newline}1']])
numpy/lib/tests/test_loadtxt.py:790:    assert_array_equal(res, [[1, 2, 3], [4, 5, 6]])
numpy/lib/tests/test_loadtxt.py:795:    assert res.tolist() == [["1\000", "2\000", "3"], ["4\000", "5\000", "6"]]
numpy/lib/tests/test_loadtxt.py:882:        assert_array_equal(res[:, 0], ["1", f"2{newline}", "3", "4 "])
numpy/lib/tests/test_loadtxt.py:956:    assert a.dtype == expected.dtype
numpy/lib/tests/test_loadtxt.py:957:    assert_equal(a, expected)
numpy/lib/tests/test_loadtxt.py:964:    assert a.dtype == expected.dtype
numpy/lib/tests/test_loadtxt.py:965:    assert_equal(a, expected)
numpy/lib/tests/test_loadtxt.py:978:    assert a.dtype == expected.dtype
numpy/lib/tests/test_loadtxt.py:979:    assert_equal(a, expected)
numpy/lib/tests/test_loadtxt.py:986:    assert a.dtype == expected.dtype
numpy/lib/tests/test_loadtxt.py:987:    assert_equal(a, expected)
numpy/lib/tests/test_loadtxt.py:1006:    assert_equal(a, [1, 2, 3])
numpy/lib/tests/test_format.py:432:    assert_(o1 == o2)
numpy/lib/tests/test_format.py:438:        assert_array_equal(arr, arr2)
numpy/lib/tests/test_format.py:445:            assert_array_equal(arr, arr2)
numpy/lib/tests/test_format.py:451:            assert_raises(ValueError, roundtrip_truncated, arr)
numpy/lib/tests/test_format.py:458:    assert_array_equal(long_str_arr, long_str_arr2)
numpy/lib/tests/test_format.py:484:        assert_equal_(normal_bytes, memmap_bytes)
numpy/lib/tests/test_format.py:497:    assert_array_equal(arr, arr1)
numpy/lib/tests/test_format.py:524:    assert_array_equal(arr, arr1)
numpy/lib/tests/test_format.py:531:    assert_array_equal(data, np.ones(2))
numpy/lib/tests/test_format.py:555:                assert_(isinstance(data[3], str))
numpy/lib/tests/test_format.py:556:                assert_array_equal(data[:-1], expected[:-1])
numpy/lib/tests/test_format.py:558:                assert_array_equal(data[-1].encode(encoding), expected[-1])
numpy/lib/tests/test_format.py:560:                assert_(isinstance(data[3], bytes))
numpy/lib/tests/test_format.py:561:                assert_array_equal(data, expected)
numpy/lib/tests/test_format.py:566:                assert_raises(UnicodeError, data.__getitem__, 'x')
numpy/lib/tests/test_format.py:570:                assert_raises(ImportError, data.__getitem__, 'x')
numpy/lib/tests/test_format.py:589:        assert_raises(ValueError, f.__getitem__, 'x')
numpy/lib/tests/test_format.py:592:    assert_raises(ValueError, np.save, path, np.array([None], dtype=object),
numpy/lib/tests/test_format.py:646:    assert_equal_(dt1, dt)
numpy/lib/tests/test_format.py:649:    assert_array_equal(arr1, arr2)
numpy/lib/tests/test_format.py:661:        assert_(w[0].category is UserWarning)
numpy/lib/tests/test_format.py:666:    assert_(len(header) % format.ARRAY_ALIGN == 0)
numpy/lib/tests/test_format.py:670:    assert_array_equal(d, n)
numpy/lib/tests/test_format.py:673:    assert_raises(ValueError, format.write_array, f, d, (1, 0))
numpy/lib/tests/test_format.py:692:    assert_array_equal(ma, d)
numpy/lib/tests/test_format.py:698:        assert_(w[0].category is UserWarning)
numpy/lib/tests/test_format.py:703:    assert_array_equal(ma, d)
numpy/lib/tests/test_format.py:766:    assert_(version1 == (1, 0))
numpy/lib/tests/test_format.py:767:    assert_(version2 == (2, 0))
numpy/lib/tests/test_format.py:769:    assert_(s1.tell() == format.MAGIC_LEN)
numpy/lib/tests/test_format.py:770:    assert_(s2.tell() == format.MAGIC_LEN)
numpy/lib/tests/test_format.py:775:        assert_raises(ValueError, format.read_array, f)
numpy/lib/tests/test_format.py:781:        assert_raises(ValueError, format.read_array, f)
numpy/lib/tests/test_format.py:785:    assert_raises(ValueError, format.magic, -1, 1)
numpy/lib/tests/test_format.py:786:    assert_raises(ValueError, format.magic, 256, 1)
numpy/lib/tests/test_format.py:787:    assert_raises(ValueError, format.magic, 1, -1)
numpy/lib/tests/test_format.py:788:    assert_raises(ValueError, format.magic, 1, 256)
numpy/lib/tests/test_format.py:798:    assert_raises(ValueError, format.write_array_header_1_0, s, d)
numpy/lib/tests/test_format.py:810:    assert_(s.tell() % format.ARRAY_ALIGN == 0)
numpy/lib/tests/test_format.py:811:    assert_((shape, fortran, dtype) == ((3, 6), False, float))
numpy/lib/tests/test_format.py:823:    assert_(s.tell() % format.ARRAY_ALIGN == 0)
numpy/lib/tests/test_format.py:824:    assert_((shape, fortran, dtype) == ((3, 6), False, float))
numpy/lib/tests/test_format.py:830:    assert_raises(ValueError, format.read_array_header_1_0, s)
numpy/lib/tests/test_format.py:832:    assert_raises(ValueError, format.read_array_header_1_0, s)
numpy/lib/tests/test_format.py:836:    assert_raises(ValueError, format.read_array_header_1_0, s)
numpy/lib/tests/test_format.py:843:    assert_raises(ValueError, format.read_array_header_1_0, s)
numpy/lib/tests/test_format.py:851:    assert_raises(ValueError, format.read_array_header_1_0, s)
numpy/lib/tests/test_format.py:876:    assert_array_equal(r, d)
numpy/lib/tests/test_format.py:898:    assert_(a.shape == new_a.shape)
numpy/lib/tests/test_format.py:925:    assert_array_equal(arr, arr2)
numpy/lib/tests/test_format.py:957:        assert_array_equal(arr, arr2)
numpy/lib/tests/test_format.py:958:        assert _has_metadata(arr.dtype)
numpy/lib/tests/test_format.py:959:        assert not _has_metadata(arr2.dtype)
numpy/lib/tests/test_histograms.py:25:        assert_equal(np.sum(a, axis=0), n)
numpy/lib/tests/test_histograms.py:29:        assert_array_equal(a, 10)
numpy/lib/tests/test_histograms.py:34:        assert_array_equal(hist, [2, ])
numpy/lib/tests/test_histograms.py:35:        assert_array_equal(edges, [1, 2])
numpy/lib/tests/test_histograms.py:36:        assert_raises(ValueError, histogram, [1, 2], bins=0)
numpy/lib/tests/test_histograms.py:38:        assert_equal(h, np.array([2]))
numpy/lib/tests/test_histograms.py:39:        assert_allclose(e, np.array([1., 2.]))
numpy/lib/tests/test_histograms.py:50:            assert_almost_equal(area, 1)
numpy/lib/tests/test_histograms.py:51:            assert_equal(len(rec), 1)
numpy/lib/tests/test_histograms.py:62:            assert_almost_equal(area, 1)
numpy/lib/tests/test_histograms.py:63:            assert_equal(len(rec), 1)
numpy/lib/tests/test_histograms.py:71:        assert_almost_equal(area, 1)
numpy/lib/tests/test_histograms.py:77:        assert_array_equal(a, .1)
numpy/lib/tests/test_histograms.py:78:        assert_equal(np.sum(a * np.diff(b)), 1)
numpy/lib/tests/test_histograms.py:82:        assert_array_equal(a, [1, 2, 3, 4])
numpy/lib/tests/test_histograms.py:89:        assert_array_equal(a, [.1, .1, .1, 0.])
numpy/lib/tests/test_histograms.py:95:        assert_equal(counts, [.25, 0])
numpy/lib/tests/test_histograms.py:103:        assert_equal(h.sum(), 9)
numpy/lib/tests/test_histograms.py:107:        assert_equal(h.sum(), 9)
numpy/lib/tests/test_histograms.py:111:        assert_almost_equal((h * np.diff(b)).sum(), 1, decimal=15)
numpy/lib/tests/test_histograms.py:116:        assert_equal((h * np.diff(b)).sum(), 1)
numpy/lib/tests/test_histograms.py:119:        assert_equal(h, w[1:-1])
numpy/lib/tests/test_histograms.py:132:        assert_(np.issubdtype(h.dtype, np.integer))
numpy/lib/tests/test_histograms.py:135:        assert_(np.issubdtype(h.dtype, np.floating))
numpy/lib/tests/test_histograms.py:138:        assert_(np.issubdtype(h.dtype, np.integer))
numpy/lib/tests/test_histograms.py:141:        assert_(np.issubdtype(h.dtype, np.floating))
numpy/lib/tests/test_histograms.py:148:        assert_equal(counts_hist.sum(), 3.)
numpy/lib/tests/test_histograms.py:163:            assert_equal(len(rec), 1)
numpy/lib/tests/test_histograms.py:164:            assert_array_equal(hist, int_hist)
numpy/lib/tests/test_histograms.py:165:            assert_array_equal(edges, int_edges)
numpy/lib/tests/test_histograms.py:174:        assert_array_almost_equal(a * 5, wa)
numpy/lib/tests/test_histograms.py:175:        assert_array_almost_equal(na, nwa)
numpy/lib/tests/test_histograms.py:181:        assert_array_almost_equal(wa, w)
numpy/lib/tests/test_histograms.py:185:        assert_array_equal(wa, [4, 5, 0, 1])
numpy/lib/tests/test_histograms.py:188:        assert_array_almost_equal(wa, np.array([4, 5, 0, 1]) / 10. / 3. * 4)
numpy/lib/tests/test_histograms.py:194:        assert_almost_equal(a, [.2, .1, .1, .075])
numpy/lib/tests/test_histograms.py:207:        assert_array_almost_equal(wa, np.array([1, 1]) + 1j * np.array([2, 3]))
numpy/lib/tests/test_histograms.py:211:        assert_array_almost_equal(wa, np.array([1, 1]) + 1j * np.array([2, 3]))
numpy/lib/tests/test_histograms.py:220:        assert_array_almost_equal(wa, [Decimal(1), Decimal(5)])
numpy/lib/tests/test_histograms.py:224:        assert_array_almost_equal(wa, [Decimal(1), Decimal(5)])
numpy/lib/tests/test_histograms.py:231:        assert_array_almost_equal(values, [1.3, 2.5, 2.3])
numpy/lib/tests/test_histograms.py:235:        assert_array_equal(a, np.array([0]))
numpy/lib/tests/test_histograms.py:236:        assert_array_equal(b, np.array([0, 1]))
numpy/lib/tests/test_histograms.py:242:        assert_raises(TypeError, histogram, vals, 2.4)
numpy/lib/tests/test_histograms.py:248:        assert_raises(ValueError, histogram, vals, range=[np.nan,0.75])
numpy/lib/tests/test_histograms.py:249:        assert_raises(ValueError, histogram, vals, range=[0.25,np.inf])
numpy/lib/tests/test_histograms.py:265:            assert_(x >= left)
numpy/lib/tests/test_histograms.py:266:            assert_(x < right)
numpy/lib/tests/test_histograms.py:271:        assert_equal(hist[-1], 1)
numpy/lib/tests/test_histograms.py:309:            assert_raises(ValueError, histogram, one_nan, bins='auto')
numpy/lib/tests/test_histograms.py:310:            assert_raises(ValueError, histogram, all_nan, bins='auto')
numpy/lib/tests/test_histograms.py:314:            assert_equal(h.sum(), 2)  # nan is not counted
numpy/lib/tests/test_histograms.py:316:            assert_equal(h.sum(), 0)  # nan is not counted
numpy/lib/tests/test_histograms.py:320:            assert_equal(h.sum(), 2)  # nan is not counted
numpy/lib/tests/test_histograms.py:322:            assert_equal(h.sum(), 0)  # nan is not counted
numpy/lib/tests/test_histograms.py:340:        assert_equal(d_count, i_count)
numpy/lib/tests/test_histograms.py:341:        assert_equal(t_count, i_count)
numpy/lib/tests/test_histograms.py:343:        assert_equal((d_edge - begin).astype(int), i_edge)
numpy/lib/tests/test_histograms.py:344:        assert_equal(t_edge.astype(int), i_edge)
numpy/lib/tests/test_histograms.py:346:        assert_equal(d_edge.dtype, dates.dtype)
numpy/lib/tests/test_histograms.py:347:        assert_equal(t_edge.dtype, td)
numpy/lib/tests/test_histograms.py:353:        assert_equal(e, [-2**exponent + 4, 0, 2**exponent - 4])
numpy/lib/tests/test_histograms.py:354:        assert_equal(hist, [1, 1])
numpy/lib/tests/test_histograms.py:375:        assert_equal(count, [1])
numpy/lib/tests/test_histograms.py:378:        assert_equal(x_loc.dtype, float_small)
numpy/lib/tests/test_histograms.py:392:        assert_equal(count, [1])
numpy/lib/tests/test_histograms.py:395:        assert_equal(x_loc.dtype, float_small)
numpy/lib/tests/test_histograms.py:413:        assert_array_equal(edges, e)
numpy/lib/tests/test_histograms.py:418:        assert_array_equal(edges, e)
numpy/lib/tests/test_histograms.py:422:        assert_array_equal(edges, e)
numpy/lib/tests/test_histograms.py:437:            assert_array_equal(a, np.array([0]))
numpy/lib/tests/test_histograms.py:438:            assert_array_equal(b, np.array([0, 1]))
numpy/lib/tests/test_histograms.py:463:                assert_equal(len(a), numbins, err_msg="For the {0} estimator "
numpy/lib/tests/test_histograms.py:483:                assert_equal(len(a), expbins, err_msg="For the {0} estimator "
numpy/lib/tests/test_histograms.py:492:            assert_raises(ValueError, histogram, [1, 2, 3], estimator)
numpy/lib/tests/test_histograms.py:505:            assert_equal(len(a), numbins, err_msg="{0} estimator, "
numpy/lib/tests/test_histograms.py:518:        assert_equal(edges_auto, np.linspace(0, 100, 12))
numpy/lib/tests/test_histograms.py:521:        assert_equal(edges_fd, np.array([0, 100]))
numpy/lib/tests/test_histograms.py:524:        assert_equal(edges_sturges, np.linspace(0, 100, 12))
numpy/lib/tests/test_histograms.py:544:            assert_equal(len(a), numbins)
numpy/lib/tests/test_histograms.py:560:        assert_almost_equal(avg, [0.15, 0.09, 0.08, 0.03], decimal=2)
numpy/lib/tests/test_histograms.py:591:                assert_equal(len(a), numbins, err_msg=msg)
numpy/lib/tests/test_histograms.py:600:        assert_array_equal(hist, hist32)
numpy/lib/tests/test_histograms.py:601:        assert_array_equal(edges, edges32)
numpy/lib/tests/test_histograms.py:622:        assert_array_equal(H, answer)
numpy/lib/tests/test_histograms.py:627:        assert_(np.all(H == answer / 12.))
numpy/lib/tests/test_histograms.py:635:        assert_array_almost_equal(H, answer / 6., 4)
numpy/lib/tests/test_histograms.py:645:        assert_array_equal(H, answer)
numpy/lib/tests/test_histograms.py:650:        assert_array_equal(H, Z)
numpy/lib/tests/test_histograms.py:659:            assert_(H.shape == b)
numpy/lib/tests/test_histograms.py:673:            assert_(H.shape == b)
numpy/lib/tests/test_histograms.py:680:        assert_array_equal(w_hist, hist)
numpy/lib/tests/test_histograms.py:682:        assert_array_equal(w_hist, n_hist)
numpy/lib/tests/test_histograms.py:684:        assert_array_equal(w_hist, 2 * hist)
numpy/lib/tests/test_histograms.py:689:        assert_array_equal(edges[0], np.array([-0.5, 0., 0.5]))
numpy/lib/tests/test_histograms.py:693:        assert_array_max_ulp(a, np.array([[0.]]))
numpy/lib/tests/test_histograms.py:695:        assert_array_max_ulp(a, np.zeros((2, 2, 2)))
numpy/lib/tests/test_histograms.py:701:        assert_raises(ValueError, np.histogramdd, x, bins=[-1, 2, 4, 5])
numpy/lib/tests/test_histograms.py:702:        assert_raises(ValueError, np.histogramdd, x, bins=[1, 0.99, 1, 1])
numpy/lib/tests/test_histograms.py:705:        assert_(np.histogramdd(x, bins=[1, 1, 1, [1, 2, 3, 4]]))
numpy/lib/tests/test_histograms.py:713:            assert_allclose(h, expected)
numpy/lib/tests/test_histograms.py:715:            assert_allclose(h, expected)
numpy/lib/tests/test_histograms.py:717:            assert_allclose(h, expected)
numpy/lib/tests/test_histograms.py:724:        assert_(hist[0] == 0.0)
numpy/lib/tests/test_histograms.py:725:        assert_(hist[1] == 1.)
numpy/lib/tests/test_histograms.py:729:        assert_(hist[0] == 0.0)
numpy/lib/tests/test_histograms.py:730:        assert_(hist[1] == 1.)
numpy/lib/tests/test_histograms.py:734:        assert_(hist[0] == 0.0)
numpy/lib/tests/test_histograms.py:735:        assert_(hist[1] == 0.0)
numpy/lib/tests/test_histograms.py:739:        assert_(hist[0] == 0.0)
numpy/lib/tests/test_histograms.py:740:        assert_(hist[1] == 0.0)
numpy/lib/tests/test_histograms.py:762:        assert_equal(hist, hist_expected)
numpy/lib/tests/test_histograms.py:772:        assert_equal(edges[0].dtype, x_edges.dtype)
numpy/lib/tests/test_histograms.py:773:        assert_equal(edges[1].dtype, y_edges.dtype)
numpy/lib/tests/test_histograms.py:785:        assert_equal(hist[0, 0], 1)
numpy/lib/tests/test_histograms.py:808:        assert_equal(hist, relative_areas)
numpy/lib/tests/test_histograms.py:812:        assert_equal(hist, 1 / (8*8))
numpy/lib/tests/test_histograms.py:820:        assert_equal(hist, hist_dd)
numpy/lib/tests/test_histograms.py:821:        assert_equal(edges, edges_dd[0])
numpy/lib/tests/test_histograms.py:829:        assert_equal(hist, hist_dd)
numpy/lib/tests/test_histograms.py:830:        assert_equal(edges, edges_dd[0])
numpy/lib/tests/test_regression.py:13:        assert_equal(np.poly1d([1]) - np.poly1d([1, 0]),
numpy/lib/tests/test_regression.py:22:        assert_array_equal(x, y)
numpy/lib/tests/test_regression.py:32:        assert_array_equal([], np.unique(np.array([])))
numpy/lib/tests/test_regression.py:43:        assert_array_equal(np.mgrid[0:0:1j], [0])
numpy/lib/tests/test_regression.py:44:        assert_array_equal(np.mgrid[0:0], [])
numpy/lib/tests/test_regression.py:56:        assert_raises(np.linalg.LinAlgError, getattr, p, "r")
numpy/lib/tests/test_regression.py:72:        assert_equal(q*v + r, u)
numpy/lib/tests/test_regression.py:78:        assert_(x != y)
numpy/lib/tests/test_regression.py:79:        assert_(x == x)
numpy/lib/tests/test_regression.py:100:        assert_array_almost_equal(ref, tested)
numpy/lib/tests/test_regression.py:107:        assert_(q.dtype == complex, msg)
numpy/lib/tests/test_regression.py:111:        assert_(q.dtype == float, msg)
numpy/lib/tests/test_regression.py:115:        assert_raises(ValueError, np.histogramdd, np.ones((1, 10)), bins=2**10)
numpy/lib/tests/test_regression.py:121:        assert_(np.polyint(x).dtype == complex, msg)
numpy/lib/tests/test_regression.py:124:        assert_(np.polyint(x).dtype == float, msg)
numpy/lib/tests/test_regression.py:133:        assert_array_equal(np.array([np.nan]), np.asfarray([None]))
numpy/lib/tests/test_regression.py:152:        assert_raises(ValueError, dp)
numpy/lib/tests/test_regression.py:153:        assert_raises(ValueError, dp2)
numpy/lib/tests/test_regression.py:158:        assert_(np.r_[x, x].dtype == dt)
numpy/lib/tests/test_regression.py:182:            assert_(isinstance(path, str))
numpy/lib/tests/test_regression.py:183:            assert_(path != '')
numpy/lib/tests/test_regression.py:187:        assert_(isinstance(np.polyder(np.poly1d([1]), 0), np.poly1d))
numpy/lib/tests/test_regression.py:188:        assert_(isinstance(np.polyder([1], 0), np.ndarray))
numpy/lib/tests/test_regression.py:189:        assert_(isinstance(np.polyder(np.poly1d([1]), 1), np.poly1d))
numpy/lib/tests/test_regression.py:190:        assert_(isinstance(np.polyder([1], 1), np.ndarray))
numpy/lib/tests/test_regression.py:211:        assert_equal(x, np.array([((0, 1), (2, 3))], dtype=dt))
numpy/lib/tests/test_regression.py:215:        assert_equal(x, np.array([(((0, 1, 2), 3),)], dtype=dt))
numpy/lib/tests/test_regression.py:219:        assert_equal(x, np.array([(((0, 1), (2, 3)),)], dtype=dt))
numpy/lib/tests/test_regression.py:224:        assert_equal(x, np.array(data, dtype=dt))
numpy/fft/tests/test_pocketfft.py:21:        assert_raises(ValueError, np.fft.fft, [1, 2, 3], 0)
numpy/fft/tests/test_pocketfft.py:31:            assert_allclose(np.fft.ifft(np.fft.fft(x[0:i])), x[0:i],
numpy/fft/tests/test_pocketfft.py:33:            assert_allclose(np.fft.irfft(np.fft.rfft(xr[0:i]), i),
numpy/fft/tests/test_pocketfft.py:38:        assert_allclose(fft1(x), np.fft.fft(x), atol=1e-6)
numpy/fft/tests/test_pocketfft.py:39:        assert_allclose(fft1(x), np.fft.fft(x, norm="backward"), atol=1e-6)
numpy/fft/tests/test_pocketfft.py:40:        assert_allclose(fft1(x) / np.sqrt(30),
numpy/fft/tests/test_pocketfft.py:42:        assert_allclose(fft1(x) / 30.,
numpy/fft/tests/test_pocketfft.py:58:        assert_allclose(np.fft.fft(np.fft.fft(x, axis=1), axis=0),
numpy/fft/tests/test_pocketfft.py:60:        assert_allclose(np.fft.fft2(x),
numpy/fft/tests/test_pocketfft.py:62:        assert_allclose(np.fft.fft2(x) / np.sqrt(30 * 20),
numpy/fft/tests/test_pocketfft.py:64:        assert_allclose(np.fft.fft2(x) / (30. * 20.),
numpy/fft/tests/test_pocketfft.py:69:        assert_allclose(np.fft.ifft(np.fft.ifft(x, axis=1), axis=0),
numpy/fft/tests/test_pocketfft.py:71:        assert_allclose(np.fft.ifft2(x),
numpy/fft/tests/test_pocketfft.py:73:        assert_allclose(np.fft.ifft2(x) * np.sqrt(30 * 20),
numpy/fft/tests/test_pocketfft.py:75:        assert_allclose(np.fft.ifft2(x) * (30. * 20.),
numpy/fft/tests/test_pocketfft.py:83:        assert_allclose(np.fft.fftn(x),
numpy/fft/tests/test_pocketfft.py:85:        assert_allclose(np.fft.fftn(x) / np.sqrt(30 * 20 * 10),
numpy/fft/tests/test_pocketfft.py:87:        assert_allclose(np.fft.fftn(x) / (30. * 20. * 10.),
numpy/fft/tests/test_pocketfft.py:95:        assert_allclose(np.fft.ifftn(x),
numpy/fft/tests/test_pocketfft.py:97:        assert_allclose(np.fft.ifftn(x) * np.sqrt(30 * 20 * 10),
numpy/fft/tests/test_pocketfft.py:99:        assert_allclose(np.fft.ifftn(x) * (30. * 20. * 10.),
numpy/fft/tests/test_pocketfft.py:121:        assert_allclose(x, np.fft.irfft(np.fft.rfft(x)), atol=1e-6)
numpy/fft/tests/test_pocketfft.py:122:        assert_allclose(x, np.fft.irfft(np.fft.rfft(x, norm="backward"),
numpy/fft/tests/test_pocketfft.py:124:        assert_allclose(x, np.fft.irfft(np.fft.rfft(x, norm="ortho"),
numpy/fft/tests/test_pocketfft.py:126:        assert_allclose(x, np.fft.irfft(np.fft.rfft(x, norm="forward"),
numpy/fft/tests/test_pocketfft.py:131:        assert_allclose(np.fft.fft2(x)[:, :11], np.fft.rfft2(x), atol=1e-6)
numpy/fft/tests/test_pocketfft.py:132:        assert_allclose(np.fft.rfft2(x),
numpy/fft/tests/test_pocketfft.py:134:        assert_allclose(np.fft.rfft2(x) / np.sqrt(30 * 20),
numpy/fft/tests/test_pocketfft.py:136:        assert_allclose(np.fft.rfft2(x) / (30. * 20.),
numpy/fft/tests/test_pocketfft.py:141:        assert_allclose(x, np.fft.irfft2(np.fft.rfft2(x)), atol=1e-6)
numpy/fft/tests/test_pocketfft.py:142:        assert_allclose(x, np.fft.irfft2(np.fft.rfft2(x, norm="backward"),
numpy/fft/tests/test_pocketfft.py:144:        assert_allclose(x, np.fft.irfft2(np.fft.rfft2(x, norm="ortho"),
numpy/fft/tests/test_pocketfft.py:146:        assert_allclose(x, np.fft.irfft2(np.fft.rfft2(x, norm="forward"),
numpy/fft/tests/test_pocketfft.py:151:        assert_allclose(np.fft.fftn(x)[:, :, :6], np.fft.rfftn(x), atol=1e-6)
numpy/fft/tests/test_pocketfft.py:152:        assert_allclose(np.fft.rfftn(x),
numpy/fft/tests/test_pocketfft.py:154:        assert_allclose(np.fft.rfftn(x) / np.sqrt(30 * 20 * 10),
numpy/fft/tests/test_pocketfft.py:156:        assert_allclose(np.fft.rfftn(x) / (30. * 20. * 10.),
numpy/fft/tests/test_pocketfft.py:161:        assert_allclose(x, np.fft.irfftn(np.fft.rfftn(x)), atol=1e-6)
numpy/fft/tests/test_pocketfft.py:162:        assert_allclose(x, np.fft.irfftn(np.fft.rfftn(x, norm="backward"),
numpy/fft/tests/test_pocketfft.py:164:        assert_allclose(x, np.fft.irfftn(np.fft.rfftn(x, norm="ortho"),
numpy/fft/tests/test_pocketfft.py:166:        assert_allclose(x, np.fft.irfftn(np.fft.rfftn(x, norm="forward"),
numpy/fft/tests/test_pocketfft.py:173:        assert_allclose(np.fft.fft(x), np.fft.hfft(x_herm), atol=1e-6)
numpy/fft/tests/test_pocketfft.py:174:        assert_allclose(np.fft.hfft(x_herm),
numpy/fft/tests/test_pocketfft.py:176:        assert_allclose(np.fft.hfft(x_herm) / np.sqrt(30),
numpy/fft/tests/test_pocketfft.py:178:        assert_allclose(np.fft.hfft(x_herm) / 30.,
numpy/fft/tests/test_pocketfft.py:185:        assert_allclose(x_herm, np.fft.ihfft(np.fft.hfft(x_herm)), atol=1e-6)
numpy/fft/tests/test_pocketfft.py:201:            assert_allclose(op_tr, tr_op, atol=1e-6)
numpy/fft/tests/test_pocketfft.py:228:        assert_allclose(np.fft.ifft(np.fft.fft(x)), x, atol=1e-6)
numpy/fft/tests/test_pocketfft.py:229:        assert_allclose(np.fft.irfft(np.fft.rfft(x)), x, atol=1e-6)
numpy/fft/tests/test_pocketfft.py:258:            assert_allclose(X_res, Y_res, atol=_tol, rtol=_tol)
numpy/fft/tests/test_pocketfft.py:266:            assert_allclose(X_res, Y_res, atol=_tol, rtol=_tol)
numpy/fft/tests/test_pocketfft.py:290:            assert_array_equal(q.get(timeout=5), expected,
numpy/fft/tests/test_helper.py:16:        assert_array_almost_equal(fft.fftshift(x), y)
numpy/fft/tests/test_helper.py:17:        assert_array_almost_equal(fft.ifftshift(y), x)
numpy/fft/tests/test_helper.py:20:        assert_array_almost_equal(fft.fftshift(x), y)
numpy/fft/tests/test_helper.py:21:        assert_array_almost_equal(fft.ifftshift(y), x)
numpy/fft/tests/test_helper.py:26:            assert_array_almost_equal(fft.ifftshift(fft.fftshift(x)), x)
numpy/fft/tests/test_helper.py:31:        assert_array_almost_equal(fft.fftshift(freqs, axes=(0, 1)), shifted)
numpy/fft/tests/test_helper.py:32:        assert_array_almost_equal(fft.fftshift(freqs, axes=0),
numpy/fft/tests/test_helper.py:34:        assert_array_almost_equal(fft.ifftshift(shifted, axes=(0, 1)), freqs)
numpy/fft/tests/test_helper.py:35:        assert_array_almost_equal(fft.ifftshift(shifted, axes=0),
numpy/fft/tests/test_helper.py:38:        assert_array_almost_equal(fft.fftshift(freqs), shifted)
numpy/fft/tests/test_helper.py:39:        assert_array_almost_equal(fft.ifftshift(shifted), freqs)
numpy/fft/tests/test_helper.py:55:        assert_array_almost_equal(fft.fftshift(freqs, axes=0), shift_dim0)
numpy/fft/tests/test_helper.py:56:        assert_array_almost_equal(fft.ifftshift(shift_dim0, axes=0), freqs)
numpy/fft/tests/test_helper.py:57:        assert_array_almost_equal(fft.fftshift(freqs, axes=(0,)), shift_dim0)
numpy/fft/tests/test_helper.py:58:        assert_array_almost_equal(fft.ifftshift(shift_dim0, axes=[0]), freqs)
numpy/fft/tests/test_helper.py:66:        assert_array_almost_equal(fft.fftshift(freqs, axes=1), shift_dim1)
numpy/fft/tests/test_helper.py:67:        assert_array_almost_equal(fft.ifftshift(shift_dim1, axes=1), freqs)
numpy/fft/tests/test_helper.py:75:        assert_array_almost_equal(fft.fftshift(freqs, axes=(0, 1)), shift_dim_both)
numpy/fft/tests/test_helper.py:76:        assert_array_almost_equal(fft.ifftshift(shift_dim_both, axes=(0, 1)), freqs)
numpy/fft/tests/test_helper.py:77:        assert_array_almost_equal(fft.fftshift(freqs, axes=[0, 1]), shift_dim_both)
numpy/fft/tests/test_helper.py:78:        assert_array_almost_equal(fft.ifftshift(shift_dim_both, axes=[0, 1]), freqs)
numpy/fft/tests/test_helper.py:81:        assert_array_almost_equal(fft.fftshift(freqs, axes=None), shift_dim_both)
numpy/fft/tests/test_helper.py:82:        assert_array_almost_equal(fft.ifftshift(shift_dim_both, axes=None), freqs)
numpy/fft/tests/test_helper.py:83:        assert_array_almost_equal(fft.fftshift(freqs), shift_dim_both)
numpy/fft/tests/test_helper.py:84:        assert_array_almost_equal(fft.ifftshift(shift_dim_both), freqs)
numpy/fft/tests/test_helper.py:129:                    assert_array_almost_equal(fft.fftshift(inp, axes_keyword),
numpy/fft/tests/test_helper.py:132:                    assert_array_almost_equal(fft.ifftshift(inp, axes_keyword),
numpy/fft/tests/test_helper.py:140:        assert_array_almost_equal(9*fft.fftfreq(9), x)
numpy/fft/tests/test_helper.py:141:        assert_array_almost_equal(9*pi*fft.fftfreq(9, pi), x)
numpy/fft/tests/test_helper.py:143:        assert_array_almost_equal(10*fft.fftfreq(10), x)
numpy/fft/tests/test_helper.py:144:        assert_array_almost_equal(10*pi*fft.fftfreq(10, pi), x)
numpy/fft/tests/test_helper.py:151:        assert_array_almost_equal(9*fft.rfftfreq(9), x)
numpy/fft/tests/test_helper.py:152:        assert_array_almost_equal(9*pi*fft.rfftfreq(9, pi), x)
numpy/fft/tests/test_helper.py:154:        assert_array_almost_equal(10*fft.rfftfreq(10), x)
numpy/fft/tests/test_helper.py:155:        assert_array_almost_equal(10*pi*fft.rfftfreq(10, pi), x)
numpy/random/tests/test_generator_mt19937.py:46:        assert_equal(s.integers(1000), 479)
numpy/random/tests/test_generator_mt19937.py:48:        assert_equal(s.integers(1000), 324)
numpy/random/tests/test_generator_mt19937.py:52:        assert_equal(s.integers(1000), 465)
numpy/random/tests/test_generator_mt19937.py:54:        assert_equal(s.integers(1000), 465)
numpy/random/tests/test_generator_mt19937.py:56:        assert_equal(s.integers(1000), 479)
numpy/random/tests/test_generator_mt19937.py:58:        assert_equal(s.integers(1000), 324)
numpy/random/tests/test_generator_mt19937.py:62:        assert_equal(s.random_raw(1), 2058676884)
numpy/random/tests/test_generator_mt19937.py:66:        assert_raises(TypeError, MT19937, -0.5)
numpy/random/tests/test_generator_mt19937.py:67:        assert_raises(ValueError, MT19937, -1)
numpy/random/tests/test_generator_mt19937.py:71:        assert_raises(TypeError, MT19937, [-0.5])
numpy/random/tests/test_generator_mt19937.py:72:        assert_raises(ValueError, MT19937, [-1])
numpy/random/tests/test_generator_mt19937.py:73:        assert_raises(ValueError, MT19937, [1, -2, 4294967296])
numpy/random/tests/test_generator_mt19937.py:76:        assert_raises(ValueError, Generator, MT19937)
numpy/random/tests/test_generator_mt19937.py:86:            assert_(random.binomial(0, p) == 0)
numpy/random/tests/test_generator_mt19937.py:87:            assert_array_equal(random.binomial(zeros, p), zeros)
numpy/random/tests/test_generator_mt19937.py:91:        assert_raises(ValueError, random.binomial, 1, np.nan)
numpy/random/tests/test_generator_mt19937.py:102:        assert_(-5 <= random.integers(-5, -1) < -1)
numpy/random/tests/test_generator_mt19937.py:104:        assert_(np.all(-5 <= x))
numpy/random/tests/test_generator_mt19937.py:105:        assert_(np.all(x < -1))
numpy/random/tests/test_generator_mt19937.py:110:        assert_equal(random.multinomial(1, p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_generator_mt19937.py:111:        assert_equal(random.multinomial(1, p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_generator_mt19937.py:112:        assert_equal(random.multinomial(1, p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_generator_mt19937.py:113:        assert_equal(random.multinomial(1, p, [2, 2]).shape, (2, 2, 2))
numpy/random/tests/test_generator_mt19937.py:114:        assert_equal(random.multinomial(1, p, (2, 2)).shape, (2, 2, 2))
numpy/random/tests/test_generator_mt19937.py:115:        assert_equal(random.multinomial(1, p, np.array((2, 2))).shape,
numpy/random/tests/test_generator_mt19937.py:122:        assert_raises(ValueError, random.multinomial, 100, [1.1, 0.2])
numpy/random/tests/test_generator_mt19937.py:123:        assert_raises(ValueError, random.multinomial, 100, [-.1, 0.9])
numpy/random/tests/test_generator_mt19937.py:126:        assert_raises(ValueError, random.multinomial, -1, [0.8, 0.2])
numpy/random/tests/test_generator_mt19937.py:127:        assert_raises(ValueError, random.multinomial, [-1] * 10, [0.8, 0.2])
numpy/random/tests/test_generator_mt19937.py:137:        assert_array_equal(non_contig, contig)
numpy/random/tests/test_generator_mt19937.py:193:        assert_array_equal(x, [0, 0, 0])
numpy/random/tests/test_generator_mt19937.py:196:        assert_array_equal(x, [])
numpy/random/tests/test_generator_mt19937.py:199:        assert_array_equal(x, np.empty((1, 0), dtype=np.int64))
numpy/random/tests/test_generator_mt19937.py:202:        assert_array_equal(x, [0, 0, 0])
numpy/random/tests/test_generator_mt19937.py:205:        assert_array_equal(x, [3, 0, 0])
numpy/random/tests/test_generator_mt19937.py:210:        assert_array_equal(x, colors)
numpy/random/tests/test_generator_mt19937.py:214:        assert_array_equal(x, [[3, 4, 5]]*3)
numpy/random/tests/test_generator_mt19937.py:234:        assert_equal(sample.shape, expected_shape)
numpy/random/tests/test_generator_mt19937.py:235:        assert_((sample >= 0).all())
numpy/random/tests/test_generator_mt19937.py:236:        assert_((sample <= colors).all())
numpy/random/tests/test_generator_mt19937.py:237:        assert_array_equal(sample.sum(axis=-1),
numpy/random/tests/test_generator_mt19937.py:242:            assert_allclose(sample.mean(axis=0),
numpy/random/tests/test_generator_mt19937.py:255:        assert_array_equal(sample, expected)
numpy/random/tests/test_generator_mt19937.py:267:        assert_array_equal(sample, expected)
numpy/random/tests/test_generator_mt19937.py:279:        assert_array_equal(sample, expected)
numpy/random/tests/test_generator_mt19937.py:297:        assert_(np.all(old == new))
numpy/random/tests/test_generator_mt19937.py:308:        assert_(np.all(old == new))
numpy/random/tests/test_generator_mt19937.py:324:        assert_raises(TypeError, self.rfunc, 1, endpoint=endpoint, dtype=float)
numpy/random/tests/test_generator_mt19937.py:458:                assert_(vals.max() < ubnd)
numpy/random/tests/test_generator_mt19937.py:459:                assert_(vals.min() >= 2)
numpy/random/tests/test_generator_mt19937.py:463:        assert_(vals.max() < 2)
numpy/random/tests/test_generator_mt19937.py:464:        assert_(vals.min() >= 0)
numpy/random/tests/test_generator_mt19937.py:484:            assert_array_equal(scalar, scalar_array)
numpy/random/tests/test_generator_mt19937.py:485:            assert_array_equal(scalar, array)
numpy/random/tests/test_generator_mt19937.py:513:            assert_(tgt[np.dtype(dt).name] == res)
numpy/random/tests/test_generator_mt19937.py:520:        assert_(tgt[np.dtype(bool).name] == res)
numpy/random/tests/test_generator_mt19937.py:537:            assert_array_equal(val, val_bc)
numpy/random/tests/test_generator_mt19937.py:543:            assert_array_equal(val, val_bc)
numpy/random/tests/test_generator_mt19937.py:558:            assert_equal(x, expected if size is not None else expected[0])
numpy/random/tests/test_generator_mt19937.py:581:            assert_array_equal(x, desired if size is not None else desired[0])
numpy/random/tests/test_generator_mt19937.py:632:        assert_equal(actual, tgt)
numpy/random/tests/test_generator_mt19937.py:643:            assert_equal(sample.dtype, dt)
numpy/random/tests/test_generator_mt19937.py:652:            assert not hasattr(sample, 'dtype')
numpy/random/tests/test_generator_mt19937.py:653:            assert_equal(type(sample), dt)
numpy/random/tests/test_generator_mt19937.py:664:            assert_equal(sample.dtype, dt)
numpy/random/tests/test_generator_mt19937.py:667:            assert_equal(sample.dtype, dt)
numpy/random/tests/test_generator_mt19937.py:673:            assert sample.shape == (3, 0, 4)
numpy/random/tests/test_generator_mt19937.py:674:            assert sample.dtype == dt
numpy/random/tests/test_generator_mt19937.py:675:            assert self.rfunc(0, -10, 0, endpoint=endpoint,
numpy/random/tests/test_generator_mt19937.py:677:            assert_equal(random.integers(0, 0, size=(3, 0, 4)).shape,
numpy/random/tests/test_generator_mt19937.py:679:            assert_equal(random.integers(0, -10, size=0).shape, (0,))
numpy/random/tests/test_generator_mt19937.py:680:            assert_equal(random.integers(10, 10, size=0).shape, (0,))
numpy/random/tests/test_generator_mt19937.py:717:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:725:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:731:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:743:        assert_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:751:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:755:        assert_array_almost_equal(actual, desired[0, 0], decimal=15)
numpy/random/tests/test_generator_mt19937.py:763:        assert_array_almost_equal(actual, desired, decimal=7)
numpy/random/tests/test_generator_mt19937.py:769:        assert_array_almost_equal(actual, desired, decimal=7)
numpy/random/tests/test_generator_mt19937.py:784:        assert_raises(TypeError, random.random, dtype='int32')
numpy/random/tests/test_generator_mt19937.py:790:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:796:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:802:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:805:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:811:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:817:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:823:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:829:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:833:        assert_raises(ValueError, sample, -1, 3)
numpy/random/tests/test_generator_mt19937.py:834:        assert_raises(ValueError, sample, 3., 3)
numpy/random/tests/test_generator_mt19937.py:835:        assert_raises(ValueError, sample, [], 3)
numpy/random/tests/test_generator_mt19937.py:838:        assert_raises(ValueError, sample, [1, 2], 3, p=[0.4, 0.4, 0.2])
numpy/random/tests/test_generator_mt19937.py:839:        assert_raises(ValueError, sample, [1, 2], 3, p=[1.1, -0.1])
numpy/random/tests/test_generator_mt19937.py:840:        assert_raises(ValueError, sample, [1, 2], 3, p=[0.4, 0.4])
numpy/random/tests/test_generator_mt19937.py:841:        assert_raises(ValueError, sample, [1, 2, 3], 4, replace=False)
numpy/random/tests/test_generator_mt19937.py:843:        assert_raises(ValueError, sample, [1, 2, 3], -2, replace=False)
numpy/random/tests/test_generator_mt19937.py:844:        assert_raises(ValueError, sample, [1, 2, 3], (-1,), replace=False)
numpy/random/tests/test_generator_mt19937.py:845:        assert_raises(ValueError, sample, [1, 2, 3], (-1, 1), replace=False)
numpy/random/tests/test_generator_mt19937.py:852:        assert_(np.isscalar(random.choice(2, replace=True)))
numpy/random/tests/test_generator_mt19937.py:853:        assert_(np.isscalar(random.choice(2, replace=False)))
numpy/random/tests/test_generator_mt19937.py:854:        assert_(np.isscalar(random.choice(2, replace=True, p=p)))
numpy/random/tests/test_generator_mt19937.py:855:        assert_(np.isscalar(random.choice(2, replace=False, p=p)))
numpy/random/tests/test_generator_mt19937.py:856:        assert_(np.isscalar(random.choice([1, 2], replace=True)))
numpy/random/tests/test_generator_mt19937.py:857:        assert_(random.choice([None], replace=True) is None)
numpy/random/tests/test_generator_mt19937.py:861:        assert_(random.choice(arr, replace=True) is a)
numpy/random/tests/test_generator_mt19937.py:865:        assert_(not np.isscalar(random.choice(2, s, replace=True)))
numpy/random/tests/test_generator_mt19937.py:866:        assert_(not np.isscalar(random.choice(2, s, replace=False)))
numpy/random/tests/test_generator_mt19937.py:867:        assert_(not np.isscalar(random.choice(2, s, replace=True, p=p)))
numpy/random/tests/test_generator_mt19937.py:868:        assert_(not np.isscalar(random.choice(2, s, replace=False, p=p)))
numpy/random/tests/test_generator_mt19937.py:869:        assert_(not np.isscalar(random.choice([1, 2], s, replace=True)))
numpy/random/tests/test_generator_mt19937.py:870:        assert_(random.choice([None], s, replace=True).ndim == 0)
numpy/random/tests/test_generator_mt19937.py:874:        assert_(random.choice(arr, s, replace=True).item() is a)
numpy/random/tests/test_generator_mt19937.py:879:        assert_equal(random.choice(6, s, replace=True).shape, s)
numpy/random/tests/test_generator_mt19937.py:880:        assert_equal(random.choice(6, s, replace=False).shape, s)
numpy/random/tests/test_generator_mt19937.py:881:        assert_equal(random.choice(6, s, replace=True, p=p).shape, s)
numpy/random/tests/test_generator_mt19937.py:882:        assert_equal(random.choice(6, s, replace=False, p=p).shape, s)
numpy/random/tests/test_generator_mt19937.py:883:        assert_equal(random.choice(np.arange(6), s, replace=True).shape, s)
numpy/random/tests/test_generator_mt19937.py:886:        assert_equal(random.integers(0, 0, size=(3, 0, 4)).shape, (3, 0, 4))
numpy/random/tests/test_generator_mt19937.py:887:        assert_equal(random.integers(0, -10, size=0).shape, (0,))
numpy/random/tests/test_generator_mt19937.py:888:        assert_equal(random.integers(10, 10, size=0).shape, (0,))
numpy/random/tests/test_generator_mt19937.py:889:        assert_equal(random.choice(0, size=0).shape, (0,))
numpy/random/tests/test_generator_mt19937.py:890:        assert_equal(random.choice([], size=(0,)).shape, (0,))
numpy/random/tests/test_generator_mt19937.py:891:        assert_equal(random.choice(['a', 'b'], size=(3, 0, 4)).shape,
numpy/random/tests/test_generator_mt19937.py:893:        assert_raises(ValueError, random.choice, [], 10)
numpy/random/tests/test_generator_mt19937.py:898:        assert_raises(ValueError, random.choice, a, p=p)
numpy/random/tests/test_generator_mt19937.py:907:        assert_array_equal(non_contig, contig)
numpy/random/tests/test_generator_mt19937.py:913:        assert actual.dtype == np.int64
numpy/random/tests/test_generator_mt19937.py:915:        assert actual.dtype == np.int64
numpy/random/tests/test_generator_mt19937.py:917:        assert actual.dtype == np.int64
numpy/random/tests/test_generator_mt19937.py:919:        assert actual.dtype == np.int64
numpy/random/tests/test_generator_mt19937.py:928:        assert_(choice_hash == res)
numpy/random/tests/test_generator_mt19937.py:934:        assert_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:961:            assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:971:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:975:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:983:            assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:992:        assert_array_equal(y1, y2)
numpy/random/tests/test_generator_mt19937.py:1011:        assert_raises(np.AxisError, random.shuffle, arr, 1)
numpy/random/tests/test_generator_mt19937.py:1013:        assert_raises(np.AxisError, random.shuffle, arr, 3)
numpy/random/tests/test_generator_mt19937.py:1014:        assert_raises(TypeError, random.shuffle, arr, slice(1, 2, None))
numpy/random/tests/test_generator_mt19937.py:1016:        assert_raises(NotImplementedError, random.shuffle, arr, 1)
numpy/random/tests/test_generator_mt19937.py:1019:        assert_raises(TypeError, random.shuffle, arr)
numpy/random/tests/test_generator_mt19937.py:1021:        assert_raises(np.AxisError, random.shuffle, arr, 2)
numpy/random/tests/test_generator_mt19937.py:1035:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1040:        assert_array_equal(actual, np.atleast_2d(desired).T)
numpy/random/tests/test_generator_mt19937.py:1043:        assert_raises(np.AxisError, random.permutation, bad_x_str)
numpy/random/tests/test_generator_mt19937.py:1046:        assert_raises(np.AxisError, random.permutation, bad_x_float)
numpy/random/tests/test_generator_mt19937.py:1053:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1063:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1066:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1071:        assert_raises(np.AxisError, random.permutation, arr, 1)
numpy/random/tests/test_generator_mt19937.py:1073:        assert_raises(np.AxisError, random.permutation, arr, 3)
numpy/random/tests/test_generator_mt19937.py:1074:        assert_raises(TypeError, random.permutation, arr, slice(1, 2, None))
numpy/random/tests/test_generator_mt19937.py:1088:        assert_array_equal(x, expected)
numpy/random/tests/test_generator_mt19937.py:1093:        assert y.dtype == dtype
numpy/random/tests/test_generator_mt19937.py:1094:        assert_array_equal(y, expected)
numpy/random/tests/test_generator_mt19937.py:1104:        assert_array_equal(y, expected)
numpy/random/tests/test_generator_mt19937.py:1107:        assert_array_equal(x1, x0)
numpy/random/tests/test_generator_mt19937.py:1111:        assert_array_equal(y, [])
numpy/random/tests/test_generator_mt19937.py:1139:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1147:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1152:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1160:        assert_array_almost_equal(actual, desired, decimal=13)
numpy/random/tests/test_generator_mt19937.py:1172:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1174:        assert_raises(ValueError, random.dirichlet, bad_alpha)
numpy/random/tests/test_generator_mt19937.py:1179:        assert_array_almost_equal(actual, desired[0, 0], decimal=15)
numpy/random/tests/test_generator_mt19937.py:1184:        assert_equal(random.dirichlet(p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_generator_mt19937.py:1185:        assert_equal(random.dirichlet(p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_generator_mt19937.py:1186:        assert_equal(random.dirichlet(p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_generator_mt19937.py:1187:        assert_equal(random.dirichlet(p, [2, 2]).shape, (2, 2, 2))
numpy/random/tests/test_generator_mt19937.py:1188:        assert_equal(random.dirichlet(p, (2, 2)).shape, (2, 2, 2))
numpy/random/tests/test_generator_mt19937.py:1189:        assert_equal(random.dirichlet(p, np.array((2, 2))).shape, (2, 2, 2))
numpy/random/tests/test_generator_mt19937.py:1191:        assert_raises(TypeError, random.dirichlet, p, float(1))
numpy/random/tests/test_generator_mt19937.py:1196:        assert_raises(ValueError, random.dirichlet, alpha)
numpy/random/tests/test_generator_mt19937.py:1199:        assert_raises(ValueError, random.dirichlet, [[5, 1]])
numpy/random/tests/test_generator_mt19937.py:1200:        assert_raises(ValueError, random.dirichlet, [[5], [1]])
numpy/random/tests/test_generator_mt19937.py:1201:        assert_raises(ValueError, random.dirichlet, [[[5], [1]], [[1], [5]]])
numpy/random/tests/test_generator_mt19937.py:1202:        assert_raises(ValueError, random.dirichlet, np.array([[5, 1], [1, 5]]))
numpy/random/tests/test_generator_mt19937.py:1212:        assert_array_almost_equal(non_contig, contig)
numpy/random/tests/test_generator_mt19937.py:1227:        assert_array_almost_equal(actual, expected, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1237:        assert_allclose(sample_mean, exact_mean, rtol=1e-3)
numpy/random/tests/test_generator_mt19937.py:1245:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1248:        assert_equal(random.exponential(scale=0), 0)
numpy/random/tests/test_generator_mt19937.py:1249:        assert_raises(ValueError, random.exponential, scale=-0.)
numpy/random/tests/test_generator_mt19937.py:1257:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1265:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1268:        assert_equal(random.gamma(shape=0, scale=0), 0)
numpy/random/tests/test_generator_mt19937.py:1269:        assert_raises(ValueError, random.gamma, shape=-0., scale=-0.)
numpy/random/tests/test_generator_mt19937.py:1277:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1280:        assert_raises(ValueError, random.geometric, 1.1)
numpy/random/tests/test_generator_mt19937.py:1281:        assert_raises(ValueError, random.geometric, [1.1] * 10)
numpy/random/tests/test_generator_mt19937.py:1282:        assert_raises(ValueError, random.geometric, -0.1)
numpy/random/tests/test_generator_mt19937.py:1283:        assert_raises(ValueError, random.geometric, [-0.1] * 10)
numpy/random/tests/test_generator_mt19937.py:1285:            assert_raises(ValueError, random.geometric, np.nan)
numpy/random/tests/test_generator_mt19937.py:1286:            assert_raises(ValueError, random.geometric, [np.nan] * 10)
numpy/random/tests/test_generator_mt19937.py:1294:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1297:        assert_equal(random.gumbel(scale=0), 0)
numpy/random/tests/test_generator_mt19937.py:1298:        assert_raises(ValueError, random.gumbel, scale=-0.)
numpy/random/tests/test_generator_mt19937.py:1306:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1311:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1315:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1320:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1324:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1332:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1335:        assert_equal(random.laplace(scale=0), 0)
numpy/random/tests/test_generator_mt19937.py:1336:        assert_raises(ValueError, random.laplace, scale=-0.)
numpy/random/tests/test_generator_mt19937.py:1344:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1352:        assert_array_almost_equal(actual, desired, decimal=13)
numpy/random/tests/test_generator_mt19937.py:1355:        assert_equal(random.lognormal(sigma=0), 1)
numpy/random/tests/test_generator_mt19937.py:1356:        assert_raises(ValueError, random.lognormal, sigma=-0.)
numpy/random/tests/test_generator_mt19937.py:1364:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1368:            assert_raises(ValueError, random.logseries, np.nan)
numpy/random/tests/test_generator_mt19937.py:1369:            assert_raises(ValueError, random.logseries, [np.nan] * 10)
numpy/random/tests/test_generator_mt19937.py:1380:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1396:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1401:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1412:        assert_warns(RuntimeWarning, random.multivariate_normal, mean, cov)
numpy/random/tests/test_generator_mt19937.py:1419:        assert_no_warnings(random.multivariate_normal, mean, cov,
numpy/random/tests/test_generator_mt19937.py:1433:            assert_array_almost_equal(samples[..., 0], samples[..., 1],
numpy/random/tests/test_generator_mt19937.py:1443:            assert len(w) == 0
numpy/random/tests/test_generator_mt19937.py:1466:        assert np.all(np.abs(s_center.mean(-2)) < 0.1)
numpy/random/tests/test_generator_mt19937.py:1467:        assert np.all(np.abs(cov_emp - cov) < 0.2)
numpy/random/tests/test_generator_mt19937.py:1475:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1479:            assert_raises(ValueError, random.negative_binomial, 100, np.nan)
numpy/random/tests/test_generator_mt19937.py:1492:            assert_raises(ValueError, random.negative_binomial, 2**62, 0.1)
numpy/random/tests/test_generator_mt19937.py:1493:            assert_raises(ValueError, random.negative_binomial, [2**62], [0.1])
numpy/random/tests/test_generator_mt19937.py:1501:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1507:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1514:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1523:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1528:        assert np.isnan(actual)
numpy/random/tests/test_generator_mt19937.py:1536:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1539:        assert_equal(random.normal(scale=0), 0)
numpy/random/tests/test_generator_mt19937.py:1540:        assert_raises(ValueError, random.normal, scale=-0.)
numpy/random/tests/test_generator_mt19937.py:1562:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1567:        assert_raises(ValueError, random.poisson, lamneg)
numpy/random/tests/test_generator_mt19937.py:1568:        assert_raises(ValueError, random.poisson, [lamneg] * 10)
numpy/random/tests/test_generator_mt19937.py:1569:        assert_raises(ValueError, random.poisson, lambig)
numpy/random/tests/test_generator_mt19937.py:1570:        assert_raises(ValueError, random.poisson, [lambig] * 10)
numpy/random/tests/test_generator_mt19937.py:1572:            assert_raises(ValueError, random.poisson, np.nan)
numpy/random/tests/test_generator_mt19937.py:1573:            assert_raises(ValueError, random.poisson, [np.nan] * 10)
numpy/random/tests/test_generator_mt19937.py:1581:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1589:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1592:        assert_equal(random.rayleigh(scale=0), 0)
numpy/random/tests/test_generator_mt19937.py:1593:        assert_raises(ValueError, random.rayleigh, scale=-0.)
numpy/random/tests/test_generator_mt19937.py:1601:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1609:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1612:        assert_raises(TypeError, random.standard_exponential, dtype=np.int32)
numpy/random/tests/test_generator_mt19937.py:1620:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1626:        assert_array_almost_equal(actual, desired, decimal=6)
numpy/random/tests/test_generator_mt19937.py:1634:        assert_array_almost_equal(actual, desired, decimal=5)
numpy/random/tests/test_generator_mt19937.py:1643:        assert_array_almost_equal(actual, desired, decimal=5)
numpy/random/tests/test_generator_mt19937.py:1647:        assert_array_almost_equal(actual, desired, decimal=5)
numpy/random/tests/test_generator_mt19937.py:1657:        assert_raises(ValueError, random.standard_gamma, 10.0, size=(10, 1),
numpy/random/tests/test_generator_mt19937.py:1661:        assert_equal(random.standard_gamma(shape=0), 0)
numpy/random/tests/test_generator_mt19937.py:1662:        assert_raises(ValueError, random.standard_gamma, shape=-0.)
numpy/random/tests/test_generator_mt19937.py:1670:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1673:        assert_raises(TypeError, random.standard_normal, dtype=np.int32)
numpy/random/tests/test_generator_mt19937.py:1681:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1690:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1698:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1705:        assert_raises(OverflowError, func, -np.inf, 0)
numpy/random/tests/test_generator_mt19937.py:1706:        assert_raises(OverflowError, func, 0, np.inf)
numpy/random/tests/test_generator_mt19937.py:1707:        assert_raises(OverflowError, func, fmin, fmax)
numpy/random/tests/test_generator_mt19937.py:1708:        assert_raises(OverflowError, func, [-np.inf], [0])
numpy/random/tests/test_generator_mt19937.py:1709:        assert_raises(OverflowError, func, [0], [np.inf])
numpy/random/tests/test_generator_mt19937.py:1719:        assert_allclose(result, 1.5)
numpy/random/tests/test_generator_mt19937.py:1721:        assert_allclose(result, [0.0, np.pi])
numpy/random/tests/test_generator_mt19937.py:1723:        assert_allclose(result, 2145.12 + np.zeros((2, 2)))
numpy/random/tests/test_generator_mt19937.py:1727:        assert_raises(ValueError, func, 2, 1)
numpy/random/tests/test_generator_mt19937.py:1728:        assert_raises(ValueError, func,  [1, 2], [1, 1])
numpy/random/tests/test_generator_mt19937.py:1729:        assert_raises(ValueError, func,  [[0, 1],[2, 3]], 2)
numpy/random/tests/test_generator_mt19937.py:1751:        assert_raises(TypeError, random.hypergeometric, throwing_int, 1, 1)
numpy/random/tests/test_generator_mt19937.py:1759:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1765:        assert_(np.isfinite(r).all())
numpy/random/tests/test_generator_mt19937.py:1770:        assert_(np.isnan(r))
numpy/random/tests/test_generator_mt19937.py:1782:            assert_allclose(random_state_vals, gen_vals)
numpy/random/tests/test_generator_mt19937.py:1784:            assert np.all(random_state_vals != gen_vals)
numpy/random/tests/test_generator_mt19937.py:1791:        assert_(np.all(r > -np.pi) and np.all(r <= np.pi))
numpy/random/tests/test_generator_mt19937.py:1799:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1807:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_generator_mt19937.py:1811:        assert_equal(random.weibull(a=0, size=12), np.zeros(12))
numpy/random/tests/test_generator_mt19937.py:1812:        assert_raises(ValueError, random.weibull, a=-0.)
numpy/random/tests/test_generator_mt19937.py:1820:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:1839:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1843:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1854:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1855:        assert_raises(ValueError, random.normal, loc * 3, bad_scale)
numpy/random/tests/test_generator_mt19937.py:1860:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1861:        assert_raises(ValueError, normal, loc, bad_scale * 3)
numpy/random/tests/test_generator_mt19937.py:1873:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1874:        assert_raises(ValueError, beta, bad_a * 3, b)
numpy/random/tests/test_generator_mt19937.py:1875:        assert_raises(ValueError, beta, a * 3, bad_b)
numpy/random/tests/test_generator_mt19937.py:1879:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1888:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1889:        assert_raises(ValueError, random.exponential, bad_scale * 3)
numpy/random/tests/test_generator_mt19937.py:1899:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1900:        assert_raises(ValueError, std_gamma, bad_shape * 3)
numpy/random/tests/test_generator_mt19937.py:1912:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1913:        assert_raises(ValueError, gamma, bad_shape * 3, scale)
numpy/random/tests/test_generator_mt19937.py:1914:        assert_raises(ValueError, gamma, shape * 3, bad_scale)
numpy/random/tests/test_generator_mt19937.py:1919:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1920:        assert_raises(ValueError, gamma, bad_shape, scale * 3)
numpy/random/tests/test_generator_mt19937.py:1921:        assert_raises(ValueError, gamma, shape, bad_scale * 3)
numpy/random/tests/test_generator_mt19937.py:1933:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1934:        assert_raises(ValueError, f, bad_dfnum * 3, dfden)
numpy/random/tests/test_generator_mt19937.py:1935:        assert_raises(ValueError, f, dfnum * 3, bad_dfden)
numpy/random/tests/test_generator_mt19937.py:1940:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1941:        assert_raises(ValueError, f, bad_dfnum, dfden * 3)
numpy/random/tests/test_generator_mt19937.py:1942:        assert_raises(ValueError, f, dfnum, bad_dfden * 3)
numpy/random/tests/test_generator_mt19937.py:1956:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1957:        assert np.all(np.isnan(nonc_f(dfnum, dfden, [np.nan] * 3)))
numpy/random/tests/test_generator_mt19937.py:1959:        assert_raises(ValueError, nonc_f, bad_dfnum * 3, dfden, nonc)
numpy/random/tests/test_generator_mt19937.py:1960:        assert_raises(ValueError, nonc_f, dfnum * 3, bad_dfden, nonc)
numpy/random/tests/test_generator_mt19937.py:1961:        assert_raises(ValueError, nonc_f, dfnum * 3, dfden, bad_nonc)
numpy/random/tests/test_generator_mt19937.py:1966:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1967:        assert_raises(ValueError, nonc_f, bad_dfnum, dfden * 3, nonc)
numpy/random/tests/test_generator_mt19937.py:1968:        assert_raises(ValueError, nonc_f, dfnum, bad_dfden * 3, nonc)
numpy/random/tests/test_generator_mt19937.py:1969:        assert_raises(ValueError, nonc_f, dfnum, dfden * 3, bad_nonc)
numpy/random/tests/test_generator_mt19937.py:1974:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1975:        assert_raises(ValueError, nonc_f, bad_dfnum, dfden, nonc * 3)
numpy/random/tests/test_generator_mt19937.py:1976:        assert_raises(ValueError, nonc_f, dfnum, bad_dfden, nonc * 3)
numpy/random/tests/test_generator_mt19937.py:1977:        assert_raises(ValueError, nonc_f, dfnum, dfden, bad_nonc * 3)
numpy/random/tests/test_generator_mt19937.py:1983:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1992:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:1993:        assert_raises(ValueError, random.chisquare, bad_df * 3)
numpy/random/tests/test_generator_mt19937.py:2005:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2006:        assert_raises(ValueError, nonc_chi, bad_df * 3, nonc)
numpy/random/tests/test_generator_mt19937.py:2007:        assert_raises(ValueError, nonc_chi, df * 3, bad_nonc)
numpy/random/tests/test_generator_mt19937.py:2012:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2013:        assert_raises(ValueError, nonc_chi, bad_df, nonc * 3)
numpy/random/tests/test_generator_mt19937.py:2014:        assert_raises(ValueError, nonc_chi, df, bad_nonc * 3)
numpy/random/tests/test_generator_mt19937.py:2023:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2024:        assert_raises(ValueError, random.standard_t, bad_df * 3)
numpy/random/tests/test_generator_mt19937.py:2034:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2035:        assert_raises(ValueError, random.vonmises, mu * 3, bad_kappa)
numpy/random/tests/test_generator_mt19937.py:2039:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2040:        assert_raises(ValueError, random.vonmises, mu, bad_kappa * 3)
numpy/random/tests/test_generator_mt19937.py:2049:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2050:        assert_raises(ValueError, random.pareto, bad_a * 3)
numpy/random/tests/test_generator_mt19937.py:2059:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2060:        assert_raises(ValueError, random.weibull, bad_a * 3)
numpy/random/tests/test_generator_mt19937.py:2069:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2070:        assert_raises(ValueError, random.power, bad_a * 3)
numpy/random/tests/test_generator_mt19937.py:2081:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2082:        assert_raises(ValueError, laplace, loc * 3, bad_scale)
numpy/random/tests/test_generator_mt19937.py:2087:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2088:        assert_raises(ValueError, laplace, loc, bad_scale * 3)
numpy/random/tests/test_generator_mt19937.py:2099:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2100:        assert_raises(ValueError, gumbel, loc * 3, bad_scale)
numpy/random/tests/test_generator_mt19937.py:2105:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2106:        assert_raises(ValueError, gumbel, loc, bad_scale * 3)
numpy/random/tests/test_generator_mt19937.py:2116:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2117:        assert_raises(ValueError, random.logistic, loc * 3, bad_scale)
numpy/random/tests/test_generator_mt19937.py:2121:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2122:        assert_raises(ValueError, random.logistic, loc, bad_scale * 3)
numpy/random/tests/test_generator_mt19937.py:2123:        assert_equal(random.logistic(1.0, 0.0), 1.0)
numpy/random/tests/test_generator_mt19937.py:2134:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2135:        assert_raises(ValueError, lognormal, mean * 3, bad_sigma)
numpy/random/tests/test_generator_mt19937.py:2139:        assert_raises(ValueError, random.lognormal, mean, bad_sigma * 3)
numpy/random/tests/test_generator_mt19937.py:2152:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2153:        assert_raises(ValueError, random.rayleigh, bad_scale * 3)
numpy/random/tests/test_generator_mt19937.py:2164:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2165:        assert_raises(ValueError, random.wald, bad_mean * 3, scale)
numpy/random/tests/test_generator_mt19937.py:2166:        assert_raises(ValueError, random.wald, mean * 3, bad_scale)
numpy/random/tests/test_generator_mt19937.py:2170:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2171:        assert_raises(ValueError, random.wald, bad_mean, scale * 3)
numpy/random/tests/test_generator_mt19937.py:2172:        assert_raises(ValueError, random.wald, mean, bad_scale * 3)
numpy/random/tests/test_generator_mt19937.py:2186:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2187:        assert_raises(ValueError, triangular, bad_left_one * 3, mode, right)
numpy/random/tests/test_generator_mt19937.py:2188:        assert_raises(ValueError, triangular, left * 3, bad_mode_one, right)
numpy/random/tests/test_generator_mt19937.py:2195:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2196:        assert_raises(ValueError, triangular, bad_left_one, mode * 3, right)
numpy/random/tests/test_generator_mt19937.py:2197:        assert_raises(ValueError, triangular, left, bad_mode_one * 3, right)
numpy/random/tests/test_generator_mt19937.py:2204:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_generator_mt19937.py:2205:        assert_raises(ValueError, triangular, bad_left_one, mode, right * 3)
numpy/random/tests/test_generator_mt19937.py:2206:        assert_raises(ValueError, triangular, left, bad_mode_one, right * 3)
numpy/random/tests/test_generator_mt19937.py:2210:        assert_raises(ValueError, triangular, 10., 0., 20.)
numpy/random/tests/test_generator_mt19937.py:2211:        assert_raises(ValueError, triangular, 10., 25., 20.)
numpy/random/tests/test_generator_mt19937.py:2212:        assert_raises(ValueError, triangular, 10., 10., 10.)
numpy/random/tests/test_generator_mt19937.py:2225:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2226:        assert_raises(ValueError, binom, bad_n * 3, p)
numpy/random/tests/test_generator_mt19937.py:2227:        assert_raises(ValueError, binom, n * 3, bad_p_one)
numpy/random/tests/test_generator_mt19937.py:2228:        assert_raises(ValueError, binom, n * 3, bad_p_two)
numpy/random/tests/test_generator_mt19937.py:2232:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2233:        assert_raises(ValueError, binom, bad_n, p * 3)
numpy/random/tests/test_generator_mt19937.py:2234:        assert_raises(ValueError, binom, n, bad_p_one * 3)
numpy/random/tests/test_generator_mt19937.py:2235:        assert_raises(ValueError, binom, n, bad_p_two * 3)
numpy/random/tests/test_generator_mt19937.py:2248:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2249:        assert_raises(ValueError, neg_binom, bad_n * 3, p)
numpy/random/tests/test_generator_mt19937.py:2250:        assert_raises(ValueError, neg_binom, n * 3, bad_p_one)
numpy/random/tests/test_generator_mt19937.py:2251:        assert_raises(ValueError, neg_binom, n * 3, bad_p_two)
numpy/random/tests/test_generator_mt19937.py:2256:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2257:        assert_raises(ValueError, neg_binom, bad_n, p * 3)
numpy/random/tests/test_generator_mt19937.py:2258:        assert_raises(ValueError, neg_binom, n, bad_p_one * 3)
numpy/random/tests/test_generator_mt19937.py:2259:        assert_raises(ValueError, neg_binom, n, bad_p_two * 3)
numpy/random/tests/test_generator_mt19937.py:2272:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2273:        assert_raises(ValueError, poisson, bad_lam_one * 3)
numpy/random/tests/test_generator_mt19937.py:2274:        assert_raises(ValueError, poisson, bad_lam_two * 3)
numpy/random/tests/test_generator_mt19937.py:2284:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2285:        assert_raises(ValueError, zipf, bad_a * 3)
numpy/random/tests/test_generator_mt19937.py:2287:            assert_raises(ValueError, zipf, np.nan)
numpy/random/tests/test_generator_mt19937.py:2288:            assert_raises(ValueError, zipf, [0, 0, np.nan])
numpy/random/tests/test_generator_mt19937.py:2299:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2300:        assert_raises(ValueError, geometric, bad_p_one * 3)
numpy/random/tests/test_generator_mt19937.py:2301:        assert_raises(ValueError, geometric, bad_p_two * 3)
numpy/random/tests/test_generator_mt19937.py:2315:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2316:        assert_raises(ValueError, random.hypergeometric, bad_ngood * 3, nbad, nsample)
numpy/random/tests/test_generator_mt19937.py:2317:        assert_raises(ValueError, random.hypergeometric, ngood * 3, bad_nbad, nsample)
numpy/random/tests/test_generator_mt19937.py:2318:        assert_raises(ValueError, random.hypergeometric, ngood * 3, nbad, bad_nsample_one)
numpy/random/tests/test_generator_mt19937.py:2319:        assert_raises(ValueError, random.hypergeometric, ngood * 3, nbad, bad_nsample_two)
numpy/random/tests/test_generator_mt19937.py:2323:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2324:        assert_raises(ValueError, random.hypergeometric, bad_ngood, nbad * 3, nsample)
numpy/random/tests/test_generator_mt19937.py:2325:        assert_raises(ValueError, random.hypergeometric, ngood, bad_nbad * 3, nsample)
numpy/random/tests/test_generator_mt19937.py:2326:        assert_raises(ValueError, random.hypergeometric, ngood, nbad * 3, bad_nsample_one)
numpy/random/tests/test_generator_mt19937.py:2327:        assert_raises(ValueError, random.hypergeometric, ngood, nbad * 3, bad_nsample_two)
numpy/random/tests/test_generator_mt19937.py:2332:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2333:        assert_raises(ValueError, hypergeom, bad_ngood, nbad, nsample * 3)
numpy/random/tests/test_generator_mt19937.py:2334:        assert_raises(ValueError, hypergeom, ngood, bad_nbad, nsample * 3)
numpy/random/tests/test_generator_mt19937.py:2335:        assert_raises(ValueError, hypergeom, ngood, nbad, bad_nsample_one * 3)
numpy/random/tests/test_generator_mt19937.py:2336:        assert_raises(ValueError, hypergeom, ngood, nbad, bad_nsample_two * 3)
numpy/random/tests/test_generator_mt19937.py:2338:        assert_raises(ValueError, hypergeom, -1, 10, 20)
numpy/random/tests/test_generator_mt19937.py:2339:        assert_raises(ValueError, hypergeom, 10, -1, 20)
numpy/random/tests/test_generator_mt19937.py:2340:        assert_raises(ValueError, hypergeom, 10, 10, -1)
numpy/random/tests/test_generator_mt19937.py:2341:        assert_raises(ValueError, hypergeom, 10, 10, 25)
numpy/random/tests/test_generator_mt19937.py:2344:        assert_raises(ValueError, hypergeom, 2**30, 10, 20)
numpy/random/tests/test_generator_mt19937.py:2345:        assert_raises(ValueError, hypergeom, 999, 2**31, 50)
numpy/random/tests/test_generator_mt19937.py:2346:        assert_raises(ValueError, hypergeom, 999, [2**29, 2**30], 1000)
numpy/random/tests/test_generator_mt19937.py:2357:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2358:        assert_raises(ValueError, logseries, bad_p_one * 3)
numpy/random/tests/test_generator_mt19937.py:2359:        assert_raises(ValueError, logseries, bad_p_two * 3)
numpy/random/tests/test_generator_mt19937.py:2370:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2376:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2382:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2390:        assert_array_equal(actual, desired)
numpy/random/tests/test_generator_mt19937.py:2403:        assert actual.shape == expected_shape
numpy/random/tests/test_generator_mt19937.py:2407:        assert actual.shape == expected_shape
numpy/random/tests/test_generator_mt19937.py:2412:        assert actual.shape == expected_shape + (4,)
numpy/random/tests/test_generator_mt19937.py:2414:        assert actual.shape == (3, 2) + expected_shape + (4,)
numpy/random/tests/test_generator_mt19937.py:2423:        assert_raises(ValueError, random.multinomial, 1, pvals)
numpy/random/tests/test_generator_mt19937.py:2424:        assert_raises(ValueError, random.multinomial, 6, 0.5)
numpy/random/tests/test_generator_mt19937.py:2429:        assert actual.shape == (10, 0, 6, 6)
numpy/random/tests/test_generator_mt19937.py:2431:        assert actual.shape == (10, 0, 10)
numpy/random/tests/test_generator_mt19937.py:2434:        assert actual.shape == (3, 0, 7, 4)
numpy/random/tests/test_generator_mt19937.py:2460:            assert_array_almost_equal(out1, out2)
numpy/random/tests/test_generator_mt19937.py:2462:            assert_array_equal(out1, out2)
numpy/random/tests/test_generator_mt19937.py:2508:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_generator_mt19937.py:2529:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_generator_mt19937.py:2532:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_generator_mt19937.py:2535:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_generator_mt19937.py:2546:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_generator_mt19937.py:2549:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_generator_mt19937.py:2552:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_generator_mt19937.py:2560:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_generator_mt19937.py:2563:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_generator_mt19937.py:2566:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_generator_mt19937.py:2585:    assert mt19937.state["state"]["pos"] == config["initial"]["pos"]
numpy/random/tests/test_generator_mt19937.py:2586:    assert sha256.hexdigest() == config["initial"]["key_sha256"]
numpy/random/tests/test_generator_mt19937.py:2593:    assert jumped.state["state"]["pos"] == config["jumped"]["pos"]
numpy/random/tests/test_generator_mt19937.py:2594:    assert sha256.hexdigest() == config["jumped"]["key_sha256"]
numpy/random/tests/test_generator_mt19937.py:2601:    assert random.normal(mu, sigma, size=(5, 4, 3)).shape == (5, 4, 3)
numpy/random/tests/test_generator_mt19937.py:2635:    assert random.noncentral_f(a, b, c).shape == (5, 4, 3)
numpy/random/tests/test_generator_mt19937.py:2652:    assert_no_warnings(gen.shuffle, seq)
numpy/random/tests/test_generator_mt19937.py:2653:    assert seq == [1, [], []]
numpy/random/tests/test_generator_mt19937.py:2689:    assert variates is out
numpy/random/tests/test_generator_mt19937.py:2691:    assert variates is out
numpy/random/tests/test_randomstate.py:57:    assert_equal(a['bit_generator'], b['bit_generator'])
numpy/random/tests/test_randomstate.py:58:    assert_array_equal(a['state']['key'], b['state']['key'])
numpy/random/tests/test_randomstate.py:59:    assert_array_equal(a['state']['pos'], b['state']['pos'])
numpy/random/tests/test_randomstate.py:60:    assert_equal(a['has_gauss'], b['has_gauss'])
numpy/random/tests/test_randomstate.py:61:    assert_equal(a['gauss'], b['gauss'])
numpy/random/tests/test_randomstate.py:67:        assert_equal(s.randint(1000), 684)
numpy/random/tests/test_randomstate.py:69:        assert_equal(s.randint(1000), 419)
numpy/random/tests/test_randomstate.py:73:        assert_equal(s.randint(1000), 468)
numpy/random/tests/test_randomstate.py:75:        assert_equal(s.randint(1000), 468)
numpy/random/tests/test_randomstate.py:77:        assert_equal(s.randint(1000), 973)
numpy/random/tests/test_randomstate.py:79:        assert_equal(s.randint(1000), 265)
numpy/random/tests/test_randomstate.py:83:        assert_raises(TypeError, random.RandomState, -0.5)
numpy/random/tests/test_randomstate.py:84:        assert_raises(ValueError, random.RandomState, -1)
numpy/random/tests/test_randomstate.py:88:        assert_raises(TypeError, random.RandomState, [-0.5])
numpy/random/tests/test_randomstate.py:89:        assert_raises(ValueError, random.RandomState, [-1])
numpy/random/tests/test_randomstate.py:90:        assert_raises(ValueError, random.RandomState, [4294967296])
numpy/random/tests/test_randomstate.py:91:        assert_raises(ValueError, random.RandomState, [1, 2, 4294967296])
numpy/random/tests/test_randomstate.py:92:        assert_raises(ValueError, random.RandomState, [1, -2, 4294967296])
numpy/random/tests/test_randomstate.py:98:        assert_raises(ValueError, random.RandomState, [[1, 2, 3]])
numpy/random/tests/test_randomstate.py:108:        assert_raises(ValueError, random.RandomState, MT19937)
numpy/random/tests/test_randomstate.py:118:            assert_(random.binomial(0, p) == 0)
numpy/random/tests/test_randomstate.py:119:            assert_array_equal(random.binomial(zeros, p), zeros)
numpy/random/tests/test_randomstate.py:123:        assert_raises(ValueError, random.binomial, 1, np.nan)
numpy/random/tests/test_randomstate.py:134:        assert_(-5 <= random.randint(-5, -1) < -1)
numpy/random/tests/test_randomstate.py:136:        assert_(np.all(-5 <= x))
numpy/random/tests/test_randomstate.py:137:        assert_(np.all(x < -1))
numpy/random/tests/test_randomstate.py:142:        assert_equal(random.multinomial(1, p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_randomstate.py:143:        assert_equal(random.multinomial(1, p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_randomstate.py:144:        assert_equal(random.multinomial(1, p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_randomstate.py:145:        assert_equal(random.multinomial(1, p, [2, 2]).shape, (2, 2, 2))
numpy/random/tests/test_randomstate.py:146:        assert_equal(random.multinomial(1, p, (2, 2)).shape, (2, 2, 2))
numpy/random/tests/test_randomstate.py:147:        assert_equal(random.multinomial(1, p, np.array((2, 2))).shape,
numpy/random/tests/test_randomstate.py:154:        assert_raises(ValueError, random.multinomial, 100, [1.1, 0.2])
numpy/random/tests/test_randomstate.py:155:        assert_raises(ValueError, random.multinomial, 100, [-.1, 0.9])
numpy/random/tests/test_randomstate.py:158:        assert_raises(ValueError, random.multinomial, -1, [0.8, 0.2])
numpy/random/tests/test_randomstate.py:168:        assert_array_equal(non_contig, contig)
numpy/random/tests/test_randomstate.py:189:        assert_(np.all(old == new))
numpy/random/tests/test_randomstate.py:196:        assert_(np.all(old == new))
numpy/random/tests/test_randomstate.py:207:        assert_(np.all(old == new))
numpy/random/tests/test_randomstate.py:218:        assert_(np.all(x1 == x2))
numpy/random/tests/test_randomstate.py:219:        assert_(np.all(x1 == x3))
numpy/random/tests/test_randomstate.py:231:            assert_(len(w) == 1)
numpy/random/tests/test_randomstate.py:232:            assert isinstance(state, dict)
numpy/random/tests/test_randomstate.py:233:            assert state['bit_generator'] == 'PCG64'
numpy/random/tests/test_randomstate.py:238:        assert_raises(ValueError, self.random_state.set_state, new_state)
numpy/random/tests/test_randomstate.py:243:        assert_raises(ValueError, self.random_state.set_state, state)
numpy/random/tests/test_randomstate.py:250:        assert_equal(pickled['has_gauss'], 1)
numpy/random/tests/test_randomstate.py:253:        assert_mt19937_state_equal(pickled, unpickled)
numpy/random/tests/test_randomstate.py:260:        assert_mt19937_state_equal(attr_state, state)
numpy/random/tests/test_randomstate.py:263:        assert repr(self.random_state).startswith('RandomState(MT19937)')
numpy/random/tests/test_randomstate.py:275:        assert_raises(TypeError, self.rfunc, 1, dtype=float)
numpy/random/tests/test_randomstate.py:281:            assert_raises(ValueError, self.rfunc, lbnd - 1, ubnd, dtype=dt)
numpy/random/tests/test_randomstate.py:282:            assert_raises(ValueError, self.rfunc, lbnd, ubnd + 1, dtype=dt)
numpy/random/tests/test_randomstate.py:283:            assert_raises(ValueError, self.rfunc, ubnd, lbnd, dtype=dt)
numpy/random/tests/test_randomstate.py:284:            assert_raises(ValueError, self.rfunc, 1, 0, dtype=dt)
numpy/random/tests/test_randomstate.py:292:            assert_equal(self.rfunc(tgt, tgt + 1, size=1000, dtype=dt), tgt)
numpy/random/tests/test_randomstate.py:295:            assert_equal(self.rfunc(tgt, tgt + 1, size=1000, dtype=dt), tgt)
numpy/random/tests/test_randomstate.py:298:            assert_equal(self.rfunc(tgt, tgt + 1, size=1000, dtype=dt), tgt)
numpy/random/tests/test_randomstate.py:321:                assert_(vals.max() < ubnd)
numpy/random/tests/test_randomstate.py:322:                assert_(vals.min() >= 2)
numpy/random/tests/test_randomstate.py:326:        assert_(vals.max() < 2)
numpy/random/tests/test_randomstate.py:327:        assert_(vals.min() >= 0)
numpy/random/tests/test_randomstate.py:353:            assert_(tgt[np.dtype(dt).name] == res)
numpy/random/tests/test_randomstate.py:359:        assert_(tgt[np.dtype(bool).name] == res)
numpy/random/tests/test_randomstate.py:383:            assert_array_equal(x, desired if size is not None else desired[0])
numpy/random/tests/test_randomstate.py:406:        assert_equal(actual, tgt)
numpy/random/tests/test_randomstate.py:415:            assert_equal(sample.dtype, np.dtype(dt))
numpy/random/tests/test_randomstate.py:423:            assert_(not hasattr(sample, 'dtype'))
numpy/random/tests/test_randomstate.py:424:            assert_equal(type(sample), dt)
numpy/random/tests/test_randomstate.py:440:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:446:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:454:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:458:        assert_array_almost_equal(actual, desired[0, 0], decimal=15)
numpy/random/tests/test_randomstate.py:466:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:473:            assert_(len(w) == 1)
numpy/random/tests/test_randomstate.py:477:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:483:            assert_(len(w) == 1)
numpy/random/tests/test_randomstate.py:484:        assert_array_equal(actual, desired + 100)
numpy/random/tests/test_randomstate.py:500:        assert_equal(actual, desired)
numpy/random/tests/test_randomstate.py:504:        assert_equal(actual, desired[0, 0])
numpy/random/tests/test_randomstate.py:516:            assert_(len(w) == 1)
numpy/random/tests/test_randomstate.py:519:        assert_equal(actual, desired)
numpy/random/tests/test_randomstate.py:525:            assert_(len(w) == 1)
numpy/random/tests/test_randomstate.py:526:        assert_equal(actual, desired)
numpy/random/tests/test_randomstate.py:548:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:552:        assert_array_almost_equal(actual, desired[0, 0], decimal=15)
numpy/random/tests/test_randomstate.py:558:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:564:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:570:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:576:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:582:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:586:        assert_raises(ValueError, sample, -1, 3)
numpy/random/tests/test_randomstate.py:587:        assert_raises(ValueError, sample, 3., 3)
numpy/random/tests/test_randomstate.py:588:        assert_raises(ValueError, sample, [[1, 2], [3, 4]], 3)
numpy/random/tests/test_randomstate.py:589:        assert_raises(ValueError, sample, [], 3)
numpy/random/tests/test_randomstate.py:592:        assert_raises(ValueError, sample, [1, 2], 3, p=[0.4, 0.4, 0.2])
numpy/random/tests/test_randomstate.py:593:        assert_raises(ValueError, sample, [1, 2], 3, p=[1.1, -0.1])
numpy/random/tests/test_randomstate.py:594:        assert_raises(ValueError, sample, [1, 2], 3, p=[0.4, 0.4])
numpy/random/tests/test_randomstate.py:595:        assert_raises(ValueError, sample, [1, 2, 3], 4, replace=False)
numpy/random/tests/test_randomstate.py:597:        assert_raises(ValueError, sample, [1, 2, 3], -2, replace=False)
numpy/random/tests/test_randomstate.py:598:        assert_raises(ValueError, sample, [1, 2, 3], (-1,), replace=False)
numpy/random/tests/test_randomstate.py:599:        assert_raises(ValueError, sample, [1, 2, 3], (-1, 1), replace=False)
numpy/random/tests/test_randomstate.py:606:        assert_(np.isscalar(random.choice(2, replace=True)))
numpy/random/tests/test_randomstate.py:607:        assert_(np.isscalar(random.choice(2, replace=False)))
numpy/random/tests/test_randomstate.py:608:        assert_(np.isscalar(random.choice(2, replace=True, p=p)))
numpy/random/tests/test_randomstate.py:609:        assert_(np.isscalar(random.choice(2, replace=False, p=p)))
numpy/random/tests/test_randomstate.py:610:        assert_(np.isscalar(random.choice([1, 2], replace=True)))
numpy/random/tests/test_randomstate.py:611:        assert_(random.choice([None], replace=True) is None)
numpy/random/tests/test_randomstate.py:615:        assert_(random.choice(arr, replace=True) is a)
numpy/random/tests/test_randomstate.py:619:        assert_(not np.isscalar(random.choice(2, s, replace=True)))
numpy/random/tests/test_randomstate.py:620:        assert_(not np.isscalar(random.choice(2, s, replace=False)))
numpy/random/tests/test_randomstate.py:621:        assert_(not np.isscalar(random.choice(2, s, replace=True, p=p)))
numpy/random/tests/test_randomstate.py:622:        assert_(not np.isscalar(random.choice(2, s, replace=False, p=p)))
numpy/random/tests/test_randomstate.py:623:        assert_(not np.isscalar(random.choice([1, 2], s, replace=True)))
numpy/random/tests/test_randomstate.py:624:        assert_(random.choice([None], s, replace=True).ndim == 0)
numpy/random/tests/test_randomstate.py:628:        assert_(random.choice(arr, s, replace=True).item() is a)
numpy/random/tests/test_randomstate.py:633:        assert_equal(random.choice(6, s, replace=True).shape, s)
numpy/random/tests/test_randomstate.py:634:        assert_equal(random.choice(6, s, replace=False).shape, s)
numpy/random/tests/test_randomstate.py:635:        assert_equal(random.choice(6, s, replace=True, p=p).shape, s)
numpy/random/tests/test_randomstate.py:636:        assert_equal(random.choice(6, s, replace=False, p=p).shape, s)
numpy/random/tests/test_randomstate.py:637:        assert_equal(random.choice(np.arange(6), s, replace=True).shape, s)
numpy/random/tests/test_randomstate.py:640:        assert_equal(random.randint(0, 0, size=(3, 0, 4)).shape, (3, 0, 4))
numpy/random/tests/test_randomstate.py:641:        assert_equal(random.randint(0, -10, size=0).shape, (0,))
numpy/random/tests/test_randomstate.py:642:        assert_equal(random.randint(10, 10, size=0).shape, (0,))
numpy/random/tests/test_randomstate.py:643:        assert_equal(random.choice(0, size=0).shape, (0,))
numpy/random/tests/test_randomstate.py:644:        assert_equal(random.choice([], size=(0,)).shape, (0,))
numpy/random/tests/test_randomstate.py:645:        assert_equal(random.choice(['a', 'b'], size=(3, 0, 4)).shape,
numpy/random/tests/test_randomstate.py:647:        assert_raises(ValueError, random.choice, [], 10)
numpy/random/tests/test_randomstate.py:652:        assert_raises(ValueError, random.choice, a, p=p)
numpy/random/tests/test_randomstate.py:661:        assert_array_equal(non_contig, contig)
numpy/random/tests/test_randomstate.py:667:        assert_equal(actual, desired)
numpy/random/tests/test_randomstate.py:694:            assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:712:            assert_raises(TypeError, random.shuffle, x)
numpy/random/tests/test_randomstate.py:719:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:724:        assert_array_equal(actual, np.atleast_2d(desired).T)
numpy/random/tests/test_randomstate.py:728:        assert_raises(IndexError, random.permutation, bad_x_str)
numpy/random/tests/test_randomstate.py:732:        assert_raises(IndexError, random.permutation, bad_x_float)
numpy/random/tests/test_randomstate.py:739:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:748:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:756:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:761:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:769:        assert_array_almost_equal(actual, desired, decimal=13)
numpy/random/tests/test_randomstate.py:781:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:783:        assert_raises(ValueError, random.dirichlet, bad_alpha)
numpy/random/tests/test_randomstate.py:788:        assert_array_almost_equal(actual, desired[0, 0], decimal=15)
numpy/random/tests/test_randomstate.py:793:        assert_equal(random.dirichlet(p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_randomstate.py:794:        assert_equal(random.dirichlet(p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_randomstate.py:795:        assert_equal(random.dirichlet(p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_randomstate.py:796:        assert_equal(random.dirichlet(p, [2, 2]).shape, (2, 2, 2))
numpy/random/tests/test_randomstate.py:797:        assert_equal(random.dirichlet(p, (2, 2)).shape, (2, 2, 2))
numpy/random/tests/test_randomstate.py:798:        assert_equal(random.dirichlet(p, np.array((2, 2))).shape, (2, 2, 2))
numpy/random/tests/test_randomstate.py:800:        assert_raises(TypeError, random.dirichlet, p, float(1))
numpy/random/tests/test_randomstate.py:805:        assert_raises(ValueError, random.dirichlet, alpha)
numpy/random/tests/test_randomstate.py:815:        assert_array_almost_equal(non_contig, contig)
numpy/random/tests/test_randomstate.py:823:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:826:        assert_equal(random.exponential(scale=0), 0)
numpy/random/tests/test_randomstate.py:827:        assert_raises(ValueError, random.exponential, scale=-0.)
numpy/random/tests/test_randomstate.py:835:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:843:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:846:        assert_equal(random.gamma(shape=0, scale=0), 0)
numpy/random/tests/test_randomstate.py:847:        assert_raises(ValueError, random.gamma, shape=-0., scale=-0.)
numpy/random/tests/test_randomstate.py:855:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:858:        assert_raises(ValueError, random.geometric, 1.1)
numpy/random/tests/test_randomstate.py:859:        assert_raises(ValueError, random.geometric, [1.1] * 10)
numpy/random/tests/test_randomstate.py:860:        assert_raises(ValueError, random.geometric, -0.1)
numpy/random/tests/test_randomstate.py:861:        assert_raises(ValueError, random.geometric, [-0.1] * 10)
numpy/random/tests/test_randomstate.py:864:            assert_raises(ValueError, random.geometric, np.nan)
numpy/random/tests/test_randomstate.py:865:            assert_raises(ValueError, random.geometric, [np.nan] * 10)
numpy/random/tests/test_randomstate.py:873:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:876:        assert_equal(random.gumbel(scale=0), 0)
numpy/random/tests/test_randomstate.py:877:        assert_raises(ValueError, random.gumbel, scale=-0.)
numpy/random/tests/test_randomstate.py:885:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:890:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:894:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:899:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:903:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:911:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:914:        assert_equal(random.laplace(scale=0), 0)
numpy/random/tests/test_randomstate.py:915:        assert_raises(ValueError, random.laplace, scale=-0.)
numpy/random/tests/test_randomstate.py:923:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:931:        assert_array_almost_equal(actual, desired, decimal=13)
numpy/random/tests/test_randomstate.py:934:        assert_equal(random.lognormal(sigma=0), 1)
numpy/random/tests/test_randomstate.py:935:        assert_raises(ValueError, random.lognormal, sigma=-0.)
numpy/random/tests/test_randomstate.py:943:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:948:            assert_raises(ValueError, random.logseries, np.nan)
numpy/random/tests/test_randomstate.py:949:            assert_raises(ValueError, random.logseries, [np.nan] * 10)
numpy/random/tests/test_randomstate.py:960:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:975:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:980:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:986:        assert_warns(RuntimeWarning, random.multivariate_normal, mean, cov)
numpy/random/tests/test_randomstate.py:989:        assert_no_warnings(random.multivariate_normal, mean, cov,
numpy/random/tests/test_randomstate.py:1000:            assert len(w) == 0
numpy/random/tests/test_randomstate.py:1019:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1024:            assert_raises(ValueError, random.negative_binomial, 100, np.nan)
numpy/random/tests/test_randomstate.py:1034:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1040:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1047:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1056:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1061:        assert np.isnan(actual)
numpy/random/tests/test_randomstate.py:1069:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:1072:        assert_equal(random.normal(scale=0), 0)
numpy/random/tests/test_randomstate.py:1073:        assert_raises(ValueError, random.normal, scale=-0.)
numpy/random/tests/test_randomstate.py:1096:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1101:        assert_raises(ValueError, random.poisson, lamneg)
numpy/random/tests/test_randomstate.py:1102:        assert_raises(ValueError, random.poisson, [lamneg] * 10)
numpy/random/tests/test_randomstate.py:1103:        assert_raises(ValueError, random.poisson, lambig)
numpy/random/tests/test_randomstate.py:1104:        assert_raises(ValueError, random.poisson, [lambig] * 10)
numpy/random/tests/test_randomstate.py:1107:            assert_raises(ValueError, random.poisson, np.nan)
numpy/random/tests/test_randomstate.py:1108:            assert_raises(ValueError, random.poisson, [np.nan] * 10)
numpy/random/tests/test_randomstate.py:1116:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:1124:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1127:        assert_equal(random.rayleigh(scale=0), 0)
numpy/random/tests/test_randomstate.py:1128:        assert_raises(ValueError, random.rayleigh, scale=-0.)
numpy/random/tests/test_randomstate.py:1136:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:1144:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:1152:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1155:        assert_equal(random.standard_gamma(shape=0), 0)
numpy/random/tests/test_randomstate.py:1156:        assert_raises(ValueError, random.standard_gamma, shape=-0.)
numpy/random/tests/test_randomstate.py:1164:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:1170:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:1178:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:1187:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1195:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:1202:        assert_raises(OverflowError, func, -np.inf, 0)
numpy/random/tests/test_randomstate.py:1203:        assert_raises(OverflowError, func, 0, np.inf)
numpy/random/tests/test_randomstate.py:1204:        assert_raises(OverflowError, func, fmin, fmax)
numpy/random/tests/test_randomstate.py:1205:        assert_raises(OverflowError, func, [-np.inf], [0])
numpy/random/tests/test_randomstate.py:1206:        assert_raises(OverflowError, func, [0], [np.inf])
numpy/random/tests/test_randomstate.py:1233:        assert_raises(TypeError, random.hypergeometric, throwing_int, 1, 1)
numpy/random/tests/test_randomstate.py:1241:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:1247:        assert_(np.isfinite(r).all())
numpy/random/tests/test_randomstate.py:1256:        assert_array_almost_equal(actual, desired, decimal=8)
numpy/random/tests/test_randomstate.py:1261:        assert_(np.isnan(r))
numpy/random/tests/test_randomstate.py:1269:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1277:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_randomstate.py:1281:        assert_equal(random.weibull(a=0, size=12), np.zeros(12))
numpy/random/tests/test_randomstate.py:1282:        assert_raises(ValueError, random.weibull, a=-0.)
numpy/random/tests/test_randomstate.py:1290:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1312:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1316:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1329:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1330:        assert_raises(ValueError, normal, loc * 3, bad_scale)
numpy/random/tests/test_randomstate.py:1334:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1335:        assert_raises(ValueError, normal, loc, bad_scale * 3)
numpy/random/tests/test_randomstate.py:1349:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1350:        assert_raises(ValueError, beta, bad_a * 3, b)
numpy/random/tests/test_randomstate.py:1351:        assert_raises(ValueError, beta, a * 3, bad_b)
numpy/random/tests/test_randomstate.py:1355:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1356:        assert_raises(ValueError, beta, bad_a, b * 3)
numpy/random/tests/test_randomstate.py:1357:        assert_raises(ValueError, beta, a, bad_b * 3)
numpy/random/tests/test_randomstate.py:1369:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1370:        assert_raises(ValueError, exponential, bad_scale * 3)
numpy/random/tests/test_randomstate.py:1382:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1383:        assert_raises(ValueError, std_gamma, bad_shape * 3)
numpy/random/tests/test_randomstate.py:1397:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1398:        assert_raises(ValueError, gamma, bad_shape * 3, scale)
numpy/random/tests/test_randomstate.py:1399:        assert_raises(ValueError, gamma, shape * 3, bad_scale)
numpy/random/tests/test_randomstate.py:1403:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1404:        assert_raises(ValueError, gamma, bad_shape, scale * 3)
numpy/random/tests/test_randomstate.py:1405:        assert_raises(ValueError, gamma, shape, bad_scale * 3)
numpy/random/tests/test_randomstate.py:1419:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1420:        assert_raises(ValueError, f, bad_dfnum * 3, dfden)
numpy/random/tests/test_randomstate.py:1421:        assert_raises(ValueError, f, dfnum * 3, bad_dfden)
numpy/random/tests/test_randomstate.py:1425:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1426:        assert_raises(ValueError, f, bad_dfnum, dfden * 3)
numpy/random/tests/test_randomstate.py:1427:        assert_raises(ValueError, f, dfnum, bad_dfden * 3)
numpy/random/tests/test_randomstate.py:1443:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1444:        assert np.all(np.isnan(nonc_f(dfnum, dfden, [np.nan] * 3)))
numpy/random/tests/test_randomstate.py:1446:        assert_raises(ValueError, nonc_f, bad_dfnum * 3, dfden, nonc)
numpy/random/tests/test_randomstate.py:1447:        assert_raises(ValueError, nonc_f, dfnum * 3, bad_dfden, nonc)
numpy/random/tests/test_randomstate.py:1448:        assert_raises(ValueError, nonc_f, dfnum * 3, dfden, bad_nonc)
numpy/random/tests/test_randomstate.py:1452:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1453:        assert_raises(ValueError, nonc_f, bad_dfnum, dfden * 3, nonc)
numpy/random/tests/test_randomstate.py:1454:        assert_raises(ValueError, nonc_f, dfnum, bad_dfden * 3, nonc)
numpy/random/tests/test_randomstate.py:1455:        assert_raises(ValueError, nonc_f, dfnum, dfden * 3, bad_nonc)
numpy/random/tests/test_randomstate.py:1459:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1460:        assert_raises(ValueError, nonc_f, bad_dfnum, dfden, nonc * 3)
numpy/random/tests/test_randomstate.py:1461:        assert_raises(ValueError, nonc_f, dfnum, bad_dfden, nonc * 3)
numpy/random/tests/test_randomstate.py:1462:        assert_raises(ValueError, nonc_f, dfnum, dfden, bad_nonc * 3)
numpy/random/tests/test_randomstate.py:1468:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1480:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1481:        assert_raises(ValueError, chisquare, bad_df * 3)
numpy/random/tests/test_randomstate.py:1495:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1496:        assert_raises(ValueError, nonc_chi, bad_df * 3, nonc)
numpy/random/tests/test_randomstate.py:1497:        assert_raises(ValueError, nonc_chi, df * 3, bad_nonc)
numpy/random/tests/test_randomstate.py:1501:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1502:        assert_raises(ValueError, nonc_chi, bad_df, nonc * 3)
numpy/random/tests/test_randomstate.py:1503:        assert_raises(ValueError, nonc_chi, df, bad_nonc * 3)
numpy/random/tests/test_randomstate.py:1515:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1516:        assert_raises(ValueError, t, bad_df * 3)
numpy/random/tests/test_randomstate.py:1517:        assert_raises(ValueError, random.standard_t, bad_df * 3)
numpy/random/tests/test_randomstate.py:1530:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1531:        assert_raises(ValueError, vonmises, mu * 3, bad_kappa)
numpy/random/tests/test_randomstate.py:1535:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1536:        assert_raises(ValueError, vonmises, mu, bad_kappa * 3)
numpy/random/tests/test_randomstate.py:1548:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1549:        assert_raises(ValueError, pareto, bad_a * 3)
numpy/random/tests/test_randomstate.py:1550:        assert_raises(ValueError, random.pareto, bad_a * 3)
numpy/random/tests/test_randomstate.py:1562:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1563:        assert_raises(ValueError, weibull, bad_a * 3)
numpy/random/tests/test_randomstate.py:1564:        assert_raises(ValueError, random.weibull, bad_a * 3)
numpy/random/tests/test_randomstate.py:1576:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1577:        assert_raises(ValueError, power, bad_a * 3)
numpy/random/tests/test_randomstate.py:1578:        assert_raises(ValueError, random.power, bad_a * 3)
numpy/random/tests/test_randomstate.py:1591:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1592:        assert_raises(ValueError, laplace, loc * 3, bad_scale)
numpy/random/tests/test_randomstate.py:1596:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1597:        assert_raises(ValueError, laplace, loc, bad_scale * 3)
numpy/random/tests/test_randomstate.py:1610:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1611:        assert_raises(ValueError, gumbel, loc * 3, bad_scale)
numpy/random/tests/test_randomstate.py:1615:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1616:        assert_raises(ValueError, gumbel, loc, bad_scale * 3)
numpy/random/tests/test_randomstate.py:1629:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1630:        assert_raises(ValueError, logistic, loc * 3, bad_scale)
numpy/random/tests/test_randomstate.py:1634:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1635:        assert_raises(ValueError, logistic, loc, bad_scale * 3)
numpy/random/tests/test_randomstate.py:1636:        assert_equal(random.logistic(1.0, 0.0), 1.0)
numpy/random/tests/test_randomstate.py:1649:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1650:        assert_raises(ValueError, lognormal, mean * 3, bad_sigma)
numpy/random/tests/test_randomstate.py:1651:        assert_raises(ValueError, random.lognormal, mean * 3, bad_sigma)
numpy/random/tests/test_randomstate.py:1655:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1656:        assert_raises(ValueError, lognormal, mean, bad_sigma * 3)
numpy/random/tests/test_randomstate.py:1657:        assert_raises(ValueError, random.lognormal, mean, bad_sigma * 3)
numpy/random/tests/test_randomstate.py:1669:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1670:        assert_raises(ValueError, rayleigh, bad_scale * 3)
numpy/random/tests/test_randomstate.py:1684:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1685:        assert_raises(ValueError, wald, bad_mean * 3, scale)
numpy/random/tests/test_randomstate.py:1686:        assert_raises(ValueError, wald, mean * 3, bad_scale)
numpy/random/tests/test_randomstate.py:1687:        assert_raises(ValueError, random.wald, bad_mean * 3, scale)
numpy/random/tests/test_randomstate.py:1688:        assert_raises(ValueError, random.wald, mean * 3, bad_scale)
numpy/random/tests/test_randomstate.py:1692:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1693:        assert_raises(ValueError, wald, bad_mean, scale * 3)
numpy/random/tests/test_randomstate.py:1694:        assert_raises(ValueError, wald, mean, bad_scale * 3)
numpy/random/tests/test_randomstate.py:1695:        assert_raises(ValueError, wald, 0.0, 1)
numpy/random/tests/test_randomstate.py:1696:        assert_raises(ValueError, wald, 0.5, 0.0)
numpy/random/tests/test_randomstate.py:1712:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1713:        assert_raises(ValueError, triangular, bad_left_one * 3, mode, right)
numpy/random/tests/test_randomstate.py:1714:        assert_raises(ValueError, triangular, left * 3, bad_mode_one, right)
numpy/random/tests/test_randomstate.py:1720:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1721:        assert_raises(ValueError, triangular, bad_left_one, mode * 3, right)
numpy/random/tests/test_randomstate.py:1722:        assert_raises(ValueError, triangular, left, bad_mode_one * 3, right)
numpy/random/tests/test_randomstate.py:1728:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_randomstate.py:1729:        assert_raises(ValueError, triangular, bad_left_one, mode, right * 3)
numpy/random/tests/test_randomstate.py:1730:        assert_raises(ValueError, triangular, left, bad_mode_one, right * 3)
numpy/random/tests/test_randomstate.py:1734:        assert_raises(ValueError, triangular, 10., 0., 20.)
numpy/random/tests/test_randomstate.py:1735:        assert_raises(ValueError, triangular, 10., 25., 20.)
numpy/random/tests/test_randomstate.py:1736:        assert_raises(ValueError, triangular, 10., 10., 10.)
numpy/random/tests/test_randomstate.py:1749:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1750:        assert_raises(ValueError, binom, bad_n * 3, p)
numpy/random/tests/test_randomstate.py:1751:        assert_raises(ValueError, binom, n * 3, bad_p_one)
numpy/random/tests/test_randomstate.py:1752:        assert_raises(ValueError, binom, n * 3, bad_p_two)
numpy/random/tests/test_randomstate.py:1756:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1757:        assert_raises(ValueError, binom, bad_n, p * 3)
numpy/random/tests/test_randomstate.py:1758:        assert_raises(ValueError, binom, n, bad_p_one * 3)
numpy/random/tests/test_randomstate.py:1759:        assert_raises(ValueError, binom, n, bad_p_two * 3)
numpy/random/tests/test_randomstate.py:1772:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1773:        assert_raises(ValueError, neg_binom, bad_n * 3, p)
numpy/random/tests/test_randomstate.py:1774:        assert_raises(ValueError, neg_binom, n * 3, bad_p_one)
numpy/random/tests/test_randomstate.py:1775:        assert_raises(ValueError, neg_binom, n * 3, bad_p_two)
numpy/random/tests/test_randomstate.py:1779:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1780:        assert_raises(ValueError, neg_binom, bad_n, p * 3)
numpy/random/tests/test_randomstate.py:1781:        assert_raises(ValueError, neg_binom, n, bad_p_one * 3)
numpy/random/tests/test_randomstate.py:1782:        assert_raises(ValueError, neg_binom, n, bad_p_two * 3)
numpy/random/tests/test_randomstate.py:1795:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1796:        assert_raises(ValueError, poisson, bad_lam_one * 3)
numpy/random/tests/test_randomstate.py:1797:        assert_raises(ValueError, poisson, bad_lam_two * 3)
numpy/random/tests/test_randomstate.py:1807:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1808:        assert_raises(ValueError, zipf, bad_a * 3)
numpy/random/tests/test_randomstate.py:1810:            assert_raises(ValueError, zipf, np.nan)
numpy/random/tests/test_randomstate.py:1811:            assert_raises(ValueError, zipf, [0, 0, np.nan])
numpy/random/tests/test_randomstate.py:1822:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1823:        assert_raises(ValueError, geom, bad_p_one * 3)
numpy/random/tests/test_randomstate.py:1824:        assert_raises(ValueError, geom, bad_p_two * 3)
numpy/random/tests/test_randomstate.py:1839:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1840:        assert_raises(ValueError, hypergeom, bad_ngood * 3, nbad, nsample)
numpy/random/tests/test_randomstate.py:1841:        assert_raises(ValueError, hypergeom, ngood * 3, bad_nbad, nsample)
numpy/random/tests/test_randomstate.py:1842:        assert_raises(ValueError, hypergeom, ngood * 3, nbad, bad_nsample_one)
numpy/random/tests/test_randomstate.py:1843:        assert_raises(ValueError, hypergeom, ngood * 3, nbad, bad_nsample_two)
numpy/random/tests/test_randomstate.py:1847:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1848:        assert_raises(ValueError, hypergeom, bad_ngood, nbad * 3, nsample)
numpy/random/tests/test_randomstate.py:1849:        assert_raises(ValueError, hypergeom, ngood, bad_nbad * 3, nsample)
numpy/random/tests/test_randomstate.py:1850:        assert_raises(ValueError, hypergeom, ngood, nbad * 3, bad_nsample_one)
numpy/random/tests/test_randomstate.py:1851:        assert_raises(ValueError, hypergeom, ngood, nbad * 3, bad_nsample_two)
numpy/random/tests/test_randomstate.py:1855:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1856:        assert_raises(ValueError, hypergeom, bad_ngood, nbad, nsample * 3)
numpy/random/tests/test_randomstate.py:1857:        assert_raises(ValueError, hypergeom, ngood, bad_nbad, nsample * 3)
numpy/random/tests/test_randomstate.py:1858:        assert_raises(ValueError, hypergeom, ngood, nbad, bad_nsample_one * 3)
numpy/random/tests/test_randomstate.py:1859:        assert_raises(ValueError, hypergeom, ngood, nbad, bad_nsample_two * 3)
numpy/random/tests/test_randomstate.py:1861:        assert_raises(ValueError, hypergeom, -1, 10, 20)
numpy/random/tests/test_randomstate.py:1862:        assert_raises(ValueError, hypergeom, 10, -1, 20)
numpy/random/tests/test_randomstate.py:1863:        assert_raises(ValueError, hypergeom, 10, 10, 0)
numpy/random/tests/test_randomstate.py:1864:        assert_raises(ValueError, hypergeom, 10, 10, 25)
numpy/random/tests/test_randomstate.py:1875:        assert_array_equal(actual, desired)
numpy/random/tests/test_randomstate.py:1876:        assert_raises(ValueError, logseries, bad_p_one * 3)
numpy/random/tests/test_randomstate.py:1877:        assert_raises(ValueError, logseries, bad_p_two * 3)
numpy/random/tests/test_randomstate.py:1903:            assert_array_almost_equal(out1, out2)
numpy/random/tests/test_randomstate.py:1905:            assert_array_equal(out1, out2)
numpy/random/tests/test_randomstate.py:1951:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_randomstate.py:1972:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_randomstate.py:1975:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_randomstate.py:1978:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_randomstate.py:1986:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_randomstate.py:1989:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_randomstate.py:1992:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_randomstate.py:2001:    assert_(actual.dtype == np.dtype('l'))
numpy/random/tests/test_randomstate.py:2012:    assert_(res == sha256)
numpy/random/tests/test_direct.py:42:            assert_state_equal(actual[key], target[key])
numpy/random/tests/test_direct.py:44:            assert_array_equal(actual[key], target[key])
numpy/random/tests/test_direct.py:46:            assert actual[key] == target[key]
numpy/random/tests/test_direct.py:140:    assert_equal(s1.state, s2.state)
numpy/random/tests/test_direct.py:141:    assert_equal(s1.n_children_spawned, s2.n_children_spawned)
numpy/random/tests/test_direct.py:144:    assert_raises(TypeError, ISeedSequence)
numpy/random/tests/test_direct.py:145:    assert_raises(TypeError, ISpawnableSeedSequence)
numpy/random/tests/test_direct.py:147:    assert_raises(NotImplementedError, dummy.generate_state, 10)
numpy/random/tests/test_direct.py:148:    assert len(dummy.spawn(10)) == 10
numpy/random/tests/test_direct.py:178:        assert_equal(uints, self.data1['data'])
numpy/random/tests/test_direct.py:182:        assert_equal(uints, self.data1['data'][0])
numpy/random/tests/test_direct.py:186:        assert_equal(uints, self.data2['data'])
numpy/random/tests/test_direct.py:191:        assert uints is None
numpy/random/tests/test_direct.py:193:        assert uints is None
numpy/random/tests/test_direct.py:211:        assert_allclose(uniforms, vals)
numpy/random/tests/test_direct.py:212:        assert_equal(uniforms.dtype, np.float64)
numpy/random/tests/test_direct.py:217:        assert_allclose(uniforms, vals)
numpy/random/tests/test_direct.py:218:        assert_equal(uniforms.dtype, np.float64)
numpy/random/tests/test_direct.py:224:        assert_allclose(uniforms, vals)
numpy/random/tests/test_direct.py:225:        assert_equal(uniforms.dtype, np.float32)
numpy/random/tests/test_direct.py:230:        assert_allclose(uniforms, vals)
numpy/random/tests/test_direct.py:231:        assert_equal(uniforms.dtype, np.float32)
numpy/random/tests/test_direct.py:235:        assert 'Generator' in repr(rs)
numpy/random/tests/test_direct.py:236:        assert f'{id(rs):#x}'.upper().replace('X', 'x') in repr(rs)
numpy/random/tests/test_direct.py:240:        assert 'Generator' in str(rs)
numpy/random/tests/test_direct.py:241:        assert str(self.bit_generator.__name__) in str(rs)
numpy/random/tests/test_direct.py:242:        assert f'{id(rs):#x}'.upper().replace('X', 'x') not in str(rs)
numpy/random/tests/test_direct.py:252:        assert_array_equal(Generator(bit_generator).standard_normal(1000),
numpy/random/tests/test_direct.py:254:        assert bit_generator is not reloaded
numpy/random/tests/test_direct.py:255:        assert_state_equal(reloaded_state, state)
numpy/random/tests/test_direct.py:259:        assert_equal(ss.state, aa.state)
numpy/random/tests/test_direct.py:296:        assert isinstance(cffi_interface, interface)
numpy/random/tests/test_direct.py:298:        assert other_cffi_interface is cffi_interface
numpy/random/tests/test_direct.py:304:        assert isinstance(ctypes_interface, interface)
numpy/random/tests/test_direct.py:306:        assert other_ctypes_interface is ctypes_interface
numpy/random/tests/test_direct.py:312:        assert_state_equal(state, alt_state)
numpy/random/tests/test_direct.py:334:        assert_state_equal(bit_generator.state, keyed.state)
numpy/random/tests/test_direct.py:361:        assert val_neg == val_pos
numpy/random/tests/test_direct.py:362:        assert val_big == val_pos
numpy/random/tests/test_direct.py:369:        assert state["state"] == initial_state
numpy/random/tests/test_direct.py:373:        assert state["state"] == advanced_state
numpy/random/tests/test_direct.py:400:        assert val_neg == val_pos
numpy/random/tests/test_direct.py:401:        assert val_big == val_pos
numpy/random/tests/test_direct.py:408:        assert state["state"]["state"] == initial_state
numpy/random/tests/test_direct.py:412:        assert state["state"] == advanced_state
numpy/random/tests/test_direct.py:428:        assert_raises(TypeError, self.bit_generator, np.array([np.pi]))
numpy/random/tests/test_direct.py:429:        assert_raises(TypeError, self.bit_generator, np.array([-np.pi]))
numpy/random/tests/test_direct.py:430:        assert_raises(TypeError, self.bit_generator, np.array([np.pi, -np.pi]))
numpy/random/tests/test_direct.py:431:        assert_raises(TypeError, self.bit_generator, np.array([0, np.pi]))
numpy/random/tests/test_direct.py:432:        assert_raises(TypeError, self.bit_generator, [np.pi])
numpy/random/tests/test_direct.py:433:        assert_raises(TypeError, self.bit_generator, [0, np.pi])
numpy/random/tests/test_direct.py:444:        assert_equal(actual, desired)
numpy/random/tests/test_direct.py:448:        assert_equal(actual, desired)
numpy/random/tests/test_direct.py:470:            assert isinstance(rg.bit_generator, PCG64)
numpy/random/tests/test_direct.py:475:        assert rg.bit_generator is bg
numpy/random/tests/test_direct.py:477:        assert rg2 is rg
numpy/random/tests/test_direct.py:478:        assert rg2.bit_generator is bg
numpy/random/tests/test_extending.py:66:            assert False, ("Could not find '{}' in C file, "
numpy/random/tests/test_extending.py:76:    assert so1 is not None
numpy/random/tests/test_extending.py:77:    assert so2 is not None
numpy/random/tests/test_extending.py:85:    assert values.shape == (10,)
numpy/random/tests/test_extending.py:86:    assert values.dtype == np.float64
numpy/random/tests/test_smoke.py:18:    assert_(np.isscalar(val))
numpy/random/tests/test_smoke.py:20:    assert_(val.shape == (10,))
numpy/random/tests/test_smoke.py:22:    assert_(val.shape == (10, 10))
numpy/random/tests/test_smoke.py:24:    assert_(val.shape == (10, 10, 10))
numpy/random/tests/test_smoke.py:26:    assert_(val.shape == (5, 5))
numpy/random/tests/test_smoke.py:123:        assert_(comp_state(state, new_state))
numpy/random/tests/test_smoke.py:129:            assert_(not comp_state(state, self.rg.bit_generator.state))
numpy/random/tests/test_smoke.py:139:            assert_(not comp_state(state, jumped_state))
numpy/random/tests/test_smoke.py:144:            assert_(comp_state(jumped_state, rejumped_state))
numpy/random/tests/test_smoke.py:153:        assert_(len(r) == 10)
numpy/random/tests/test_smoke.py:154:        assert_((r > -1).all())
numpy/random/tests/test_smoke.py:155:        assert_((r <= 0).all())
numpy/random/tests/test_smoke.py:159:        assert_(len(r) == 10)
numpy/random/tests/test_smoke.py:160:        assert_((r > -1).all())
numpy/random/tests/test_smoke.py:161:        assert_((r <= 0).all())
numpy/random/tests/test_smoke.py:164:        assert_(len(r) == 10)
numpy/random/tests/test_smoke.py:165:        assert_((r > -1).all())
numpy/random/tests/test_smoke.py:166:        assert_((r <= 0).all())
numpy/random/tests/test_smoke.py:168:        assert_(len(r) == 10)
numpy/random/tests/test_smoke.py:169:        assert_((r > -1).all())
numpy/random/tests/test_smoke.py:170:        assert_((r <= 0).all())
numpy/random/tests/test_smoke.py:173:        assert_(len(self.rg.random(10)) == 10)
numpy/random/tests/test_smoke.py:177:        assert_(len(self.rg.standard_normal(10)) == 10)
numpy/random/tests/test_smoke.py:180:        assert_(len(self.rg.standard_normal(10)) == 10)
numpy/random/tests/test_smoke.py:184:        assert_(len(self.rg.standard_gamma(10, 10)) == 10)
numpy/random/tests/test_smoke.py:185:        assert_(len(self.rg.standard_gamma(np.array([10] * 10), 10)) == 10)
numpy/random/tests/test_smoke.py:189:        assert_(len(self.rg.standard_exponential(10)) == 10)
numpy/random/tests/test_smoke.py:194:        assert_(len(randoms) == 10)
numpy/random/tests/test_smoke.py:195:        assert randoms.dtype == np.float32
numpy/random/tests/test_smoke.py:201:        assert_(len(randoms) == 10)
numpy/random/tests/test_smoke.py:202:        assert randoms.dtype == np.float32
numpy/random/tests/test_smoke.py:207:        assert_(len(self.rg.standard_cauchy(10)) == 10)
numpy/random/tests/test_smoke.py:211:        assert_(len(self.rg.standard_t(10, 10)) == 10)
numpy/random/tests/test_smoke.py:215:        assert_(self.rg.binomial(10, .5) >= 0)
numpy/random/tests/test_smoke.py:216:        assert_(self.rg.binomial(1000, .5) >= 0)
numpy/random/tests/test_smoke.py:223:        assert_(int_1 == int_2)
numpy/random/tests/test_smoke.py:236:        assert_(comp_state(rg.bit_generator.state, rg2.bit_generator.state))
numpy/random/tests/test_smoke.py:246:        assert_array_equal(n1, n2)
numpy/random/tests/test_smoke.py:256:        assert_array_equal(n1, n2)
numpy/random/tests/test_smoke.py:266:        assert_((n1 == n2).all())
numpy/random/tests/test_smoke.py:271:        assert_((original != permuted).any())
numpy/random/tests/test_smoke.py:276:        assert_((original != permuted).any())
numpy/random/tests/test_smoke.py:280:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:282:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:284:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:286:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:288:        assert_(vals.shape == (10, 10))
numpy/random/tests/test_smoke.py:292:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:296:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:301:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:306:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:310:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:314:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:319:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:323:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:327:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:331:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:335:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:339:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:343:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:345:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:347:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:349:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:353:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:357:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:361:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:363:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:368:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:372:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:376:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:381:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:385:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:389:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:393:        assert_(len(vals) == 10)
numpy/random/tests/test_smoke.py:395:        assert_(len(vals) == 100)
numpy/random/tests/test_smoke.py:397:        assert_(vals.shape == (1, 100))
numpy/random/tests/test_smoke.py:399:        assert_(vals.shape == (100, 100))
numpy/random/tests/test_smoke.py:403:        assert_(np.isscalar(vals))
numpy/random/tests/test_smoke.py:405:        assert_(vals.shape == (10,))
numpy/random/tests/test_smoke.py:409:        assert_(np.isscalar(vals))
numpy/random/tests/test_smoke.py:411:        assert_(vals.shape == (10,))
numpy/random/tests/test_smoke.py:417:        assert_(x.shape == (5000, 2))
numpy/random/tests/test_smoke.py:419:        assert_(x.shape == (5000, 2))
numpy/random/tests/test_smoke.py:421:        assert_(x.shape == (5000, 2))
numpy/random/tests/test_smoke.py:422:        assert_((x_zig != x_inv).any())
numpy/random/tests/test_smoke.py:426:        assert_(vals.shape == (2,))
numpy/random/tests/test_smoke.py:428:        assert_(vals.shape == (10, 2))
numpy/random/tests/test_smoke.py:432:        assert_(s.shape == (20, 3))
numpy/random/tests/test_smoke.py:437:        assert_((type(self.rg) == type(unpick)))
numpy/random/tests/test_smoke.py:443:        assert_((type(self.rg) == type(unpick)))
numpy/random/tests/test_smoke.py:461:        assert_(comp_state(state1, state2))
numpy/random/tests/test_smoke.py:468:        assert_(not comp_state(state1, state2))
numpy/random/tests/test_smoke.py:475:        assert_(not comp_state(state1, state2))
numpy/random/tests/test_smoke.py:483:        assert_(not comp_state(state1, state2))
numpy/random/tests/test_smoke.py:494:        assert_array_equal(r1, r2)
numpy/random/tests/test_smoke.py:495:        assert_equal(r1.dtype, np.float32)
numpy/random/tests/test_smoke.py:496:        assert_(comp_state(rg.bit_generator.state, rg2.bit_generator.state))
numpy/random/tests/test_smoke.py:507:        assert_array_equal(r1, r2)
numpy/random/tests/test_smoke.py:508:        assert_equal(r1.dtype, np.float32)
numpy/random/tests/test_smoke.py:509:        assert_(comp_state(rg.bit_generator.state, rg2.bit_generator.state))
numpy/random/tests/test_smoke.py:520:        assert_array_equal(r1, r2)
numpy/random/tests/test_smoke.py:521:        assert_equal(r1.dtype, np.float32)
numpy/random/tests/test_smoke.py:522:        assert_(comp_state(rg.bit_generator.state, rg2.bit_generator.state))
numpy/random/tests/test_smoke.py:533:        assert_array_equal(r1, r2)
numpy/random/tests/test_smoke.py:534:        assert_equal(r1.dtype, np.float32)
numpy/random/tests/test_smoke.py:535:        assert_(comp_state(rg.bit_generator.state, rg2.bit_generator.state))
numpy/random/tests/test_smoke.py:546:        assert_equal(direct, existing)
numpy/random/tests/test_smoke.py:557:        assert_equal(direct, existing)
numpy/random/tests/test_smoke.py:568:        assert_equal(direct, existing)
numpy/random/tests/test_smoke.py:575:        assert_equal(direct, existing)
numpy/random/tests/test_smoke.py:586:        assert_equal(direct, existing)
numpy/random/tests/test_smoke.py:593:        assert_equal(direct, existing)
numpy/random/tests/test_smoke.py:604:        assert_equal(direct, existing)
numpy/random/tests/test_smoke.py:611:        assert_equal(direct, existing)
numpy/random/tests/test_smoke.py:623:        assert_equal(direct, existing)
numpy/random/tests/test_smoke.py:630:        assert_equal(direct, existing)
numpy/random/tests/test_smoke.py:667:        assert_equal(a, b)
numpy/random/tests/test_smoke.py:670:        assert_equal(a, c)
numpy/random/tests/test_smoke.py:675:        assert_equal(a, d)
numpy/random/tests/test_smoke.py:680:        assert_equal(a, e)
numpy/random/tests/test_smoke.py:686:        assert_equal(a, b)
numpy/random/tests/test_smoke.py:693:        assert out.shape == (1,)
numpy/random/tests/test_smoke.py:696:        assert out.shape == (1,)
numpy/random/tests/test_smoke.py:699:        assert out.shape == (1,)
numpy/random/tests/test_smoke.py:737:        assert_((state[1] == state2['state']['key']).all())
numpy/random/tests/test_smoke.py:738:        assert_((state[2] == state2['state']['pos']))
numpy/random/tests/test_smoke.py:805:        assert_(isinstance(self.rg.bit_generator, PCG64))
numpy/random/tests/test_randomstate_regression.py:20:            assert_(np.all(r > -np.pi) and np.all(r <= np.pi))
numpy/random/tests/test_randomstate_regression.py:24:        assert_(np.all(random.hypergeometric(3, 18, 11, size=10) < 4))
numpy/random/tests/test_randomstate_regression.py:25:        assert_(np.all(random.hypergeometric(18, 3, 11, size=10) > 0))
numpy/random/tests/test_randomstate_regression.py:36:            assert_(random.hypergeometric(*arg) > 0)
numpy/random/tests/test_randomstate_regression.py:48:        assert_(freq > 0.45, msg)
numpy/random/tests/test_randomstate_regression.py:52:        assert_(freq < 0.23, msg)
numpy/random/tests/test_randomstate_regression.py:64:            assert_array_equal(np.array(shuffled, dtype=object), expected)
numpy/random/tests/test_randomstate_regression.py:74:            assert_array_equal(m.choice(10, size=10, p=np.ones(10)/10.), res)
numpy/random/tests/test_randomstate_regression.py:89:        assert_(not np.any(np.isnan(x)), 'Nans in random.beta')
numpy/random/tests/test_randomstate_regression.py:101:            assert_(c in a)
numpy/random/tests/test_randomstate_regression.py:102:            assert_raises(ValueError, random.choice, a, p=probs*0.9)
numpy/random/tests/test_randomstate_regression.py:140:        assert_array_equal(perm, np.array([0, 2, 1]))
numpy/random/tests/test_randomstate_regression.py:141:        assert_array_equal(orig, np.arange(3).view(N))
numpy/random/tests/test_randomstate_regression.py:152:        assert_array_equal(perm, np.array([2, 1, 4, 0, 3]))
numpy/random/tests/test_randomstate_regression.py:153:        assert_array_equal(m.__array__(), np.arange(5))
numpy/random/tests/test_randomstate_regression.py:165:        assert rs1.randint(0, 100) == rs2.randint(0, 100)
numpy/random/tests/test_randomstate_regression.py:170:        assert c.dtype == np.dtype(int)
numpy/random/tests/test_randomstate_regression.py:172:        assert c.dtype == np.dtype(int)
numpy/random/tests/test_randomstate_regression.py:174:        assert c.dtype == np.dtype(int)
numpy/random/tests/test_randomstate_regression.py:176:        assert c.dtype == np.dtype(int)
numpy/random/tests/test_randomstate_regression.py:187:        assert_array_equal(actual, expected)
numpy/random/tests/test_randomstate_regression.py:193:        assert_array_equal(random.binomial(1, [0, 0.25, 0.5, 0.75, 1]),
numpy/random/tests/test_randomstate_regression.py:202:        assert_array_equal(random.binomial([[0], [10]], 0.25, size=(2, 10)),
numpy/random/tests/test_randomstate_regression.py:209:    assert random.multinomial(10, []).shape == (0,)
numpy/random/tests/test_randomstate_regression.py:210:    assert random.multinomial(3, [], size=(7, 5, 3)).shape == (7, 5, 3, 0)
numpy/random/tests/test_seed_sequence.py:52:        assert_array_equal(state, expected)
numpy/random/tests/test_seed_sequence.py:54:        assert_array_equal(state64, expected64)
numpy/random/tests/test_seed_sequence.py:64:    assert_array_compare(
numpy/random/tests/test_seed_sequence.py:73:    assert_array_equal(SeedSequence(42).generate_state(4), expected42)
numpy/random/tests/test_seed_sequence.py:77:    assert_array_compare(
numpy/random/tests/test_generator_mt19937_regressions.py:16:            assert_(np.all(r > -np.pi) and np.all(r <= np.pi))
numpy/random/tests/test_generator_mt19937_regressions.py:20:        assert_(np.all(mt19937.hypergeometric(3, 18, 11, size=10) < 4))
numpy/random/tests/test_generator_mt19937_regressions.py:21:        assert_(np.all(mt19937.hypergeometric(18, 3, 11, size=10) > 0))
numpy/random/tests/test_generator_mt19937_regressions.py:25:        assert_(mt19937.hypergeometric(*args) > 0)
numpy/random/tests/test_generator_mt19937_regressions.py:37:        assert_(freq > 0.45, msg)
numpy/random/tests/test_generator_mt19937_regressions.py:41:        assert_(freq < 0.23, msg)
numpy/random/tests/test_generator_mt19937_regressions.py:53:            assert_array_equal(np.array(shuffled, dtype=object), expected)
numpy/random/tests/test_generator_mt19937_regressions.py:62:            assert_array_equal(m.choice(10, size=10, p=np.ones(10)/10.), res)
numpy/random/tests/test_generator_mt19937_regressions.py:77:        assert_(not np.any(np.isnan(x)), 'Nans in mt19937.beta')
numpy/random/tests/test_generator_mt19937_regressions.py:89:            assert_(c in a)
numpy/random/tests/test_generator_mt19937_regressions.py:129:        assert_array_equal(perm, np.array([2, 0, 1]))
numpy/random/tests/test_generator_mt19937_regressions.py:130:        assert_array_equal(orig, np.arange(3).view(N))
numpy/random/tests/test_generator_mt19937_regressions.py:141:        assert_array_equal(perm, np.array([4, 1, 3, 0, 2]))
numpy/random/tests/test_generator_mt19937_regressions.py:142:        assert_array_equal(m.__array__(), np.arange(5))
numpy/random/tests/test_generator_mt19937_regressions.py:145:        assert mt19937.standard_gamma(0.0) == 0.0
numpy/random/tests/test_generator_mt19937_regressions.py:146:        assert_array_equal(mt19937.standard_gamma([0.0]), 0.0)
numpy/random/tests/test_generator_mt19937_regressions.py:150:        assert_array_equal(actual, expected)
numpy/random/tests/test_random.py:18:        assert_equal(s.randint(1000), 684)
numpy/random/tests/test_random.py:20:        assert_equal(s.randint(1000), 419)
numpy/random/tests/test_random.py:24:        assert_equal(s.randint(1000), 468)
numpy/random/tests/test_random.py:26:        assert_equal(s.randint(1000), 468)
numpy/random/tests/test_random.py:28:        assert_equal(s.randint(1000), 973)
numpy/random/tests/test_random.py:30:        assert_equal(s.randint(1000), 265)
numpy/random/tests/test_random.py:34:        assert_raises(TypeError, np.random.RandomState, -0.5)
numpy/random/tests/test_random.py:35:        assert_raises(ValueError, np.random.RandomState, -1)
numpy/random/tests/test_random.py:39:        assert_raises(TypeError, np.random.RandomState, [-0.5])
numpy/random/tests/test_random.py:40:        assert_raises(ValueError, np.random.RandomState, [-1])
numpy/random/tests/test_random.py:41:        assert_raises(ValueError, np.random.RandomState, [4294967296])
numpy/random/tests/test_random.py:42:        assert_raises(ValueError, np.random.RandomState, [1, 2, 4294967296])
numpy/random/tests/test_random.py:43:        assert_raises(ValueError, np.random.RandomState, [1, -2, 4294967296])
numpy/random/tests/test_random.py:49:        assert_raises(ValueError, np.random.RandomState, [[1, 2, 3]])
numpy/random/tests/test_random.py:61:            assert_(random.binomial(0, p) == 0)
numpy/random/tests/test_random.py:62:            assert_array_equal(random.binomial(zeros, p), zeros)
numpy/random/tests/test_random.py:66:        assert_raises(ValueError, random.binomial, 1, np.nan)
numpy/random/tests/test_random.py:77:        assert_(-5 <= random.randint(-5, -1) < -1)
numpy/random/tests/test_random.py:79:        assert_(np.all(-5 <= x))
numpy/random/tests/test_random.py:80:        assert_(np.all(x < -1))
numpy/random/tests/test_random.py:85:        assert_equal(np.random.multinomial(1, p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_random.py:86:        assert_equal(np.random.multinomial(1, p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_random.py:87:        assert_equal(np.random.multinomial(1, p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_random.py:88:        assert_equal(np.random.multinomial(1, p, [2, 2]).shape, (2, 2, 2))
numpy/random/tests/test_random.py:89:        assert_equal(np.random.multinomial(1, p, (2, 2)).shape, (2, 2, 2))
numpy/random/tests/test_random.py:90:        assert_equal(np.random.multinomial(1, p, np.array((2, 2))).shape,
numpy/random/tests/test_random.py:97:        assert_raises(ValueError, np.random.multinomial, 10, [[0, 1]])
numpy/random/tests/test_random.py:98:        assert_raises(ValueError, np.random.multinomial, 10, [[0], [1]])
numpy/random/tests/test_random.py:99:        assert_raises(ValueError, np.random.multinomial, 10, [[[0], [1]], [[1], [0]]])
numpy/random/tests/test_random.py:100:        assert_raises(ValueError, np.random.multinomial, 10, np.array([[0, 1], [1, 0]]))
numpy/random/tests/test_random.py:113:        assert_(np.all(old == new))
numpy/random/tests/test_random.py:120:        assert_(np.all(old == new))
numpy/random/tests/test_random.py:131:        assert_(np.all(old == new))
numpy/random/tests/test_random.py:142:        assert_(np.all(x1 == x2))
numpy/random/tests/test_random.py:143:        assert_(np.all(x1 == x3))
numpy/random/tests/test_random.py:160:        assert_raises(TypeError, self.rfunc, 1, dtype=float)
numpy/random/tests/test_random.py:166:            assert_raises(ValueError, self.rfunc, lbnd - 1, ubnd, dtype=dt)
numpy/random/tests/test_random.py:167:            assert_raises(ValueError, self.rfunc, lbnd, ubnd + 1, dtype=dt)
numpy/random/tests/test_random.py:168:            assert_raises(ValueError, self.rfunc, ubnd, lbnd, dtype=dt)
numpy/random/tests/test_random.py:169:            assert_raises(ValueError, self.rfunc, 1, 0, dtype=dt)
numpy/random/tests/test_random.py:177:            assert_equal(self.rfunc(tgt, tgt + 1, size=1000, dtype=dt), tgt)
numpy/random/tests/test_random.py:180:            assert_equal(self.rfunc(tgt, tgt + 1, size=1000, dtype=dt), tgt)
numpy/random/tests/test_random.py:183:            assert_equal(self.rfunc(tgt, tgt + 1, size=1000, dtype=dt), tgt)
numpy/random/tests/test_random.py:206:                assert_(vals.max() < ubnd)
numpy/random/tests/test_random.py:207:                assert_(vals.min() >= 2)
numpy/random/tests/test_random.py:211:        assert_(vals.max() < 2)
numpy/random/tests/test_random.py:212:        assert_(vals.min() >= 0)
numpy/random/tests/test_random.py:239:            assert_(tgt[np.dtype(dt).name] == res)
numpy/random/tests/test_random.py:245:        assert_(tgt[np.dtype(bool).name] == res)
numpy/random/tests/test_random.py:268:        assert_equal(actual, tgt)
numpy/random/tests/test_random.py:277:            assert_equal(sample.dtype, np.dtype(dt))
numpy/random/tests/test_random.py:285:            assert_(not hasattr(sample, 'dtype'))
numpy/random/tests/test_random.py:286:            assert_equal(type(sample), dt)
numpy/random/tests/test_random.py:302:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:310:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:318:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:325:            assert_(len(w) == 1)
numpy/random/tests/test_random.py:329:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:341:            assert_(len(w) == 1)
numpy/random/tests/test_random.py:344:        assert_equal(actual, desired)
numpy/random/tests/test_random.py:366:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:372:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:378:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:384:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:391:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:397:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:401:        assert_raises(ValueError, sample, -1, 3)
numpy/random/tests/test_random.py:402:        assert_raises(ValueError, sample, 3., 3)
numpy/random/tests/test_random.py:403:        assert_raises(ValueError, sample, [[1, 2], [3, 4]], 3)
numpy/random/tests/test_random.py:404:        assert_raises(ValueError, sample, [], 3)
numpy/random/tests/test_random.py:407:        assert_raises(ValueError, sample, [1, 2], 3, p=[0.4, 0.4, 0.2])
numpy/random/tests/test_random.py:408:        assert_raises(ValueError, sample, [1, 2], 3, p=[1.1, -0.1])
numpy/random/tests/test_random.py:409:        assert_raises(ValueError, sample, [1, 2], 3, p=[0.4, 0.4])
numpy/random/tests/test_random.py:410:        assert_raises(ValueError, sample, [1, 2, 3], 4, replace=False)
numpy/random/tests/test_random.py:412:        assert_raises(ValueError, sample, [1, 2, 3], -2, replace=False)
numpy/random/tests/test_random.py:413:        assert_raises(ValueError, sample, [1, 2, 3], (-1,), replace=False)
numpy/random/tests/test_random.py:414:        assert_raises(ValueError, sample, [1, 2, 3], (-1, 1), replace=False)
numpy/random/tests/test_random.py:421:        assert_(np.isscalar(np.random.choice(2, replace=True)))
numpy/random/tests/test_random.py:422:        assert_(np.isscalar(np.random.choice(2, replace=False)))
numpy/random/tests/test_random.py:423:        assert_(np.isscalar(np.random.choice(2, replace=True, p=p)))
numpy/random/tests/test_random.py:424:        assert_(np.isscalar(np.random.choice(2, replace=False, p=p)))
numpy/random/tests/test_random.py:425:        assert_(np.isscalar(np.random.choice([1, 2], replace=True)))
numpy/random/tests/test_random.py:426:        assert_(np.random.choice([None], replace=True) is None)
numpy/random/tests/test_random.py:430:        assert_(np.random.choice(arr, replace=True) is a)
numpy/random/tests/test_random.py:434:        assert_(not np.isscalar(np.random.choice(2, s, replace=True)))
numpy/random/tests/test_random.py:435:        assert_(not np.isscalar(np.random.choice(2, s, replace=False)))
numpy/random/tests/test_random.py:436:        assert_(not np.isscalar(np.random.choice(2, s, replace=True, p=p)))
numpy/random/tests/test_random.py:437:        assert_(not np.isscalar(np.random.choice(2, s, replace=False, p=p)))
numpy/random/tests/test_random.py:438:        assert_(not np.isscalar(np.random.choice([1, 2], s, replace=True)))
numpy/random/tests/test_random.py:439:        assert_(np.random.choice([None], s, replace=True).ndim == 0)
numpy/random/tests/test_random.py:443:        assert_(np.random.choice(arr, s, replace=True).item() is a)
numpy/random/tests/test_random.py:448:        assert_equal(np.random.choice(6, s, replace=True).shape, s)
numpy/random/tests/test_random.py:449:        assert_equal(np.random.choice(6, s, replace=False).shape, s)
numpy/random/tests/test_random.py:450:        assert_equal(np.random.choice(6, s, replace=True, p=p).shape, s)
numpy/random/tests/test_random.py:451:        assert_equal(np.random.choice(6, s, replace=False, p=p).shape, s)
numpy/random/tests/test_random.py:452:        assert_equal(np.random.choice(np.arange(6), s, replace=True).shape, s)
numpy/random/tests/test_random.py:455:        assert_equal(np.random.randint(0, 0, size=(3, 0, 4)).shape, (3, 0, 4))
numpy/random/tests/test_random.py:456:        assert_equal(np.random.randint(0, -10, size=0).shape, (0,))
numpy/random/tests/test_random.py:457:        assert_equal(np.random.randint(10, 10, size=0).shape, (0,))
numpy/random/tests/test_random.py:458:        assert_equal(np.random.choice(0, size=0).shape, (0,))
numpy/random/tests/test_random.py:459:        assert_equal(np.random.choice([], size=(0,)).shape, (0,))
numpy/random/tests/test_random.py:460:        assert_equal(np.random.choice(['a', 'b'], size=(3, 0, 4)).shape,
numpy/random/tests/test_random.py:462:        assert_raises(ValueError, np.random.choice, [], 10)
numpy/random/tests/test_random.py:467:        assert_raises(ValueError, np.random.choice, a, p=p)
numpy/random/tests/test_random.py:473:        assert_equal(actual, desired)
numpy/random/tests/test_random.py:499:            assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:541:        assert all(id(i) in item_ids for i in arr)
numpy/random/tests/test_random.py:550:            assert all(id(i) in item_ids for i in arr)
numpy/random/tests/test_random.py:559:        assert_equal(np.asarray(a), [0, 1, 4, 3, 2])
numpy/random/tests/test_random.py:562:        assert_equal(np.asarray(a), [0, 1, 2, 3, 4])
numpy/random/tests/test_random.py:565:        assert_equal(np.asarray(a), [4, 1, 0, 3, 2])
numpy/random/tests/test_random.py:580:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:588:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:596:        assert_array_almost_equal(actual, desired, decimal=13)
numpy/random/tests/test_random.py:608:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:613:        assert_equal(np.random.dirichlet(p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_random.py:614:        assert_equal(np.random.dirichlet(p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_random.py:615:        assert_equal(np.random.dirichlet(p, np.uint32(1)).shape, (1, 2))
numpy/random/tests/test_random.py:616:        assert_equal(np.random.dirichlet(p, [2, 2]).shape, (2, 2, 2))
numpy/random/tests/test_random.py:617:        assert_equal(np.random.dirichlet(p, (2, 2)).shape, (2, 2, 2))
numpy/random/tests/test_random.py:618:        assert_equal(np.random.dirichlet(p, np.array((2, 2))).shape, (2, 2, 2))
numpy/random/tests/test_random.py:620:        assert_raises(TypeError, np.random.dirichlet, p, float(1))
numpy/random/tests/test_random.py:625:        assert_raises(ValueError, np.random.mtrand.dirichlet, alpha)
numpy/random/tests/test_random.py:628:        assert_raises(ValueError, random.dirichlet, [[5, 1]])
numpy/random/tests/test_random.py:629:        assert_raises(ValueError, random.dirichlet, [[5], [1]])
numpy/random/tests/test_random.py:630:        assert_raises(ValueError, random.dirichlet, [[[5], [1]], [[1], [5]]])
numpy/random/tests/test_random.py:631:        assert_raises(ValueError, random.dirichlet, np.array([[5, 1], [1, 5]]))
numpy/random/tests/test_random.py:639:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:642:        assert_equal(np.random.exponential(scale=0), 0)
numpy/random/tests/test_random.py:643:        assert_raises(ValueError, np.random.exponential, scale=-0.)
numpy/random/tests/test_random.py:651:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:659:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:662:        assert_equal(np.random.gamma(shape=0, scale=0), 0)
numpy/random/tests/test_random.py:663:        assert_raises(ValueError, np.random.gamma, shape=-0., scale=-0.)
numpy/random/tests/test_random.py:671:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:679:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:682:        assert_equal(np.random.gumbel(scale=0), 0)
numpy/random/tests/test_random.py:683:        assert_raises(ValueError, np.random.gumbel, scale=-0.)
numpy/random/tests/test_random.py:691:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:696:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:700:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:705:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:709:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:717:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:720:        assert_equal(np.random.laplace(scale=0), 0)
numpy/random/tests/test_random.py:721:        assert_raises(ValueError, np.random.laplace, scale=-0.)
numpy/random/tests/test_random.py:729:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:737:        assert_array_almost_equal(actual, desired, decimal=13)
numpy/random/tests/test_random.py:740:        assert_equal(np.random.lognormal(sigma=0), 1)
numpy/random/tests/test_random.py:741:        assert_raises(ValueError, np.random.lognormal, sigma=-0.)
numpy/random/tests/test_random.py:749:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:760:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:775:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:780:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:786:        assert_warns(RuntimeWarning, np.random.multivariate_normal, mean, cov)
numpy/random/tests/test_random.py:789:        assert_no_warnings(np.random.multivariate_normal, mean, cov,
numpy/random/tests/test_random.py:800:            assert len(w) == 0
numpy/random/tests/test_random.py:808:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:816:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:822:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:829:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:838:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:846:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:849:        assert_equal(np.random.normal(scale=0), 0)
numpy/random/tests/test_random.py:850:        assert_raises(ValueError, np.random.normal, scale=-0.)
numpy/random/tests/test_random.py:873:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:878:        assert_raises(ValueError, np.random.poisson, lamneg)
numpy/random/tests/test_random.py:879:        assert_raises(ValueError, np.random.poisson, [lamneg]*10)
numpy/random/tests/test_random.py:880:        assert_raises(ValueError, np.random.poisson, lambig)
numpy/random/tests/test_random.py:881:        assert_raises(ValueError, np.random.poisson, [lambig]*10)
numpy/random/tests/test_random.py:889:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:897:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:900:        assert_equal(np.random.rayleigh(scale=0), 0)
numpy/random/tests/test_random.py:901:        assert_raises(ValueError, np.random.rayleigh, scale=-0.)
numpy/random/tests/test_random.py:909:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:917:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:925:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:928:        assert_equal(np.random.standard_gamma(shape=0), 0)
numpy/random/tests/test_random.py:929:        assert_raises(ValueError, np.random.standard_gamma, shape=-0.)
numpy/random/tests/test_random.py:937:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:945:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:954:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:962:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:969:        assert_raises(OverflowError, func, -np.inf, 0)
numpy/random/tests/test_random.py:970:        assert_raises(OverflowError, func,  0,      np.inf)
numpy/random/tests/test_random.py:971:        assert_raises(OverflowError, func,  fmin,   fmax)
numpy/random/tests/test_random.py:972:        assert_raises(OverflowError, func, [-np.inf], [0])
numpy/random/tests/test_random.py:973:        assert_raises(OverflowError, func, [0], [np.inf])
numpy/random/tests/test_random.py:1002:        assert_raises(TypeError, np.random.hypergeometric, throwing_int, 1, 1)
numpy/random/tests/test_random.py:1010:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:1024:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1032:        assert_array_almost_equal(actual, desired, decimal=15)
numpy/random/tests/test_random.py:1036:        assert_equal(np.random.weibull(a=0, size=12), np.zeros(12))
numpy/random/tests/test_random.py:1037:        assert_raises(ValueError, np.random.weibull, a=-0.)
numpy/random/tests/test_random.py:1045:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:1070:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1074:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1087:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1088:        assert_raises(ValueError, normal, loc * 3, bad_scale)
numpy/random/tests/test_random.py:1092:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1093:        assert_raises(ValueError, normal, loc, bad_scale * 3)
numpy/random/tests/test_random.py:1107:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1108:        assert_raises(ValueError, beta, bad_a * 3, b)
numpy/random/tests/test_random.py:1109:        assert_raises(ValueError, beta, a * 3, bad_b)
numpy/random/tests/test_random.py:1113:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1114:        assert_raises(ValueError, beta, bad_a, b * 3)
numpy/random/tests/test_random.py:1115:        assert_raises(ValueError, beta, a, bad_b * 3)
numpy/random/tests/test_random.py:1127:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1128:        assert_raises(ValueError, exponential, bad_scale * 3)
numpy/random/tests/test_random.py:1140:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1141:        assert_raises(ValueError, std_gamma, bad_shape * 3)
numpy/random/tests/test_random.py:1155:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1156:        assert_raises(ValueError, gamma, bad_shape * 3, scale)
numpy/random/tests/test_random.py:1157:        assert_raises(ValueError, gamma, shape * 3, bad_scale)
numpy/random/tests/test_random.py:1161:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1162:        assert_raises(ValueError, gamma, bad_shape, scale * 3)
numpy/random/tests/test_random.py:1163:        assert_raises(ValueError, gamma, shape, bad_scale * 3)
numpy/random/tests/test_random.py:1177:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1178:        assert_raises(ValueError, f, bad_dfnum * 3, dfden)
numpy/random/tests/test_random.py:1179:        assert_raises(ValueError, f, dfnum * 3, bad_dfden)
numpy/random/tests/test_random.py:1183:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1184:        assert_raises(ValueError, f, bad_dfnum, dfden * 3)
numpy/random/tests/test_random.py:1185:        assert_raises(ValueError, f, dfnum, bad_dfden * 3)
numpy/random/tests/test_random.py:1201:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1202:        assert_raises(ValueError, nonc_f, bad_dfnum * 3, dfden, nonc)
numpy/random/tests/test_random.py:1203:        assert_raises(ValueError, nonc_f, dfnum * 3, bad_dfden, nonc)
numpy/random/tests/test_random.py:1204:        assert_raises(ValueError, nonc_f, dfnum * 3, dfden, bad_nonc)
numpy/random/tests/test_random.py:1208:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1209:        assert_raises(ValueError, nonc_f, bad_dfnum, dfden * 3, nonc)
numpy/random/tests/test_random.py:1210:        assert_raises(ValueError, nonc_f, dfnum, bad_dfden * 3, nonc)
numpy/random/tests/test_random.py:1211:        assert_raises(ValueError, nonc_f, dfnum, dfden * 3, bad_nonc)
numpy/random/tests/test_random.py:1215:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1216:        assert_raises(ValueError, nonc_f, bad_dfnum, dfden, nonc * 3)
numpy/random/tests/test_random.py:1217:        assert_raises(ValueError, nonc_f, dfnum, bad_dfden, nonc * 3)
numpy/random/tests/test_random.py:1218:        assert_raises(ValueError, nonc_f, dfnum, dfden, bad_nonc * 3)
numpy/random/tests/test_random.py:1224:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1236:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1237:        assert_raises(ValueError, chisquare, bad_df * 3)
numpy/random/tests/test_random.py:1251:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1252:        assert_raises(ValueError, nonc_chi, bad_df * 3, nonc)
numpy/random/tests/test_random.py:1253:        assert_raises(ValueError, nonc_chi, df * 3, bad_nonc)
numpy/random/tests/test_random.py:1257:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1258:        assert_raises(ValueError, nonc_chi, bad_df, nonc * 3)
numpy/random/tests/test_random.py:1259:        assert_raises(ValueError, nonc_chi, df, bad_nonc * 3)
numpy/random/tests/test_random.py:1271:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1272:        assert_raises(ValueError, t, bad_df * 3)
numpy/random/tests/test_random.py:1285:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1286:        assert_raises(ValueError, vonmises, mu * 3, bad_kappa)
numpy/random/tests/test_random.py:1290:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1291:        assert_raises(ValueError, vonmises, mu, bad_kappa * 3)
numpy/random/tests/test_random.py:1303:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1304:        assert_raises(ValueError, pareto, bad_a * 3)
numpy/random/tests/test_random.py:1316:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1317:        assert_raises(ValueError, weibull, bad_a * 3)
numpy/random/tests/test_random.py:1329:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1330:        assert_raises(ValueError, power, bad_a * 3)
numpy/random/tests/test_random.py:1343:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1344:        assert_raises(ValueError, laplace, loc * 3, bad_scale)
numpy/random/tests/test_random.py:1348:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1349:        assert_raises(ValueError, laplace, loc, bad_scale * 3)
numpy/random/tests/test_random.py:1362:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1363:        assert_raises(ValueError, gumbel, loc * 3, bad_scale)
numpy/random/tests/test_random.py:1367:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1368:        assert_raises(ValueError, gumbel, loc, bad_scale * 3)
numpy/random/tests/test_random.py:1381:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1382:        assert_raises(ValueError, logistic, loc * 3, bad_scale)
numpy/random/tests/test_random.py:1386:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1387:        assert_raises(ValueError, logistic, loc, bad_scale * 3)
numpy/random/tests/test_random.py:1400:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1401:        assert_raises(ValueError, lognormal, mean * 3, bad_sigma)
numpy/random/tests/test_random.py:1405:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1406:        assert_raises(ValueError, lognormal, mean, bad_sigma * 3)
numpy/random/tests/test_random.py:1418:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1419:        assert_raises(ValueError, rayleigh, bad_scale * 3)
numpy/random/tests/test_random.py:1433:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1434:        assert_raises(ValueError, wald, bad_mean * 3, scale)
numpy/random/tests/test_random.py:1435:        assert_raises(ValueError, wald, mean * 3, bad_scale)
numpy/random/tests/test_random.py:1439:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1440:        assert_raises(ValueError, wald, bad_mean, scale * 3)
numpy/random/tests/test_random.py:1441:        assert_raises(ValueError, wald, mean, bad_scale * 3)
numpy/random/tests/test_random.py:1442:        assert_raises(ValueError, wald, 0.0, 1)
numpy/random/tests/test_random.py:1443:        assert_raises(ValueError, wald, 0.5, 0.0)
numpy/random/tests/test_random.py:1459:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1460:        assert_raises(ValueError, triangular, bad_left_one * 3, mode, right)
numpy/random/tests/test_random.py:1461:        assert_raises(ValueError, triangular, left * 3, bad_mode_one, right)
numpy/random/tests/test_random.py:1467:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1468:        assert_raises(ValueError, triangular, bad_left_one, mode * 3, right)
numpy/random/tests/test_random.py:1469:        assert_raises(ValueError, triangular, left, bad_mode_one * 3, right)
numpy/random/tests/test_random.py:1475:        assert_array_almost_equal(actual, desired, decimal=14)
numpy/random/tests/test_random.py:1476:        assert_raises(ValueError, triangular, bad_left_one, mode, right * 3)
numpy/random/tests/test_random.py:1477:        assert_raises(ValueError, triangular, left, bad_mode_one, right * 3)
numpy/random/tests/test_random.py:1492:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:1493:        assert_raises(ValueError, binom, bad_n * 3, p)
numpy/random/tests/test_random.py:1494:        assert_raises(ValueError, binom, n * 3, bad_p_one)
numpy/random/tests/test_random.py:1495:        assert_raises(ValueError, binom, n * 3, bad_p_two)
numpy/random/tests/test_random.py:1499:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:1500:        assert_raises(ValueError, binom, bad_n, p * 3)
numpy/random/tests/test_random.py:1501:        assert_raises(ValueError, binom, n, bad_p_one * 3)
numpy/random/tests/test_random.py:1502:        assert_raises(ValueError, binom, n, bad_p_two * 3)
numpy/random/tests/test_random.py:1515:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:1516:        assert_raises(ValueError, neg_binom, bad_n * 3, p)
numpy/random/tests/test_random.py:1517:        assert_raises(ValueError, neg_binom, n * 3, bad_p_one)
numpy/random/tests/test_random.py:1518:        assert_raises(ValueError, neg_binom, n * 3, bad_p_two)
numpy/random/tests/test_random.py:1522:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:1523:        assert_raises(ValueError, neg_binom, bad_n, p * 3)
numpy/random/tests/test_random.py:1524:        assert_raises(ValueError, neg_binom, n, bad_p_one * 3)
numpy/random/tests/test_random.py:1525:        assert_raises(ValueError, neg_binom, n, bad_p_two * 3)
numpy/random/tests/test_random.py:1538:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:1539:        assert_raises(ValueError, poisson, bad_lam_one * 3)
numpy/random/tests/test_random.py:1540:        assert_raises(ValueError, poisson, bad_lam_two * 3)
numpy/random/tests/test_random.py:1550:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:1551:        assert_raises(ValueError, zipf, bad_a * 3)
numpy/random/tests/test_random.py:1553:            assert_raises(ValueError, zipf, np.nan)
numpy/random/tests/test_random.py:1554:            assert_raises(ValueError, zipf, [0, 0, np.nan])
numpy/random/tests/test_random.py:1565:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:1566:        assert_raises(ValueError, geom, bad_p_one * 3)
numpy/random/tests/test_random.py:1567:        assert_raises(ValueError, geom, bad_p_two * 3)
numpy/random/tests/test_random.py:1582:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:1583:        assert_raises(ValueError, hypergeom, bad_ngood * 3, nbad, nsample)
numpy/random/tests/test_random.py:1584:        assert_raises(ValueError, hypergeom, ngood * 3, bad_nbad, nsample)
numpy/random/tests/test_random.py:1585:        assert_raises(ValueError, hypergeom, ngood * 3, nbad, bad_nsample_one)
numpy/random/tests/test_random.py:1586:        assert_raises(ValueError, hypergeom, ngood * 3, nbad, bad_nsample_two)
numpy/random/tests/test_random.py:1590:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:1591:        assert_raises(ValueError, hypergeom, bad_ngood, nbad * 3, nsample)
numpy/random/tests/test_random.py:1592:        assert_raises(ValueError, hypergeom, ngood, bad_nbad * 3, nsample)
numpy/random/tests/test_random.py:1593:        assert_raises(ValueError, hypergeom, ngood, nbad * 3, bad_nsample_one)
numpy/random/tests/test_random.py:1594:        assert_raises(ValueError, hypergeom, ngood, nbad * 3, bad_nsample_two)
numpy/random/tests/test_random.py:1598:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:1599:        assert_raises(ValueError, hypergeom, bad_ngood, nbad, nsample * 3)
numpy/random/tests/test_random.py:1600:        assert_raises(ValueError, hypergeom, ngood, bad_nbad, nsample * 3)
numpy/random/tests/test_random.py:1601:        assert_raises(ValueError, hypergeom, ngood, nbad, bad_nsample_one * 3)
numpy/random/tests/test_random.py:1602:        assert_raises(ValueError, hypergeom, ngood, nbad, bad_nsample_two * 3)
numpy/random/tests/test_random.py:1613:        assert_array_equal(actual, desired)
numpy/random/tests/test_random.py:1614:        assert_raises(ValueError, logseries, bad_p_one * 3)
numpy/random/tests/test_random.py:1615:        assert_raises(ValueError, logseries, bad_p_two * 3)
numpy/random/tests/test_random.py:1641:            assert_array_almost_equal(out1, out2)
numpy/random/tests/test_random.py:1643:            assert_array_equal(out1, out2)
numpy/random/tests/test_random.py:1686:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_random.py:1707:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_random.py:1710:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_random.py:1713:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_random.py:1739:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_random.py:1742:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_random.py:1745:            assert_equal(out.shape, self.tgtShape)
numpy/random/tests/test_regression.py:16:            assert_(np.all(r > -np.pi) and np.all(r <= np.pi))
numpy/random/tests/test_regression.py:20:        assert_(np.all(np.random.hypergeometric(3, 18, 11, size=10) < 4))
numpy/random/tests/test_regression.py:21:        assert_(np.all(np.random.hypergeometric(18, 3, 11, size=10) > 0))
numpy/random/tests/test_regression.py:32:            assert_(np.random.hypergeometric(*arg) > 0)
numpy/random/tests/test_regression.py:44:        assert_(freq > 0.45, msg)
numpy/random/tests/test_regression.py:48:        assert_(freq < 0.23, msg)
numpy/random/tests/test_regression.py:60:            assert_array_equal(np.array(shuffled, dtype=object), expected)
numpy/random/tests/test_regression.py:70:            assert_array_equal(m.choice(10, size=10, p=np.ones(10)/10.), res)
numpy/random/tests/test_regression.py:85:        assert_(not np.any(np.isnan(x)), 'Nans in np.random.beta')
numpy/random/tests/test_regression.py:97:            assert_(c in a)
numpy/random/tests/test_regression.py:98:            assert_raises(ValueError, np.random.choice, a, p=probs*0.9)
numpy/random/tests/test_regression.py:136:        assert_array_equal(perm, np.array([0, 2, 1]))
numpy/random/tests/test_regression.py:137:        assert_array_equal(orig, np.arange(3).view(N))
numpy/random/tests/test_regression.py:148:        assert_array_equal(perm, np.array([2, 1, 4, 0, 3]))
numpy/random/tests/test_regression.py:149:        assert_array_equal(m.__array__(), np.arange(5))
numpy/matrixlib/tests/test_defmatrix.py:16:        assert_(np.all(mA.A == A))
numpy/matrixlib/tests/test_defmatrix.py:24:        assert_(np.all(B.A == D))
numpy/matrixlib/tests/test_defmatrix.py:25:        assert_(np.all(C.A == D))
numpy/matrixlib/tests/test_defmatrix.py:29:        assert_(np.all(bmat([A, E]) == AEresult))
numpy/matrixlib/tests/test_defmatrix.py:33:        assert_(mvec.shape == (1, 5))
numpy/matrixlib/tests/test_defmatrix.py:37:        assert_raises(ValueError, matrix, "invalid")
numpy/matrixlib/tests/test_defmatrix.py:50:        assert_(np.all(bmat("A,A;A,A") == Aresult))
numpy/matrixlib/tests/test_defmatrix.py:51:        assert_(np.all(bmat("A,A;A,A", ldict={'A':B}) == Aresult))
numpy/matrixlib/tests/test_defmatrix.py:52:        assert_raises(TypeError, bmat, "A,A;A,A", gdict={'A':B})
numpy/matrixlib/tests/test_defmatrix.py:56:        assert_(np.all(b2 == mixresult))
numpy/matrixlib/tests/test_defmatrix.py:71:        assert_array_equal(sum0, M.sum(axis=0))
numpy/matrixlib/tests/test_defmatrix.py:72:        assert_array_equal(sum1, M.sum(axis=1))
numpy/matrixlib/tests/test_defmatrix.py:73:        assert_equal(sumall, M.sum())
numpy/matrixlib/tests/test_defmatrix.py:75:        assert_array_equal(sum0, np.sum(M, axis=0))
numpy/matrixlib/tests/test_defmatrix.py:76:        assert_array_equal(sum1, np.sum(M, axis=1))
numpy/matrixlib/tests/test_defmatrix.py:77:        assert_equal(sumall, np.sum(M))
numpy/matrixlib/tests/test_defmatrix.py:81:        assert_equal(x.prod(), 720)
numpy/matrixlib/tests/test_defmatrix.py:82:        assert_equal(x.prod(0), matrix([[4, 10, 18]]))
numpy/matrixlib/tests/test_defmatrix.py:83:        assert_equal(x.prod(1), matrix([[6], [120]]))
numpy/matrixlib/tests/test_defmatrix.py:85:        assert_equal(np.prod(x), 720)
numpy/matrixlib/tests/test_defmatrix.py:86:        assert_equal(np.prod(x, axis=0), matrix([[4, 10, 18]]))
numpy/matrixlib/tests/test_defmatrix.py:87:        assert_equal(np.prod(x, axis=1), matrix([[6], [120]]))
numpy/matrixlib/tests/test_defmatrix.py:90:        assert_(y.prod() == 0)
numpy/matrixlib/tests/test_defmatrix.py:94:        assert_equal(x.max(), 6)
numpy/matrixlib/tests/test_defmatrix.py:95:        assert_equal(x.max(0), matrix([[4, 5, 6]]))
numpy/matrixlib/tests/test_defmatrix.py:96:        assert_equal(x.max(1), matrix([[3], [6]]))
numpy/matrixlib/tests/test_defmatrix.py:98:        assert_equal(np.max(x), 6)
numpy/matrixlib/tests/test_defmatrix.py:99:        assert_equal(np.max(x, axis=0), matrix([[4, 5, 6]]))
numpy/matrixlib/tests/test_defmatrix.py:100:        assert_equal(np.max(x, axis=1), matrix([[3], [6]]))
numpy/matrixlib/tests/test_defmatrix.py:104:        assert_equal(x.min(), 1)
numpy/matrixlib/tests/test_defmatrix.py:105:        assert_equal(x.min(0), matrix([[1, 2, 3]]))
numpy/matrixlib/tests/test_defmatrix.py:106:        assert_equal(x.min(1), matrix([[1], [4]]))
numpy/matrixlib/tests/test_defmatrix.py:108:        assert_equal(np.min(x), 1)
numpy/matrixlib/tests/test_defmatrix.py:109:        assert_equal(np.min(x, axis=0), matrix([[1, 2, 3]]))
numpy/matrixlib/tests/test_defmatrix.py:110:        assert_equal(np.min(x, axis=1), matrix([[1], [4]]))
numpy/matrixlib/tests/test_defmatrix.py:114:        assert_(x.ptp() == 3)
numpy/matrixlib/tests/test_defmatrix.py:115:        assert_(np.all(x.ptp(0) == np.array([2, 2])))
numpy/matrixlib/tests/test_defmatrix.py:116:        assert_(np.all(x.ptp(1) == np.array([1, 1])))
numpy/matrixlib/tests/test_defmatrix.py:121:        assert_equal(x.var(ddof=0), mx.var(ddof=0))
numpy/matrixlib/tests/test_defmatrix.py:122:        assert_equal(x.var(ddof=1), mx.var(ddof=1))
numpy/matrixlib/tests/test_defmatrix.py:130:        assert_(np.allclose(linalg.inv(A), mA.I))
numpy/matrixlib/tests/test_defmatrix.py:131:        assert_(np.all(np.array(np.transpose(A) == mA.T)))
numpy/matrixlib/tests/test_defmatrix.py:132:        assert_(np.all(np.array(np.transpose(A) == mA.H)))
numpy/matrixlib/tests/test_defmatrix.py:133:        assert_(np.all(A == mA.A))
numpy/matrixlib/tests/test_defmatrix.py:137:        assert_(np.allclose(linalg.inv(B), mB.I))
numpy/matrixlib/tests/test_defmatrix.py:138:        assert_(np.all(np.array(np.transpose(B) == mB.T)))
numpy/matrixlib/tests/test_defmatrix.py:139:        assert_(np.all(np.array(np.transpose(B).conj() == mB.H)))
numpy/matrixlib/tests/test_defmatrix.py:146:        assert_almost_equal(x.I, xpinv)
numpy/matrixlib/tests/test_defmatrix.py:152:        assert_(np.all(mB == A+0.1))
numpy/matrixlib/tests/test_defmatrix.py:153:        assert_(np.all(mB == matrix(A+0.1)))
numpy/matrixlib/tests/test_defmatrix.py:154:        assert_(not np.any(mB == matrix(A-0.1)))
numpy/matrixlib/tests/test_defmatrix.py:155:        assert_(np.all(mA < mB))
numpy/matrixlib/tests/test_defmatrix.py:156:        assert_(np.all(mA <= mB))
numpy/matrixlib/tests/test_defmatrix.py:157:        assert_(np.all(mA <= mA))
numpy/matrixlib/tests/test_defmatrix.py:158:        assert_(not np.any(mA < mA))
numpy/matrixlib/tests/test_defmatrix.py:160:        assert_(not np.any(mB < mA))
numpy/matrixlib/tests/test_defmatrix.py:161:        assert_(np.all(mB >= mA))
numpy/matrixlib/tests/test_defmatrix.py:162:        assert_(np.all(mB >= mB))
numpy/matrixlib/tests/test_defmatrix.py:163:        assert_(not np.any(mB > mB))
numpy/matrixlib/tests/test_defmatrix.py:165:        assert_(np.all(mA == mA))
numpy/matrixlib/tests/test_defmatrix.py:166:        assert_(not np.any(mA == mB))
numpy/matrixlib/tests/test_defmatrix.py:167:        assert_(np.all(mB != mA))
numpy/matrixlib/tests/test_defmatrix.py:169:        assert_(not np.all(abs(mA) > 0))
numpy/matrixlib/tests/test_defmatrix.py:170:        assert_(np.all(abs(mB > 0)))
numpy/matrixlib/tests/test_defmatrix.py:176:        assert_(A[0, 0] == mA[0, 0])
numpy/matrixlib/tests/test_defmatrix.py:180:        assert_(A.sum() == matrix(2))
numpy/matrixlib/tests/test_defmatrix.py:181:        assert_(A.mean() == matrix(0.5))
numpy/matrixlib/tests/test_defmatrix.py:185:        assert_(repr(A) == "matrix([[1, 0],\n        [0, 1]])")
numpy/matrixlib/tests/test_defmatrix.py:190:        assert_array_equal(A, B)
numpy/matrixlib/tests/test_defmatrix.py:200:        assert_(mB.dtype.type == np.float64)
numpy/matrixlib/tests/test_defmatrix.py:201:        assert_(np.all(mA != mB))
numpy/matrixlib/tests/test_defmatrix.py:202:        assert_(np.all(mB == mA+0.1))
numpy/matrixlib/tests/test_defmatrix.py:207:        assert_(mC.dtype.type == np.complex128)
numpy/matrixlib/tests/test_defmatrix.py:208:        assert_(np.all(mA != mB))
numpy/matrixlib/tests/test_defmatrix.py:220:            assert_(np.allclose((mA ** i).A, B))
numpy/matrixlib/tests/test_defmatrix.py:226:            assert_(np.allclose((mA ** -i).A, B))
numpy/matrixlib/tests/test_defmatrix.py:229:        assert_(np.allclose((mA * mA).A, np.dot(A, A)))
numpy/matrixlib/tests/test_defmatrix.py:230:        assert_(np.allclose((mA + mA).A, (A + A)))
numpy/matrixlib/tests/test_defmatrix.py:231:        assert_(np.allclose((3*mA).A, (3*A)))
numpy/matrixlib/tests/test_defmatrix.py:235:        assert_(np.allclose(mA2.A, 3*A))
numpy/matrixlib/tests/test_defmatrix.py:246:        assert_array_almost_equal(m2, m**2)
numpy/matrixlib/tests/test_defmatrix.py:247:        assert_array_almost_equal(m4, np.dot(m2, m2))
numpy/matrixlib/tests/test_defmatrix.py:248:        assert_array_almost_equal(np.dot(mi, m), np.eye(2))
numpy/matrixlib/tests/test_defmatrix.py:254:            assert_array_almost_equal(m ** 2, m ** two)
numpy/matrixlib/tests/test_defmatrix.py:304:                assert_(type(b) is matrix, "%s" % attrib)
numpy/matrixlib/tests/test_defmatrix.py:305:        assert_(type(a.real) is matrix)
numpy/matrixlib/tests/test_defmatrix.py:306:        assert_(type(a.imag) is matrix)
numpy/matrixlib/tests/test_defmatrix.py:308:        assert_(type(c) is np.ndarray)
numpy/matrixlib/tests/test_defmatrix.py:309:        assert_(type(d) is np.ndarray)
numpy/matrixlib/tests/test_defmatrix.py:318:        assert_equal(x, [[0, 1], [0, 0], [0, 0]])
numpy/matrixlib/tests/test_defmatrix.py:327:        assert_equal(x.ndim, 2)
numpy/matrixlib/tests/test_defmatrix.py:332:        assert_equal(x.shape, [2, 2, 2])
numpy/matrixlib/tests/test_defmatrix.py:336:        assert_equal(a.tolist(), [[1, 2], [3, 4]])
numpy/matrixlib/tests/test_defmatrix.py:341:        assert_(isinstance(x, matrix))
numpy/matrixlib/tests/test_defmatrix.py:342:        assert_equal(x, matrix([[3,  4,  3]]))
numpy/matrixlib/tests/test_defmatrix.py:344:        assert_(isinstance(x, matrix))
numpy/matrixlib/tests/test_defmatrix.py:345:        assert_equal(x, matrix([[3,  4], [1, 2]]))
numpy/matrixlib/tests/test_defmatrix.py:347:        assert_(isinstance(x, matrix))
numpy/matrixlib/tests/test_defmatrix.py:348:        assert_equal(x, matrix([[4,  3], [1,  2]]))
numpy/matrixlib/tests/test_defmatrix.py:352:        assert_equal(x[0][0], matrix([[1, 2, 3]]))
numpy/matrixlib/tests/test_defmatrix.py:353:        assert_equal(x[0][0].shape, (1, 3))
numpy/matrixlib/tests/test_defmatrix.py:354:        assert_equal(x[0].shape, (1, 3))
numpy/matrixlib/tests/test_defmatrix.py:355:        assert_equal(x[:, 0].shape, (2, 1))
numpy/matrixlib/tests/test_defmatrix.py:358:        assert_equal(x[0, 0], 0)
numpy/matrixlib/tests/test_defmatrix.py:359:        assert_equal(x[0], 0)
numpy/matrixlib/tests/test_defmatrix.py:360:        assert_equal(x[:, 0].shape, x.shape)
numpy/matrixlib/tests/test_defmatrix.py:364:        assert_equal(x[0, 0], x[0][0])
numpy/matrixlib/tests/test_defmatrix.py:368:        assert_array_equal(x[0,:], [[1, 0]])
numpy/matrixlib/tests/test_defmatrix.py:369:        assert_array_equal(x[1,:], [[0, 1]])
numpy/matrixlib/tests/test_defmatrix.py:370:        assert_array_equal(x[:, 0], [[1], [0]])
numpy/matrixlib/tests/test_defmatrix.py:371:        assert_array_equal(x[:, 1], [[0], [1]])
numpy/matrixlib/tests/test_defmatrix.py:377:        assert_array_equal(x[:, np.array([True, False])], x[:, 0])
numpy/matrixlib/tests/test_defmatrix.py:378:        assert_array_equal(x[np.array([True, False, False]),:], x[0,:])
numpy/matrixlib/tests/test_defmatrix.py:384:        assert_array_equal(x[:, [1, 0]], x[:, ::-1])
numpy/matrixlib/tests/test_defmatrix.py:385:        assert_array_equal(x[[2, 1, 0],:], x[::-1,:])
numpy/matrixlib/tests/test_defmatrix.py:391:        assert_(type(matrix_power(a, 2)) is np.ndarray)
numpy/matrixlib/tests/test_defmatrix.py:393:        assert_(type(matrix_power(a, 2)) is matrix)
numpy/matrixlib/tests/test_defmatrix.py:396:        assert_array_equal(matrix_power([[0, 1], [0, 0]], 2), [[0, 0], [0, 0]])
numpy/matrixlib/tests/test_defmatrix.py:405:        assert_equal(self.a.shape, (2, 1))
numpy/matrixlib/tests/test_defmatrix.py:406:        assert_equal(self.m.shape, (2, 1))
numpy/matrixlib/tests/test_defmatrix.py:409:        assert_equal(np.ravel(self.a).shape, (2,))
numpy/matrixlib/tests/test_defmatrix.py:410:        assert_equal(np.ravel(self.m).shape, (2,))
numpy/matrixlib/tests/test_defmatrix.py:413:        assert_equal(self.a.ravel().shape, (2,))
numpy/matrixlib/tests/test_defmatrix.py:414:        assert_equal(self.m.ravel().shape, (1, 2))
numpy/matrixlib/tests/test_defmatrix.py:417:        assert_equal(self.a.flatten().shape, (2,))
numpy/matrixlib/tests/test_defmatrix.py:418:        assert_equal(self.m.flatten().shape, (1, 2))
numpy/matrixlib/tests/test_defmatrix.py:422:        assert_equal(np.ravel(x), [1, 2, 3, 4, 5, 6])
numpy/matrixlib/tests/test_defmatrix.py:423:        assert_equal(np.ravel(x, order='F'), [1, 4, 2, 5, 3, 6])
numpy/matrixlib/tests/test_defmatrix.py:424:        assert_equal(np.ravel(x.T), [1, 4, 2, 5, 3, 6])
numpy/matrixlib/tests/test_defmatrix.py:425:        assert_equal(np.ravel(x.T, order='A'), [1, 2, 3, 4, 5, 6])
numpy/matrixlib/tests/test_defmatrix.py:427:        assert_equal(np.ravel(x), [1, 2, 3, 4, 5, 6])
numpy/matrixlib/tests/test_defmatrix.py:428:        assert_equal(np.ravel(x, order='F'), [1, 4, 2, 5, 3, 6])
numpy/matrixlib/tests/test_defmatrix.py:429:        assert_equal(np.ravel(x.T), [1, 4, 2, 5, 3, 6])
numpy/matrixlib/tests/test_defmatrix.py:430:        assert_equal(np.ravel(x.T, order='A'), [1, 2, 3, 4, 5, 6])
numpy/matrixlib/tests/test_defmatrix.py:434:        assert_equal(x.ravel(), [[1, 2, 3, 4, 5, 6]])
numpy/matrixlib/tests/test_defmatrix.py:435:        assert_equal(x.ravel(order='F'), [[1, 4, 2, 5, 3, 6]])
numpy/matrixlib/tests/test_defmatrix.py:436:        assert_equal(x.T.ravel(), [[1, 4, 2, 5, 3, 6]])
numpy/matrixlib/tests/test_defmatrix.py:437:        assert_equal(x.T.ravel(order='A'), [[1, 2, 3, 4, 5, 6]])
numpy/matrixlib/tests/test_defmatrix.py:440:        assert_(np.may_share_memory(self.a, self.a.ravel()))
numpy/matrixlib/tests/test_defmatrix.py:441:        assert_(not np.may_share_memory(self.a, self.a.flatten()))
numpy/matrixlib/tests/test_defmatrix.py:444:        assert_(np.may_share_memory(self.m, self.m.ravel()))
numpy/matrixlib/tests/test_defmatrix.py:445:        assert_(not np.may_share_memory(self.m, self.m.flatten()))
numpy/matrixlib/tests/test_defmatrix.py:452:        assert_equal(expanded.ndim, 3)
numpy/matrixlib/tests/test_defmatrix.py:453:        assert_(not isinstance(expanded, np.matrix))
numpy/matrixlib/tests/test_interaction.py:23:    assert_(isinstance(m[[0, 1, 0], :], np.matrix))
numpy/matrixlib/tests/test_interaction.py:28:    assert_equal(x[:2, np.array(-1)], x[:2, -1].T)
numpy/matrixlib/tests/test_interaction.py:38:    assert_(isinstance(res, np.matrix))
numpy/matrixlib/tests/test_interaction.py:46:    assert_equal(actual, expected)
numpy/matrixlib/tests/test_interaction.py:47:    assert_(type(expected) is np.matrix)
numpy/matrixlib/tests/test_interaction.py:56:    assert_equal(actual, expected)
numpy/matrixlib/tests/test_interaction.py:57:    assert_(type(expected) is np.matrix)
numpy/matrixlib/tests/test_interaction.py:65:    assert_equal(np.dot(arr, 3), desired)
numpy/matrixlib/tests/test_interaction.py:66:    assert_equal(np.dot(3, arr), desired)
numpy/matrixlib/tests/test_interaction.py:75:        assert_equal(np.inner(arr, sca), desired)
numpy/matrixlib/tests/test_interaction.py:76:        assert_equal(np.inner(sca, arr), desired)
numpy/matrixlib/tests/test_interaction.py:84:    assert_equal(np.inner(arr, 3), desired)
numpy/matrixlib/tests/test_interaction.py:85:    assert_equal(np.inner(3, arr), desired)
numpy/matrixlib/tests/test_interaction.py:98:    assert_(type(i.operands[2]) is np.matrix)
numpy/matrixlib/tests/test_interaction.py:99:    assert_(type(i.operands[2]) is not np.ndarray)
numpy/matrixlib/tests/test_interaction.py:100:    assert_equal(i.operands[2].shape, (2, 2))
numpy/matrixlib/tests/test_interaction.py:110:    assert_(type(i.operands[2]) is np.ndarray)
numpy/matrixlib/tests/test_interaction.py:111:    assert_(type(i.operands[2]) is not np.matrix)
numpy/matrixlib/tests/test_interaction.py:112:    assert_equal(i.operands[2].shape, (1, 2, 2))
numpy/matrixlib/tests/test_interaction.py:120:        assert_(type(b) is np.matrix)
numpy/matrixlib/tests/test_interaction.py:123:        assert_(type(c) is not np.matrix)
numpy/matrixlib/tests/test_interaction.py:131:    assert_(a is b)
numpy/matrixlib/tests/test_interaction.py:135:    assert_equal(a, b)
numpy/matrixlib/tests/test_interaction.py:136:    assert_equal(type(b), np.matrix)
numpy/matrixlib/tests/test_interaction.py:140:    assert_equal(a, b)
numpy/matrixlib/tests/test_interaction.py:141:    assert_(not (a is b))
numpy/matrixlib/tests/test_interaction.py:142:    assert_(type(b) is not np.matrix)
numpy/matrixlib/tests/test_interaction.py:149:    assert_raises_regex(ValueError, 'shape too large to be a matrix',
numpy/matrixlib/tests/test_interaction.py:158:    assert_equal(np.multiply(arr, 3), desired)
numpy/matrixlib/tests/test_interaction.py:159:    assert_equal(np.multiply(3, arr), desired)
numpy/matrixlib/tests/test_interaction.py:169:        assert_(isinstance(res, np.matrix))
numpy/matrixlib/tests/test_interaction.py:170:        assert_(res.shape == (1, 3))
numpy/matrixlib/tests/test_interaction.py:172:        assert_(isinstance(res, np.matrix))
numpy/matrixlib/tests/test_interaction.py:173:        assert_(res.shape == (3, 1))
numpy/matrixlib/tests/test_interaction.py:175:        assert_(np.isscalar(res))
numpy/matrixlib/tests/test_interaction.py:182:            assert_(isinstance(res, np.matrix))
numpy/matrixlib/tests/test_interaction.py:183:            assert_(not np.any(np.isnan(res)))
numpy/matrixlib/tests/test_interaction.py:184:            assert_(len(w) == 0)
numpy/matrixlib/tests/test_interaction.py:189:            assert_(isinstance(res, np.matrix))
numpy/matrixlib/tests/test_interaction.py:190:            assert_(np.isnan(res[1, 0]) and not np.isnan(res[0, 0])
numpy/matrixlib/tests/test_interaction.py:192:            assert_(len(w) == 1, 'no warning raised')
numpy/matrixlib/tests/test_interaction.py:193:            assert_(issubclass(w[0].category, RuntimeWarning))
numpy/matrixlib/tests/test_interaction.py:198:            assert_(np.isscalar(res))
numpy/matrixlib/tests/test_interaction.py:199:            assert_(res != np.nan)
numpy/matrixlib/tests/test_interaction.py:200:            assert_(len(w) == 0)
numpy/matrixlib/tests/test_interaction.py:211:        assert_(isinstance(res, np.matrix))
numpy/matrixlib/tests/test_interaction.py:212:        assert_(res.shape == (1, 3))
numpy/matrixlib/tests/test_interaction.py:214:        assert_(isinstance(res, np.matrix))
numpy/matrixlib/tests/test_interaction.py:215:        assert_(res.shape == (3, 1))
numpy/matrixlib/tests/test_interaction.py:217:        assert_(np.isscalar(res))
numpy/matrixlib/tests/test_interaction.py:221:        assert_(isinstance(res, np.matrix))
numpy/matrixlib/tests/test_interaction.py:222:        assert_(res.shape == (3, 3))
numpy/matrixlib/tests/test_interaction.py:224:        assert_(isinstance(res, np.matrix))
numpy/matrixlib/tests/test_interaction.py:225:        assert_(res.shape == (3, 3))
numpy/matrixlib/tests/test_interaction.py:227:        assert_(isinstance(res, np.matrix))
numpy/matrixlib/tests/test_interaction.py:228:        assert_(res.shape == (1, 3*3))
numpy/matrixlib/tests/test_interaction.py:234:    assert_array_equal(y.mean(0), np.average(y, 0))
numpy/matrixlib/tests/test_interaction.py:240:    assert_equal(type(r), np.matrix)
numpy/matrixlib/tests/test_interaction.py:241:    assert_equal(r, [[2.5, 10.0/3]])
numpy/matrixlib/tests/test_interaction.py:253:    assert_almost_equal(mr, r)
numpy/matrixlib/tests/test_interaction.py:273:    assert_(isinstance(result, np.matrix))
numpy/matrixlib/tests/test_interaction.py:274:    assert_array_equal(result, expected)
numpy/matrixlib/tests/test_interaction.py:277:    assert_(isinstance(result, np.matrix))
numpy/matrixlib/tests/test_interaction.py:278:    assert_array_equal(result, expected)
numpy/matrixlib/tests/test_interaction.py:285:    assert_equal(type(np.kron(a, a)), np.ndarray)
numpy/matrixlib/tests/test_interaction.py:286:    assert_equal(type(np.kron(m, m)), np.matrix)
numpy/matrixlib/tests/test_interaction.py:287:    assert_equal(type(np.kron(a, m)), np.matrix)
numpy/matrixlib/tests/test_interaction.py:288:    assert_equal(type(np.kron(m, a)), np.matrix)
numpy/matrixlib/tests/test_interaction.py:300:        assert_equal(type(ab_r), np.matrix)
numpy/matrixlib/tests/test_interaction.py:301:        assert_equal(type(ab_c), np.matrix)
numpy/matrixlib/tests/test_interaction.py:303:        assert_equal(np.array(ab_r), [[1, 2, 3, 4]])
numpy/matrixlib/tests/test_interaction.py:304:        assert_equal(np.array(ab_c), [[1], [2], [3], [4]])
numpy/matrixlib/tests/test_interaction.py:306:        assert_raises(ValueError, lambda: np.r_['rc', a, b])
numpy/matrixlib/tests/test_interaction.py:310:        assert_equal(type(r), np.matrix)
numpy/matrixlib/tests/test_interaction.py:311:        assert_equal(np.array(r), [[1, 2, 3]])
numpy/matrixlib/tests/test_interaction.py:321:        assert_equal(actual, expected)
numpy/matrixlib/tests/test_interaction.py:322:        assert_equal(type(actual), type(expected))
numpy/matrixlib/tests/test_interaction.py:328:        assert_equal(np.array([1, 2]), np.matrix([1, 2]))
numpy/matrixlib/tests/test_interaction.py:337:    assert_equal(msg, msg_reference)
numpy/matrixlib/tests/test_interaction.py:351:            assert_func(m, m)
numpy/matrixlib/tests/test_interaction.py:353:            assert_func(a, m)
numpy/matrixlib/tests/test_interaction.py:354:            assert_func(m, a)
numpy/matrixlib/tests/test_numeric.py:7:        assert_equal(b1*1.0, b1)
numpy/matrixlib/tests/test_numeric.py:15:    assert_equal(b1.diagonal(), diag_b1)
numpy/matrixlib/tests/test_numeric.py:16:    assert_equal(np.diagonal(b1), array_b1)
numpy/matrixlib/tests/test_numeric.py:17:    assert_equal(np.diag(b1), array_b1)
numpy/matrixlib/tests/test_masked_matrix.py:42:        assert_(type(x2[1, 0]) is type(x1[1, 0]))
numpy/matrixlib/tests/test_masked_matrix.py:43:        assert_(x1[1, 0] == x2[1, 0])
numpy/matrixlib/tests/test_masked_matrix.py:44:        assert_(x2[1, 1] is masked)
numpy/matrixlib/tests/test_masked_matrix.py:45:        assert_equal(x1[0, 2], x2[0, 2])
numpy/matrixlib/tests/test_masked_matrix.py:46:        assert_equal(x1[0, 1:], x2[0, 1:])
numpy/matrixlib/tests/test_masked_matrix.py:47:        assert_equal(x1[:, 2], x2[:, 2])
numpy/matrixlib/tests/test_masked_matrix.py:48:        assert_equal(x1[:], x2[:])
numpy/matrixlib/tests/test_masked_matrix.py:49:        assert_equal(x1[1:], x3[1:])
numpy/matrixlib/tests/test_masked_matrix.py:52:        assert_equal(x1, x2)
numpy/matrixlib/tests/test_masked_matrix.py:55:        assert_equal(x1, x2)
numpy/matrixlib/tests/test_masked_matrix.py:57:        assert_equal(x1, x2)
numpy/matrixlib/tests/test_masked_matrix.py:59:        assert_equal(x1, x2)
numpy/matrixlib/tests/test_masked_matrix.py:62:        assert_(allequal(getmask(x2), np.array([[0, 1, 0], [0, 1, 0]])))
numpy/matrixlib/tests/test_masked_matrix.py:64:        assert_(allequal(getmask(x3)[1], masked_array([1, 1, 0])))
numpy/matrixlib/tests/test_masked_matrix.py:65:        assert_(allequal(getmask(x3[1]), masked_array([1, 1, 0])))
numpy/matrixlib/tests/test_masked_matrix.py:67:        assert_(allequal(getmask(x4[1]), masked_array([1, 1, 0])))
numpy/matrixlib/tests/test_masked_matrix.py:68:        assert_(allequal(x4[1], masked_array([1, 2, 3])))
numpy/matrixlib/tests/test_masked_matrix.py:71:        assert_equal(x1, x2)
numpy/matrixlib/tests/test_masked_matrix.py:72:        assert_(allequal(masked_array([0, 0, 0, 1, 0], dtype=MaskType),
numpy/matrixlib/tests/test_masked_matrix.py:74:        assert_equal(3.0, x2.fill_value)
numpy/matrixlib/tests/test_masked_matrix.py:81:            assert_equal(a_pickled._mask, a._mask)
numpy/matrixlib/tests/test_masked_matrix.py:82:            assert_equal(a_pickled, a)
numpy/matrixlib/tests/test_masked_matrix.py:83:            assert_(isinstance(a_pickled._data, np.matrix))
numpy/matrixlib/tests/test_masked_matrix.py:88:        assert_equal(m.count(axis=0).shape, (1, 2))
numpy/matrixlib/tests/test_masked_matrix.py:89:        assert_equal(m.count(axis=1).shape, (2, 1))
numpy/matrixlib/tests/test_masked_matrix.py:92:        assert_equal(m.mean(axis=0), [[2., 3.]])
numpy/matrixlib/tests/test_masked_matrix.py:93:        assert_equal(m.mean(axis=1), [[1.5], [3.5]])
numpy/matrixlib/tests/test_masked_matrix.py:99:        assert_equal(test.flat[1], 2)
numpy/matrixlib/tests/test_masked_matrix.py:100:        assert_equal(test.flat[2], masked)
numpy/matrixlib/tests/test_masked_matrix.py:101:        assert_(np.all(test.flat[0:2] == test[0, 0:2]))
numpy/matrixlib/tests/test_masked_matrix.py:106:        assert_equal(test, control)
numpy/matrixlib/tests/test_masked_matrix.py:111:        assert_equal(test, control)
numpy/matrixlib/tests/test_masked_matrix.py:117:        assert_equal(b01.data, np.array([[1., 0.]]))
numpy/matrixlib/tests/test_masked_matrix.py:118:        assert_equal(b01.mask, np.array([[False, False]]))
numpy/matrixlib/tests/test_masked_matrix.py:132:        assert_(not mXbig.all())
numpy/matrixlib/tests/test_masked_matrix.py:133:        assert_(mXbig.any())
numpy/matrixlib/tests/test_masked_matrix.py:134:        assert_equal(mXbig.all(0), np.matrix([False, False, True]))
numpy/matrixlib/tests/test_masked_matrix.py:135:        assert_equal(mXbig.all(1), np.matrix([False, False, True]).T)
numpy/matrixlib/tests/test_masked_matrix.py:136:        assert_equal(mXbig.any(0), np.matrix([False, False, True]))
numpy/matrixlib/tests/test_masked_matrix.py:137:        assert_equal(mXbig.any(1), np.matrix([True, True, True]).T)
numpy/matrixlib/tests/test_masked_matrix.py:139:        assert_(not mXsmall.all())
numpy/matrixlib/tests/test_masked_matrix.py:140:        assert_(mXsmall.any())
numpy/matrixlib/tests/test_masked_matrix.py:141:        assert_equal(mXsmall.all(0), np.matrix([True, True, False]))
numpy/matrixlib/tests/test_masked_matrix.py:142:        assert_equal(mXsmall.all(1), np.matrix([False, False, False]).T)
numpy/matrixlib/tests/test_masked_matrix.py:143:        assert_equal(mXsmall.any(0), np.matrix([True, True, False]))
numpy/matrixlib/tests/test_masked_matrix.py:144:        assert_equal(mXsmall.any(1), np.matrix([True, True, False]).T)
numpy/matrixlib/tests/test_masked_matrix.py:149:        assert_equal(b, a)
numpy/matrixlib/tests/test_masked_matrix.py:150:        assert_(isinstance(b, np.matrix))
numpy/matrixlib/tests/test_masked_matrix.py:153:        assert_equal(b, [[2, 3, 4]])
numpy/matrixlib/tests/test_masked_matrix.py:158:        assert_equal(aravel.shape, (1, 5))
numpy/matrixlib/tests/test_masked_matrix.py:159:        assert_equal(aravel._mask.shape, a.shape)
numpy/matrixlib/tests/test_masked_matrix.py:168:        assert_equal(test, data)
numpy/matrixlib/tests/test_masked_matrix.py:169:        assert_(isinstance(test, np.matrix))
numpy/matrixlib/tests/test_masked_matrix.py:170:        assert_(not isinstance(test, MaskedArray))
numpy/matrixlib/tests/test_masked_matrix.py:184:        assert_(isinstance(mx._data, np.matrix))
numpy/matrixlib/tests/test_masked_matrix.py:190:            assert_(isinstance(log(mx), MMatrix))
numpy/matrixlib/tests/test_masked_matrix.py:191:            assert_equal(log(x), np.log(x))
numpy/matrixlib/tests/test_masked_matrix.py:197:        assert_(isinstance(add(mx, mx), MMatrix))
numpy/matrixlib/tests/test_masked_matrix.py:198:        assert_(isinstance(add(mx, x), MMatrix))
numpy/matrixlib/tests/test_masked_matrix.py:200:        assert_equal(add(mx, x), mx+x)
numpy/matrixlib/tests/test_masked_matrix.py:201:        assert_(isinstance(add(mx, mx)._data, np.matrix))
numpy/matrixlib/tests/test_masked_matrix.py:203:            assert_(isinstance(add.outer(mx, mx), MMatrix))
numpy/matrixlib/tests/test_masked_matrix.py:204:        assert_(isinstance(hypot(mx, mx), MMatrix))
numpy/matrixlib/tests/test_masked_matrix.py:205:        assert_(isinstance(hypot(mx, x), MMatrix))
numpy/matrixlib/tests/test_masked_matrix.py:211:        assert_(isinstance(divide(mx, mx), MMatrix))
numpy/matrixlib/tests/test_masked_matrix.py:212:        assert_(isinstance(divide(mx, x), MMatrix))
numpy/matrixlib/tests/test_masked_matrix.py:213:        assert_equal(divide(mx, mx), divide(xmx, xmx))
numpy/matrixlib/tests/test_masked_matrix.py:219:        assert_raises(np.ma.MAError, lambda: mr_['1, 2; 3, 4'])
numpy/matrixlib/tests/test_masked_matrix.py:227:        assert_array_equal(actual, expected)
numpy/matrixlib/tests/test_masked_matrix.py:230:        assert_equal(type(actual), type(expected))
numpy/matrixlib/tests/test_masked_matrix.py:231:        assert_equal(type(actual.data), type(expected.data))
numpy/matrixlib/tests/test_multiarray.py:7:        assert_(isinstance(x.view(np.matrix), np.matrix))
numpy/matrixlib/tests/test_multiarray.py:13:        assert_array_equal(y, [[513]])
numpy/matrixlib/tests/test_multiarray.py:15:        assert_(isinstance(y, np.matrix))
numpy/matrixlib/tests/test_multiarray.py:16:        assert_equal(y.dtype, np.dtype('<i2'))
numpy/matrixlib/tests/test_regression.py:9:        assert_equal(type(np.kron(x, x)), type(x))
numpy/matrixlib/tests/test_regression.py:14:        assert_(type(a.real) is np.matrix)
numpy/matrixlib/tests/test_regression.py:15:        assert_(type(a.imag) is np.matrix)
numpy/matrixlib/tests/test_regression.py:17:        assert_(type(c) is np.ndarray)
numpy/matrixlib/tests/test_regression.py:18:        assert_(type(d) is np.ndarray)
numpy/matrixlib/tests/test_regression.py:25:        assert_raises(ValueError, mul)
numpy/matrixlib/tests/test_regression.py:30:        assert_equal(x.std().shape, ())
numpy/matrixlib/tests/test_regression.py:31:        assert_equal(x.argmax().shape, ())
numpy/polynomial/tests/test_chebyshev.py:38:            assert_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:45:            assert_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:51:        assert_equal(cheb.chebdomain, [-1, 1])
numpy/polynomial/tests/test_chebyshev.py:54:        assert_equal(cheb.chebzero, [0])
numpy/polynomial/tests/test_chebyshev.py:57:        assert_equal(cheb.chebone, [1])
numpy/polynomial/tests/test_chebyshev.py:60:        assert_equal(cheb.chebx, [0, 1])
numpy/polynomial/tests/test_chebyshev.py:73:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_chebyshev.py:83:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_chebyshev.py:86:        assert_equal(cheb.chebmulx([0]), [0])
numpy/polynomial/tests/test_chebyshev.py:87:        assert_equal(cheb.chebmulx([1]), [0, 1])
numpy/polynomial/tests/test_chebyshev.py:91:            assert_equal(cheb.chebmulx(ser), tgt)
numpy/polynomial/tests/test_chebyshev.py:101:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_chebyshev.py:112:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_chebyshev.py:121:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_chebyshev.py:136:        assert_equal(cheb.chebval([], [1]).size, 0)
numpy/polynomial/tests/test_chebyshev.py:145:            assert_almost_equal(res, tgt, err_msg=msg)
numpy/polynomial/tests/test_chebyshev.py:151:            assert_equal(cheb.chebval(x, [1]).shape, dims)
numpy/polynomial/tests/test_chebyshev.py:152:            assert_equal(cheb.chebval(x, [1, 0]).shape, dims)
numpy/polynomial/tests/test_chebyshev.py:153:            assert_equal(cheb.chebval(x, [1, 0, 0]).shape, dims)
numpy/polynomial/tests/test_chebyshev.py:160:        assert_raises(ValueError, cheb.chebval2d, x1, x2[:2], self.c2d)
numpy/polynomial/tests/test_chebyshev.py:165:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:170:        assert_(res.shape == (2, 3))
numpy/polynomial/tests/test_chebyshev.py:177:        assert_raises(ValueError, cheb.chebval3d, x1, x2, x3[:2], self.c3d)
numpy/polynomial/tests/test_chebyshev.py:182:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:187:        assert_(res.shape == (2, 3))
numpy/polynomial/tests/test_chebyshev.py:196:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:201:        assert_(res.shape == (2, 3)*2)
numpy/polynomial/tests/test_chebyshev.py:210:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:215:        assert_(res.shape == (2, 3)*3)
numpy/polynomial/tests/test_chebyshev.py:222:        assert_raises(TypeError, cheb.chebint, [0], .5)
numpy/polynomial/tests/test_chebyshev.py:223:        assert_raises(ValueError, cheb.chebint, [0], -1)
numpy/polynomial/tests/test_chebyshev.py:224:        assert_raises(ValueError, cheb.chebint, [0], 1, [0, 0])
numpy/polynomial/tests/test_chebyshev.py:225:        assert_raises(ValueError, cheb.chebint, [0], lbnd=[0])
numpy/polynomial/tests/test_chebyshev.py:226:        assert_raises(ValueError, cheb.chebint, [0], scl=[0])
numpy/polynomial/tests/test_chebyshev.py:227:        assert_raises(TypeError, cheb.chebint, [0], axis=.5)
numpy/polynomial/tests/test_chebyshev.py:233:            assert_almost_equal(res, [0, 1])
numpy/polynomial/tests/test_chebyshev.py:243:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_chebyshev.py:251:            assert_almost_equal(cheb.chebval(-1, chebint), i)
numpy/polynomial/tests/test_chebyshev.py:261:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_chebyshev.py:271:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_chebyshev.py:281:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_chebyshev.py:291:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_chebyshev.py:301:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_chebyshev.py:309:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:313:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:317:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:324:        assert_raises(TypeError, cheb.chebder, [0], .5)
numpy/polynomial/tests/test_chebyshev.py:325:        assert_raises(ValueError, cheb.chebder, [0], -1)
numpy/polynomial/tests/test_chebyshev.py:331:            assert_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_chebyshev.py:338:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_chebyshev.py:345:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_chebyshev.py:353:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:357:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:368:        assert_(v.shape == (3, 4))
numpy/polynomial/tests/test_chebyshev.py:371:            assert_almost_equal(v[..., i], cheb.chebval(x, coef))
numpy/polynomial/tests/test_chebyshev.py:376:        assert_(v.shape == (3, 2, 4))
numpy/polynomial/tests/test_chebyshev.py:379:            assert_almost_equal(v[..., i], cheb.chebval(x, coef))
numpy/polynomial/tests/test_chebyshev.py:388:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:392:        assert_(van.shape == (1, 5, 6))
numpy/polynomial/tests/test_chebyshev.py:401:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:405:        assert_(van.shape == (1, 5, 24))
numpy/polynomial/tests/test_chebyshev.py:418:        assert_raises(ValueError, cheb.chebfit, [1], [1], -1)
numpy/polynomial/tests/test_chebyshev.py:419:        assert_raises(TypeError, cheb.chebfit, [[1]], [1], 0)
numpy/polynomial/tests/test_chebyshev.py:420:        assert_raises(TypeError, cheb.chebfit, [], [1], 0)
numpy/polynomial/tests/test_chebyshev.py:421:        assert_raises(TypeError, cheb.chebfit, [1], [[[1]]], 0)
numpy/polynomial/tests/test_chebyshev.py:422:        assert_raises(TypeError, cheb.chebfit, [1, 2], [1], 0)
numpy/polynomial/tests/test_chebyshev.py:423:        assert_raises(TypeError, cheb.chebfit, [1], [1, 2], 0)
numpy/polynomial/tests/test_chebyshev.py:424:        assert_raises(TypeError, cheb.chebfit, [1], [1], 0, w=[[1]])
numpy/polynomial/tests/test_chebyshev.py:425:        assert_raises(TypeError, cheb.chebfit, [1], [1], 0, w=[1, 1])
numpy/polynomial/tests/test_chebyshev.py:426:        assert_raises(ValueError, cheb.chebfit, [1], [1], [-1,])
numpy/polynomial/tests/test_chebyshev.py:427:        assert_raises(ValueError, cheb.chebfit, [1], [1], [2, -1, 6])
numpy/polynomial/tests/test_chebyshev.py:428:        assert_raises(TypeError, cheb.chebfit, [1], [1], [])
numpy/polynomial/tests/test_chebyshev.py:435:        assert_equal(len(coef3), 4)
numpy/polynomial/tests/test_chebyshev.py:436:        assert_almost_equal(cheb.chebval(x, coef3), y)
numpy/polynomial/tests/test_chebyshev.py:438:        assert_equal(len(coef3), 4)
numpy/polynomial/tests/test_chebyshev.py:439:        assert_almost_equal(cheb.chebval(x, coef3), y)
numpy/polynomial/tests/test_chebyshev.py:442:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_chebyshev.py:443:        assert_almost_equal(cheb.chebval(x, coef4), y)
numpy/polynomial/tests/test_chebyshev.py:445:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_chebyshev.py:446:        assert_almost_equal(cheb.chebval(x, coef4), y)
numpy/polynomial/tests/test_chebyshev.py:449:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_chebyshev.py:450:        assert_almost_equal(cheb.chebval(x, coef4), y)
numpy/polynomial/tests/test_chebyshev.py:453:        assert_almost_equal(coef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_chebyshev.py:455:        assert_almost_equal(coef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_chebyshev.py:462:        assert_almost_equal(wcoef3, coef3)
numpy/polynomial/tests/test_chebyshev.py:464:        assert_almost_equal(wcoef3, coef3)
numpy/polynomial/tests/test_chebyshev.py:467:        assert_almost_equal(wcoef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_chebyshev.py:469:        assert_almost_equal(wcoef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_chebyshev.py:473:        assert_almost_equal(cheb.chebfit(x, x, 1), [0, 1])
numpy/polynomial/tests/test_chebyshev.py:474:        assert_almost_equal(cheb.chebfit(x, x, [0, 1]), [0, 1])
numpy/polynomial/tests/test_chebyshev.py:479:        assert_almost_equal(cheb.chebval(x, coef1), y)
numpy/polynomial/tests/test_chebyshev.py:481:        assert_almost_equal(cheb.chebval(x, coef2), y)
numpy/polynomial/tests/test_chebyshev.py:482:        assert_almost_equal(coef1, coef2)
numpy/polynomial/tests/test_chebyshev.py:491:        assert_raises(ValueError, cheb.chebinterpolate, self.f, -1)
numpy/polynomial/tests/test_chebyshev.py:492:        assert_raises(TypeError, cheb.chebinterpolate, self.f, 10.)
numpy/polynomial/tests/test_chebyshev.py:496:            assert_(cheb.chebinterpolate(self.f, deg).shape == (deg + 1,))
numpy/polynomial/tests/test_chebyshev.py:507:                assert_almost_equal(cheb.chebval(x, c), powx(x, p), decimal=12)
numpy/polynomial/tests/test_chebyshev.py:513:        assert_raises(ValueError, cheb.chebcompanion, [])
numpy/polynomial/tests/test_chebyshev.py:514:        assert_raises(ValueError, cheb.chebcompanion, [1])
numpy/polynomial/tests/test_chebyshev.py:519:            assert_(cheb.chebcompanion(coef).shape == (i, i))
numpy/polynomial/tests/test_chebyshev.py:522:        assert_(cheb.chebcompanion([1, 2])[0, 0] == -.5)
numpy/polynomial/tests/test_chebyshev.py:537:        assert_almost_equal(vv, np.eye(100))
numpy/polynomial/tests/test_chebyshev.py:541:        assert_almost_equal(w.sum(), tgt)
numpy/polynomial/tests/test_chebyshev.py:548:        assert_almost_equal(trim(res), [1])
numpy/polynomial/tests/test_chebyshev.py:553:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_chebyshev.py:556:        assert_almost_equal(cheb.chebroots([1]), [])
numpy/polynomial/tests/test_chebyshev.py:557:        assert_almost_equal(cheb.chebroots([1, 2]), [-.5])
numpy/polynomial/tests/test_chebyshev.py:561:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_chebyshev.py:567:        assert_raises(ValueError, cheb.chebtrim, coef, -1)
numpy/polynomial/tests/test_chebyshev.py:570:        assert_equal(cheb.chebtrim(coef), coef[:-1])
numpy/polynomial/tests/test_chebyshev.py:571:        assert_equal(cheb.chebtrim(coef, 1), coef[:-3])
numpy/polynomial/tests/test_chebyshev.py:572:        assert_equal(cheb.chebtrim(coef, 2), [0])
numpy/polynomial/tests/test_chebyshev.py:575:        assert_equal(cheb.chebline(3, 4), [3, 4])
numpy/polynomial/tests/test_chebyshev.py:579:            assert_almost_equal(cheb.cheb2poly([0]*i + [1]), Tlist[i])
numpy/polynomial/tests/test_chebyshev.py:583:            assert_almost_equal(cheb.poly2cheb(Tlist[i]), [0]*i + [1])
numpy/polynomial/tests/test_chebyshev.py:589:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_chebyshev.py:593:        assert_raises(ValueError, cheb.chebpts1, 1.5)
numpy/polynomial/tests/test_chebyshev.py:594:        assert_raises(ValueError, cheb.chebpts1, 0)
numpy/polynomial/tests/test_chebyshev.py:598:        assert_almost_equal(cheb.chebpts1(1), tgt)
numpy/polynomial/tests/test_chebyshev.py:600:        assert_almost_equal(cheb.chebpts1(2), tgt)
numpy/polynomial/tests/test_chebyshev.py:602:        assert_almost_equal(cheb.chebpts1(3), tgt)
numpy/polynomial/tests/test_chebyshev.py:604:        assert_almost_equal(cheb.chebpts1(4), tgt)
numpy/polynomial/tests/test_chebyshev.py:608:        assert_raises(ValueError, cheb.chebpts2, 1.5)
numpy/polynomial/tests/test_chebyshev.py:609:        assert_raises(ValueError, cheb.chebpts2, 1)
numpy/polynomial/tests/test_chebyshev.py:613:        assert_almost_equal(cheb.chebpts2(2), tgt)
numpy/polynomial/tests/test_chebyshev.py:615:        assert_almost_equal(cheb.chebpts2(3), tgt)
numpy/polynomial/tests/test_chebyshev.py:617:        assert_almost_equal(cheb.chebpts2(4), tgt)
numpy/polynomial/tests/test_chebyshev.py:619:        assert_almost_equal(cheb.chebpts2(5), tgt)
numpy/polynomial/tests/test_hermite_e.py:34:        assert_equal(herme.hermedomain, [-1, 1])
numpy/polynomial/tests/test_hermite_e.py:37:        assert_equal(herme.hermezero, [0])
numpy/polynomial/tests/test_hermite_e.py:40:        assert_equal(herme.hermeone, [1])
numpy/polynomial/tests/test_hermite_e.py:43:        assert_equal(herme.hermex, [0, 1])
numpy/polynomial/tests/test_hermite_e.py:57:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_hermite_e.py:67:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_hermite_e.py:70:        assert_equal(herme.hermemulx([0]), [0])
numpy/polynomial/tests/test_hermite_e.py:71:        assert_equal(herme.hermemulx([1]), [0, 1])
numpy/polynomial/tests/test_hermite_e.py:75:            assert_equal(herme.hermemulx(ser), tgt)
numpy/polynomial/tests/test_hermite_e.py:88:                assert_(len(pol3) == i + j + 1, msg)
numpy/polynomial/tests/test_hermite_e.py:89:                assert_almost_equal(val3, val1*val2, err_msg=msg)
numpy/polynomial/tests/test_hermite_e.py:100:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_hermite_e.py:109:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_hermite_e.py:124:        assert_equal(herme.hermeval([], [1]).size, 0)
numpy/polynomial/tests/test_hermite_e.py:133:            assert_almost_equal(res, tgt, err_msg=msg)
numpy/polynomial/tests/test_hermite_e.py:139:            assert_equal(herme.hermeval(x, [1]).shape, dims)
numpy/polynomial/tests/test_hermite_e.py:140:            assert_equal(herme.hermeval(x, [1, 0]).shape, dims)
numpy/polynomial/tests/test_hermite_e.py:141:            assert_equal(herme.hermeval(x, [1, 0, 0]).shape, dims)
numpy/polynomial/tests/test_hermite_e.py:148:        assert_raises(ValueError, herme.hermeval2d, x1, x2[:2], self.c2d)
numpy/polynomial/tests/test_hermite_e.py:153:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite_e.py:158:        assert_(res.shape == (2, 3))
numpy/polynomial/tests/test_hermite_e.py:165:        assert_raises(ValueError, herme.hermeval3d, x1, x2, x3[:2], self.c3d)
numpy/polynomial/tests/test_hermite_e.py:170:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite_e.py:175:        assert_(res.shape == (2, 3))
numpy/polynomial/tests/test_hermite_e.py:184:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite_e.py:189:        assert_(res.shape == (2, 3)*2)
numpy/polynomial/tests/test_hermite_e.py:198:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite_e.py:203:        assert_(res.shape == (2, 3)*3)
numpy/polynomial/tests/test_hermite_e.py:210:        assert_raises(TypeError, herme.hermeint, [0], .5)
numpy/polynomial/tests/test_hermite_e.py:211:        assert_raises(ValueError, herme.hermeint, [0], -1)
numpy/polynomial/tests/test_hermite_e.py:212:        assert_raises(ValueError, herme.hermeint, [0], 1, [0, 0])
numpy/polynomial/tests/test_hermite_e.py:213:        assert_raises(ValueError, herme.hermeint, [0], lbnd=[0])
numpy/polynomial/tests/test_hermite_e.py:214:        assert_raises(ValueError, herme.hermeint, [0], scl=[0])
numpy/polynomial/tests/test_hermite_e.py:215:        assert_raises(TypeError, herme.hermeint, [0], axis=.5)
numpy/polynomial/tests/test_hermite_e.py:221:            assert_almost_equal(res, [0, 1])
numpy/polynomial/tests/test_hermite_e.py:231:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite_e.py:239:            assert_almost_equal(herme.hermeval(-1, hermeint), i)
numpy/polynomial/tests/test_hermite_e.py:249:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite_e.py:259:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite_e.py:269:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite_e.py:279:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite_e.py:289:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite_e.py:297:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite_e.py:301:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite_e.py:305:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite_e.py:312:        assert_raises(TypeError, herme.hermeder, [0], .5)
numpy/polynomial/tests/test_hermite_e.py:313:        assert_raises(ValueError, herme.hermeder, [0], -1)
numpy/polynomial/tests/test_hermite_e.py:319:            assert_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite_e.py:326:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite_e.py:334:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite_e.py:342:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite_e.py:346:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite_e.py:357:        assert_(v.shape == (3, 4))
numpy/polynomial/tests/test_hermite_e.py:360:            assert_almost_equal(v[..., i], herme.hermeval(x, coef))
numpy/polynomial/tests/test_hermite_e.py:365:        assert_(v.shape == (3, 2, 4))
numpy/polynomial/tests/test_hermite_e.py:368:            assert_almost_equal(v[..., i], herme.hermeval(x, coef))
numpy/polynomial/tests/test_hermite_e.py:377:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite_e.py:381:        assert_(van.shape == (1, 5, 6))
numpy/polynomial/tests/test_hermite_e.py:390:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite_e.py:394:        assert_(van.shape == (1, 5, 24))
numpy/polynomial/tests/test_hermite_e.py:407:        assert_raises(ValueError, herme.hermefit, [1], [1], -1)
numpy/polynomial/tests/test_hermite_e.py:408:        assert_raises(TypeError, herme.hermefit, [[1]], [1], 0)
numpy/polynomial/tests/test_hermite_e.py:409:        assert_raises(TypeError, herme.hermefit, [], [1], 0)
numpy/polynomial/tests/test_hermite_e.py:410:        assert_raises(TypeError, herme.hermefit, [1], [[[1]]], 0)
numpy/polynomial/tests/test_hermite_e.py:411:        assert_raises(TypeError, herme.hermefit, [1, 2], [1], 0)
numpy/polynomial/tests/test_hermite_e.py:412:        assert_raises(TypeError, herme.hermefit, [1], [1, 2], 0)
numpy/polynomial/tests/test_hermite_e.py:413:        assert_raises(TypeError, herme.hermefit, [1], [1], 0, w=[[1]])
numpy/polynomial/tests/test_hermite_e.py:414:        assert_raises(TypeError, herme.hermefit, [1], [1], 0, w=[1, 1])
numpy/polynomial/tests/test_hermite_e.py:415:        assert_raises(ValueError, herme.hermefit, [1], [1], [-1,])
numpy/polynomial/tests/test_hermite_e.py:416:        assert_raises(ValueError, herme.hermefit, [1], [1], [2, -1, 6])
numpy/polynomial/tests/test_hermite_e.py:417:        assert_raises(TypeError, herme.hermefit, [1], [1], [])
numpy/polynomial/tests/test_hermite_e.py:424:        assert_equal(len(coef3), 4)
numpy/polynomial/tests/test_hermite_e.py:425:        assert_almost_equal(herme.hermeval(x, coef3), y)
numpy/polynomial/tests/test_hermite_e.py:427:        assert_equal(len(coef3), 4)
numpy/polynomial/tests/test_hermite_e.py:428:        assert_almost_equal(herme.hermeval(x, coef3), y)
numpy/polynomial/tests/test_hermite_e.py:431:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_hermite_e.py:432:        assert_almost_equal(herme.hermeval(x, coef4), y)
numpy/polynomial/tests/test_hermite_e.py:434:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_hermite_e.py:435:        assert_almost_equal(herme.hermeval(x, coef4), y)
numpy/polynomial/tests/test_hermite_e.py:438:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_hermite_e.py:439:        assert_almost_equal(herme.hermeval(x, coef4), y)
numpy/polynomial/tests/test_hermite_e.py:442:        assert_almost_equal(coef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_hermite_e.py:444:        assert_almost_equal(coef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_hermite_e.py:451:        assert_almost_equal(wcoef3, coef3)
numpy/polynomial/tests/test_hermite_e.py:453:        assert_almost_equal(wcoef3, coef3)
numpy/polynomial/tests/test_hermite_e.py:456:        assert_almost_equal(wcoef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_hermite_e.py:458:        assert_almost_equal(wcoef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_hermite_e.py:462:        assert_almost_equal(herme.hermefit(x, x, 1), [0, 1])
numpy/polynomial/tests/test_hermite_e.py:463:        assert_almost_equal(herme.hermefit(x, x, [0, 1]), [0, 1])
numpy/polynomial/tests/test_hermite_e.py:468:        assert_almost_equal(herme.hermeval(x, coef1), y)
numpy/polynomial/tests/test_hermite_e.py:470:        assert_almost_equal(herme.hermeval(x, coef2), y)
numpy/polynomial/tests/test_hermite_e.py:471:        assert_almost_equal(coef1, coef2)
numpy/polynomial/tests/test_hermite_e.py:477:        assert_raises(ValueError, herme.hermecompanion, [])
numpy/polynomial/tests/test_hermite_e.py:478:        assert_raises(ValueError, herme.hermecompanion, [1])
numpy/polynomial/tests/test_hermite_e.py:483:            assert_(herme.hermecompanion(coef).shape == (i, i))
numpy/polynomial/tests/test_hermite_e.py:486:        assert_(herme.hermecompanion([1, 2])[0, 0] == -.5)
numpy/polynomial/tests/test_hermite_e.py:501:        assert_almost_equal(vv, np.eye(100))
numpy/polynomial/tests/test_hermite_e.py:505:        assert_almost_equal(w.sum(), tgt)
numpy/polynomial/tests/test_hermite_e.py:512:        assert_almost_equal(trim(res), [1])
numpy/polynomial/tests/test_hermite_e.py:518:            assert_(len(pol) == i + 1)
numpy/polynomial/tests/test_hermite_e.py:519:            assert_almost_equal(herme.herme2poly(pol)[-1], 1)
numpy/polynomial/tests/test_hermite_e.py:520:            assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite_e.py:523:        assert_almost_equal(herme.hermeroots([1]), [])
numpy/polynomial/tests/test_hermite_e.py:524:        assert_almost_equal(herme.hermeroots([1, 1]), [-1])
numpy/polynomial/tests/test_hermite_e.py:528:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite_e.py:534:        assert_raises(ValueError, herme.hermetrim, coef, -1)
numpy/polynomial/tests/test_hermite_e.py:537:        assert_equal(herme.hermetrim(coef), coef[:-1])
numpy/polynomial/tests/test_hermite_e.py:538:        assert_equal(herme.hermetrim(coef, 1), coef[:-3])
numpy/polynomial/tests/test_hermite_e.py:539:        assert_equal(herme.hermetrim(coef, 2), [0])
numpy/polynomial/tests/test_hermite_e.py:542:        assert_equal(herme.hermeline(3, 4), [3, 4])
numpy/polynomial/tests/test_hermite_e.py:546:            assert_almost_equal(herme.herme2poly([0]*i + [1]), Helist[i])
numpy/polynomial/tests/test_hermite_e.py:550:            assert_almost_equal(herme.poly2herme(Helist[i]), [0]*i + [1])
numpy/polynomial/tests/test_hermite_e.py:556:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:33:        assert_equal(poly.polydomain, [-1, 1])
numpy/polynomial/tests/test_polynomial.py:36:        assert_equal(poly.polyzero, [0])
numpy/polynomial/tests/test_polynomial.py:39:        assert_equal(poly.polyone, [1])
numpy/polynomial/tests/test_polynomial.py:42:        assert_equal(poly.polyx, [0, 1])
numpy/polynomial/tests/test_polynomial.py:55:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_polynomial.py:65:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_polynomial.py:68:        assert_equal(poly.polymulx([0]), [0])
numpy/polynomial/tests/test_polynomial.py:69:        assert_equal(poly.polymulx([1]), [0, 1])
numpy/polynomial/tests/test_polynomial.py:73:            assert_equal(poly.polymulx(ser), tgt)
numpy/polynomial/tests/test_polynomial.py:82:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_polynomial.py:86:        assert_raises(ZeroDivisionError, poly.polydiv, [1], [0])
numpy/polynomial/tests/test_polynomial.py:90:        assert_equal((quo, rem), (1, 0))
numpy/polynomial/tests/test_polynomial.py:92:        assert_equal((quo, rem), ((1, 1), 0))
numpy/polynomial/tests/test_polynomial.py:103:                assert_equal(res, tgt, err_msg=msg)
numpy/polynomial/tests/test_polynomial.py:112:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_polynomial.py:127:        assert_equal(poly.polyval([], [1]).size, 0)
numpy/polynomial/tests/test_polynomial.py:135:            assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:138:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:144:            assert_equal(poly.polyval(x, [1]).shape, dims)
numpy/polynomial/tests/test_polynomial.py:145:            assert_equal(poly.polyval(x, [1, 0]).shape, dims)
numpy/polynomial/tests/test_polynomial.py:146:            assert_equal(poly.polyval(x, [1, 0, 0]).shape, dims)
numpy/polynomial/tests/test_polynomial.py:152:        assert_array_equal(res.mask, mask)
numpy/polynomial/tests/test_polynomial.py:159:        assert_equal(type(np.polyval([2, 3, 4], cx)), C)
numpy/polynomial/tests/test_polynomial.py:168:        assert_equal(poly.polyvalfromroots([], [1]).size, 0)
numpy/polynomial/tests/test_polynomial.py:169:        assert_(poly.polyvalfromroots([], [1]).shape == (0,))
numpy/polynomial/tests/test_polynomial.py:172:        assert_equal(poly.polyvalfromroots([], [[1] * 5]).size, 0)
numpy/polynomial/tests/test_polynomial.py:173:        assert_(poly.polyvalfromroots([], [[1] * 5]).shape == (5, 0))
numpy/polynomial/tests/test_polynomial.py:176:        assert_equal(poly.polyvalfromroots(1, 1), 0)
numpy/polynomial/tests/test_polynomial.py:177:        assert_(poly.polyvalfromroots(1, np.ones((3, 3))).shape == (3,))
numpy/polynomial/tests/test_polynomial.py:185:            assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:188:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:194:            assert_equal(poly.polyvalfromroots(x, [1]).shape, dims)
numpy/polynomial/tests/test_polynomial.py:195:            assert_equal(poly.polyvalfromroots(x, [1, 0]).shape, dims)
numpy/polynomial/tests/test_polynomial.py:196:            assert_equal(poly.polyvalfromroots(x, [1, 0, 0]).shape, dims)
numpy/polynomial/tests/test_polynomial.py:202:        assert_almost_equal(poly.polyval(x, ptest),
numpy/polynomial/tests/test_polynomial.py:214:        assert_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:223:        assert_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:230:        assert_raises_regex(ValueError, 'incompatible',
numpy/polynomial/tests/test_polynomial.py:236:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:241:        assert_(res.shape == (2, 3))
numpy/polynomial/tests/test_polynomial.py:248:        assert_raises_regex(ValueError, 'incompatible',
numpy/polynomial/tests/test_polynomial.py:254:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:259:        assert_(res.shape == (2, 3))
numpy/polynomial/tests/test_polynomial.py:268:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:273:        assert_(res.shape == (2, 3)*2)
numpy/polynomial/tests/test_polynomial.py:282:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:287:        assert_(res.shape == (2, 3)*3)
numpy/polynomial/tests/test_polynomial.py:294:        assert_raises(TypeError, poly.polyint, [0], .5)
numpy/polynomial/tests/test_polynomial.py:295:        assert_raises(ValueError, poly.polyint, [0], -1)
numpy/polynomial/tests/test_polynomial.py:296:        assert_raises(ValueError, poly.polyint, [0], 1, [0, 0])
numpy/polynomial/tests/test_polynomial.py:297:        assert_raises(ValueError, poly.polyint, [0], lbnd=[0])
numpy/polynomial/tests/test_polynomial.py:298:        assert_raises(ValueError, poly.polyint, [0], scl=[0])
numpy/polynomial/tests/test_polynomial.py:299:        assert_raises(TypeError, poly.polyint, [0], axis=.5)
numpy/polynomial/tests/test_polynomial.py:307:            assert_almost_equal(res, [0, 1])
numpy/polynomial/tests/test_polynomial.py:315:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_polynomial.py:322:            assert_almost_equal(poly.polyval(-1, res), i)
numpy/polynomial/tests/test_polynomial.py:330:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_polynomial.py:340:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_polynomial.py:350:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_polynomial.py:360:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_polynomial.py:370:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_polynomial.py:378:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:382:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:386:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:393:        assert_raises(TypeError, poly.polyder, [0], .5)
numpy/polynomial/tests/test_polynomial.py:394:        assert_raises(ValueError, poly.polyder, [0], -1)
numpy/polynomial/tests/test_polynomial.py:400:            assert_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_polynomial.py:407:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_polynomial.py:414:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_polynomial.py:422:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:426:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:437:        assert_(v.shape == (3, 4))
numpy/polynomial/tests/test_polynomial.py:440:            assert_almost_equal(v[..., i], poly.polyval(x, coef))
numpy/polynomial/tests/test_polynomial.py:445:        assert_(v.shape == (3, 2, 4))
numpy/polynomial/tests/test_polynomial.py:448:            assert_almost_equal(v[..., i], poly.polyval(x, coef))
numpy/polynomial/tests/test_polynomial.py:457:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:461:        assert_(van.shape == (1, 5, 6))
numpy/polynomial/tests/test_polynomial.py:470:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polynomial.py:474:        assert_(van.shape == (1, 5, 24))
numpy/polynomial/tests/test_polynomial.py:478:        assert_raises(ValueError, poly.polyvander, x, -1)
numpy/polynomial/tests/test_polynomial.py:484:        assert_raises(ValueError, poly.polycompanion, [])
numpy/polynomial/tests/test_polynomial.py:485:        assert_raises(ValueError, poly.polycompanion, [1])
numpy/polynomial/tests/test_polynomial.py:490:            assert_(poly.polycompanion(coef).shape == (i, i))
numpy/polynomial/tests/test_polynomial.py:493:        assert_(poly.polycompanion([1, 2])[0, 0] == -.5)
numpy/polynomial/tests/test_polynomial.py:500:        assert_almost_equal(trim(res), [1])
numpy/polynomial/tests/test_polynomial.py:505:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_polynomial.py:508:        assert_almost_equal(poly.polyroots([1]), [])
numpy/polynomial/tests/test_polynomial.py:509:        assert_almost_equal(poly.polyroots([1, 2]), [-.5])
numpy/polynomial/tests/test_polynomial.py:513:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_polynomial.py:523:        assert_raises(ValueError, poly.polyfit, [1], [1], -1)
numpy/polynomial/tests/test_polynomial.py:524:        assert_raises(TypeError, poly.polyfit, [[1]], [1], 0)
numpy/polynomial/tests/test_polynomial.py:525:        assert_raises(TypeError, poly.polyfit, [], [1], 0)
numpy/polynomial/tests/test_polynomial.py:526:        assert_raises(TypeError, poly.polyfit, [1], [[[1]]], 0)
numpy/polynomial/tests/test_polynomial.py:527:        assert_raises(TypeError, poly.polyfit, [1, 2], [1], 0)
numpy/polynomial/tests/test_polynomial.py:528:        assert_raises(TypeError, poly.polyfit, [1], [1, 2], 0)
numpy/polynomial/tests/test_polynomial.py:529:        assert_raises(TypeError, poly.polyfit, [1], [1], 0, w=[[1]])
numpy/polynomial/tests/test_polynomial.py:530:        assert_raises(TypeError, poly.polyfit, [1], [1], 0, w=[1, 1])
numpy/polynomial/tests/test_polynomial.py:531:        assert_raises(ValueError, poly.polyfit, [1], [1], [-1,])
numpy/polynomial/tests/test_polynomial.py:532:        assert_raises(ValueError, poly.polyfit, [1], [1], [2, -1, 6])
numpy/polynomial/tests/test_polynomial.py:533:        assert_raises(TypeError, poly.polyfit, [1], [1], [])
numpy/polynomial/tests/test_polynomial.py:540:        assert_equal(len(coef3), 4)
numpy/polynomial/tests/test_polynomial.py:541:        assert_almost_equal(poly.polyval(x, coef3), y)
numpy/polynomial/tests/test_polynomial.py:543:        assert_equal(len(coef3), 4)
numpy/polynomial/tests/test_polynomial.py:544:        assert_almost_equal(poly.polyval(x, coef3), y)
numpy/polynomial/tests/test_polynomial.py:547:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_polynomial.py:548:        assert_almost_equal(poly.polyval(x, coef4), y)
numpy/polynomial/tests/test_polynomial.py:550:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_polynomial.py:551:        assert_almost_equal(poly.polyval(x, coef4), y)
numpy/polynomial/tests/test_polynomial.py:554:        assert_almost_equal(coef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_polynomial.py:556:        assert_almost_equal(coef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_polynomial.py:563:        assert_almost_equal(wcoef3, coef3)
numpy/polynomial/tests/test_polynomial.py:565:        assert_almost_equal(wcoef3, coef3)
numpy/polynomial/tests/test_polynomial.py:568:        assert_almost_equal(wcoef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_polynomial.py:570:        assert_almost_equal(wcoef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_polynomial.py:574:        assert_almost_equal(poly.polyfit(x, x, 1), [0, 1])
numpy/polynomial/tests/test_polynomial.py:575:        assert_almost_equal(poly.polyfit(x, x, [0, 1]), [0, 1])
numpy/polynomial/tests/test_polynomial.py:580:        assert_almost_equal(poly.polyval(x, coef1), y)
numpy/polynomial/tests/test_polynomial.py:582:        assert_almost_equal(poly.polyval(x, coef2), y)
numpy/polynomial/tests/test_polynomial.py:583:        assert_almost_equal(coef1, coef2)
numpy/polynomial/tests/test_polynomial.py:589:        assert_raises(ValueError, poly.polytrim, coef, -1)
numpy/polynomial/tests/test_polynomial.py:592:        assert_equal(poly.polytrim(coef), coef[:-1])
numpy/polynomial/tests/test_polynomial.py:593:        assert_equal(poly.polytrim(coef, 1), coef[:-3])
numpy/polynomial/tests/test_polynomial.py:594:        assert_equal(poly.polytrim(coef, 2), [0])
numpy/polynomial/tests/test_polynomial.py:597:        assert_equal(poly.polyline(3, 4), [3, 4])
numpy/polynomial/tests/test_polynomial.py:600:        assert_equal(poly.polyline(3, 0), [3])
numpy/polynomial/tests/test_laguerre.py:31:        assert_equal(lag.lagdomain, [0, 1])
numpy/polynomial/tests/test_laguerre.py:34:        assert_equal(lag.lagzero, [0])
numpy/polynomial/tests/test_laguerre.py:37:        assert_equal(lag.lagone, [1])
numpy/polynomial/tests/test_laguerre.py:40:        assert_equal(lag.lagx, [1, -1])
numpy/polynomial/tests/test_laguerre.py:54:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_laguerre.py:64:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_laguerre.py:67:        assert_equal(lag.lagmulx([0]), [0])
numpy/polynomial/tests/test_laguerre.py:68:        assert_equal(lag.lagmulx([1]), [1, -1])
numpy/polynomial/tests/test_laguerre.py:72:            assert_almost_equal(lag.lagmulx(ser), tgt)
numpy/polynomial/tests/test_laguerre.py:85:                assert_(len(pol3) == i + j + 1, msg)
numpy/polynomial/tests/test_laguerre.py:86:                assert_almost_equal(val3, val1*val2, err_msg=msg)
numpy/polynomial/tests/test_laguerre.py:97:                assert_almost_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_laguerre.py:106:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_laguerre.py:121:        assert_equal(lag.lagval([], [1]).size, 0)
numpy/polynomial/tests/test_laguerre.py:130:            assert_almost_equal(res, tgt, err_msg=msg)
numpy/polynomial/tests/test_laguerre.py:136:            assert_equal(lag.lagval(x, [1]).shape, dims)
numpy/polynomial/tests/test_laguerre.py:137:            assert_equal(lag.lagval(x, [1, 0]).shape, dims)
numpy/polynomial/tests/test_laguerre.py:138:            assert_equal(lag.lagval(x, [1, 0, 0]).shape, dims)
numpy/polynomial/tests/test_laguerre.py:145:        assert_raises(ValueError, lag.lagval2d, x1, x2[:2], self.c2d)
numpy/polynomial/tests/test_laguerre.py:150:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_laguerre.py:155:        assert_(res.shape == (2, 3))
numpy/polynomial/tests/test_laguerre.py:162:        assert_raises(ValueError, lag.lagval3d, x1, x2, x3[:2], self.c3d)
numpy/polynomial/tests/test_laguerre.py:167:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_laguerre.py:172:        assert_(res.shape == (2, 3))
numpy/polynomial/tests/test_laguerre.py:181:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_laguerre.py:186:        assert_(res.shape == (2, 3)*2)
numpy/polynomial/tests/test_laguerre.py:195:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_laguerre.py:200:        assert_(res.shape == (2, 3)*3)
numpy/polynomial/tests/test_laguerre.py:207:        assert_raises(TypeError, lag.lagint, [0], .5)
numpy/polynomial/tests/test_laguerre.py:208:        assert_raises(ValueError, lag.lagint, [0], -1)
numpy/polynomial/tests/test_laguerre.py:209:        assert_raises(ValueError, lag.lagint, [0], 1, [0, 0])
numpy/polynomial/tests/test_laguerre.py:210:        assert_raises(ValueError, lag.lagint, [0], lbnd=[0])
numpy/polynomial/tests/test_laguerre.py:211:        assert_raises(ValueError, lag.lagint, [0], scl=[0])
numpy/polynomial/tests/test_laguerre.py:212:        assert_raises(TypeError, lag.lagint, [0], axis=.5)
numpy/polynomial/tests/test_laguerre.py:218:            assert_almost_equal(res, [1, -1])
numpy/polynomial/tests/test_laguerre.py:228:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_laguerre.py:236:            assert_almost_equal(lag.lagval(-1, lagint), i)
numpy/polynomial/tests/test_laguerre.py:246:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_laguerre.py:256:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_laguerre.py:266:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_laguerre.py:276:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_laguerre.py:286:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_laguerre.py:294:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_laguerre.py:298:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_laguerre.py:302:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_laguerre.py:309:        assert_raises(TypeError, lag.lagder, [0], .5)
numpy/polynomial/tests/test_laguerre.py:310:        assert_raises(ValueError, lag.lagder, [0], -1)
numpy/polynomial/tests/test_laguerre.py:316:            assert_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_laguerre.py:323:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_laguerre.py:330:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_laguerre.py:338:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_laguerre.py:342:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_laguerre.py:353:        assert_(v.shape == (3, 4))
numpy/polynomial/tests/test_laguerre.py:356:            assert_almost_equal(v[..., i], lag.lagval(x, coef))
numpy/polynomial/tests/test_laguerre.py:361:        assert_(v.shape == (3, 2, 4))
numpy/polynomial/tests/test_laguerre.py:364:            assert_almost_equal(v[..., i], lag.lagval(x, coef))
numpy/polynomial/tests/test_laguerre.py:373:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_laguerre.py:377:        assert_(van.shape == (1, 5, 6))
numpy/polynomial/tests/test_laguerre.py:386:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_laguerre.py:390:        assert_(van.shape == (1, 5, 24))
numpy/polynomial/tests/test_laguerre.py:400:        assert_raises(ValueError, lag.lagfit, [1], [1], -1)
numpy/polynomial/tests/test_laguerre.py:401:        assert_raises(TypeError, lag.lagfit, [[1]], [1], 0)
numpy/polynomial/tests/test_laguerre.py:402:        assert_raises(TypeError, lag.lagfit, [], [1], 0)
numpy/polynomial/tests/test_laguerre.py:403:        assert_raises(TypeError, lag.lagfit, [1], [[[1]]], 0)
numpy/polynomial/tests/test_laguerre.py:404:        assert_raises(TypeError, lag.lagfit, [1, 2], [1], 0)
numpy/polynomial/tests/test_laguerre.py:405:        assert_raises(TypeError, lag.lagfit, [1], [1, 2], 0)
numpy/polynomial/tests/test_laguerre.py:406:        assert_raises(TypeError, lag.lagfit, [1], [1], 0, w=[[1]])
numpy/polynomial/tests/test_laguerre.py:407:        assert_raises(TypeError, lag.lagfit, [1], [1], 0, w=[1, 1])
numpy/polynomial/tests/test_laguerre.py:408:        assert_raises(ValueError, lag.lagfit, [1], [1], [-1,])
numpy/polynomial/tests/test_laguerre.py:409:        assert_raises(ValueError, lag.lagfit, [1], [1], [2, -1, 6])
numpy/polynomial/tests/test_laguerre.py:410:        assert_raises(TypeError, lag.lagfit, [1], [1], [])
numpy/polynomial/tests/test_laguerre.py:417:        assert_equal(len(coef3), 4)
numpy/polynomial/tests/test_laguerre.py:418:        assert_almost_equal(lag.lagval(x, coef3), y)
numpy/polynomial/tests/test_laguerre.py:420:        assert_equal(len(coef3), 4)
numpy/polynomial/tests/test_laguerre.py:421:        assert_almost_equal(lag.lagval(x, coef3), y)
numpy/polynomial/tests/test_laguerre.py:424:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_laguerre.py:425:        assert_almost_equal(lag.lagval(x, coef4), y)
numpy/polynomial/tests/test_laguerre.py:427:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_laguerre.py:428:        assert_almost_equal(lag.lagval(x, coef4), y)
numpy/polynomial/tests/test_laguerre.py:431:        assert_almost_equal(coef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_laguerre.py:433:        assert_almost_equal(coef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_laguerre.py:440:        assert_almost_equal(wcoef3, coef3)
numpy/polynomial/tests/test_laguerre.py:442:        assert_almost_equal(wcoef3, coef3)
numpy/polynomial/tests/test_laguerre.py:445:        assert_almost_equal(wcoef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_laguerre.py:447:        assert_almost_equal(wcoef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_laguerre.py:451:        assert_almost_equal(lag.lagfit(x, x, 1), [1, -1])
numpy/polynomial/tests/test_laguerre.py:452:        assert_almost_equal(lag.lagfit(x, x, [0, 1]), [1, -1])
numpy/polynomial/tests/test_laguerre.py:458:        assert_raises(ValueError, lag.lagcompanion, [])
numpy/polynomial/tests/test_laguerre.py:459:        assert_raises(ValueError, lag.lagcompanion, [1])
numpy/polynomial/tests/test_laguerre.py:464:            assert_(lag.lagcompanion(coef).shape == (i, i))
numpy/polynomial/tests/test_laguerre.py:467:        assert_(lag.lagcompanion([1, 2])[0, 0] == 1.5)
numpy/polynomial/tests/test_laguerre.py:482:        assert_almost_equal(vv, np.eye(100))
numpy/polynomial/tests/test_laguerre.py:486:        assert_almost_equal(w.sum(), tgt)
numpy/polynomial/tests/test_laguerre.py:493:        assert_almost_equal(trim(res), [1])
numpy/polynomial/tests/test_laguerre.py:499:            assert_(len(pol) == i + 1)
numpy/polynomial/tests/test_laguerre.py:500:            assert_almost_equal(lag.lag2poly(pol)[-1], 1)
numpy/polynomial/tests/test_laguerre.py:501:            assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_laguerre.py:504:        assert_almost_equal(lag.lagroots([1]), [])
numpy/polynomial/tests/test_laguerre.py:505:        assert_almost_equal(lag.lagroots([0, 1]), [1])
numpy/polynomial/tests/test_laguerre.py:509:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_laguerre.py:515:        assert_raises(ValueError, lag.lagtrim, coef, -1)
numpy/polynomial/tests/test_laguerre.py:518:        assert_equal(lag.lagtrim(coef), coef[:-1])
numpy/polynomial/tests/test_laguerre.py:519:        assert_equal(lag.lagtrim(coef, 1), coef[:-3])
numpy/polynomial/tests/test_laguerre.py:520:        assert_equal(lag.lagtrim(coef, 2), [0])
numpy/polynomial/tests/test_laguerre.py:523:        assert_equal(lag.lagline(3, 4), [7, -4])
numpy/polynomial/tests/test_laguerre.py:527:            assert_almost_equal(lag.lag2poly([0]*i + [1]), Llist[i])
numpy/polynomial/tests/test_laguerre.py:531:            assert_almost_equal(lag.poly2lag(Llist[i]), [0]*i + [1])
numpy/polynomial/tests/test_laguerre.py:537:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:34:        assert_equal(leg.legdomain, [-1, 1])
numpy/polynomial/tests/test_legendre.py:37:        assert_equal(leg.legzero, [0])
numpy/polynomial/tests/test_legendre.py:40:        assert_equal(leg.legone, [1])
numpy/polynomial/tests/test_legendre.py:43:        assert_equal(leg.legx, [0, 1])
numpy/polynomial/tests/test_legendre.py:57:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_legendre.py:67:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_legendre.py:70:        assert_equal(leg.legmulx([0]), [0])
numpy/polynomial/tests/test_legendre.py:71:        assert_equal(leg.legmulx([1]), [0, 1])
numpy/polynomial/tests/test_legendre.py:76:            assert_equal(leg.legmulx(ser), tgt)
numpy/polynomial/tests/test_legendre.py:89:                assert_(len(pol3) == i + j + 1, msg)
numpy/polynomial/tests/test_legendre.py:90:                assert_almost_equal(val3, val1*val2, err_msg=msg)
numpy/polynomial/tests/test_legendre.py:101:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_legendre.py:110:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_legendre.py:125:        assert_equal(leg.legval([], [1]).size, 0)
numpy/polynomial/tests/test_legendre.py:134:            assert_almost_equal(res, tgt, err_msg=msg)
numpy/polynomial/tests/test_legendre.py:140:            assert_equal(leg.legval(x, [1]).shape, dims)
numpy/polynomial/tests/test_legendre.py:141:            assert_equal(leg.legval(x, [1, 0]).shape, dims)
numpy/polynomial/tests/test_legendre.py:142:            assert_equal(leg.legval(x, [1, 0, 0]).shape, dims)
numpy/polynomial/tests/test_legendre.py:149:        assert_raises(ValueError, leg.legval2d, x1, x2[:2], self.c2d)
numpy/polynomial/tests/test_legendre.py:154:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:159:        assert_(res.shape == (2, 3))
numpy/polynomial/tests/test_legendre.py:166:        assert_raises(ValueError, leg.legval3d, x1, x2, x3[:2], self.c3d)
numpy/polynomial/tests/test_legendre.py:171:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:176:        assert_(res.shape == (2, 3))
numpy/polynomial/tests/test_legendre.py:185:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:190:        assert_(res.shape == (2, 3)*2)
numpy/polynomial/tests/test_legendre.py:199:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:204:        assert_(res.shape == (2, 3)*3)
numpy/polynomial/tests/test_legendre.py:211:        assert_raises(TypeError, leg.legint, [0], .5)
numpy/polynomial/tests/test_legendre.py:212:        assert_raises(ValueError, leg.legint, [0], -1)
numpy/polynomial/tests/test_legendre.py:213:        assert_raises(ValueError, leg.legint, [0], 1, [0, 0])
numpy/polynomial/tests/test_legendre.py:214:        assert_raises(ValueError, leg.legint, [0], lbnd=[0])
numpy/polynomial/tests/test_legendre.py:215:        assert_raises(ValueError, leg.legint, [0], scl=[0])
numpy/polynomial/tests/test_legendre.py:216:        assert_raises(TypeError, leg.legint, [0], axis=.5)
numpy/polynomial/tests/test_legendre.py:222:            assert_almost_equal(res, [0, 1])
numpy/polynomial/tests/test_legendre.py:232:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_legendre.py:240:            assert_almost_equal(leg.legval(-1, legint), i)
numpy/polynomial/tests/test_legendre.py:250:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_legendre.py:260:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_legendre.py:270:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_legendre.py:280:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_legendre.py:290:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_legendre.py:298:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:302:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:306:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:309:        assert_equal(leg.legint((1, 2, 3), 0), (1, 2, 3))
numpy/polynomial/tests/test_legendre.py:316:        assert_raises(TypeError, leg.legder, [0], .5)
numpy/polynomial/tests/test_legendre.py:317:        assert_raises(ValueError, leg.legder, [0], -1)
numpy/polynomial/tests/test_legendre.py:323:            assert_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_legendre.py:330:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_legendre.py:337:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_legendre.py:345:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:349:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:353:        assert_equal(leg.legder(c, 4), [0])
numpy/polynomial/tests/test_legendre.py:363:        assert_(v.shape == (3, 4))
numpy/polynomial/tests/test_legendre.py:366:            assert_almost_equal(v[..., i], leg.legval(x, coef))
numpy/polynomial/tests/test_legendre.py:371:        assert_(v.shape == (3, 2, 4))
numpy/polynomial/tests/test_legendre.py:374:            assert_almost_equal(v[..., i], leg.legval(x, coef))
numpy/polynomial/tests/test_legendre.py:383:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:387:        assert_(van.shape == (1, 5, 6))
numpy/polynomial/tests/test_legendre.py:396:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:400:        assert_(van.shape == (1, 5, 24))
numpy/polynomial/tests/test_legendre.py:403:        assert_raises(ValueError, leg.legvander, (1, 2, 3), -1)
numpy/polynomial/tests/test_legendre.py:416:        assert_raises(ValueError, leg.legfit, [1], [1], -1)
numpy/polynomial/tests/test_legendre.py:417:        assert_raises(TypeError, leg.legfit, [[1]], [1], 0)
numpy/polynomial/tests/test_legendre.py:418:        assert_raises(TypeError, leg.legfit, [], [1], 0)
numpy/polynomial/tests/test_legendre.py:419:        assert_raises(TypeError, leg.legfit, [1], [[[1]]], 0)
numpy/polynomial/tests/test_legendre.py:420:        assert_raises(TypeError, leg.legfit, [1, 2], [1], 0)
numpy/polynomial/tests/test_legendre.py:421:        assert_raises(TypeError, leg.legfit, [1], [1, 2], 0)
numpy/polynomial/tests/test_legendre.py:422:        assert_raises(TypeError, leg.legfit, [1], [1], 0, w=[[1]])
numpy/polynomial/tests/test_legendre.py:423:        assert_raises(TypeError, leg.legfit, [1], [1], 0, w=[1, 1])
numpy/polynomial/tests/test_legendre.py:424:        assert_raises(ValueError, leg.legfit, [1], [1], [-1,])
numpy/polynomial/tests/test_legendre.py:425:        assert_raises(ValueError, leg.legfit, [1], [1], [2, -1, 6])
numpy/polynomial/tests/test_legendre.py:426:        assert_raises(TypeError, leg.legfit, [1], [1], [])
numpy/polynomial/tests/test_legendre.py:433:        assert_equal(len(coef3), 4)
numpy/polynomial/tests/test_legendre.py:434:        assert_almost_equal(leg.legval(x, coef3), y)
numpy/polynomial/tests/test_legendre.py:436:        assert_equal(len(coef3), 4)
numpy/polynomial/tests/test_legendre.py:437:        assert_almost_equal(leg.legval(x, coef3), y)
numpy/polynomial/tests/test_legendre.py:440:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_legendre.py:441:        assert_almost_equal(leg.legval(x, coef4), y)
numpy/polynomial/tests/test_legendre.py:443:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_legendre.py:444:        assert_almost_equal(leg.legval(x, coef4), y)
numpy/polynomial/tests/test_legendre.py:447:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_legendre.py:448:        assert_almost_equal(leg.legval(x, coef4), y)
numpy/polynomial/tests/test_legendre.py:451:        assert_almost_equal(coef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_legendre.py:453:        assert_almost_equal(coef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_legendre.py:460:        assert_almost_equal(wcoef3, coef3)
numpy/polynomial/tests/test_legendre.py:462:        assert_almost_equal(wcoef3, coef3)
numpy/polynomial/tests/test_legendre.py:465:        assert_almost_equal(wcoef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_legendre.py:467:        assert_almost_equal(wcoef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_legendre.py:471:        assert_almost_equal(leg.legfit(x, x, 1), [0, 1])
numpy/polynomial/tests/test_legendre.py:472:        assert_almost_equal(leg.legfit(x, x, [0, 1]), [0, 1])
numpy/polynomial/tests/test_legendre.py:477:        assert_almost_equal(leg.legval(x, coef1), y)
numpy/polynomial/tests/test_legendre.py:479:        assert_almost_equal(leg.legval(x, coef2), y)
numpy/polynomial/tests/test_legendre.py:480:        assert_almost_equal(coef1, coef2)
numpy/polynomial/tests/test_legendre.py:486:        assert_raises(ValueError, leg.legcompanion, [])
numpy/polynomial/tests/test_legendre.py:487:        assert_raises(ValueError, leg.legcompanion, [1])
numpy/polynomial/tests/test_legendre.py:492:            assert_(leg.legcompanion(coef).shape == (i, i))
numpy/polynomial/tests/test_legendre.py:495:        assert_(leg.legcompanion([1, 2])[0, 0] == -.5)
numpy/polynomial/tests/test_legendre.py:510:        assert_almost_equal(vv, np.eye(100))
numpy/polynomial/tests/test_legendre.py:514:        assert_almost_equal(w.sum(), tgt)
numpy/polynomial/tests/test_legendre.py:521:        assert_almost_equal(trim(res), [1])
numpy/polynomial/tests/test_legendre.py:527:            assert_(len(pol) == i + 1)
numpy/polynomial/tests/test_legendre.py:528:            assert_almost_equal(leg.leg2poly(pol)[-1], 1)
numpy/polynomial/tests/test_legendre.py:529:            assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_legendre.py:532:        assert_almost_equal(leg.legroots([1]), [])
numpy/polynomial/tests/test_legendre.py:533:        assert_almost_equal(leg.legroots([1, 2]), [-.5])
numpy/polynomial/tests/test_legendre.py:537:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_legendre.py:543:        assert_raises(ValueError, leg.legtrim, coef, -1)
numpy/polynomial/tests/test_legendre.py:546:        assert_equal(leg.legtrim(coef), coef[:-1])
numpy/polynomial/tests/test_legendre.py:547:        assert_equal(leg.legtrim(coef, 1), coef[:-3])
numpy/polynomial/tests/test_legendre.py:548:        assert_equal(leg.legtrim(coef, 2), [0])
numpy/polynomial/tests/test_legendre.py:551:        assert_equal(leg.legline(3, 4), [3, 4])
numpy/polynomial/tests/test_legendre.py:554:        assert_equal(leg.legline(3, 0), [3])
numpy/polynomial/tests/test_legendre.py:558:            assert_almost_equal(leg.leg2poly([0]*i + [1]), Llist[i])
numpy/polynomial/tests/test_legendre.py:562:            assert_almost_equal(leg.poly2leg(Llist[i]), [0]*i + [1])
numpy/polynomial/tests/test_legendre.py:568:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:26:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:37:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:48:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:59:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:71:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:82:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:100:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:112:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:124:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:136:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:148:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:160:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:172:        assert_equal(len(str(p)), 74)
numpy/polynomial/tests/test_printing.py:173:        assert_equal(str(p), (
numpy/polynomial/tests/test_printing.py:181:        assert_equal(len(str(p)), 75)
numpy/polynomial/tests/test_printing.py:182:        assert_equal(str(p), (
numpy/polynomial/tests/test_printing.py:192:        assert_equal(len(str(p).split('\n')[0]), 74)
numpy/polynomial/tests/test_printing.py:193:        assert_equal(str(p), (
numpy/polynomial/tests/test_printing.py:203:        assert_equal(str(p), (
numpy/polynomial/tests/test_printing.py:224:            assert_equal(str(p), tgt)
numpy/polynomial/tests/test_printing.py:226:                assert_(len(line) < lw)
numpy/polynomial/tests/test_printing.py:233:    assert_equal(str(p), "1.0 + 2.0 x**1 + 3.0 x**2")
numpy/polynomial/tests/test_printing.py:234:    assert_equal(str(c), "1.0 + 2.0 T_1(x) + 3.0 T_2(x)")
numpy/polynomial/tests/test_printing.py:236:    assert_equal(str(p), "1.0 + 2.0·x¹ + 3.0·x²")
numpy/polynomial/tests/test_printing.py:237:    assert_equal(str(c), "1.0 + 2.0·T₁(x) + 3.0·T₂(x)")
numpy/polynomial/tests/test_printing.py:250:    assert_equal(str(p1), "1j + (1+1j)·x¹ - (2-2j)·x² + (3+0j)·x³")
numpy/polynomial/tests/test_printing.py:251:    assert_equal(str(p2), "1j + (1+1j)·x¹ + (-2+2j)·x² + (3+0j)·x³")
numpy/polynomial/tests/test_printing.py:253:    assert_equal(str(p1), "1j + (1+1j) x**1 - (2-2j) x**2 + (3+0j) x**3")
numpy/polynomial/tests/test_printing.py:254:    assert_equal(str(p2), "1j + (1+1j) x**1 + (-2+2j) x**2 + (3+0j) x**3")
numpy/polynomial/tests/test_printing.py:271:    assert_equal(str(p), tgt)
numpy/polynomial/tests/test_printing.py:284:    assert_equal(str(p), tgt)
numpy/polynomial/tests/test_printing.py:291:        assert_equal(format(p, 'unicode'), "1.0 + 2.0·x¹ + 0.0·x² - 1.0·x³")
numpy/polynomial/tests/test_printing.py:303:        assert_equal(format(p), "1.0 + 2.0 x**1 + 3.0 x**2")
numpy/polynomial/tests/test_printing.py:304:        assert_equal(f"{p}", "1.0 + 2.0 x**1 + 3.0 x**2")
numpy/polynomial/tests/test_printing.py:316:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:321:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:326:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:331:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:336:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:341:        assert_equal(res, tgt)
numpy/polynomial/tests/test_printing.py:360:        assert_equal(self.as_latex(p),
numpy/polynomial/tests/test_printing.py:365:        assert_equal(self.as_latex(p),
numpy/polynomial/tests/test_printing.py:370:        assert_equal(self.as_latex(p),
numpy/polynomial/tests/test_printing.py:375:        assert_equal(self.as_latex(p),
numpy/polynomial/tests/test_printing.py:380:        assert_equal(self.as_latex(p),
numpy/polynomial/tests/test_printing.py:384:        assert_equal(self.as_latex(p),
numpy/polynomial/tests/test_printing.py:389:        assert_equal(self.as_latex(p),
numpy/polynomial/tests/test_hermite.py:34:        assert_equal(herm.hermdomain, [-1, 1])
numpy/polynomial/tests/test_hermite.py:37:        assert_equal(herm.hermzero, [0])
numpy/polynomial/tests/test_hermite.py:40:        assert_equal(herm.hermone, [1])
numpy/polynomial/tests/test_hermite.py:43:        assert_equal(herm.hermx, [0, .5])
numpy/polynomial/tests/test_hermite.py:57:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_hermite.py:67:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_hermite.py:70:        assert_equal(herm.hermmulx([0]), [0])
numpy/polynomial/tests/test_hermite.py:71:        assert_equal(herm.hermmulx([1]), [0, .5])
numpy/polynomial/tests/test_hermite.py:75:            assert_equal(herm.hermmulx(ser), tgt)
numpy/polynomial/tests/test_hermite.py:88:                assert_(len(pol3) == i + j + 1, msg)
numpy/polynomial/tests/test_hermite.py:89:                assert_almost_equal(val3, val1*val2, err_msg=msg)
numpy/polynomial/tests/test_hermite.py:100:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_hermite.py:109:                assert_equal(trim(res), trim(tgt), err_msg=msg)
numpy/polynomial/tests/test_hermite.py:124:        assert_equal(herm.hermval([], [1]).size, 0)
numpy/polynomial/tests/test_hermite.py:133:            assert_almost_equal(res, tgt, err_msg=msg)
numpy/polynomial/tests/test_hermite.py:139:            assert_equal(herm.hermval(x, [1]).shape, dims)
numpy/polynomial/tests/test_hermite.py:140:            assert_equal(herm.hermval(x, [1, 0]).shape, dims)
numpy/polynomial/tests/test_hermite.py:141:            assert_equal(herm.hermval(x, [1, 0, 0]).shape, dims)
numpy/polynomial/tests/test_hermite.py:148:        assert_raises(ValueError, herm.hermval2d, x1, x2[:2], self.c2d)
numpy/polynomial/tests/test_hermite.py:153:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite.py:158:        assert_(res.shape == (2, 3))
numpy/polynomial/tests/test_hermite.py:165:        assert_raises(ValueError, herm.hermval3d, x1, x2, x3[:2], self.c3d)
numpy/polynomial/tests/test_hermite.py:170:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite.py:175:        assert_(res.shape == (2, 3))
numpy/polynomial/tests/test_hermite.py:184:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite.py:189:        assert_(res.shape == (2, 3)*2)
numpy/polynomial/tests/test_hermite.py:198:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite.py:203:        assert_(res.shape == (2, 3)*3)
numpy/polynomial/tests/test_hermite.py:210:        assert_raises(TypeError, herm.hermint, [0], .5)
numpy/polynomial/tests/test_hermite.py:211:        assert_raises(ValueError, herm.hermint, [0], -1)
numpy/polynomial/tests/test_hermite.py:212:        assert_raises(ValueError, herm.hermint, [0], 1, [0, 0])
numpy/polynomial/tests/test_hermite.py:213:        assert_raises(ValueError, herm.hermint, [0], lbnd=[0])
numpy/polynomial/tests/test_hermite.py:214:        assert_raises(ValueError, herm.hermint, [0], scl=[0])
numpy/polynomial/tests/test_hermite.py:215:        assert_raises(TypeError, herm.hermint, [0], axis=.5)
numpy/polynomial/tests/test_hermite.py:221:            assert_almost_equal(res, [0, .5])
numpy/polynomial/tests/test_hermite.py:231:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite.py:239:            assert_almost_equal(herm.hermval(-1, hermint), i)
numpy/polynomial/tests/test_hermite.py:249:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite.py:259:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite.py:269:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite.py:279:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite.py:289:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite.py:297:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite.py:301:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite.py:305:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite.py:312:        assert_raises(TypeError, herm.hermder, [0], .5)
numpy/polynomial/tests/test_hermite.py:313:        assert_raises(ValueError, herm.hermder, [0], -1)
numpy/polynomial/tests/test_hermite.py:319:            assert_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite.py:326:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite.py:333:                assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite.py:341:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite.py:345:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite.py:356:        assert_(v.shape == (3, 4))
numpy/polynomial/tests/test_hermite.py:359:            assert_almost_equal(v[..., i], herm.hermval(x, coef))
numpy/polynomial/tests/test_hermite.py:364:        assert_(v.shape == (3, 2, 4))
numpy/polynomial/tests/test_hermite.py:367:            assert_almost_equal(v[..., i], herm.hermval(x, coef))
numpy/polynomial/tests/test_hermite.py:376:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite.py:380:        assert_(van.shape == (1, 5, 6))
numpy/polynomial/tests/test_hermite.py:389:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite.py:393:        assert_(van.shape == (1, 5, 24))
numpy/polynomial/tests/test_hermite.py:406:        assert_raises(ValueError, herm.hermfit, [1], [1], -1)
numpy/polynomial/tests/test_hermite.py:407:        assert_raises(TypeError, herm.hermfit, [[1]], [1], 0)
numpy/polynomial/tests/test_hermite.py:408:        assert_raises(TypeError, herm.hermfit, [], [1], 0)
numpy/polynomial/tests/test_hermite.py:409:        assert_raises(TypeError, herm.hermfit, [1], [[[1]]], 0)
numpy/polynomial/tests/test_hermite.py:410:        assert_raises(TypeError, herm.hermfit, [1, 2], [1], 0)
numpy/polynomial/tests/test_hermite.py:411:        assert_raises(TypeError, herm.hermfit, [1], [1, 2], 0)
numpy/polynomial/tests/test_hermite.py:412:        assert_raises(TypeError, herm.hermfit, [1], [1], 0, w=[[1]])
numpy/polynomial/tests/test_hermite.py:413:        assert_raises(TypeError, herm.hermfit, [1], [1], 0, w=[1, 1])
numpy/polynomial/tests/test_hermite.py:414:        assert_raises(ValueError, herm.hermfit, [1], [1], [-1,])
numpy/polynomial/tests/test_hermite.py:415:        assert_raises(ValueError, herm.hermfit, [1], [1], [2, -1, 6])
numpy/polynomial/tests/test_hermite.py:416:        assert_raises(TypeError, herm.hermfit, [1], [1], [])
numpy/polynomial/tests/test_hermite.py:423:        assert_equal(len(coef3), 4)
numpy/polynomial/tests/test_hermite.py:424:        assert_almost_equal(herm.hermval(x, coef3), y)
numpy/polynomial/tests/test_hermite.py:426:        assert_equal(len(coef3), 4)
numpy/polynomial/tests/test_hermite.py:427:        assert_almost_equal(herm.hermval(x, coef3), y)
numpy/polynomial/tests/test_hermite.py:430:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_hermite.py:431:        assert_almost_equal(herm.hermval(x, coef4), y)
numpy/polynomial/tests/test_hermite.py:433:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_hermite.py:434:        assert_almost_equal(herm.hermval(x, coef4), y)
numpy/polynomial/tests/test_hermite.py:437:        assert_equal(len(coef4), 5)
numpy/polynomial/tests/test_hermite.py:438:        assert_almost_equal(herm.hermval(x, coef4), y)
numpy/polynomial/tests/test_hermite.py:441:        assert_almost_equal(coef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_hermite.py:443:        assert_almost_equal(coef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_hermite.py:450:        assert_almost_equal(wcoef3, coef3)
numpy/polynomial/tests/test_hermite.py:452:        assert_almost_equal(wcoef3, coef3)
numpy/polynomial/tests/test_hermite.py:455:        assert_almost_equal(wcoef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_hermite.py:457:        assert_almost_equal(wcoef2d, np.array([coef3, coef3]).T)
numpy/polynomial/tests/test_hermite.py:461:        assert_almost_equal(herm.hermfit(x, x, 1), [0, .5])
numpy/polynomial/tests/test_hermite.py:462:        assert_almost_equal(herm.hermfit(x, x, [0, 1]), [0, .5])
numpy/polynomial/tests/test_hermite.py:467:        assert_almost_equal(herm.hermval(x, coef1), y)
numpy/polynomial/tests/test_hermite.py:469:        assert_almost_equal(herm.hermval(x, coef2), y)
numpy/polynomial/tests/test_hermite.py:470:        assert_almost_equal(coef1, coef2)
numpy/polynomial/tests/test_hermite.py:476:        assert_raises(ValueError, herm.hermcompanion, [])
numpy/polynomial/tests/test_hermite.py:477:        assert_raises(ValueError, herm.hermcompanion, [1])
numpy/polynomial/tests/test_hermite.py:482:            assert_(herm.hermcompanion(coef).shape == (i, i))
numpy/polynomial/tests/test_hermite.py:485:        assert_(herm.hermcompanion([1, 2])[0, 0] == -.25)
numpy/polynomial/tests/test_hermite.py:500:        assert_almost_equal(vv, np.eye(100))
numpy/polynomial/tests/test_hermite.py:504:        assert_almost_equal(w.sum(), tgt)
numpy/polynomial/tests/test_hermite.py:511:        assert_almost_equal(trim(res), [1])
numpy/polynomial/tests/test_hermite.py:517:            assert_(len(pol) == i + 1)
numpy/polynomial/tests/test_hermite.py:518:            assert_almost_equal(herm.herm2poly(pol)[-1], 1)
numpy/polynomial/tests/test_hermite.py:519:            assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_hermite.py:522:        assert_almost_equal(herm.hermroots([1]), [])
numpy/polynomial/tests/test_hermite.py:523:        assert_almost_equal(herm.hermroots([1, 1]), [-.5])
numpy/polynomial/tests/test_hermite.py:527:            assert_almost_equal(trim(res), trim(tgt))
numpy/polynomial/tests/test_hermite.py:533:        assert_raises(ValueError, herm.hermtrim, coef, -1)
numpy/polynomial/tests/test_hermite.py:536:        assert_equal(herm.hermtrim(coef), coef[:-1])
numpy/polynomial/tests/test_hermite.py:537:        assert_equal(herm.hermtrim(coef, 1), coef[:-3])
numpy/polynomial/tests/test_hermite.py:538:        assert_equal(herm.hermtrim(coef, 2), [0])
numpy/polynomial/tests/test_hermite.py:541:        assert_equal(herm.hermline(3, 4), [3, 2])
numpy/polynomial/tests/test_hermite.py:545:            assert_almost_equal(herm.herm2poly([0]*i + [1]), Hlist[i])
numpy/polynomial/tests/test_hermite.py:549:            assert_almost_equal(herm.poly2herm(Hlist[i]), [0]*i + [1])
numpy/polynomial/tests/test_hermite.py:555:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_classes.py:40:        assert_(np.all(p1.domain == p2.domain))
numpy/polynomial/tests/test_classes.py:41:        assert_(np.all(p1.window == p2.window))
numpy/polynomial/tests/test_classes.py:42:        assert_almost_equal(p1.coef, p2.coef)
numpy/polynomial/tests/test_classes.py:68:    assert_almost_equal(p2.domain, d2)
numpy/polynomial/tests/test_classes.py:69:    assert_almost_equal(p2.window, w2)
numpy/polynomial/tests/test_classes.py:70:    assert_almost_equal(p2(x), p1(x))
numpy/polynomial/tests/test_classes.py:85:    assert_almost_equal(p2.domain, d2)
numpy/polynomial/tests/test_classes.py:86:    assert_almost_equal(p2.window, w2)
numpy/polynomial/tests/test_classes.py:87:    assert_almost_equal(p2(x), p1(x))
numpy/polynomial/tests/test_classes.py:100:    assert_equal(p.domain, d)
numpy/polynomial/tests/test_classes.py:101:    assert_equal(p.window, w)
numpy/polynomial/tests/test_classes.py:102:    assert_almost_equal(p(x), x)
numpy/polynomial/tests/test_classes.py:109:    assert_equal(p.domain, d)
numpy/polynomial/tests/test_classes.py:110:    assert_equal(p.window, w)
numpy/polynomial/tests/test_classes.py:111:    assert_equal(p.coef, [0]*5 + [1])
numpy/polynomial/tests/test_classes.py:121:    assert_equal(p1.degree(), len(r))
numpy/polynomial/tests/test_classes.py:122:    assert_equal(p1.domain, d)
numpy/polynomial/tests/test_classes.py:123:    assert_equal(p1.window, w)
numpy/polynomial/tests/test_classes.py:124:    assert_almost_equal(p1(r), 0)
numpy/polynomial/tests/test_classes.py:130:    assert_almost_equal(p2.coef[-1], 1)
numpy/polynomial/tests/test_classes.py:141:    assert record[0].message.args[0] == "The fit may be poorly conditioned"
numpy/polynomial/tests/test_classes.py:153:    assert_almost_equal(p.domain, [0, 3])
numpy/polynomial/tests/test_classes.py:154:    assert_almost_equal(p(x), y)
numpy/polynomial/tests/test_classes.py:155:    assert_equal(p.degree(), 3)
numpy/polynomial/tests/test_classes.py:161:    assert_almost_equal(p(x), y)
numpy/polynomial/tests/test_classes.py:162:    assert_almost_equal(p.domain, d)
numpy/polynomial/tests/test_classes.py:163:    assert_almost_equal(p.window, w)
numpy/polynomial/tests/test_classes.py:165:    assert_almost_equal(p(x), y)
numpy/polynomial/tests/test_classes.py:166:    assert_almost_equal(p.domain, d)
numpy/polynomial/tests/test_classes.py:167:    assert_almost_equal(p.window, w)
numpy/polynomial/tests/test_classes.py:171:    assert_equal(p.domain, Poly.domain)
numpy/polynomial/tests/test_classes.py:172:    assert_equal(p.window, Poly.window)
numpy/polynomial/tests/test_classes.py:174:    assert_equal(p.domain, Poly.domain)
numpy/polynomial/tests/test_classes.py:175:    assert_equal(p.window, Poly.window)
numpy/polynomial/tests/test_classes.py:184:    assert_almost_equal(p1(x), p2(x))
numpy/polynomial/tests/test_classes.py:185:    assert_almost_equal(p2(x), p3(x))
numpy/polynomial/tests/test_classes.py:193:    assert_(p1 == p1)
numpy/polynomial/tests/test_classes.py:194:    assert_(not p1 == p2)
numpy/polynomial/tests/test_classes.py:195:    assert_(not p1 == p3)
numpy/polynomial/tests/test_classes.py:196:    assert_(not p1 == p4)
numpy/polynomial/tests/test_classes.py:204:    assert_(not p1 != p1)
numpy/polynomial/tests/test_classes.py:205:    assert_(p1 != p2)
numpy/polynomial/tests/test_classes.py:206:    assert_(p1 != p3)
numpy/polynomial/tests/test_classes.py:207:    assert_(p1 != p4)
numpy/polynomial/tests/test_classes.py:217:    assert_poly_almost_equal(p2 + p1, p3)
numpy/polynomial/tests/test_classes.py:218:    assert_poly_almost_equal(p1 + c2, p3)
numpy/polynomial/tests/test_classes.py:219:    assert_poly_almost_equal(c2 + p1, p3)
numpy/polynomial/tests/test_classes.py:220:    assert_poly_almost_equal(p1 + tuple(c2), p3)
numpy/polynomial/tests/test_classes.py:221:    assert_poly_almost_equal(tuple(c2) + p1, p3)
numpy/polynomial/tests/test_classes.py:222:    assert_poly_almost_equal(p1 + np.array(c2), p3)
numpy/polynomial/tests/test_classes.py:223:    assert_poly_almost_equal(np.array(c2) + p1, p3)
numpy/polynomial/tests/test_classes.py:224:    assert_raises(TypeError, op.add, p1, Poly([0], domain=Poly.domain + 1))
numpy/polynomial/tests/test_classes.py:225:    assert_raises(TypeError, op.add, p1, Poly([0], window=Poly.window + 1))
numpy/polynomial/tests/test_classes.py:227:        assert_raises(TypeError, op.add, p1, Chebyshev([0]))
numpy/polynomial/tests/test_classes.py:229:        assert_raises(TypeError, op.add, p1, Polynomial([0]))
numpy/polynomial/tests/test_classes.py:239:    assert_poly_almost_equal(p2 - p1, -p3)
numpy/polynomial/tests/test_classes.py:240:    assert_poly_almost_equal(p1 - c2, p3)
numpy/polynomial/tests/test_classes.py:241:    assert_poly_almost_equal(c2 - p1, -p3)
numpy/polynomial/tests/test_classes.py:242:    assert_poly_almost_equal(p1 - tuple(c2), p3)
numpy/polynomial/tests/test_classes.py:243:    assert_poly_almost_equal(tuple(c2) - p1, -p3)
numpy/polynomial/tests/test_classes.py:244:    assert_poly_almost_equal(p1 - np.array(c2), p3)
numpy/polynomial/tests/test_classes.py:245:    assert_poly_almost_equal(np.array(c2) - p1, -p3)
numpy/polynomial/tests/test_classes.py:246:    assert_raises(TypeError, op.sub, p1, Poly([0], domain=Poly.domain + 1))
numpy/polynomial/tests/test_classes.py:247:    assert_raises(TypeError, op.sub, p1, Poly([0], window=Poly.window + 1))
numpy/polynomial/tests/test_classes.py:249:        assert_raises(TypeError, op.sub, p1, Chebyshev([0]))
numpy/polynomial/tests/test_classes.py:251:        assert_raises(TypeError, op.sub, p1, Polynomial([0]))
numpy/polynomial/tests/test_classes.py:260:    assert_poly_almost_equal(p2 * p1, p3)
numpy/polynomial/tests/test_classes.py:261:    assert_poly_almost_equal(p1 * c2, p3)
numpy/polynomial/tests/test_classes.py:262:    assert_poly_almost_equal(c2 * p1, p3)
numpy/polynomial/tests/test_classes.py:263:    assert_poly_almost_equal(p1 * tuple(c2), p3)
numpy/polynomial/tests/test_classes.py:264:    assert_poly_almost_equal(tuple(c2) * p1, p3)
numpy/polynomial/tests/test_classes.py:265:    assert_poly_almost_equal(p1 * np.array(c2), p3)
numpy/polynomial/tests/test_classes.py:266:    assert_poly_almost_equal(np.array(c2) * p1, p3)
numpy/polynomial/tests/test_classes.py:267:    assert_poly_almost_equal(p1 * 2, p1 * Poly([2]))
numpy/polynomial/tests/test_classes.py:268:    assert_poly_almost_equal(2 * p1, p1 * Poly([2]))
numpy/polynomial/tests/test_classes.py:269:    assert_raises(TypeError, op.mul, p1, Poly([0], domain=Poly.domain + 1))
numpy/polynomial/tests/test_classes.py:270:    assert_raises(TypeError, op.mul, p1, Poly([0], window=Poly.window + 1))
numpy/polynomial/tests/test_classes.py:272:        assert_raises(TypeError, op.mul, p1, Chebyshev([0]))
numpy/polynomial/tests/test_classes.py:274:        assert_raises(TypeError, op.mul, p1, Polynomial([0]))
numpy/polynomial/tests/test_classes.py:286:    assert_poly_almost_equal(p4 // p2, p1)
numpy/polynomial/tests/test_classes.py:287:    assert_poly_almost_equal(p4 // c2, p1)
numpy/polynomial/tests/test_classes.py:288:    assert_poly_almost_equal(c4 // p2, p1)
numpy/polynomial/tests/test_classes.py:289:    assert_poly_almost_equal(p4 // tuple(c2), p1)
numpy/polynomial/tests/test_classes.py:290:    assert_poly_almost_equal(tuple(c4) // p2, p1)
numpy/polynomial/tests/test_classes.py:291:    assert_poly_almost_equal(p4 // np.array(c2), p1)
numpy/polynomial/tests/test_classes.py:292:    assert_poly_almost_equal(np.array(c4) // p2, p1)
numpy/polynomial/tests/test_classes.py:293:    assert_poly_almost_equal(2 // p2, Poly([0]))
numpy/polynomial/tests/test_classes.py:294:    assert_poly_almost_equal(p2 // 2, 0.5*p2)
numpy/polynomial/tests/test_classes.py:300:        assert_raises(TypeError, op.floordiv, p1, Chebyshev([0]))
numpy/polynomial/tests/test_classes.py:302:        assert_raises(TypeError, op.floordiv, p1, Polynomial([0]))
numpy/polynomial/tests/test_classes.py:315:        assert_poly_almost_equal(op.truediv(p2, s), p1)
numpy/polynomial/tests/test_classes.py:316:        assert_raises(TypeError, op.truediv, s, p2)
numpy/polynomial/tests/test_classes.py:319:        assert_poly_almost_equal(op.truediv(p2, s), p1)
numpy/polynomial/tests/test_classes.py:320:        assert_raises(TypeError, op.truediv, s, p2)
numpy/polynomial/tests/test_classes.py:323:        assert_poly_almost_equal(op.truediv(p2, s), p1)
numpy/polynomial/tests/test_classes.py:324:        assert_raises(TypeError, op.truediv, s, p2)
numpy/polynomial/tests/test_classes.py:326:        assert_raises(TypeError, op.truediv, p2, s)
numpy/polynomial/tests/test_classes.py:327:        assert_raises(TypeError, op.truediv, s, p2)
numpy/polynomial/tests/test_classes.py:329:        assert_raises(TypeError, op.truediv, p2, ptype(1))
numpy/polynomial/tests/test_classes.py:342:    assert_poly_almost_equal(p4 % p2, p3)
numpy/polynomial/tests/test_classes.py:343:    assert_poly_almost_equal(p4 % c2, p3)
numpy/polynomial/tests/test_classes.py:344:    assert_poly_almost_equal(c4 % p2, p3)
numpy/polynomial/tests/test_classes.py:345:    assert_poly_almost_equal(p4 % tuple(c2), p3)
numpy/polynomial/tests/test_classes.py:346:    assert_poly_almost_equal(tuple(c4) % p2, p3)
numpy/polynomial/tests/test_classes.py:347:    assert_poly_almost_equal(p4 % np.array(c2), p3)
numpy/polynomial/tests/test_classes.py:348:    assert_poly_almost_equal(np.array(c4) % p2, p3)
numpy/polynomial/tests/test_classes.py:349:    assert_poly_almost_equal(2 % p2, Poly([2]))
numpy/polynomial/tests/test_classes.py:350:    assert_poly_almost_equal(p2 % 2, Poly([0]))
numpy/polynomial/tests/test_classes.py:351:    assert_raises(TypeError, op.mod, p1, Poly([0], domain=Poly.domain + 1))
numpy/polynomial/tests/test_classes.py:352:    assert_raises(TypeError, op.mod, p1, Poly([0], window=Poly.window + 1))
numpy/polynomial/tests/test_classes.py:354:        assert_raises(TypeError, op.mod, p1, Chebyshev([0]))
numpy/polynomial/tests/test_classes.py:356:        assert_raises(TypeError, op.mod, p1, Polynomial([0]))
numpy/polynomial/tests/test_classes.py:370:    assert_poly_almost_equal(quo, p1)
numpy/polynomial/tests/test_classes.py:371:    assert_poly_almost_equal(rem, p3)
numpy/polynomial/tests/test_classes.py:373:    assert_poly_almost_equal(quo, p1)
numpy/polynomial/tests/test_classes.py:374:    assert_poly_almost_equal(rem, p3)
numpy/polynomial/tests/test_classes.py:376:    assert_poly_almost_equal(quo, p1)
numpy/polynomial/tests/test_classes.py:377:    assert_poly_almost_equal(rem, p3)
numpy/polynomial/tests/test_classes.py:379:    assert_poly_almost_equal(quo, p1)
numpy/polynomial/tests/test_classes.py:380:    assert_poly_almost_equal(rem, p3)
numpy/polynomial/tests/test_classes.py:382:    assert_poly_almost_equal(quo, p1)
numpy/polynomial/tests/test_classes.py:383:    assert_poly_almost_equal(rem, p3)
numpy/polynomial/tests/test_classes.py:385:    assert_poly_almost_equal(quo, p1)
numpy/polynomial/tests/test_classes.py:386:    assert_poly_almost_equal(rem, p3)
numpy/polynomial/tests/test_classes.py:388:    assert_poly_almost_equal(quo, p1)
numpy/polynomial/tests/test_classes.py:389:    assert_poly_almost_equal(rem, p3)
numpy/polynomial/tests/test_classes.py:391:    assert_poly_almost_equal(quo, 0.5*p2)
numpy/polynomial/tests/test_classes.py:392:    assert_poly_almost_equal(rem, Poly([0]))
numpy/polynomial/tests/test_classes.py:394:    assert_poly_almost_equal(quo, Poly([0]))
numpy/polynomial/tests/test_classes.py:395:    assert_poly_almost_equal(rem, Poly([2]))
numpy/polynomial/tests/test_classes.py:396:    assert_raises(TypeError, divmod, p1, Poly([0], domain=Poly.domain + 1))
numpy/polynomial/tests/test_classes.py:397:    assert_raises(TypeError, divmod, p1, Poly([0], window=Poly.window + 1))
numpy/polynomial/tests/test_classes.py:399:        assert_raises(TypeError, divmod, p1, Chebyshev([0]))
numpy/polynomial/tests/test_classes.py:401:        assert_raises(TypeError, divmod, p1, Polynomial([0]))
numpy/polynomial/tests/test_classes.py:409:    assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_classes.py:412:    assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_classes.py:417:    assert_equal(p.degree(), 5)
numpy/polynomial/tests/test_classes.py:423:    assert_(p1 == p2)
numpy/polynomial/tests/test_classes.py:424:    assert_(p1 is not p2)
numpy/polynomial/tests/test_classes.py:425:    assert_(p1.coef is not p2.coef)
numpy/polynomial/tests/test_classes.py:426:    assert_(p1.domain is not p2.domain)
numpy/polynomial/tests/test_classes.py:427:    assert_(p1.window is not p2.window)
numpy/polynomial/tests/test_classes.py:436:    assert_poly_almost_equal(p1, P([0, 2, 3, 4]))
numpy/polynomial/tests/test_classes.py:437:    assert_poly_almost_equal(p2, P([0, 0, 1, 1, 1]))
numpy/polynomial/tests/test_classes.py:442:    assert_poly_almost_equal(p1, P([1, 2, 3, 4]))
numpy/polynomial/tests/test_classes.py:443:    assert_poly_almost_equal(p2, P([1, 1, 1, 1, 1]))
numpy/polynomial/tests/test_classes.py:448:    assert_poly_almost_equal(p1, P([-9, 2, 3, 4]))
numpy/polynomial/tests/test_classes.py:449:    assert_poly_almost_equal(p2, P([6, -9, 1, 1, 1]))
numpy/polynomial/tests/test_classes.py:455:    assert_poly_almost_equal(p1, P([0, 2, 3, 4]))
numpy/polynomial/tests/test_classes.py:456:    assert_poly_almost_equal(p2, P([0, 0, 1, 1, 1]))
numpy/polynomial/tests/test_classes.py:467:    assert_almost_equal(p2.deriv(1).coef, p3.coef)
numpy/polynomial/tests/test_classes.py:468:    assert_almost_equal(p2.deriv(2).coef, p1.coef)
numpy/polynomial/tests/test_classes.py:473:    assert_almost_equal(p2.deriv(1).coef, p3.coef)
numpy/polynomial/tests/test_classes.py:474:    assert_almost_equal(p2.deriv(2).coef, p1.coef)
numpy/polynomial/tests/test_classes.py:485:    assert_almost_equal(xres, xtgt)
numpy/polynomial/tests/test_classes.py:486:    assert_almost_equal(yres, ytgt)
numpy/polynomial/tests/test_classes.py:491:    assert_almost_equal(xres, xtgt)
numpy/polynomial/tests/test_classes.py:492:    assert_almost_equal(yres, ytgt)
numpy/polynomial/tests/test_classes.py:501:        assert_poly_almost_equal(tst**i, tgt)
numpy/polynomial/tests/test_classes.py:507:        assert_poly_almost_equal(tst**i, tgt)
numpy/polynomial/tests/test_classes.py:510:    assert_raises(ValueError, op.pow, tgt, 1.5)
numpy/polynomial/tests/test_classes.py:511:    assert_raises(ValueError, op.pow, tgt, -1)
numpy/polynomial/tests/test_classes.py:523:    assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_classes.py:528:    assert_raises(ValueError, p.cutdeg, .5)
numpy/polynomial/tests/test_classes.py:529:    assert_raises(ValueError, p.cutdeg, -1)
numpy/polynomial/tests/test_classes.py:530:    assert_equal(len(p.cutdeg(3)), 3)
numpy/polynomial/tests/test_classes.py:531:    assert_equal(len(p.cutdeg(2)), 3)
numpy/polynomial/tests/test_classes.py:532:    assert_equal(len(p.cutdeg(1)), 2)
numpy/polynomial/tests/test_classes.py:533:    assert_equal(len(p.cutdeg(0)), 1)
numpy/polynomial/tests/test_classes.py:538:    assert_raises(ValueError, p.truncate, .5)
numpy/polynomial/tests/test_classes.py:539:    assert_raises(ValueError, p.truncate, 0)
numpy/polynomial/tests/test_classes.py:540:    assert_equal(len(p.truncate(4)), 3)
numpy/polynomial/tests/test_classes.py:541:    assert_equal(len(p.truncate(3)), 3)
numpy/polynomial/tests/test_classes.py:542:    assert_equal(len(p.truncate(2)), 2)
numpy/polynomial/tests/test_classes.py:543:    assert_equal(len(p.truncate(1)), 1)
numpy/polynomial/tests/test_classes.py:549:    assert_equal(p.trim().coef, c[:3])
numpy/polynomial/tests/test_classes.py:550:    assert_equal(p.trim(1e-10).coef, c[:2])
numpy/polynomial/tests/test_classes.py:551:    assert_equal(p.trim(1e-5).coef, c[:1])
numpy/polynomial/tests/test_classes.py:559:    assert_almost_equal([0, 1], p.mapparms())
numpy/polynomial/tests/test_classes.py:563:    assert_almost_equal([1, 2], p.mapparms())
numpy/polynomial/tests/test_classes.py:569:    assert_raises(TypeError, np.add, p, x)
numpy/polynomial/tests/test_classes.py:570:    assert_raises(TypeError, np.add, x, p)
numpy/polynomial/tests/test_classes.py:584:        assert_raises(ValueError, Chebyshev.interpolate, self.f, -1)
numpy/polynomial/tests/test_classes.py:585:        assert_raises(TypeError, Chebyshev.interpolate, self.f, 10.)
numpy/polynomial/tests/test_classes.py:589:            assert_(Chebyshev.interpolate(self.f, deg).degree() == deg)
numpy/polynomial/tests/test_classes.py:600:                assert_almost_equal(p(x), powx(x, t), decimal=11)
numpy/polynomial/tests/test_polyutils.py:17:            assert_equal(res, tgt)
numpy/polynomial/tests/test_polyutils.py:21:        assert_raises(ValueError, pu.as_series, [[]])
numpy/polynomial/tests/test_polyutils.py:22:        assert_raises(ValueError, pu.as_series, [[[1, 2]]])
numpy/polynomial/tests/test_polyutils.py:23:        assert_raises(ValueError, pu.as_series, [[1], ['a']])
numpy/polynomial/tests/test_polyutils.py:31:                assert_(resi.dtype.char == resj.dtype.char)
numpy/polynomial/tests/test_polyutils.py:32:                assert_(resj.dtype.char == types[i])
numpy/polynomial/tests/test_polyutils.py:37:        assert_raises(ValueError, pu.trimcoef, coef, -1)
numpy/polynomial/tests/test_polyutils.py:39:        assert_equal(pu.trimcoef(coef), coef[:-1])
numpy/polynomial/tests/test_polyutils.py:40:        assert_equal(pu.trimcoef(coef, 1), coef[:-3])
numpy/polynomial/tests/test_polyutils.py:41:        assert_equal(pu.trimcoef(coef, 2), [0])
numpy/polynomial/tests/test_polyutils.py:45:        assert_raises(ValueError, pu._vander_nd, (), (1, 2, 3), [90])
numpy/polynomial/tests/test_polyutils.py:47:        assert_raises(ValueError, pu._vander_nd, (), (), [90.65])
numpy/polynomial/tests/test_polyutils.py:49:        assert_raises(ValueError, pu._vander_nd, (), (), [])
numpy/polynomial/tests/test_polyutils.py:53:        assert_raises(ZeroDivisionError, pu._div, pu._div, (1, 2, 3), [0])
numpy/polynomial/tests/test_polyutils.py:57:        assert_raises(ValueError, pu._pow, (), [1, 2, 3], 5, 4)
numpy/polynomial/tests/test_polyutils.py:66:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polyutils.py:72:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polyutils.py:80:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polyutils.py:88:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polyutils.py:96:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polyutils.py:106:        assert_(isinstance(res, MyNDArray))
numpy/polynomial/tests/test_polyutils.py:114:        assert_almost_equal(res, tgt)
numpy/polynomial/tests/test_polyutils.py:121:        assert_almost_equal(res, tgt)
tools/swig/test/testArray.py:28:        self.assertTrue(len(a) == 0)
tools/swig/test/testArray.py:44:        self.assertTrue(arrayCopy == self.array1)
tools/swig/test/testArray.py:52:        self.assertTrue(self.array1.length() == self.length)
tools/swig/test/testArray.py:56:        self.assertTrue(len(self.array1) == self.length)
tools/swig/test/testArray.py:62:        self.assertTrue(len(self.array1) == newLen)
tools/swig/test/testArray.py:68:        self.assertTrue(len(self.array1) == a.size)
tools/swig/test/testArray.py:80:            self.assertTrue(self.array1[i] == i*i)
tools/swig/test/testArray.py:101:        self.assertTrue(self.array1.asString() == "[ 1, 2, 3, 4, 5 ]")
tools/swig/test/testArray.py:106:        self.assertTrue(str(self.array1) == "[ -2, -1, 0, 1, 2 ]")
tools/swig/test/testArray.py:113:        self.assertTrue(len(a) == self.length)
tools/swig/test/testArray.py:114:        self.assertTrue((a == [1, 2, 3, 4, 5]).all())
tools/swig/test/testArray.py:129:        self.assertTrue(len(a) == 0)
tools/swig/test/testArray.py:147:        self.assertTrue(arrayCopy == self.array2)
tools/swig/test/testArray.py:159:        self.assertTrue(self.array2.nrows() == self.nrows)
tools/swig/test/testArray.py:163:        self.assertTrue(self.array2.ncols() == self.ncols)
tools/swig/test/testArray.py:167:        self.assertTrue(len(self.array2) == self.nrows*self.ncols)
tools/swig/test/testArray.py:174:        self.assertTrue(len(self.array2) == newRows * newCols)
tools/swig/test/testArray.py:180:        self.assertTrue(len(self.array2) == a.size)
tools/swig/test/testArray.py:201:            self.assertTrue(self.array2[i] == array1[i])
tools/swig/test/testArray.py:212:                self.assertTrue(self.array2[i][j] == i*j)
tools/swig/test/testArray.py:244:        self.assertTrue(self.array2.asString() == result)
tools/swig/test/testArray.py:258:        self.assertTrue(str(self.array2) == result)
tools/swig/test/testArray.py:264:        self.assertTrue(len(a) == self.nrows)
tools/swig/test/testArray.py:278:        self.assertTrue(len(a) == 0)
tools/swig/test/testArray.py:294:        self.assertTrue(arrayCopy == self.array3)
tools/swig/test/testArray.py:302:        self.assertTrue(self.array3.length() == self.length)
tools/swig/test/testArray.py:306:        self.assertTrue(len(self.array3) == self.length)
tools/swig/test/testArray.py:312:        self.assertTrue(len(self.array3) == newLen)
tools/swig/test/testArray.py:318:        self.assertTrue(len(self.array3) == a.size)
tools/swig/test/testArray.py:330:            self.assertTrue(self.array3[i] == i*i)
tools/swig/test/testArray.py:351:        self.assertTrue(self.array3.asString() == "[ (1,-1), (2,-2), (3,-3), (4,-4), (5,-5) ]")
tools/swig/test/testArray.py:356:        self.assertTrue(str(self.array3) == "[ (-2,-4), (-1,-2), (0,0), (1,2), (2,4) ]")
tools/swig/test/testArray.py:363:        self.assertTrue(len(a) == self.length)
tools/swig/test/testArray.py:364:        self.assertTrue((a == [1+2j, 2+3j, 3+4j, 4+5j, 5+6j]).all())
tools/swig/test/testFarray.py:39:        self.assertTrue(arrayCopy == self.array)
tools/swig/test/testFarray.py:51:        self.assertTrue(self.array.nrows() == self.nrows)
tools/swig/test/testFarray.py:55:        self.assertTrue(self.array.ncols() == self.ncols)
tools/swig/test/testFarray.py:59:        self.assertTrue(len(self.array) == self.nrows*self.ncols)
tools/swig/test/testFarray.py:70:                self.assertTrue(self.array[i, j] == i*j)
tools/swig/test/testFarray.py:116:        self.assertTrue(self.array.asString() == result)
tools/swig/test/testFarray.py:130:        self.assertTrue(str(self.array) == result)
tools/swig/test/testFarray.py:142:                self.assertTrue(a[i, j] == i+j)
tools/swig/test/testTensor.py:144:        self.assertEqual((tensor == [[[4, 0, 4], [0, 4, 0], [4, 0, 4]],
tools/swig/test/testTensor.py:263:        self.assertEqual((lower == [[[1, 1], [1, 0]],
tools/swig/test/testTensor.py:265:        self.assertEqual((upper == [[[0, 0], [0, 1]],
tools/swig/test/testSuperTensor.py:133:        self.assertEqual((supertensor == answer).all(), True)
tools/swig/test/testSuperTensor.py:250:        self.assertEqual((lower == answer_lower).all(), True)
tools/swig/test/testSuperTensor.py:251:        self.assertEqual((upper == answer_upper).all(), True)
tools/swig/test/testVector.py:121:        self.assertEqual((vector == [4, 2, 1]).all(), True)
tools/swig/test/testVector.py:224:        self.assertEqual((even == [1, 0, 3]).all(), True)
tools/swig/test/testVector.py:225:        self.assertEqual((odd  == [0, 2, 0]).all(), True)
tools/swig/test/testVector.py:233:        self.assertEqual((vector == [2, 2, 2, 2, 2]).all(), True)
tools/swig/test/testVector.py:248:        self.assertEqual((vector == [3, 3, 3, 3, 3, 3]).all(), True)
tools/swig/test/testMatrix.py:129:        self.assertEqual((matrix == [[4, 8, 12], [8, 4, 8], [12, 8, 4]]).all(), True)
tools/swig/test/testMatrix.py:235:        self.assertEqual((lower == [[1, 0, 0], [4, 5, 0], [7, 8, 9]]).all(), True)
tools/swig/test/testMatrix.py:236:        self.assertEqual((upper == [[0, 2, 3], [0, 0, 6], [0, 0, 0]]).all(), True)
tools/swig/test/testFlat.py:36:        self.assertEqual(np.all((x+1)==y),True)
tools/swig/test/testFlat.py:49:        self.assertEqual(np.all((x+1)==y),True)
tools/swig/test/testFlat.py:62:        self.assertEqual(np.all((x.T+1)==y.T),True)
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_removed.py:26:    assert actual_count[filepath] == expected_count
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_removed.py:27:    assert actual_max[filepath] == expected_max
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_removed.py:28:    assert actual_avg[filepath] == expected_avg
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_removed.py:47:    assert actual_count[filepath] == expected_count
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_removed.py:48:    assert actual_max[filepath] == expected_max
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_removed.py:49:    assert actual_avg[filepath] == expected_avg
venv/lib/python3.9/site-packages/tests/metrics/process/test_contributors_count.py:22:    assert count[filepath] == expected
venv/lib/python3.9/site-packages/tests/metrics/process/test_contributors_count.py:39:    assert count[filepath] == expected
venv/lib/python3.9/site-packages/tests/metrics/process/test_commits_count.py:21:    assert count[filepath] == expected
venv/lib/python3.9/site-packages/tests/metrics/process/test_commits_count.py:36:    assert count[filepath] == expected
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_count.py:23:    assert actual_count[filepath] == expected_count
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_count.py:41:    assert actual_count[filepath] == expected_count
venv/lib/python3.9/site-packages/tests/metrics/process/test_contributors_experience_count.py:35:    assert count[filepath] == expected
venv/lib/python3.9/site-packages/tests/metrics/process/test_contributors_experience_count.py:52:    assert count[filepath] == expected
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:25:    assert actual_count[filepath] == expected_count
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:26:    assert actual_max[filepath] == expected_max
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:27:    assert actual_avg[filepath] == expected_avg
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:45:    assert actual_count[filepath] == expected_count
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:46:    assert actual_max[filepath] == expected_max
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:47:    assert actual_avg[filepath] == expected_avg
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:58:    assert len(code_churns) == 18
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:59:    assert str(Path('domain/__init__.py')) in code_churns
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:60:    assert code_churns[str(Path('domain/commit.py'))] == 34
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:71:    assert len(code_churns) == 7
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:72:    assert str(Path('domain/__init__.py')) not in code_churns
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:73:    assert code_churns[str(Path('domain/commit.py'))] == 0
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:85:    assert len(code_churns) == 18
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:86:    assert str(Path('domain/__init__.py')) in code_churns
venv/lib/python3.9/site-packages/tests/metrics/process/test_code_churn.py:87:    assert code_churns[str(Path('domain/commit.py'))] == 40
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_added.py:36:    assert actual_count[filepath] == expected_count
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_added.py:37:    assert actual_max[filepath] == expected_max
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_added.py:38:    assert actual_avg[filepath] == expected_avg
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_added.py:59:    assert actual_count[filepath] == expected_count
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_added.py:60:    assert actual_max[filepath] == expected_max
venv/lib/python3.9/site-packages/tests/metrics/process/test_lines_added.py:61:    assert actual_avg[filepath] == expected_avg
venv/lib/python3.9/site-packages/tests/metrics/process/test_hunks_count.py:38:    assert count[filepath] == expected
venv/lib/python3.9/site-packages/tests/metrics/process/test_hunks_count.py:56:    assert count[filepath] == expected
venv/lib/python3.9/site-packages/tests/metrics/process/test_history_complexity_count.py:37:    assert count[filepath] == expected
venv/lib/python3.9/site-packages/tests/metrics/process/test_history_complexity_count.py:54:    assert count[filepath] == expected
venv/lib/python3.9/site-packages/tests/metrics/process/test_minor_contributors_count.py:23:    assert count[filepath] == expected
venv/lib/python3.9/site-packages/tests/metrics/process/test_minor_contributors_count.py:41:    assert count[filepath] == expected
venv/lib/python3.9/site-packages/tests/metrics/process/test_change_set.py:19:    assert actual_max == expected_max
venv/lib/python3.9/site-packages/tests/metrics/process/test_change_set.py:20:    assert actual_avg == expected_avg
venv/lib/python3.9/site-packages/tests/metrics/process/test_change_set.py:38:    assert actual_max == expected_max
venv/lib/python3.9/site-packages/tests/metrics/process/test_change_set.py:39:    assert actual_avg == expected_avg
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:54:    assert len(repo) == expected
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:61:    assert len(repo) == expected
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:68:    assert len(repo_to) == expected
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:77:    assert len(repo_to) == expected
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:84:    assert len(repo) == expected
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:93:    assert len(repo_to) == expected
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:103:    assert len(repo_to) == expected
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:123:    assert len(diff['added']) == 11
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:124:    assert (3, '    if (path == null)') in diff['added']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:125:    assert (5, '        log.error("Icon path is null");') in diff['added']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:126:    assert (6, '        return null;') in diff['added']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:127:    assert (8, '') in diff['added']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:128:    assert (9, '    java.net.URL imgURL = GuiImporter.class.getResource(path);') in diff['added']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:129:    assert (10, '') in diff['added']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:130:    assert (11, '    if (imgURL == null)') in diff['added']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:131:    assert (12, '    {') in diff['added']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:132:    assert (14, '        return null;') in diff['added']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:133:    assert (16, '    else') in diff['added']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:134:    assert (17, '        return new ImageIcon(imgURL);') in diff['added']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:136:    assert len(diff['deleted']) == 7
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:137:    assert (3, '    java.net.URL imgURL = GuiImporter.class.getResource(path);') in diff['deleted']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:138:    assert (4, '') in diff['deleted']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:139:    assert (5, '    if (imgURL != null)') in diff['deleted']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:140:    assert (7, '        return new ImageIcon(imgURL);') in diff['deleted']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:141:    assert (9, '    else') in diff['deleted']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:142:    assert (10, '    {') in diff['deleted']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:143:    assert (13, '    return null;') in diff['deleted']
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:153:    assert (4, '    {') in diff["added"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:154:    assert (5, '        log.error("Icon path is null");') in diff["added"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:155:    assert (6, '        return null;') in diff["added"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:156:    assert (7, '    }') in diff["added"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:157:    assert (8, '') in diff["added"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:158:    assert (11, '    if (imgURL == null)') in diff["added"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:159:    assert (12, '    {') in diff["added"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:160:    assert (13, '        log.error("Couldn\'t find icon: " + imgURL);') in diff["added"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:161:    assert (14, '        return null;') in diff["added"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:162:    assert (17, '        return new ImageIcon(imgURL);') in diff["added"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:164:    assert (6, '    {') in diff["deleted"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:165:    assert (7, '        return new ImageIcon(imgURL);') in diff["deleted"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:166:    assert (10, '    {') in diff["deleted"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:167:    assert (11, '        log.error("Couldn\'t find icon: " + imgURL);') in diff["deleted"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:168:    assert (12, '    }') in diff["deleted"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:169:    assert (13, '    return null;') in diff["deleted"]
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:175:    assert len(commit.modified_files) == 1
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:179:    assert len(commit.modified_files) == 0
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:186:    assert len(commit.modified_files) == 1
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:191:    assert len(commit.modified_files) == 1
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:193:    assert len(parsed_normal_diff['added']) == 2
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:194:    assert len(parsed_wo_whitespaces_diff['added']) == 1
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:196:    assert len(parsed_normal_diff['deleted']) == 1
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:197:    assert len(parsed_wo_whitespaces_diff['deleted']) == 0
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:203:    assert len(commit.modified_files) == 1
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:207:    assert len(commit.modified_files) == 0
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:213:    assert len(commit.modified_files) == 2
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:217:    assert len(commit.modified_files) == 1
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:223:    assert len(list(Repository(
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:227:    assert tmp_path.exists() is True
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:241:    assert len(list(Repository(
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:245:    assert os.path.isdir(os.path.join(tmp_path, "pydriller"))
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:246:    assert len(list(Repository(
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:250:    assert os.path.isdir(os.path.join(tmp_path, "pydriller"))
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:260:        assert commit.project_name == 'files_in_directories'
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:269:        assert commit.project_name == 'pydriller'
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:283:        assert os.path.exists(path) is False
venv/lib/python3.9/site-packages/tests/test_repository_mining.py:292:    assert len(deleted_commits) > 0
venv/lib/python3.9/site-packages/tests/test_git_repository.py:33:    assert repo.project_name == "small_repo"
venv/lib/python3.9/site-packages/tests/test_git_repository.py:38:    assert repo is not None
venv/lib/python3.9/site-packages/tests/test_git_repository.py:40:    assert cs is not None
venv/lib/python3.9/site-packages/tests/test_git_repository.py:42:    assert cs.hash == 'da39b1326dbc2edfe518b90672734a08f3c13458'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:43:    assert cs.author_date.timestamp() == 1522164679
venv/lib/python3.9/site-packages/tests/test_git_repository.py:57:        assert commit.hash in list_commits
venv/lib/python3.9/site-packages/tests/test_git_repository.py:59:    assert len(change_sets) == 5
venv/lib/python3.9/site-packages/tests/test_git_repository.py:67:    assert c.hash == '09f6182cef737db02a085e1d018963c7a29bde5a'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:68:    assert c.author.name == 'ishepard'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:69:    assert c.committer.name == 'ishepard'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:70:    assert c.author_date.timestamp() == datetime(2018, 3, 22, 10, 42, 3,
venv/lib/python3.9/site-packages/tests/test_git_repository.py:72:    assert len(c.modified_files) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:73:    assert c.msg == 'Ooops file2'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:74:    assert c.in_main_branch is True
venv/lib/python3.9/site-packages/tests/test_git_repository.py:75:    assert c.insertions == 4
venv/lib/python3.9/site-packages/tests/test_git_repository.py:76:    assert c.deletions == 0
venv/lib/python3.9/site-packages/tests/test_git_repository.py:77:    assert c.lines == 4
venv/lib/python3.9/site-packages/tests/test_git_repository.py:78:    assert c.files == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:84:    assert c.in_main_branch is False
venv/lib/python3.9/site-packages/tests/test_git_repository.py:92:    assert c.hash == 'a88c84ddf42066611e76e6cb690144e5357d132c'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:93:    assert c.author.name == 'ishepard'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:94:    assert c.committer.name == 'ishepard'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:95:    assert c.author_date.timestamp() == datetime(2018, 3, 22, 10, 41, 11,
venv/lib/python3.9/site-packages/tests/test_git_repository.py:97:    assert c.committer_date.timestamp() == datetime(2018, 3, 22, 10, 41, 11,
venv/lib/python3.9/site-packages/tests/test_git_repository.py:99:    assert len(c.modified_files) == 2
venv/lib/python3.9/site-packages/tests/test_git_repository.py:100:    assert c.msg == 'First commit adding 2 files'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:101:    assert c.in_main_branch is True
venv/lib/python3.9/site-packages/tests/test_git_repository.py:103:    assert c.modified_files[0].change_type == ModificationType.ADD
venv/lib/python3.9/site-packages/tests/test_git_repository.py:104:    assert c.modified_files[1].change_type == ModificationType.ADD
venv/lib/python3.9/site-packages/tests/test_git_repository.py:110:    assert len(files) == 8
venv/lib/python3.9/site-packages/tests/test_git_repository.py:122:        assert file.endswith(expected_files)
venv/lib/python3.9/site-packages/tests/test_git_repository.py:127:    assert repo.total_commits() == 5
venv/lib/python3.9/site-packages/tests/test_git_repository.py:134:    assert commit.hash == '09f6182cef737db02a085e1d018963c7a29bde5a'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:143:    assert len(files1) == 3
venv/lib/python3.9/site-packages/tests/test_git_repository.py:148:    assert len(files2) == 2
venv/lib/python3.9/site-packages/tests/test_git_repository.py:153:    assert len(files3) == 3
venv/lib/python3.9/site-packages/tests/test_git_repository.py:163:    assert len(files3) == 3
venv/lib/python3.9/site-packages/tests/test_git_repository.py:171:    assert len(files1) == 2
venv/lib/python3.9/site-packages/tests/test_git_repository.py:175:    assert len(files2) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:179:    assert len(files1) == 2
venv/lib/python3.9/site-packages/tests/test_git_repository.py:187:    assert len(change_sets) == 13
venv/lib/python3.9/site-packages/tests/test_git_repository.py:188:    assert change_sets[0].hash == '866e997a9e44cb4ddd9e00efe49361420aff2559'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:189:    assert change_sets[12].hash == 'e7d13b0511f8a176284ce4f92ed8c6e8d09c77f2'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:196:    assert len(commit.branches) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:200:    assert len(commit.branches) == 2
venv/lib/python3.9/site-packages/tests/test_git_repository.py:208:    assert commit.in_main_branch is False
venv/lib/python3.9/site-packages/tests/test_git_repository.py:211:    assert commit.in_main_branch is False
venv/lib/python3.9/site-packages/tests/test_git_repository.py:214:    assert commit.in_main_branch is True
venv/lib/python3.9/site-packages/tests/test_git_repository.py:217:    assert commit.in_main_branch is True
venv/lib/python3.9/site-packages/tests/test_git_repository.py:222:    assert repo.get_head().hash == '29e929fbc5dc6a2e9c620069b24e2a143af4285f'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:228:    assert commit.in_main_branch is False
venv/lib/python3.9/site-packages/tests/test_git_repository.py:231:    assert repo.get_head().hash == '29e929fbc5dc6a2e9c620069b24e2a143af4285f'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:238:    assert commit.author.name == "Maurício Aniche"
venv/lib/python3.9/site-packages/tests/test_git_repository.py:239:    assert commit.author.email == "mauricioaniche@gmail.com"
venv/lib/python3.9/site-packages/tests/test_git_repository.py:241:    assert commit.msg == "Matricula adicionada"
venv/lib/python3.9/site-packages/tests/test_git_repository.py:242:    assert len(commit.modified_files) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:244:    assert commit.modified_files[0].new_path == "Matricula.java"
venv/lib/python3.9/site-packages/tests/test_git_repository.py:245:    assert commit.modified_files[0].diff.startswith("@@ -0,0 +1,62 @@\n+package model;") is True
venv/lib/python3.9/site-packages/tests/test_git_repository.py:246:    assert commit.modified_files[0].source_code.startswith("package model;") is True
venv/lib/python3.9/site-packages/tests/test_git_repository.py:252:    assert commit.merge is False
venv/lib/python3.9/site-packages/tests/test_git_repository.py:255:    assert commit.merge is False
venv/lib/python3.9/site-packages/tests/test_git_repository.py:258:    assert commit.merge is True
venv/lib/python3.9/site-packages/tests/test_git_repository.py:264:    assert commit.modified_files[0].added_lines == 62
venv/lib/python3.9/site-packages/tests/test_git_repository.py:265:    assert commit.modified_files[0].deleted_lines == 0
venv/lib/python3.9/site-packages/tests/test_git_repository.py:268:    assert commit.modified_files[0].added_lines == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:269:    assert commit.modified_files[0].deleted_lines == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:275:    assert commit.modified_files[0].change_type == ModificationType.ADD
venv/lib/python3.9/site-packages/tests/test_git_repository.py:276:    assert commit.modified_files[0].old_path is None
venv/lib/python3.9/site-packages/tests/test_git_repository.py:279:    assert commit.modified_files[0].change_type == ModificationType.MODIFY
venv/lib/python3.9/site-packages/tests/test_git_repository.py:280:    assert commit.modified_files[0].new_path == commit.modified_files[0].old_path
venv/lib/python3.9/site-packages/tests/test_git_repository.py:283:    assert commit.modified_files[0].change_type == ModificationType.DELETE
venv/lib/python3.9/site-packages/tests/test_git_repository.py:284:    assert commit.modified_files[0].new_path is None
venv/lib/python3.9/site-packages/tests/test_git_repository.py:291:    assert len(commit.modified_files) == 2
venv/lib/python3.9/site-packages/tests/test_git_repository.py:295:            assert mod.deleted_lines == 8
venv/lib/python3.9/site-packages/tests/test_git_repository.py:296:            assert mod.added_lines == 0
venv/lib/python3.9/site-packages/tests/test_git_repository.py:299:            assert mod.deleted_lines == 12
venv/lib/python3.9/site-packages/tests/test_git_repository.py:300:            assert mod.added_lines == 0
venv/lib/python3.9/site-packages/tests/test_git_repository.py:307:    assert commit.author.name == "Maurício Aniche"
venv/lib/python3.9/site-packages/tests/test_git_repository.py:308:    assert commit.author.email == "mauricioaniche@gmail.com"
venv/lib/python3.9/site-packages/tests/test_git_repository.py:310:    assert commit.modified_files[0].new_path == "Matricula.javax"
venv/lib/python3.9/site-packages/tests/test_git_repository.py:311:    assert commit.modified_files[0].old_path == "Matricula.java"
venv/lib/python3.9/site-packages/tests/test_git_repository.py:317:    assert len(merge_commit.parents) == 2
venv/lib/python3.9/site-packages/tests/test_git_repository.py:322:    assert len(normal_commit.parents) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:329:    assert commit.hash == '6bb9e2c6a8080e6b5b34e6e316c894b2ddbf7fcd'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:332:    assert commit.hash == '4638730126d40716e230c2040751a13153fb1556'
venv/lib/python3.9/site-packages/tests/test_git_repository.py:342:    assert len(buggy_commits) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:351:    assert len(buggy_commits) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:364:    assert len(buggy_commits) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:373:    assert len(buggy_commits) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:381:    assert len(buggy_commits) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:389:    assert len(buggy_commits) == 0
venv/lib/python3.9/site-packages/tests/test_git_repository.py:401:    assert len(buggy_commits) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:403:    assert 1 == len(buggy_commits['A.java'])
venv/lib/python3.9/site-packages/tests/test_git_repository.py:409:    assert len(buggy_commits) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:418:    assert len(commits) == 3
venv/lib/python3.9/site-packages/tests/test_git_repository.py:428:    assert len(commits) == 0
venv/lib/python3.9/site-packages/tests/test_git_repository.py:435:    assert len(tagged_commits) == 3
venv/lib/python3.9/site-packages/tests/test_git_repository.py:436:    assert '6bb9e2c6a8080e6b5b34e6e316c894b2ddbf7fcd' == tagged_commits[0]
venv/lib/python3.9/site-packages/tests/test_git_repository.py:437:    assert '4638730126d40716e230c2040751a13153fb1556' == tagged_commits[1]
venv/lib/python3.9/site-packages/tests/test_git_repository.py:438:    assert '627e1ad917a188a861c9fedf6e5858b79edbe439' == tagged_commits[2]
venv/lib/python3.9/site-packages/tests/test_git_repository.py:445:    assert len(tagged_commits) == 0
venv/lib/python3.9/site-packages/tests/test_git_repository.py:453:    assert len(buggy_commits) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:469:    assert len(buggy_commits) == 0
venv/lib/python3.9/site-packages/tests/test_git_repository.py:483:    assert len(buggy_commits) == 1
venv/lib/python3.9/site-packages/tests/test_git_repository.py:493:    assert len(buggy_commits) == 2
venv/lib/python3.9/site-packages/tests/test_memory_consumption.py:78:    assert 973 == len(all_commits_with_nothing) == len(all_commits_with_everything) == len(all_commits_with_metrics)
venv/lib/python3.9/site-packages/tests/integration/test_dates_and_timezones.py:31:    assert lc[0].author_date == dt
venv/lib/python3.9/site-packages/tests/integration/test_dates_and_timezones.py:42:    assert lc[0].author_date == dt
venv/lib/python3.9/site-packages/tests/integration/test_ranges.py:65:    assert len(repository_mining_st) == expected_commits
venv/lib/python3.9/site-packages/tests/integration/test_ranges.py:76:    assert len(repository_mining_st) == expected_commits
venv/lib/python3.9/site-packages/tests/integration/test_ranges.py:85:    assert len(repository_mining_st) == expected_commits
venv/lib/python3.9/site-packages/tests/integration/test_ranges.py:96:    assert len(repository_mining_cc) == expected_commits
venv/lib/python3.9/site-packages/tests/integration/test_ranges.py:106:    assert len(repository_mining_cc) == expected_commits
venv/lib/python3.9/site-packages/tests/integration/test_ranges.py:116:    assert len(repository_mining_cc) == expected_commits
venv/lib/python3.9/site-packages/tests/integration/test_ranges.py:123:    assert len(list(commits)) == 3
venv/lib/python3.9/site-packages/tests/integration/test_ranges.py:131:    assert len(repository_mining_tt) == expected_commits
venv/lib/python3.9/site-packages/tests/integration/test_ranges.py:138:    assert len(repository_mining_tt) == expected_commits
venv/lib/python3.9/site-packages/tests/integration/test_ranges.py:147:    assert len(repository_mining_complex_tags) == expected_commits
venv/lib/python3.9/site-packages/tests/integration/test_between_tags.py:29:    assert len(lc) == 5
venv/lib/python3.9/site-packages/tests/integration/test_between_tags.py:30:    assert '6bb9e2c6a8080e6b5b34e6e316c894b2ddbf7fcd' == lc[0].hash
venv/lib/python3.9/site-packages/tests/integration/test_between_tags.py:31:    assert 'f1a90b8d7b151ceefd3e3dfc0dc1d0e12b5f48d0' == lc[1].hash
venv/lib/python3.9/site-packages/tests/integration/test_between_tags.py:32:    assert '4638730126d40716e230c2040751a13153fb1556' == lc[2].hash
venv/lib/python3.9/site-packages/tests/integration/test_between_tags.py:33:    assert 'a26f1438bd85d6b22497c0e5dae003812becd0bc' == lc[3].hash
venv/lib/python3.9/site-packages/tests/integration/test_between_tags.py:34:    assert '627e1ad917a188a861c9fedf6e5858b79edbe439' == lc[4].hash
venv/lib/python3.9/site-packages/tests/integration/test_between_tags.py:48:    assert len(lc) == 9
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:30:    assert len(lc) == 2
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:31:    assert lc[0].hash == 'a1b6136f978644ff1d89816bc0f2bd86f6d9d7f5'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:32:    assert lc[1].hash == 'b8c2be250786975f1c6f47e96922096f1bb25e39'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:38:    assert len(lc) == 2
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:39:    assert lc[0].hash == '5adbb71167e79ab6b974827e74c9da4d81977655'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:40:    assert lc[1].hash == '0577bec2387ee131e1ccf336adcc172224d3f6f9'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:48:    assert len(lc) == 0
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:61:    assert len(lc) == 1
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:62:    assert lc[0].hash == 'b8c2be250786975f1c6f47e96922096f1bb25e39'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:68:    assert len(lc) == 3
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:69:    assert lc[0].hash == '04b0af7b53c2a0095e98951571aa41c2e0e0dbec'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:70:    assert lc[1].hash == 'e51421e0beae6a3c20bdcdfc21066e05db675e03'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:71:    assert lc[2].hash == 'b197ef4f0b4bc5b7d55c8949ecb1c861731f0b9d'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:78:    assert len(lc) == 3
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:79:    assert lc[0].hash == '168b3aab057ed61a769acf336a4ef5e64f76c9fd'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:80:    assert lc[1].hash == '8169f76a3d7add54b4fc7bca7160d1f1eede6eda'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:81:    assert lc[2].hash == '8986af2a679759e5a15794f6d56e6d46c3f302f1'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:87:    assert len(lc) == 3
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:88:    assert lc[0].hash == 'a1b6136f978644ff1d89816bc0f2bd86f6d9d7f5'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:89:    assert lc[1].hash == '375de7a8275ecdc0b28dc8de2568f47241f443e9'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:90:    assert lc[2].hash == 'b8c2be250786975f1c6f47e96922096f1bb25e39'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:96:    assert len(lc) == 5
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:98:    assert lc[0].hash == '04b0af7b53c2a0095e98951571aa41c2e0e0dbec'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:99:    assert lc[1].hash == 'e51421e0beae6a3c20bdcdfc21066e05db675e03'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:100:    assert lc[2].hash == 'b197ef4f0b4bc5b7d55c8949ecb1c861731f0b9d'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:101:    assert lc[3].hash == '87a31153090808f1e6f679a14ea28729a0b74f4d'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:102:    assert lc[4].hash == '702d469710d2087e662c210fd0e4f9418ec813fd'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:107:    assert len(list(Repository('test-repos/branches_not_merged')
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:110:    assert len(list(Repository('test-repos/branches_not_merged',
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:114:    assert len(list(Repository('test-repos/branches_not_merged',
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:129:    assert len(lc) == 4
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:134:    assert len(lc) == 1
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:141:    assert len(lc) == 0
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:147:    assert len(lc) == 1
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:148:    assert lc[0].hash == "9e71dd5726d775fb4a5f08506a539216e878adbb"
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:152:    assert len(lc) == 2
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:153:    assert lc[0].hash == "ffccf1e7497eb8136fd66ed5e42bef29677c4b71"
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:154:    assert lc[1].hash == "953737b199de233896f00b4d87a0bc2794317253"
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:160:    assert len(lc) == 3
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:161:    assert lc[0].hash == "866e997a9e44cb4ddd9e00efe49361420aff2559"
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:162:    assert lc[1].hash == "57dbd017d1a744b949e7ca0b1c1a3b3dd4c1cbc1"
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:163:    assert lc[2].hash == "e7d13b0511f8a176284ce4f92ed8c6e8d09c77f2"
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:167:    assert len(lc) == 0
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:171:    assert total_commits == 13
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:177:    assert len(lc) == 1
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:178:    assert lc[0].hash == "866e997a9e44cb4ddd9e00efe49361420aff2559"
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:182:    assert len(lc) == 1
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:183:    assert lc[0].hash == "ffccf1e7497eb8136fd66ed5e42bef29677c4b71"
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:189:    assert len(lc) == 1
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:192:    assert len(lc_head) == 1
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:193:    assert lc[0].hash == lc_head[0].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:223:    assert len(list(Repository(
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:231:    assert len(list(Repository(
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:243:    assert len(commits) == 2
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:255:    assert len(commits) == 6
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:271:    assert len(lc) == 3
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:272:    assert '6bb9e2c6a8080e6b5b34e6e316c894b2ddbf7fcd' == lc[0].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:273:    assert '4638730126d40716e230c2040751a13153fb1556' == lc[1].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:274:    assert '627e1ad917a188a861c9fedf6e5858b79edbe439' == lc[2].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:280:    assert len(lc) == 0
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:286:    assert '5e3cfa27b3fe6dd4d12fd89664fea9397141b843' == date_order[0].hash == author_date_order[0].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:287:    assert '19732de9e2b58ba7285f272810a9d8ddf18e7c89' == date_order[1].hash == author_date_order[1].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:288:    assert '78a94953a3e140f2d0027fb57963345fbf6d59fe' == date_order[2].hash == author_date_order[2].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:289:    assert '9cc3af5f242a1eba297f270acbdb8b6628556413' == date_order[3].hash == author_date_order[3].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:290:    assert '6564f9e0bfb38725ebcfb4547e98e7f545c7de12' == date_order[4].hash == author_date_order[4].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:291:    assert '5c95c1c6ba95a1bdb12772d1a63c7d331e664819' == date_order[5].hash == author_date_order[5].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:292:    assert 'd23d7f6d37fd1163022a5dd46985acd34e6818d7' == date_order[6].hash == author_date_order[6].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:293:    assert 'a45c8649b00d8b48cee04a822bd1d82acd667db2' == date_order[7].hash == author_date_order[7].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:299:    assert '5e3cfa27b3fe6dd4d12fd89664fea9397141b843' == topo_order[0].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:300:    assert '19732de9e2b58ba7285f272810a9d8ddf18e7c89' == topo_order[1].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:301:    assert '9cc3af5f242a1eba297f270acbdb8b6628556413' == topo_order[2].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:302:    assert 'd23d7f6d37fd1163022a5dd46985acd34e6818d7' == topo_order[3].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:303:    assert '78a94953a3e140f2d0027fb57963345fbf6d59fe' == topo_order[4].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:304:    assert '6564f9e0bfb38725ebcfb4547e98e7f545c7de12' == topo_order[5].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:305:    assert '5c95c1c6ba95a1bdb12772d1a63c7d331e664819' == topo_order[6].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:306:    assert 'a45c8649b00d8b48cee04a822bd1d82acd667db2' == topo_order[7].hash
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:311:    assert len(lc) == 5
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:312:    assert lc[0].hash == 'a88c84ddf42066611e76e6cb690144e5357d132c'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:313:    assert lc[1].hash == '6411e3096dd2070438a17b225f44475136e54e3a'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:314:    assert lc[2].hash == '09f6182cef737db02a085e1d018963c7a29bde5a'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:315:    assert lc[3].hash == '1f99848edadfffa903b8ba1286a935f1b92b2845'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:316:    assert lc[4].hash == 'da39b1326dbc2edfe518b90672734a08f3c13458'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:322:    assert len(lc) == 5
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:323:    assert lc[0].hash == 'da39b1326dbc2edfe518b90672734a08f3c13458'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:324:    assert lc[1].hash == '1f99848edadfffa903b8ba1286a935f1b92b2845'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:325:    assert lc[2].hash == '09f6182cef737db02a085e1d018963c7a29bde5a'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:326:    assert lc[3].hash == '6411e3096dd2070438a17b225f44475136e54e3a'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:327:    assert lc[4].hash == 'a88c84ddf42066611e76e6cb690144e5357d132c'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:335:    assert len(lc) == 3
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:336:    assert lc[0].hash == '1f99848edadfffa903b8ba1286a935f1b92b2845'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:337:    assert lc[1].hash == '09f6182cef737db02a085e1d018963c7a29bde5a'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:338:    assert lc[2].hash == '6411e3096dd2070438a17b225f44475136e54e3a'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:346:    assert len(lc) == 3
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:347:    assert lc[0].hash == '1f99848edadfffa903b8ba1286a935f1b92b2845'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:348:    assert lc[1].hash == '09f6182cef737db02a085e1d018963c7a29bde5a'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:349:    assert lc[2].hash == '6411e3096dd2070438a17b225f44475136e54e3a'
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:355:    assert len(commits_no_refs) == 3
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:360:    assert len(commits_with_refs) == 6
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:364:    assert len(commits_not_in_commits_no_refs) == 3
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:381:    # Fetch and re-assert that the commit is still not in the repo
venv/lib/python3.9/site-packages/tests/integration/test_commit_filters.py:386:    # Set include_remotes=True and assert that the commit is now found
venv/lib/python3.9/site-packages/tests/integration/test_between_dates.py:33:    assert len(list_commits) == 2
venv/lib/python3.9/site-packages/tests/integration/test_between_dates.py:34:    assert list_commits[0].hash == 'a1b6136f978644ff1d89816bc0f2bd86f6d9d7f5'
venv/lib/python3.9/site-packages/tests/integration/test_between_dates.py:35:    assert list_commits[1].hash == '375de7a8275ecdc0b28dc8de2568f47241f443e9'
venv/lib/python3.9/site-packages/tests/integration/test_between_dates.py:45:    assert len(list_commits) == 2
venv/lib/python3.9/site-packages/tests/integration/test_between_dates.py:46:    assert list_commits[0].hash == 'a1b6136f978644ff1d89816bc0f2bd86f6d9d7f5'
venv/lib/python3.9/site-packages/tests/integration/test_between_dates.py:47:    assert list_commits[1].hash == '375de7a8275ecdc0b28dc8de2568f47241f443e9'
venv/lib/python3.9/site-packages/tests/integration/test_between_dates.py:56:    assert len(lc) == 2
venv/lib/python3.9/site-packages/tests/integration/test_between_dates.py:57:    assert lc[0].hash == '375de7a8275ecdc0b28dc8de2568f47241f443e9'
venv/lib/python3.9/site-packages/tests/integration/test_between_dates.py:58:    assert lc[1].hash == 'a1b6136f978644ff1d89816bc0f2bd86f6d9d7f5'
venv/lib/python3.9/site-packages/tests/test_hashable.py:25:    assert type(commit_dict) == dict
venv/lib/python3.9/site-packages/tests/test_hashable.py:26:    assert commit_dict[c1] == "e7d13b0511f8a176284ce4f92ed8c6e8d09c77f2"
venv/lib/python3.9/site-packages/tests/test_hashable.py:27:    assert commit_dict[c2] == c1.parents[0]
venv/lib/python3.9/site-packages/tests/test_hashable.py:28:    assert commit_dict[c3] == "a4ece0762e797d2e2dcbd471115108dd6e05ff58"
venv/lib/python3.9/site-packages/tests/test_hashable.py:29:    assert commit_dict[c1] != commit_dict[c2]
venv/lib/python3.9/site-packages/tests/test_hashable.py:32:    assert type(commit_set) == set
venv/lib/python3.9/site-packages/tests/test_hashable.py:34:    assert commit_set - {c1} == {c2, c3}
venv/lib/python3.9/site-packages/tests/test_hashable.py:47:    assert type(mod_dict) == dict
venv/lib/python3.9/site-packages/tests/test_hashable.py:48:    assert mod_dict[m1].hash == "e7d13b0511f8a176284ce4f92ed8c6e8d09c77f2"
venv/lib/python3.9/site-packages/tests/test_hashable.py:49:    assert mod_dict[m2s[0]].hash == c1.parents[0]
venv/lib/python3.9/site-packages/tests/test_hashable.py:50:    assert mod_dict[m2s[1]].hash == c1.parents[0]
venv/lib/python3.9/site-packages/tests/test_hashable.py:51:    assert m1 != m2s[0]
venv/lib/python3.9/site-packages/tests/test_hashable.py:54:    assert type(mod_set) == set
venv/lib/python3.9/site-packages/tests/test_hashable.py:56:    assert mod_set - {m1} == set(m2s)
venv/lib/python3.9/site-packages/tests/test_developer.py:10:    assert d1 == d1
venv/lib/python3.9/site-packages/tests/test_developer.py:11:    assert d1 == d2
venv/lib/python3.9/site-packages/tests/test_developer.py:12:    assert d1 != d3
venv/lib/python3.9/site-packages/tests/test_developer.py:13:    assert d1 != d4
venv/lib/python3.9/site-packages/tests/test_diff.py:34:    assert (127, '            RevCommit root = rw.parseCommit(headId);') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:35:    assert (128, '            rw.sort(RevSort.REVERSE);') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:36:    assert (129, '            rw.markStart(root);') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:37:    assert (130, '            RevCommit lastCommit = rw.next();') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:38:    assert (131, '            throw new RuntimeException("Changing this line " + path);') in added
venv/lib/python3.9/site-packages/tests/test_diff.py:48:    assert (127, '            RevCommit root = rw.parseCommit(headId);') in added
venv/lib/python3.9/site-packages/tests/test_diff.py:49:    assert (128, '            rw.sort(RevSort.REVERSE);') in added
venv/lib/python3.9/site-packages/tests/test_diff.py:50:    assert (129, '            rw.markStart(root);') in added
venv/lib/python3.9/site-packages/tests/test_diff.py:51:    assert (130, '            RevCommit lastCommit = rw.next();') in added
venv/lib/python3.9/site-packages/tests/test_diff.py:52:    assert (131, '') in added
venv/lib/python3.9/site-packages/tests/test_diff.py:53:    assert len(deleted) == 0
venv/lib/python3.9/site-packages/tests/test_diff.py:54:    assert len(added) == 5
venv/lib/python3.9/site-packages/tests/test_diff.py:64:    assert (184, '            List<ChangeSet> allCs = new ArrayList<>();') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:65:    assert (221, '    private GregorianCalendar convertToDate(RevCommit revCommit) {') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:66:    assert (222, '        GregorianCalendar date = new GregorianCalendar();') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:67:    assert (223, '        date.setTimeZone(revCommit.getAuthorIdent().getTimeZone());') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:68:    assert (224, '        date.setTime(revCommit.getAuthorIdent().getWhen());') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:69:    assert (225, '') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:70:    assert (226, '        return date;') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:71:    assert (227, '    }') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:72:    assert (228, '') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:73:    assert (301, '        if(!collectConfig.isCollectingBranches())') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:74:    assert (302, '            return new HashSet<>();') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:75:    assert (303, '') in deleted
venv/lib/python3.9/site-packages/tests/test_diff.py:76:    assert len(deleted) == 12
venv/lib/python3.9/site-packages/tests/test_diff.py:77:    assert len(added) == 0
venv/lib/python3.9/site-packages/tests/test_diff.py:92:    assert (1, 'test1') in deleted  # is considered as deleted as a 'newline' command is added
venv/lib/python3.9/site-packages/tests/test_diff.py:93:    assert (1, 'test1') in added  # now with added 'newline'
venv/lib/python3.9/site-packages/tests/test_diff.py:94:    assert (2, 'test2') in added
venv/lib/python3.9/site-packages/tests/test_dmm.py:108:    assert commit.dmm_unit_size == dmm
venv/lib/python3.9/site-packages/tests/test_dmm.py:114:    assert commit.dmm_unit_complexity == dmm
venv/lib/python3.9/site-packages/tests/test_dmm.py:120:    assert commit.dmm_unit_interfacing == dmm
venv/lib/python3.9/site-packages/tests/test_dmm.py:126:    assert commit.dmm_unit_size is None
venv/lib/python3.9/site-packages/tests/test_dmm.py:132:    assert commit.dmm_unit_size is None
venv/lib/python3.9/site-packages/tests/test_dmm.py:138:    assert mod._delta_risk_profile(DMMProperty.UNIT_SIZE) == (-15, 16)
venv/lib/python3.9/site-packages/tests/test_dmm.py:145:    assert m0._delta_risk_profile(DMMProperty.UNIT_SIZE) == (0, 1)
venv/lib/python3.9/site-packages/tests/test_dmm.py:147:    assert m1._delta_risk_profile(DMMProperty.UNIT_SIZE) == (3, 0)
venv/lib/python3.9/site-packages/tests/test_dmm.py:149:    assert commit._delta_risk_profile(DMMProperty.UNIT_SIZE) == (3, 1)
venv/lib/python3.9/site-packages/tests/test_dmm.py:172:    assert Commit._good_change_proportion(dlo, dhi) == prop
venv/lib/python3.9/site-packages/tests/test_commit.py:38:    assert c1.parents[0] == 'a4ece0762e797d2e2dcbd471115108dd6e05ff58'
venv/lib/python3.9/site-packages/tests/test_commit.py:39:    assert c3 == c2
venv/lib/python3.9/site-packages/tests/test_commit.py:40:    assert c1 != c3
venv/lib/python3.9/site-packages/tests/test_commit.py:59:    assert m1.filename == 'mynewfile.py'
venv/lib/python3.9/site-packages/tests/test_commit.py:60:    assert m2.filename == 'myfile.py'
venv/lib/python3.9/site-packages/tests/test_commit.py:61:    assert m1 != m2
venv/lib/python3.9/site-packages/tests/test_commit.py:62:    assert m3 == m1
venv/lib/python3.9/site-packages/tests/test_commit.py:79:    assert m1.nloc == 196
venv/lib/python3.9/site-packages/tests/test_commit.py:80:    assert m1.token_count == 1009
venv/lib/python3.9/site-packages/tests/test_commit.py:81:    assert m1.complexity == 43
venv/lib/python3.9/site-packages/tests/test_commit.py:83:    assert len(m1.methods) == 19
venv/lib/python3.9/site-packages/tests/test_commit.py:93:    assert len(mod.changed_methods) == 1
venv/lib/python3.9/site-packages/tests/test_commit.py:94:    assert mod.changed_methods[0].name == 'GitRepository::singleProjectThirdMethod'
venv/lib/python3.9/site-packages/tests/test_commit.py:99:    assert len(mod.changed_methods) == 2
venv/lib/python3.9/site-packages/tests/test_commit.py:104:    assert len(mod.changed_methods) == 1
venv/lib/python3.9/site-packages/tests/test_commit.py:109:    assert len(mod.changed_methods) == 2
venv/lib/python3.9/site-packages/tests/test_commit.py:115:    assert len(mod.changed_methods) == 2
venv/lib/python3.9/site-packages/tests/test_commit.py:120:    assert len(mod.changed_methods) == 1
venv/lib/python3.9/site-packages/tests/test_commit.py:125:    assert len(mod.changed_methods) == 2
venv/lib/python3.9/site-packages/tests/test_commit.py:130:    assert len(mod.changed_methods) == 2
venv/lib/python3.9/site-packages/tests/test_commit.py:136:    assert len(mod.changed_methods) == 3
venv/lib/python3.9/site-packages/tests/test_commit.py:153:    assert m1.nloc == 793
venv/lib/python3.9/site-packages/tests/test_commit.py:154:    assert m1.token_count == 5564
venv/lib/python3.9/site-packages/tests/test_commit.py:155:    assert m1.complexity == 199
venv/lib/python3.9/site-packages/tests/test_commit.py:157:    assert len(m1.methods) == 16
venv/lib/python3.9/site-packages/tests/test_commit.py:174:    assert m1.nloc == 466
venv/lib/python3.9/site-packages/tests/test_commit.py:175:    assert m1.token_count == 3809
venv/lib/python3.9/site-packages/tests/test_commit.py:176:    assert m1.complexity == 92
venv/lib/python3.9/site-packages/tests/test_commit.py:178:    assert len(m1.methods) == 46
venv/lib/python3.9/site-packages/tests/test_commit.py:194:    assert m1.nloc is None
venv/lib/python3.9/site-packages/tests/test_commit.py:203:    assert mod0.filename == 'a.java'
venv/lib/python3.9/site-packages/tests/test_commit.py:204:    assert mod0.new_path == str(Path('dir2/a.java'))
venv/lib/python3.9/site-packages/tests/test_commit.py:205:    assert mod0.old_path == str(Path('dir2/a.java'))
venv/lib/python3.9/site-packages/tests/test_commit.py:212:    assert c.project_name == 'files_in_directories'
venv/lib/python3.9/site-packages/tests/test_commit.py:219:    assert c.project_path.endswith('files_in_directories') is True
venv/lib/python3.9/site-packages/tests/test_commit.py:228:    assert mod0.change_type.name == 'UNKNOWN'
venv/lib/python3.9/site-packages/tests/test_commit.py:234:    assert len(c.modified_files) == 0
venv/lib/python3.9/site-packages/tests/test_commit.py:237:    assert len(c.modified_files) == 0
venv/lib/python3.9/site-packages/tests/test_commit.py:246:    assert c1 == c3
venv/lib/python3.9/site-packages/tests/test_commit.py:247:    assert c1 == c1
venv/lib/python3.9/site-packages/tests/test_commit.py:248:    assert c2 == c4
venv/lib/python3.9/site-packages/tests/test_commit.py:249:    assert c2 == c2
venv/lib/python3.9/site-packages/tests/test_commit.py:250:    assert c1 != c2
venv/lib/python3.9/site-packages/tests/test_commit.py:251:    assert c3 != c4
venv/lib/python3.9/site-packages/tests/test_commit.py:261:    assert m1 == m2
venv/lib/python3.9/site-packages/tests/test_commit.py:262:    assert m1 == m1
venv/lib/python3.9/site-packages/tests/test_commit.py:263:    assert m1 != m3
venv/lib/python3.9/site-packages/tests/test_commit.py:264:    assert m1 != c1
venv/lib/python3.9/site-packages/tests/test_commit.py:271:    assert tz1 == 10800  # -3 hours
venv/lib/python3.9/site-packages/tests/test_commit.py:272:    assert tz2 == 10800  # -3 hours
venv/lib/python3.9/site-packages/tests/test_commit.py:279:    assert tz1 == -7200  # +2 hours
venv/lib/python3.9/site-packages/tests/test_commit.py:280:    assert tz2 == -7200  # +2 hours
venv/lib/python3.9/site-packages/tests/test_commit.py:287:    assert m1.source_code is None
venv/lib/python3.9/site-packages/tests/test_commit.py:288:    assert m1.source_code_before is not None
venv/lib/python3.9/site-packages/tests/test_commit.py:299:    assert m1.source_code == sc
venv/lib/python3.9/site-packages/tests/test_commit.py:300:    assert m1.source_code_before is None
venv/lib/python3.9/site-packages/tests/test_commit.py:310:    assert m1.source_code == sc
venv/lib/python3.9/site-packages/tests/test_commit.py:311:    assert m1.source_code_before == old_sc
venv/lib/python3.9/site-packages/tests/test_commit.py:316:    assert m1.source_code is None
venv/lib/python3.9/site-packages/tests/test_commit.py:317:    assert m1.source_code_before == old_sc
venv/lib/python3.9/site-packages/tests/test_commit.py:324:    assert c1.insertions == 191
venv/lib/python3.9/site-packages/tests/test_commit.py:325:    assert c1.lines == 191
venv/lib/python3.9/site-packages/tests/test_commit.py:326:    assert c1.files == 2
venv/lib/python3.9/site-packages/tests/test_commit.py:327:    assert c1.deletions == 0
venv/lib/python3.9/site-packages/tests/test_commit.py:334:    assert c1.insertions == 0
venv/lib/python3.9/site-packages/tests/test_commit.py:335:    assert c1.lines == 4
venv/lib/python3.9/site-packages/tests/test_commit.py:336:    assert c1.files == 1
venv/lib/python3.9/site-packages/tests/test_commit.py:337:    assert c1.deletions == 4
venv/lib/python3.9/site-packages/tests/test_commit.py:344:    assert c1.insertions == 0
venv/lib/python3.9/site-packages/tests/test_commit.py:345:    assert c1.lines == 3
venv/lib/python3.9/site-packages/tests/test_commit.py:346:    assert c1.files == 1
venv/lib/python3.9/site-packages/tests/test_commit.py:347:    assert c1.deletions == 3
venv/lib/python3.9/site-packages/tests/test_commit.py:354:    assert c1.insertions == 1
venv/lib/python3.9/site-packages/tests/test_commit.py:355:    assert c1.lines == 2
venv/lib/python3.9/site-packages/tests/test_commit.py:356:    assert c1.files == 1
venv/lib/python3.9/site-packages/tests/test_commit.py:357:    assert c1.deletions == 1
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:30:    assert lookup('utf-8').name == 'utf-8'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:31:    assert lookup('Utf-8').name == 'utf-8'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:32:    assert lookup('UTF-8').name == 'utf-8'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:33:    assert lookup('utf8').name == 'utf-8'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:34:    assert lookup('utf8').name == 'utf-8'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:35:    assert lookup('utf8 ').name == 'utf-8'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:36:    assert lookup(' \r\nutf8\t').name == 'utf-8'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:37:    assert lookup('u8') is None  # Python label.
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:38:    assert lookup('utf-8 ') is None  # Non-ASCII white space.
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:40:    assert lookup('US-ASCII').name == 'windows-1252'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:41:    assert lookup('iso-8859-1').name == 'windows-1252'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:42:    assert lookup('latin1').name == 'windows-1252'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:43:    assert lookup('LATIN1').name == 'windows-1252'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:44:    assert lookup('latin-1') is None
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:45:    assert lookup('LATİN1') is None  # ASCII-only case insensitivity.
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:50:        assert decode(b'', label) == ('', lookup(label))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:51:        assert encode('', label) == b''
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:54:            assert list(output) == []
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:55:            assert list(iter_encode([''] * repeat, label)) == []
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:57:        assert decoder.decode(b'') == ''
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:58:        assert decoder.decode(b'', final=True) == ''
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:60:        assert encoder.encode('') == b''
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:61:        assert encoder.encode('', final=True) == b''
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:64:        assert lookup(name).name == name
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:68:    assert_raises(LookupError, decode, b'\xEF\xBB\xBF\xc3\xa9', 'invalid')
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:69:    assert_raises(LookupError, encode, 'é', 'invalid')
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:70:    assert_raises(LookupError, iter_decode, [], 'invalid')
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:71:    assert_raises(LookupError, iter_encode, [], 'invalid')
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:72:    assert_raises(LookupError, IncrementalDecoder, 'invalid')
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:73:    assert_raises(LookupError, IncrementalEncoder, 'invalid')
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:77:    assert decode(b'\x80', 'latin1') == ('€', lookup('latin1'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:78:    assert decode(b'\x80', lookup('latin1')) == ('€', lookup('latin1'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:79:    assert decode(b'\xc3\xa9', 'utf8') == ('é', lookup('utf8'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:80:    assert decode(b'\xc3\xa9', UTF8) == ('é', lookup('utf8'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:81:    assert decode(b'\xc3\xa9', 'ascii') == ('Ã©', lookup('ascii'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:82:    assert decode(b'\xEF\xBB\xBF\xc3\xa9', 'ascii') == ('é', lookup('utf8'))  # UTF-8 with BOM
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:84:    assert decode(b'\xFE\xFF\x00\xe9', 'ascii') == ('é', lookup('utf-16be'))  # UTF-16-BE with BOM
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:85:    assert decode(b'\xFF\xFE\xe9\x00', 'ascii') == ('é', lookup('utf-16le'))  # UTF-16-LE with BOM
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:86:    assert decode(b'\xFE\xFF\xe9\x00', 'ascii') == ('\ue900', lookup('utf-16be'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:87:    assert decode(b'\xFF\xFE\x00\xe9', 'ascii') == ('\ue900', lookup('utf-16le'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:89:    assert decode(b'\x00\xe9', 'UTF-16BE') == ('é', lookup('utf-16be'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:90:    assert decode(b'\xe9\x00', 'UTF-16LE') == ('é', lookup('utf-16le'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:91:    assert decode(b'\xe9\x00', 'UTF-16') == ('é', lookup('utf-16le'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:93:    assert decode(b'\xe9\x00', 'UTF-16BE') == ('\ue900', lookup('utf-16be'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:94:    assert decode(b'\x00\xe9', 'UTF-16LE') == ('\ue900', lookup('utf-16le'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:95:    assert decode(b'\x00\xe9', 'UTF-16') == ('\ue900', lookup('utf-16le'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:99:    assert encode('é', 'latin1') == b'\xe9'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:100:    assert encode('é', 'utf8') == b'\xc3\xa9'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:101:    assert encode('é', 'utf8') == b'\xc3\xa9'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:102:    assert encode('é', 'utf-16') == b'\xe9\x00'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:103:    assert encode('é', 'utf-16le') == b'\xe9\x00'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:104:    assert encode('é', 'utf-16be') == b'\x00\xe9'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:111:    assert iter_decode_to_string([], 'latin1') == ''
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:112:    assert iter_decode_to_string([b''], 'latin1') == ''
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:113:    assert iter_decode_to_string([b'\xe9'], 'latin1') == 'é'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:114:    assert iter_decode_to_string([b'hello'], 'latin1') == 'hello'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:115:    assert iter_decode_to_string([b'he', b'llo'], 'latin1') == 'hello'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:116:    assert iter_decode_to_string([b'hell', b'o'], 'latin1') == 'hello'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:117:    assert iter_decode_to_string([b'\xc3\xa9'], 'latin1') == 'Ã©'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:118:    assert iter_decode_to_string([b'\xEF\xBB\xBF\xc3\xa9'], 'latin1') == 'é'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:119:    assert iter_decode_to_string([
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:121:    assert iter_decode_to_string([
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:123:    assert iter_decode_to_string([
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:125:    assert iter_decode_to_string([b'\xEF\xBB\xBF'], 'latin1') == ''
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:126:    assert iter_decode_to_string([b'\xEF\xBB'], 'latin1') == 'ï»'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:127:    assert iter_decode_to_string([b'\xFE\xFF\x00\xe9'], 'latin1') == 'é'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:128:    assert iter_decode_to_string([b'\xFF\xFE\xe9\x00'], 'latin1') == 'é'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:129:    assert iter_decode_to_string([
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:131:    assert iter_decode_to_string([
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:136:    assert b''.join(iter_encode([], 'latin1')) == b''
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:137:    assert b''.join(iter_encode([''], 'latin1')) == b''
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:138:    assert b''.join(iter_encode(['é'], 'latin1')) == b'\xe9'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:139:    assert b''.join(iter_encode(['', 'é', '', ''], 'latin1')) == b'\xe9'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:140:    assert b''.join(iter_encode(['', 'é', '', ''], 'utf-16')) == b'\xe9\x00'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:141:    assert b''.join(iter_encode(['', 'é', '', ''], 'utf-16le')) == b'\xe9\x00'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:142:    assert b''.join(iter_encode(['', 'é', '', ''], 'utf-16be')) == b'\x00\xe9'
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:143:    assert b''.join(iter_encode([
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:152:    assert decode(encoded, 'x-user-defined') == (decoded, lookup('x-user-defined'))
venv/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py:153:    assert encode(decoded, 'x-user-defined') == encoded
venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/testing.py:39:                # assert that the '()' characters are not included in the parsed tokens
venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/testing.py:176:            Finally, asserts that the overall ``runTests()`` success value is ``True``.
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:23:            assert not ci.is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:24:            assert not ci.is_associated()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:25:            assert ci.size() == 0       # this is cached, so we can query it in invalid state
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:28:            assert not cv.is_valid()    # no region mapped yet
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:29:            assert cv.is_associated()  # but it know where to map it from
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:30:            assert cv.file_size() == fc.size
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:31:            assert cv.path() == fc.path
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:35:        assert not cio.is_valid() and cio.is_associated()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:38:        assert not ci.is_associated()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:40:        assert not ci.is_valid() and ci.is_associated()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:55:            assert man.num_file_handles() == 0
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:56:            assert man.num_open_files() == 0
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:61:            assert man.window_size() > winsize_cmp_val
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:62:            assert man.mapped_memory_size() == 0
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:63:            assert man.max_mapped_memory_size() > 0
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:71:            assert man._collect_lru_region(sys.maxsize) == 0
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:79:                        assert c.path_or_fd() is item
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:80:                        assert c.use_region(10, 10).is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:81:                        assert c.ofs_begin() == 10
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:82:                        assert c.size() == 10
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:84:                            assert c.buffer()[:] == fp.read(20)[10:]
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:108:                        assert len(data) == fc.size
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:115:                        assert man.num_open_files() == 0
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:116:                        assert man.mapped_memory_size() == 0
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:121:                        assert c.use_region(base_offset, size).is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:123:                        assert rr.client_count() == 2  # the manager and the cursor and us
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:125:                        assert man.num_open_files() == 1
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:126:                        assert man.num_file_handles() == 1
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:127:                        assert man.mapped_memory_size() == rr.size()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:129:                        # assert c.size() == size        # the cursor may overallocate in its static version
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:130:                        assert c.ofs_begin() == base_offset
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:131:                        assert rr.ofs_begin() == 0        # it was aligned and expanded
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:134:                            assert rr.size() == align_to_mmap(man.window_size(), True)
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:136:                            assert rr.size() == fc.size
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:139:                        assert c.buffer()[:] == data[base_offset:base_offset + (size or c.size())]
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:143:                        assert c.use_region(0, nsize).is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:144:                        assert c.region() == rr
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:145:                        assert man.num_file_handles() == 1
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:146:                        assert c.size() == nsize
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:147:                        assert c.ofs_begin() == 0
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:148:                        assert c.buffer()[:] == data[:nsize]
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:153:                        assert c.use_region(base_offset, size).is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:155:                            assert man.num_file_handles() == 2
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:156:                            assert c.size() < size
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:157:                            assert c.region() is not rr  # old region is still available, but has not curser ref anymore
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:158:                            assert rr.client_count() == 1  # only held by manager
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:160:                            assert c.size() < fc.size
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:163:                        assert rr.client_count() == 2  # manager + cursor
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:164:                        assert rr.ofs_begin() < c.ofs_begin()  # it should have extended itself to the left
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:165:                        assert rr.ofs_end() <= fc.size  # it cannot be larger than the file
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:166:                        assert c.buffer()[:] == data[base_offset:base_offset + (size or c.size())]
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:170:                        assert not c.is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:174:                            assert man.num_file_handles() == 2
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:196:                                assert max_mapped_memory_size >= mapped_memory_size()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:198:                            assert max_file_handles >= num_file_handles()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:199:                            assert c.use_region(base_offset, (size or c.size())).is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:201:                            assert c.buffer()[:] == data[base_offset:base_offset + csize]
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:204:                            assert includes_ofs(base_offset)
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:205:                            assert includes_ofs(base_offset + csize - 1)
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:206:                            assert not includes_ofs(base_offset + csize)
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:215:                        assert not c.use_region(fc.size, size).is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:218:                        assert man.num_file_handles()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:219:                        assert man.collect()
venv/lib/python3.9/site-packages/smmap/test/test_mman.py:220:                        assert man.num_file_handles() == 0
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:34:            assert buf.cursor() is None
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:39:            assert len(buf) == 0
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:43:            assert buf.begin_access(c, fc.size) == False
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:44:            assert buf.begin_access(c, offset) == True
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:45:            assert len(buf) == fc.size - offset
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:46:            assert buf.cursor().is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:49:            assert buf.begin_access() == True
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:50:            assert len(buf) == fc.size
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:51:            assert buf.cursor().is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:56:            assert data[offset] == buf[0]
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:57:            assert data[offset:offset * 2] == buf[0:offset]
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:60:            assert buf[-1] == buf[len(buf) - 1]
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:61:            assert buf[-10:] == buf[len(buf) - 10:len(buf)]
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:65:            assert not buf.cursor().is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:66:            assert buf.cursor().is_associated()         # but it remains associated
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:69:            assert buf.begin_access() == True and buf.cursor().is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:73:            assert man_optimal.num_file_handles() == 1
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:87:                    assert manager.num_file_handles() == 1
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:101:                                assert len(d) == ofs_end - ofs_start
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:102:                                assert d == data[ofs_start:ofs_end]
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:107:                                assert buf[pos] == data[pos]
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:113:                        assert manager.num_file_handles()
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:114:                        assert manager.collect()
venv/lib/python3.9/site-packages/smmap/test/test_buf.py:115:                        assert manager.num_file_handles() == 0
venv/lib/python3.9/site-packages/smmap/test/test_util.py:24:        assert wl.ofs_end() == 1
venv/lib/python3.9/site-packages/smmap/test/test_util.py:25:        assert wc.ofs_end() == 2
venv/lib/python3.9/site-packages/smmap/test/test_util.py:26:        assert wr.ofs_end() == 8050
venv/lib/python3.9/site-packages/smmap/test/test_util.py:31:        assert wc.ofs == 1 and wc.size == 1
venv/lib/python3.9/site-packages/smmap/test/test_util.py:34:        assert wl.ofs == 0 and wl.size == 1
venv/lib/python3.9/site-packages/smmap/test/test_util.py:39:        assert wc2.ofs == wc.ofs_end() and pofs_end == wc2.ofs_end()
venv/lib/python3.9/site-packages/smmap/test/test_util.py:43:        assert wc.ofs == 1 and wc.size == maxsize
venv/lib/python3.9/site-packages/smmap/test/test_util.py:45:        assert wc.ofs == 1 and wc.size == maxsize
venv/lib/python3.9/site-packages/smmap/test/test_util.py:49:        assert wc.ofs_end() == wr.ofs and wc.ofs == 1
venv/lib/python3.9/site-packages/smmap/test/test_util.py:54:        assert wr.size == maxsize
venv/lib/python3.9/site-packages/smmap/test/test_util.py:57:        assert wr.ofs == wc2.ofs_end()
venv/lib/python3.9/site-packages/smmap/test/test_util.py:60:        assert wc.ofs == 0 and wc.size == align_to_mmap(wc.size, True)
venv/lib/python3.9/site-packages/smmap/test/test_util.py:71:            assert rfull.ofs_begin() == 0 and rfull.size() == fc.size
venv/lib/python3.9/site-packages/smmap/test/test_util.py:72:            assert rfull.ofs_end() == fc.size   # if this method works, it works always
venv/lib/python3.9/site-packages/smmap/test/test_util.py:74:            assert rhalfofs.ofs_begin() == rofs and rhalfofs.size() == fc.size - rofs
venv/lib/python3.9/site-packages/smmap/test/test_util.py:75:            assert rhalfsize.ofs_begin() == 0 and rhalfsize.size() == half_size
venv/lib/python3.9/site-packages/smmap/test/test_util.py:77:            assert rfull.includes_ofs(0) and rfull.includes_ofs(fc.size - 1) and rfull.includes_ofs(half_size)
venv/lib/python3.9/site-packages/smmap/test/test_util.py:78:            assert not rfull.includes_ofs(-1) and not rfull.includes_ofs(sys.maxsize)
venv/lib/python3.9/site-packages/smmap/test/test_util.py:81:        assert rfull.client_count() == 1
venv/lib/python3.9/site-packages/smmap/test/test_util.py:83:        assert rfull.client_count() == 1, "no auto-counting"
venv/lib/python3.9/site-packages/smmap/test/test_util.py:87:        assert w.ofs == rfull.ofs_begin() and w.ofs_end() == rfull.ofs_end()
venv/lib/python3.9/site-packages/smmap/test/test_util.py:96:                    assert len(ml) == 0
venv/lib/python3.9/site-packages/smmap/test/test_util.py:97:                    assert ml.path_or_fd() == item
venv/lib/python3.9/site-packages/smmap/test/test_util.py:98:                    assert ml.file_size() == fc.size
venv/lib/python3.9/site-packages/smmap/test/test_util.py:103:        assert isinstance(is_64_bit(), bool)    # just call it
venv/lib/python3.9/site-packages/smmap/test/test_util.py:104:        assert align_to_mmap(1, False) == 0
venv/lib/python3.9/site-packages/smmap/test/test_util.py:105:        assert align_to_mmap(1, True) == ALLOCATIONGRANULARITY
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:16:        assert mman.num_file_handles() == 0
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:17:        assert mman.mapped_memory_size() == 0
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:28:            assert c.is_associated()
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:29:            assert not c.is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:35:            assert c.use_region().is_valid()        # use_region returns self
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:39:            assert c.size()
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:46:            assert c.ofs_begin() < c.ofs_end()
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:47:            assert c.includes_ofs(100)
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:51:            assert not c.use_region(fc.size, 100).is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:53:            assert c.use_region(100).is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:57:            assert not c.is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:65:            assert buf.cursor().is_valid()
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:74:            assert not buf.cursor().is_valid()  # you cannot use the buffer anymore
venv/lib/python3.9/site-packages/smmap/test/test_tutorial.py:75:            assert buf.begin_access(offset=10)  # start using the buffer at an offset
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:52:        assert index.packfile_checksum() != index.indexfile_checksum()
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:53:        assert len(index.packfile_checksum()) == 20
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:54:        assert len(index.indexfile_checksum()) == 20
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:55:        assert index.version() == version
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:56:        assert index.size() == size
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:57:        assert len(index.offsets()) == size
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:62:            assert oidx == index.sha_to_index(sha)
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:65:            assert len(entry) == 3
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:67:            assert entry[0] == index.offset(oidx)
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:68:            assert entry[1] == sha
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:69:            assert entry[2] == index.crc(oidx)
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:73:                assert index.partial_sha_to_index(sha[:l], l * 2) == oidx
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:79:        assert pack.version() == 2
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:80:        assert pack.size() == size
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:81:        assert len(pack.checksum()) == 20
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:89:            assert info.pack_offset == stream.pack_offset
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:90:            assert info.type_id == stream.type_id
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:91:            assert hasattr(stream, 'read')
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:94:            assert obj.read() == stream.read()
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:111:            assert len(data) == dstream.size
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:115:            assert dstream.read() == data
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:122:        assert num_obj == size
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:147:            assert entity.pack().path() == packfile
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:148:            assert entity.index().path() == indexfile
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:154:                assert info.binsha == stream.binsha
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:155:                assert len(info.binsha) == 20
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:156:                assert info.type_id == stream.type_id
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:157:                assert info.size == stream.size
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:163:                assert len(entity.collect_streams(info.binsha))
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:165:                assert isinstance(oinfo, OInfo)
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:166:                assert oinfo.binsha is not None
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:168:                assert isinstance(ostream, OStream)
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:169:                assert ostream.binsha is not None
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:173:                    assert entity.is_valid_stream(info.binsha, use_crc=True)
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:177:                assert entity.is_valid_stream(info.binsha, use_crc=False)
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:179:            assert count == size
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:211:            assert os.path.getsize(ppath) > 100
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:215:            assert pf.size() == len(pack_objs)
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:216:            assert pf.version() == PackFile.pack_version_default
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:217:            assert pf.checksum() == pack_sha
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:223:                assert os.path.getsize(ipath) > 100
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:225:                assert idx.version() == PackIndexFile.index_version_default
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:226:                assert idx.packfile_checksum() == pack_sha
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:227:                assert idx.indexfile_checksum() == index_sha
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:228:                assert idx.size() == len(pack_objs)
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:240:                assert entity.is_valid_stream(info.binsha, use_crc)
venv/lib/python3.9/site-packages/gitdb/test/test_pack.py:243:        assert count == len(pack_objs)
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:21:        assert to_hex_sha(NULL_HEX_SHA) == NULL_HEX_SHA
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:22:        assert len(to_bin_sha(NULL_HEX_SHA)) == 20
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:23:        assert to_hex_sha(to_bin_sha(NULL_HEX_SHA)) == NULL_HEX_SHA.encode("ascii")
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:29:            assert fp.read() == data.encode("ascii")
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:47:            assert not os.path.isfile(lockfilepath)
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:49:            assert lfd._fd is wfd
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:50:            assert os.path.isfile(lockfilepath)
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:55:            assert lfd._fd is None
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:57:            assert not os.path.isfile(lockfilepath)
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:66:            assert os.read(rfd, len(orig_data)) == orig_data.encode("ascii")
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:68:            assert os.path.isfile(lockfilepath)
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:71:            assert not os.path.isfile(lockfilepath)
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:76:            assert not os.path.isfile(lockfilepath)
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:78:            assert os.path.isfile(lockfilepath)
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:84:            assert not os.path.isfile(lockfilepath)
venv/lib/python3.9/site-packages/gitdb/test/test_util.py:97:            assert not os.path.exists(lfd._lockfilepath())
venv/lib/python3.9/site-packages/gitdb/test/test_example.py:22:            assert oinfo[:3] == ostream[:3]
venv/lib/python3.9/site-packages/gitdb/test/test_example.py:24:            assert len(ostream.read()) == ostream.size
venv/lib/python3.9/site-packages/gitdb/test/test_example.py:25:            assert ldb.has_object(oinfo.binsha)
venv/lib/python3.9/site-packages/gitdb/test/test_example.py:39:        assert istream.binsha is None
venv/lib/python3.9/site-packages/gitdb/test/test_example.py:42:        assert len(istream.binsha) == 20
venv/lib/python3.9/site-packages/gitdb/test/test_example.py:43:        assert ldb.has_object(istream.binsha)
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:39:        assert info.binsha == sha
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:40:        assert info.type == str_blob_type
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:41:        assert info.type_id == blob_id
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:42:        assert info.size == s
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:47:        assert pinfo.type == str_blob_type
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:48:        assert pinfo.type_id == blob_id
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:49:        assert pinfo.pack_offset == 0
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:52:        assert dpinfo.type == str_blob_type
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:53:        assert dpinfo.type_id == blob_id
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:54:        assert dpinfo.delta_info == sha
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:55:        assert dpinfo.pack_offset == 0
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:60:        assert ostream.stream is stream
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:63:        assert stream.bytes == 15
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:65:        assert stream.bytes == 20
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:69:        assert postream.stream is stream
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:72:        assert stream.bytes == 10
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:79:        assert stream.bytes == 5
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:86:        assert istream.binsha == None
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:88:        assert istream.binsha == sha
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:90:        assert len(istream.binsha) == 20
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:91:        assert len(istream.hexsha) == 40
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:93:        assert istream.size == s
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:96:        assert istream.type == str_blob_type
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:98:        assert istream.type == "something"
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:99:        assert istream.stream is stream
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:101:        assert istream.stream is None
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:103:        assert istream.error is None
venv/lib/python3.9/site-packages/gitdb/test/test_base.py:105:        assert isinstance(istream.error, Exception)
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:48:        assert len(cdata) > ns - 1, "Data must be larger than %i, was %i" % (ns, len(cdata))
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:55:            assert data == chunk
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:59:            assert rest == cdata[-len(rest):]
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:63:            assert len(stream.data()) == stream.compressed_bytes_read()
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:70:        assert rdata == cdata
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:73:            assert len(stream.data()) == stream.compressed_bytes_read()
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:90:                        assert size == len(cdata)
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:91:                        assert typ == str_blob_type
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:95:                        assert test_reader._s == len(cdata)
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:100:                        assert reader._s == len(cdata)
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:111:                    assert dummy.closed == close_on_deletion
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:118:        assert 2 == writer.write("hi".encode("ascii"))
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:119:        assert len(writer.sha(as_hex=1)) == 40
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:120:        assert len(writer.sha(as_hex=0)) == 20
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:125:        assert writer.sha() != prev_sha
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:134:            assert len(data) == ostream.write(data)
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:143:            assert len(written_data) == os.path.getsize(path)
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:145:            assert written_data == zlib.compress(data, 1)   # best speed
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:159:            assert len(data) == ostream.size
venv/lib/python3.9/site-packages/gitdb/test/test_stream.py:163:            assert dump.hexsha == sha
